//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_89
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<76>;
	.reg .b32 	%r<547>;
	.reg .f32 	%f<202>;
	.reg .b64 	%rd<166>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r82, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r80, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd66, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r83, %ctaid.x;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r84, %r80, 15;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r85, %r84, 31;
	shr.u32 	%r86, %r85, 28;
	add.s32 	%r87, %r84, %r86;
	shr.s32 	%r88, %r87, 4;
$L__tmp2:
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r1, %r83, %r88;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r90, %r1, %r88;
	sub.s32 	%r91, %r83, %r90;
	ld.param.u32 	%r92, [implicit_conv3d_kernel_param_8];
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r93, %r92, %r92;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r2, %r93, %r92;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r3, %tid.x;
	and.b32  	%r4, %r3, 16;
	and.b32  	%r5, %r3, 64;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r10, %r91, 4;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.gt.s32 	%p5, %r2, 0;
	mov.u32 	%r533, global_smem;
	@%p5 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph14
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r81, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r79, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd65, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd64, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd67, [implicit_conv3d_kernel_param_1];
	shr.u32 	%r6, %r3, 4;
	bfe.u32 	%r7, %r3, 4, 3;
	or.b32  	%r8, %r7, 8;
	and.b32  	%r9, %r3, 15;
	or.b32  	%r11, %r10, %r7;
	or.b32  	%r12, %r10, %r8;
	or.b32  	%r13, %r10, %r9;
	mul.lo.s32 	%r94, %r11, %r2;
	mul.lo.s32 	%r95, %r12, %r2;
	mul.lo.s32 	%r96, %r13, %r2;
	mul.wide.s32 	%rd68, %r94, 4;
	add.s64 	%rd1, %rd67, %rd68;
	mul.wide.s32 	%rd69, %r95, 4;
	add.s64 	%rd2, %rd67, %rd69;
	mul.wide.s32 	%rd70, %r96, 4;
	add.s64 	%rd3, %rd67, %rd70;
	add.s32 	%r18, %r81, 63;
	shr.s32 	%r98, %r18, 31;
	shr.u32 	%r99, %r98, 26;
	add.s32 	%r100, %r18, %r99;
	shr.s32 	%r101, %r100, 6;
	shl.b32 	%r102, %r3, 2;
	and.b32  	%r103, %r102, 4;
	and.b32  	%r104, %r102, 8;
	and.b32  	%r105, %r102, 12;
	and.b32  	%r106, %r102, 16;
	and.b32  	%r107, %r102, 28;
	and.b32  	%r108, %r102, 60;
	or.b32  	%r19, %r7, 16;
	or.b32  	%r20, %r7, 24;
	or.b32  	%r21, %r7, 32;
	or.b32  	%r22, %r7, 40;
	or.b32  	%r23, %r7, 48;
	or.b32  	%r24, %r7, 56;
	shl.b32 	%r538, %r1, 6;
	mul.lo.s32 	%r26, %r2, %r81;
	or.b32  	%r27, %r538, %r108;
	setp.lt.s32 	%p6, %r27, %r82;
	setp.gt.s32 	%p7, %r18, 63;
	setp.lt.s32 	%p8, %r108, %r81;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p1, %p8, %p7;
	shr.u32 	%r536, %r4, 2;
	shr.u32 	%r109, %r3, 2;
	and.b32  	%r110, %r109, 8;
	shr.u32 	%r111, %r5, 2;
	or.b32  	%r112, %r111, %r110;
	or.b32  	%r113, %r112, %r536;
	xor.b32  	%r114, %r113, %r108;
	shl.b32 	%r115, %r114, 2;
	add.s32 	%r117, %r533, %r115;
	shl.b32 	%r118, %r7, 8;
	add.s32 	%r119, %r117, %r118;
	add.s32 	%r186, %r119, 16384;
	add.s32 	%r188, %r119, 18432;
	shr.u32 	%r120, %r3, 1;
	and.b32  	%r121, %r120, 24;
	xor.b32  	%r122, %r108, %r121;
	shl.b32 	%r123, %r122, 2;
	or.b32  	%r124, %r118, %r123;
	add.s32 	%r190, %r533, %r124;
	add.s32 	%r192, %r190, 2048;
	add.s32 	%r194, %r190, 4096;
	add.s32 	%r196, %r190, 6144;
	add.s32 	%r198, %r190, 8192;
	add.s32 	%r200, %r190, 10240;
	add.s32 	%r202, %r190, 12288;
	add.s32 	%r204, %r190, 14336;
	add.s32 	%r125, %r101, -1;
	xor.b32  	%r126, %r107, %r536;
	shl.b32 	%r127, %r9, 6;
	or.b32  	%r39, %r126, %r127;
	or.b32  	%r128, %r103, 8;
	xor.b32  	%r129, %r128, %r104;
	or.b32  	%r130, %r129, %r106;
	xor.b32  	%r131, %r130, %r536;
	or.b32  	%r40, %r131, %r127;
	or.b32  	%r132, %r105, 16;
	or.b32  	%r133, %r536, %r106;
	xor.b32  	%r134, %r133, %r132;
	or.b32  	%r41, %r134, %r127;
	or.b32  	%r135, %r103, 24;
	or.b32  	%r136, %r133, %r104;
	xor.b32  	%r137, %r136, %r135;
	or.b32  	%r42, %r137, %r127;
	or.b32  	%r138, %r107, 32;
	xor.b32  	%r139, %r138, %r536;
	or.b32  	%r43, %r139, %r127;
	or.b32  	%r140, %r103, 40;
	xor.b32  	%r141, %r140, %r104;
	or.b32  	%r142, %r141, %r106;
	xor.b32  	%r143, %r142, %r536;
	or.b32  	%r44, %r143, %r127;
	or.b32  	%r144, %r105, 48;
	xor.b32  	%r145, %r133, %r144;
	or.b32  	%r45, %r145, %r127;
	or.b32  	%r146, %r103, 56;
	xor.b32  	%r147, %r136, %r146;
	or.b32  	%r46, %r147, %r127;
	shl.b32 	%r535, %r3, 3;
	and.b32  	%r148, %r535, 24;
	bfe.u32 	%r537, %r3, 2, 2;
	or.b32  	%r149, %r537, %r148;
	or.b32  	%r150, %r149, %r536;
	xor.b32  	%r49, %r112, %r150;
	shl.b32 	%r151, %r3, 6;
	and.b32  	%r50, %r151, 192;
	or.b32  	%r152, %r150, 32;
	xor.b32  	%r51, %r112, %r152;
	cvt.s64.s32 	%rd4, %r125;
	cvt.u64.u32 	%rd5, %r108;
	cvt.s64.s32 	%rd6, %r81;
	cvt.u64.u32 	%rd7, %r2;
	cvt.u64.u32 	%rd8, %r101;
	and.pred  	%p2, %p6, %p7;
	or.b64  	%rd9, %rd5, 64;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	or.b32  	%r52, %r108, 64;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	cvt.u64.u32 	%rd72, %r6;
	and.b64  	%rd154, %rd72, 7;
	cvt.u64.u32 	%rd11, %r81;
	or.b32  	%r153, %r7, 120;
	mad.lo.s32 	%r154, %r82, %r153, %r538;
	cvt.u64.u32 	%rd153, %r154;
	mul.lo.s32 	%r155, %r82, %r81;
	cvt.u64.u32 	%rd13, %r155;
	shl.b32 	%r156, %r82, 6;
	cvt.u64.u32 	%rd14, %r156;
	or.b32  	%r157, %r7, 112;
	mad.lo.s32 	%r158, %r82, %r157, %r538;
	cvt.u64.u32 	%rd152, %r158;
	or.b32  	%r159, %r7, 104;
	mad.lo.s32 	%r160, %r82, %r159, %r538;
	cvt.u64.u32 	%rd151, %r160;
	or.b32  	%r161, %r7, 96;
	mad.lo.s32 	%r162, %r82, %r161, %r538;
	cvt.u64.u32 	%rd150, %r162;
	or.b32  	%r163, %r7, 88;
	mad.lo.s32 	%r164, %r82, %r163, %r538;
	cvt.u64.u32 	%rd149, %r164;
	or.b32  	%r165, %r7, 80;
	mad.lo.s32 	%r166, %r82, %r165, %r538;
	cvt.u64.u32 	%rd148, %r166;
	or.b32  	%r167, %r7, 72;
	mad.lo.s32 	%r168, %r82, %r167, %r538;
	cvt.u64.u32 	%rd147, %r168;
	or.b32  	%r169, %r7, 64;
	mad.lo.s32 	%r170, %r82, %r169, %r538;
	cvt.u64.u32 	%rd146, %r170;
	mov.f32 	%f178, 0f00000000;
	mov.b64 	%rd155, 0;
	setp.lt.s32 	%p11, %r13, %r80;
	shl.b32 	%r393, %r39, 2;
	shl.b32 	%r394, %r40, 2;
	shl.b32 	%r395, %r41, 2;
	shl.b32 	%r396, %r42, 2;
	shl.b32 	%r397, %r43, 2;
	shl.b32 	%r398, %r44, 2;
	shl.b32 	%r399, %r45, 2;
	shl.b32 	%r400, %r46, 2;
	shl.b32 	%r403, %r49, 2;
	shl.b32 	%r405, %r50, 2;
	shl.b32 	%r407, %r51, 2;
	mov.f32 	%f179, %f178;
	mov.f32 	%f180, %f178;
	mov.f32 	%f181, %f178;
	mov.f32 	%f182, %f178;
	mov.f32 	%f183, %f178;
	mov.f32 	%f184, %f178;
	mov.f32 	%f185, %f178;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s64 	%rd155, %rd155, 1;
	add.s64 	%rd154, %rd154, %rd11;
	add.s64 	%rd153, %rd153, %rd13;
	add.s64 	%rd152, %rd152, %rd13;
	add.s64 	%rd151, %rd151, %rd13;
	add.s64 	%rd150, %rd150, %rd13;
	add.s64 	%rd149, %rd149, %rd13;
	add.s64 	%rd148, %rd148, %rd13;
	add.s64 	%rd147, %rd147, %rd13;
	add.s64 	%rd146, %rd146, %rd13;
	setp.ne.s64 	%p50, %rd155, %rd7;
	@%p50 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p10, %r12, %r80;
	setp.lt.s32 	%p9, %r11, %r80;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	shl.b64 	%rd76, %rd155, 2;
	add.s64 	%rd73, %rd1, %rd76;
	add.s64 	%rd74, %rd2, %rd76;
	add.s64 	%rd75, %rd3, %rd76;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r171, 0xffffffffffffffff;
	@%p9 ld.global.b32 { %r171 }, [ %rd73 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r172, 0xffffffffffffffff;
	@%p10 ld.global.b32 { %r172 }, [ %rd74 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r173, 0xffffffffffffffff;
	@%p11 ld.global.b32 { %r173 }, [ %rd75 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p14, %r173, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p17, %r173, %r79;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p18, %p14, %p17;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r174, 1, 0, %p18;
	shfl.sync.bfly.b32	%r175, %r174, 8, 31, -1;
	and.b32  	%r176, %r175, 1;
	setp.eq.b32 	%p19, %r176, 1;
$L__tmp3:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p20, %p18, %p19;
$L__tmp4:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r177, 1, 0, %p20;
	shfl.sync.bfly.b32	%r178, %r177, 4, 31, -1;
	and.b32  	%r179, %r178, 1;
	setp.eq.b32 	%p21, %r179, 1;
$L__tmp5:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p22, %p20, %p21;
$L__tmp6:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r180, 1, 0, %p22;
	shfl.sync.bfly.b32	%r181, %r180, 2, 31, -1;
	and.b32  	%r182, %r181, 1;
	setp.eq.b32 	%p23, %r182, 1;
$L__tmp7:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p24, %p22, %p23;
$L__tmp8:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r183, 1, 0, %p24;
	shfl.sync.bfly.b32	%r184, %r183, 1, 31, -1;
	and.b32  	%r185, %r184, 1;
	setp.eq.b32 	%p25, %r185, 1;
$L__tmp9:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p26, %p24, %p25;
$L__tmp10:
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p27, %p26;
	@%p27 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.gt.s32 	%p12, %r171, -1;
	setp.gt.s32 	%p13, %r172, -1;
	setp.lt.s32 	%p15, %r171, %r79;
	setp.lt.s32 	%p16, %r172, %r79;
	and.pred  	%p3, %p12, %p15;
	and.pred  	%p4, %p13, %p16;
	cvt.u32.u64 	%r206, %rd5;
	setp.lt.s32 	%p28, %r18, 64;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	cvt.u32.u64 	%r207, %rd155;
	mul.lo.s32 	%r208, %r81, %r207;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r55, %r171, %r81;
	mul.lo.s32 	%r56, %r172, %r81;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r209, %r55, %r206;
	add.s32 	%r210, %r56, %r206;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd87, %r209, 4;
	add.s64 	%rd77, %rd64, %rd87;
	mul.wide.s32 	%rd88, %r210, 4;
	add.s64 	%rd78, %rd64, %rd88;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s32 	%r211, %r208, %r7;
	add.s32 	%r212, %r208, %r8;
	add.s32 	%r213, %r208, %r19;
	add.s32 	%r214, %r208, %r20;
	add.s32 	%r215, %r208, %r21;
	add.s32 	%r216, %r208, %r22;
	add.s32 	%r217, %r208, %r23;
	add.s32 	%r218, %r208, %r24;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r219, %r211, %r82, %r27;
	mad.lo.s32 	%r220, %r212, %r82, %r27;
	mad.lo.s32 	%r221, %r213, %r82, %r27;
	mad.lo.s32 	%r222, %r214, %r82, %r27;
	mad.lo.s32 	%r223, %r215, %r82, %r27;
	mad.lo.s32 	%r224, %r216, %r82, %r27;
	mad.lo.s32 	%r225, %r217, %r82, %r27;
	mad.lo.s32 	%r226, %r218, %r82, %r27;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd89, %r219, 4;
	add.s64 	%rd79, %rd65, %rd89;
	mul.wide.s32 	%rd90, %r220, 4;
	add.s64 	%rd80, %rd65, %rd90;
	mul.wide.s32 	%rd91, %r221, 4;
	add.s64 	%rd81, %rd65, %rd91;
	mul.wide.s32 	%rd92, %r222, 4;
	add.s64 	%rd82, %rd65, %rd92;
	mul.wide.s32 	%rd93, %r223, 4;
	add.s64 	%rd83, %rd65, %rd93;
	mul.wide.s32 	%rd94, %r224, 4;
	add.s64 	%rd84, %rd65, %rd94;
	mul.wide.s32 	%rd95, %r225, 4;
	add.s64 	%rd85, %rd65, %rd95;
	mul.wide.s32 	%rd96, %r226, 4;
	add.s64 	%rd86, %rd65, %rd96;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p29, %r211, %r26;
	setp.lt.s32 	%p30, %r212, %r26;
	setp.lt.s32 	%p31, %r213, %r26;
	setp.lt.s32 	%p32, %r214, %r26;
	setp.lt.s32 	%p33, %r215, %r26;
	setp.lt.s32 	%p34, %r216, %r26;
	setp.lt.s32 	%p35, %r217, %r26;
	setp.lt.s32 	%p36, %r218, %r26;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	selp.b32 	%r227, 16, 0, %p1;
	selp.b32 	%r187, %r227, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r186 + 0 ], [ %rd77 + 0 ], 0x10, %r187;
	// end inline asm
	selp.b32 	%r189, %r227, 0, %p4;
	// begin inline asm
	cp.async.cg.shared.global [ %r188 + 0 ], [ %rd78 + 0 ], 0x10, %r189;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r228, 16, 0, %p2;
	selp.b32 	%r191, %r228, 0, %p29;
	// begin inline asm
	cp.async.cg.shared.global [ %r190 + 0 ], [ %rd79 + 0 ], 0x10, %r191;
	// end inline asm
	selp.b32 	%r193, %r228, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r192 + 0 ], [ %rd80 + 0 ], 0x10, %r193;
	// end inline asm
	selp.b32 	%r195, %r228, 0, %p31;
	// begin inline asm
	cp.async.cg.shared.global [ %r194 + 0 ], [ %rd81 + 0 ], 0x10, %r195;
	// end inline asm
	selp.b32 	%r197, %r228, 0, %p32;
	// begin inline asm
	cp.async.cg.shared.global [ %r196 + 0 ], [ %rd82 + 0 ], 0x10, %r197;
	// end inline asm
	selp.b32 	%r199, %r228, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r198 + 0 ], [ %rd83 + 0 ], 0x10, %r199;
	// end inline asm
	selp.b32 	%r201, %r228, 0, %p34;
	// begin inline asm
	cp.async.cg.shared.global [ %r200 + 0 ], [ %rd84 + 0 ], 0x10, %r201;
	// end inline asm
	selp.b32 	%r203, %r228, 0, %p35;
	// begin inline asm
	cp.async.cg.shared.global [ %r202 + 0 ], [ %rd85 + 0 ], 0x10, %r203;
	// end inline asm
	selp.b32 	%r205, %r228, 0, %p36;
	// begin inline asm
	cp.async.cg.shared.global [ %r204 + 0 ], [ %rd86 + 0 ], 0x10, %r205;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p28 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r230, %r52, %r56;
	cvt.u64.u32 	%rd32, %r230;
	add.s32 	%r231, %r52, %r55;
	cvt.u64.u32 	%rd33, %r231;
	mov.b32 	%r534, -1;
	mov.b64 	%rd164, 0;
	mov.u64 	%rd156, %rd146;
	mov.u64 	%rd157, %rd147;
	mov.u64 	%rd158, %rd148;
	mov.u64 	%rd159, %rd149;
	mov.u64 	%rd160, %rd150;
	mov.u64 	%rd161, %rd151;
	mov.u64 	%rd162, %rd152;
	mov.u64 	%rd163, %rd153;
	mov.u64 	%rd165, %rd164;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p38, %rd165, %rd4;
	add.s32 	%r388, %r534, 1;
	setp.gt.u32 	%p39, %r534, 2147483646;
	selp.b32 	%r534, %r388, 0, %p39;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r389, %r534, 12;
	add.s32 	%r391, %r533, %r389;
	add.s32 	%r392, %r391, 16384;
	add.s32 	%r236, %r392, %r393;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r272, %r273, %r274, %r275}, [%r236];
	// end inline asm
	add.s32 	%r241, %r392, %r394;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r284, %r285, %r286, %r287}, [%r241];
	// end inline asm
	add.s32 	%r246, %r392, %r395;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r296, %r297, %r298, %r299}, [%r246];
	// end inline asm
	add.s32 	%r251, %r392, %r396;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r308, %r309, %r310, %r311}, [%r251];
	// end inline asm
	add.s32 	%r256, %r392, %r397;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r320, %r321, %r322, %r323}, [%r256];
	// end inline asm
	add.s32 	%r261, %r392, %r398;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r332, %r333, %r334, %r335}, [%r261];
	// end inline asm
	add.s32 	%r266, %r392, %r399;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r344, %r345, %r346, %r347}, [%r266];
	// end inline asm
	add.s32 	%r271, %r392, %r400;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r356, %r357, %r358, %r359}, [%r271];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	shl.b32 	%r401, %r534, 14;
	add.s32 	%r402, %r533, %r401;
	add.s32 	%r404, %r402, %r403;
	add.s32 	%r406, %r404, %r405;
	ld.shared.u32 	%r276, [%r406];
	ld.shared.u32 	%r277, [%r406+1024];
	ld.shared.u32 	%r288, [%r406+2048];
	ld.shared.u32 	%r289, [%r406+3072];
	ld.shared.u32 	%r300, [%r406+4096];
	ld.shared.u32 	%r301, [%r406+5120];
	ld.shared.u32 	%r312, [%r406+6144];
	ld.shared.u32 	%r313, [%r406+7168];
	ld.shared.u32 	%r324, [%r406+8192];
	ld.shared.u32 	%r325, [%r406+9216];
	ld.shared.u32 	%r336, [%r406+10240];
	ld.shared.u32 	%r337, [%r406+11264];
	ld.shared.u32 	%r348, [%r406+12288];
	ld.shared.u32 	%r349, [%r406+13312];
	ld.shared.u32 	%r360, [%r406+14336];
	ld.shared.u32 	%r361, [%r406+15360];
	add.s32 	%r408, %r402, %r407;
	add.s32 	%r409, %r408, %r405;
	ld.shared.u32 	%r282, [%r409];
	ld.shared.u32 	%r283, [%r409+1024];
	ld.shared.u32 	%r294, [%r409+2048];
	ld.shared.u32 	%r295, [%r409+3072];
	ld.shared.u32 	%r306, [%r409+4096];
	ld.shared.u32 	%r307, [%r409+5120];
	ld.shared.u32 	%r318, [%r409+6144];
	ld.shared.u32 	%r319, [%r409+7168];
	ld.shared.u32 	%r330, [%r409+8192];
	ld.shared.u32 	%r331, [%r409+9216];
	ld.shared.u32 	%r342, [%r409+10240];
	ld.shared.u32 	%r343, [%r409+11264];
	ld.shared.u32 	%r354, [%r409+12288];
	ld.shared.u32 	%r355, [%r409+13312];
	ld.shared.u32 	%r366, [%r409+14336];
	ld.shared.u32 	%r367, [%r409+15360];
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r272, %r273, %r274, %r275 }, { %r276, %r277 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r272, %r273, %r274, %r275 }, { %r282, %r283 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r284, %r285, %r286, %r287 }, { %r288, %r289 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r284, %r285, %r286, %r287 }, { %r294, %r295 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r296, %r297, %r298, %r299 }, { %r300, %r301 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r296, %r297, %r298, %r299 }, { %r306, %r307 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r308, %r309, %r310, %r311 }, { %r312, %r313 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r308, %r309, %r310, %r311 }, { %r318, %r319 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r320, %r321, %r322, %r323 }, { %r324, %r325 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r320, %r321, %r322, %r323 }, { %r330, %r331 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r332, %r333, %r334, %r335 }, { %r336, %r337 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r332, %r333, %r334, %r335 }, { %r342, %r343 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r344, %r345, %r346, %r347 }, { %r348, %r349 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r344, %r345, %r346, %r347 }, { %r354, %r355 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r356, %r357, %r358, %r359 }, { %r360, %r361 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r356, %r357, %r358, %r359 }, { %r366, %r367 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd165, %rd165, 1;
	.loc	1 69 89                         // implicit_gemm_kernel.py:69:89
	add.s64 	%rd108, %rd33, %rd164;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd109, %rd32, %rd164;
	cvt.u32.u64 	%r410, %rd108;
	mul.wide.s32 	%rd110, %r410, 4;
	add.s64 	%rd98, %rd64, %rd110;
	cvt.u32.u64 	%r411, %rd109;
	mul.wide.s32 	%rd111, %r411, 4;
	add.s64 	%rd99, %rd64, %rd111;
	.loc	1 70 112                        // implicit_gemm_kernel.py:70:112
	add.s64 	%rd112, %rd9, %rd164;
	setp.lt.s64 	%p40, %rd112, %rd6;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s64 	%rd113, %rd154, %rd164;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	add.s64 	%rd114, %rd5, %rd156;
	add.s64 	%rd115, %rd5, %rd157;
	add.s64 	%rd116, %rd5, %rd158;
	add.s64 	%rd117, %rd5, %rd159;
	add.s64 	%rd118, %rd5, %rd160;
	add.s64 	%rd119, %rd5, %rd161;
	add.s64 	%rd120, %rd5, %rd162;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s64 	%rd121, %rd5, %rd163;
	cvt.u32.u64 	%r412, %rd114;
	mul.wide.s32 	%rd122, %r412, 4;
	add.s64 	%rd100, %rd65, %rd122;
	cvt.u32.u64 	%r413, %rd115;
	mul.wide.s32 	%rd123, %r413, 4;
	add.s64 	%rd101, %rd65, %rd123;
	cvt.u32.u64 	%r414, %rd116;
	mul.wide.s32 	%rd124, %r414, 4;
	add.s64 	%rd102, %rd65, %rd124;
	cvt.u32.u64 	%r415, %rd117;
	mul.wide.s32 	%rd125, %r415, 4;
	add.s64 	%rd103, %rd65, %rd125;
	cvt.u32.u64 	%r416, %rd118;
	mul.wide.s32 	%rd126, %r416, 4;
	add.s64 	%rd104, %rd65, %rd126;
	cvt.u32.u64 	%r417, %rd119;
	mul.wide.s32 	%rd127, %r417, 4;
	add.s64 	%rd105, %rd65, %rd127;
	cvt.u32.u64 	%r418, %rd120;
	mul.wide.s32 	%rd128, %r418, 4;
	add.s64 	%rd106, %rd65, %rd128;
	cvt.u32.u64 	%r419, %rd121;
	mul.wide.s32 	%rd129, %r419, 4;
	add.s64 	%rd107, %rd65, %rd129;
	cvt.u32.u64 	%r420, %rd113;
	add.s32 	%r421, %r420, 64;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p41, %r421, %r26;
	add.s32 	%r422, %r420, 72;
	setp.lt.s32 	%p42, %r422, %r26;
	add.s32 	%r423, %r420, 80;
	setp.lt.s32 	%p43, %r423, %r26;
	add.s32 	%r424, %r420, 88;
	setp.lt.s32 	%p44, %r424, %r26;
	add.s32 	%r425, %r420, 96;
	setp.lt.s32 	%p45, %r425, %r26;
	add.s32 	%r426, %r420, 104;
	setp.lt.s32 	%p46, %r426, %r26;
	add.s32 	%r427, %r420, 112;
	setp.lt.s32 	%p47, %r427, %r26;
	add.s32 	%r428, %r420, 120;
	setp.lt.s32 	%p48, %r428, %r26;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r429, 16, 0, %p40;
	selp.b32 	%r430, %r429, 0, %p3;
	selp.b32 	%r369, %r430, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r186 + 0 ], [ %rd98 + 0 ], 0x10, %r369;
	// end inline asm
	selp.b32 	%r431, %r429, 0, %p4;
	selp.b32 	%r371, %r431, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r188 + 0 ], [ %rd99 + 0 ], 0x10, %r371;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r432, 16, 0, %p41;
	selp.b32 	%r433, %r432, 0, %p6;
	selp.b32 	%r373, %r433, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r190 + 0 ], [ %rd100 + 0 ], 0x10, %r373;
	// end inline asm
	selp.b32 	%r434, 16, 0, %p42;
	selp.b32 	%r435, %r434, 0, %p6;
	selp.b32 	%r375, %r435, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r192 + 0 ], [ %rd101 + 0 ], 0x10, %r375;
	// end inline asm
	selp.b32 	%r436, 16, 0, %p43;
	selp.b32 	%r437, %r436, 0, %p6;
	selp.b32 	%r377, %r437, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r194 + 0 ], [ %rd102 + 0 ], 0x10, %r377;
	// end inline asm
	selp.b32 	%r438, 16, 0, %p44;
	selp.b32 	%r439, %r438, 0, %p6;
	selp.b32 	%r379, %r439, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r196 + 0 ], [ %rd103 + 0 ], 0x10, %r379;
	// end inline asm
	selp.b32 	%r440, 16, 0, %p45;
	selp.b32 	%r441, %r440, 0, %p6;
	selp.b32 	%r381, %r441, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r198 + 0 ], [ %rd104 + 0 ], 0x10, %r381;
	// end inline asm
	selp.b32 	%r442, 16, 0, %p46;
	selp.b32 	%r443, %r442, 0, %p6;
	selp.b32 	%r383, %r443, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r200 + 0 ], [ %rd105 + 0 ], 0x10, %r383;
	// end inline asm
	selp.b32 	%r444, 16, 0, %p47;
	selp.b32 	%r445, %r444, 0, %p6;
	selp.b32 	%r385, %r445, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r202 + 0 ], [ %rd106 + 0 ], 0x10, %r385;
	// end inline asm
	selp.b32 	%r446, 16, 0, %p48;
	selp.b32 	%r447, %r446, 0, %p6;
	selp.b32 	%r387, %r447, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r204 + 0 ], [ %rd107 + 0 ], 0x10, %r387;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd164, %rd164, 64;
	add.s64 	%rd163, %rd163, %rd14;
	add.s64 	%rd162, %rd162, %rd14;
	add.s64 	%rd161, %rd161, %rd14;
	add.s64 	%rd160, %rd160, %rd14;
	add.s64 	%rd159, %rd159, %rd14;
	add.s64 	%rd158, %rd158, %rd14;
	add.s64 	%rd157, %rd157, %rd14;
	add.s64 	%rd156, %rd156, %rd14;
	setp.ne.s64 	%p49, %rd8, %rd165;
	@%p49 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_9:                              // %._crit_edge15.loopexit
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	mov.b32 	%r539, %f178;
	mov.b32 	%r540, %f179;
	mov.b32 	%r543, %f182;
	mov.b32 	%r544, %f183;
	mov.b32 	%r541, %f180;
	mov.b32 	%r542, %f181;
	mov.b32 	%r545, %f184;
	mov.b32 	%r546, %f185;
	bra.uni 	$L__BB0_10;
$L__BB0_1:                              // %.._crit_edge15_crit_edge
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r538, %r1, 6;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	bfe.u32 	%r537, %r3, 2, 2;
	shr.u32 	%r536, %r4, 2;
	shl.b32 	%r535, %r3, 3;
	mov.b32 	%r539, 0;
	mov.u32 	%r540, %r539;
	mov.u32 	%r541, %r539;
	mov.u32 	%r542, %r539;
	mov.u32 	%r543, %r539;
	mov.u32 	%r544, %r539;
	mov.u32 	%r545, %r539;
	mov.u32 	%r546, %r539;
$L__BB0_10:                             // %._crit_edge15
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	shr.u32 	%r472, %r5, 6;
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r473, %r10, %r472;
	or.b32  	%r474, %r473, 2;
	or.b32  	%r475, %r473, 4;
	or.b32  	%r476, %r473, 6;
	or.b32  	%r477, %r473, 8;
	or.b32  	%r478, %r473, 10;
	or.b32  	%r479, %r473, 12;
	or.b32  	%r480, %r473, 14;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r481, %r473, %r82;
	shl.b32 	%r482, %r82, 1;
	add.s32 	%r483, %r481, %r482;
	add.s32 	%r484, %r483, %r482;
	add.s32 	%r485, %r484, %r482;
	add.s32 	%r486, %r485, %r482;
	add.s32 	%r487, %r486, %r482;
	add.s32 	%r488, %r487, %r482;
	add.s32 	%r489, %r488, %r482;
	.loc	1 87 33                         // implicit_gemm_kernel.py:87:33
	and.b32  	%r490, %r3, 63;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r491, %r538, %r490;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r492, %r491, %r481;
	add.s32 	%r493, %r491, %r483;
	add.s32 	%r494, %r491, %r484;
	add.s32 	%r495, %r491, %r485;
	add.s32 	%r496, %r491, %r486;
	add.s32 	%r497, %r491, %r487;
	add.s32 	%r498, %r491, %r488;
	add.s32 	%r499, %r491, %r489;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd138, %r492, 4;
	add.s64 	%rd130, %rd66, %rd138;
	mul.wide.s32 	%rd139, %r493, 4;
	add.s64 	%rd131, %rd66, %rd139;
	mul.wide.s32 	%rd140, %r494, 4;
	add.s64 	%rd132, %rd66, %rd140;
	mul.wide.s32 	%rd141, %r495, 4;
	add.s64 	%rd133, %rd66, %rd141;
	mul.wide.s32 	%rd142, %r496, 4;
	add.s64 	%rd134, %rd66, %rd142;
	mul.wide.s32 	%rd143, %r497, 4;
	add.s64 	%rd135, %rd66, %rd143;
	mul.wide.s32 	%rd144, %r498, 4;
	add.s64 	%rd136, %rd66, %rd144;
	mul.wide.s32 	%rd145, %r499, 4;
	add.s64 	%rd137, %rd66, %rd145;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p67, %r473, %r80;
	setp.lt.s32 	%p68, %r474, %r80;
	setp.lt.s32 	%p69, %r475, %r80;
	setp.lt.s32 	%p70, %r476, %r80;
	setp.lt.s32 	%p71, %r477, %r80;
	setp.lt.s32 	%p72, %r478, %r80;
	setp.lt.s32 	%p73, %r479, %r80;
	setp.lt.s32 	%p74, %r480, %r80;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p75, %r491, %r82;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p59, %p67, %p75;
	and.pred  	%p60, %p68, %p75;
	and.pred  	%p61, %p69, %p75;
	and.pred  	%p62, %p70, %p75;
	and.pred  	%p63, %p71, %p75;
	and.pred  	%p64, %p72, %p75;
	and.pred  	%p65, %p73, %p75;
	and.pred  	%p66, %p74, %p75;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	shl.b32 	%r500, %r3, 4;
	and.b32  	%r501, %r500, 48;
	or.b32  	%r502, %r537, %r501;
	or.b32  	%r503, %r502, %r536;
	shl.b32 	%r504, %r3, 1;
	and.b32  	%r505, %r504, 192;
	or.b32  	%r506, %r503, %r505;
	and.b32  	%r507, %r535, 504;
	or.b32  	%r508, %r507, %r472;
	shr.u32 	%r509, %r506, 1;
	and.b32  	%r510, %r509, 120;
	add.s32 	%r512, %r533, %r510;
	shl.b32 	%r513, %r506, 2;
	add.s32 	%r448, %r512, %r513;
	mov.pred 	%p51, -1;
	// begin inline asm
	@%p51 st.shared.b32 [ %r448 + 0 ], %r539;
	// end inline asm
	or.b32  	%r514, %r506, 8;
	shr.u32 	%r515, %r514, 1;
	and.b32  	%r516, %r515, 124;
	add.s32 	%r517, %r533, %r516;
	add.s32 	%r518, %r517, %r513;
	add.s32 	%r450, %r518, 32;
	// begin inline asm
	@%p51 st.shared.b32 [ %r450 + 0 ], %r540;
	// end inline asm
	or.b32  	%r519, %r506, 256;
	shr.u32 	%r520, %r519, 1;
	and.b32  	%r521, %r520, 248;
	add.s32 	%r522, %r533, %r521;
	add.s32 	%r523, %r522, %r513;
	add.s32 	%r452, %r523, 1024;
	// begin inline asm
	@%p51 st.shared.b32 [ %r452 + 0 ], %r543;
	// end inline asm
	or.b32  	%r524, %r506, 264;
	shr.u32 	%r525, %r524, 1;
	and.b32  	%r526, %r525, 252;
	add.s32 	%r527, %r533, %r526;
	add.s32 	%r528, %r527, %r513;
	add.s32 	%r454, %r528, 1056;
	// begin inline asm
	@%p51 st.shared.b32 [ %r454 + 0 ], %r544;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r529, %r507, 1;
	add.s32 	%r530, %r533, %r529;
	shl.b32 	%r531, %r508, 2;
	add.s32 	%r532, %r530, %r531;
	ld.shared.u32 	%r464, [%r532];
	ld.shared.u32 	%r465, [%r532+8];
	ld.shared.u32 	%r466, [%r532+16];
	ld.shared.u32 	%r467, [%r532+24];
	bar.sync 	0;
	// begin inline asm
	@%p51 st.shared.b32 [ %r448 + 0 ], %r541;
	// end inline asm
	// begin inline asm
	@%p51 st.shared.b32 [ %r450 + 0 ], %r542;
	// end inline asm
	// begin inline asm
	@%p51 st.shared.b32 [ %r452 + 0 ], %r545;
	// end inline asm
	// begin inline asm
	@%p51 st.shared.b32 [ %r454 + 0 ], %r546;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r468, [%r532];
	ld.shared.u32 	%r469, [%r532+8];
	ld.shared.u32 	%r470, [%r532+16];
	ld.shared.u32 	%r471, [%r532+24];
	// begin inline asm
	@%p59 st.global.b32 [ %rd130 + 0 ], { %r464 };
	// end inline asm
	// begin inline asm
	@%p60 st.global.b32 [ %rd131 + 0 ], { %r465 };
	// end inline asm
	// begin inline asm
	@%p61 st.global.b32 [ %rd132 + 0 ], { %r466 };
	// end inline asm
	// begin inline asm
	@%p62 st.global.b32 [ %rd133 + 0 ], { %r467 };
	// end inline asm
	// begin inline asm
	@%p63 st.global.b32 [ %rd134 + 0 ], { %r468 };
	// end inline asm
	// begin inline asm
	@%p64 st.global.b32 [ %rd135 + 0 ], { %r469 };
	// end inline asm
	// begin inline asm
	@%p65 st.global.b32 [ %rd136 + 0 ], { %r470 };
	// end inline asm
	// begin inline asm
	@%p66 st.global.b32 [ %rd137 + 0 ], { %r471 };
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 174                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x98:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
