//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_89
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<100>;
	.reg .b32 	%r<644>;
	.reg .f32 	%f<290>;
	.reg .b64 	%rd<175>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r94, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r92, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd62, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r95, %ctaid.x;
	.loc	1 50 36                         // implicit_gemm_kernel.py:50:36
	shr.u32 	%r96, %r95, 31;
	add.s32 	%r97, %r95, %r96;
	and.b32  	%r98, %r97, -2;
	sub.s32 	%r624, %r95, %r98;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r99, %r92, 15;
$L__tmp2:
	.loc	1 49 35                         // implicit_gemm_kernel.py:49:35
	shr.s32 	%r100, %r97, 1;
	shr.s32 	%r102, %r99, 31;
	shr.u32 	%r103, %r102, 28;
	add.s32 	%r104, %r99, %r103;
	shr.s32 	%r105, %r104, 4;
	ld.param.u32 	%r106, [implicit_conv3d_kernel_param_8];
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r2, %r100, %r105;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r107, %r2, %r105;
	sub.s32 	%r108, %r100, %r107;
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r109, %r106, %r106;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r3, %r109, %r106;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r4, %tid.x;
	and.b32  	%r5, %r4, 16;
	and.b32  	%r6, %r4, 32;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r9, %r108, 4;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.lt.s32 	%p5, %r624, %r3;
	mov.u32 	%r623, global_smem;
	@%p5 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph30
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r93, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r91, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd61, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd60, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd63, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	bfe.u32 	%r7, %r4, 3, 3;
	and.b32  	%r8, %r4, 15;
	or.b32  	%r10, %r9, %r7;
	or.b32  	%r11, %r10, 8;
	or.b32  	%r12, %r9, %r8;
	mul.lo.s32 	%r110, %r10, %r3;
	shl.b32 	%r111, %r3, 3;
	add.s32 	%r112, %r110, %r111;
	mul.lo.s32 	%r113, %r12, %r3;
	mul.wide.s32 	%rd64, %r110, 4;
	add.s64 	%rd1, %rd63, %rd64;
	mul.wide.s32 	%rd65, %r112, 4;
	add.s64 	%rd2, %rd63, %rd65;
	mul.wide.s32 	%rd66, %r113, 4;
	add.s64 	%rd3, %rd63, %rd66;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r115, %r4, 4;
	and.b32  	%r116, %r4, 2;
	and.b32  	%r117, %r4, 1;
	and.b32  	%r118, %r4, 8;
	add.s32 	%r15, %r93, 31;
	shr.s32 	%r119, %r15, 31;
	shr.u32 	%r120, %r119, 27;
	add.s32 	%r121, %r15, %r120;
	shr.s32 	%r122, %r121, 5;
	shl.b32 	%r123, %r117, 2;
	shl.b32 	%r124, %r116, 2;
	or.b32  	%r125, %r123, %r124;
	shl.b32 	%r126, %r115, 2;
	or.b32  	%r16, %r125, %r126;
	bfe.u32 	%r17, %r4, 4, 2;
	or.b32  	%r18, %r17, 4;
	or.b32  	%r19, %r17, 8;
	or.b32  	%r20, %r17, 12;
	or.b32  	%r21, %r17, 16;
	or.b32  	%r22, %r17, 20;
	or.b32  	%r23, %r17, 24;
	or.b32  	%r24, %r17, 28;
	shl.b32 	%r127, %r118, 2;
	or.b32  	%r128, %r16, %r127;
	shl.b32 	%r627, %r2, 6;
	mul.lo.s32 	%r26, %r3, %r93;
	or.b32  	%r27, %r627, %r128;
	setp.lt.s32 	%p6, %r27, %r94;
	setp.gt.s32 	%p7, %r15, 31;
	setp.lt.s32 	%p8, %r16, %r93;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p1, %p8, %p7;
	shr.u32 	%r129, %r4, 1;
	and.b32  	%r130, %r129, 28;
	xor.b32  	%r131, %r130, %r16;
	shl.b32 	%r132, %r131, 2;
	add.s32 	%r134, %r623, %r132;
	shl.b32 	%r135, %r7, 7;
	add.s32 	%r136, %r134, %r135;
	add.s32 	%r222, %r136, 8192;
	add.s32 	%r224, %r136, 9216;
	and.b32  	%r137, %r129, 24;
	xor.b32  	%r138, %r137, %r128;
	shl.b32 	%r139, %r138, 2;
	add.s32 	%r140, %r623, %r139;
	shl.b32 	%r141, %r17, 8;
	add.s32 	%r226, %r140, %r141;
	add.s32 	%r228, %r226, 1024;
	add.s32 	%r230, %r226, 2048;
	add.s32 	%r232, %r226, 3072;
	add.s32 	%r234, %r226, 4096;
	add.s32 	%r236, %r226, 5120;
	add.s32 	%r238, %r226, 6144;
	add.s32 	%r240, %r226, 7168;
	add.s32 	%r142, %r122, -1;
	shr.u32 	%r626, %r5, 2;
	xor.b32  	%r143, %r16, %r626;
	shl.b32 	%r144, %r8, 5;
	or.b32  	%r39, %r143, %r144;
	or.b32  	%r145, %r123, 8;
	xor.b32  	%r146, %r145, %r124;
	or.b32  	%r147, %r146, %r126;
	xor.b32  	%r148, %r147, %r626;
	or.b32  	%r40, %r148, %r144;
	or.b32  	%r149, %r125, 16;
	or.b32  	%r150, %r626, %r126;
	xor.b32  	%r151, %r150, %r149;
	or.b32  	%r41, %r151, %r144;
	or.b32  	%r152, %r123, 24;
	or.b32  	%r153, %r126, %r124;
	or.b32  	%r154, %r153, %r626;
	xor.b32  	%r155, %r154, %r152;
	or.b32  	%r42, %r155, %r144;
	shl.b32 	%r156, %r117, 3;
	shl.b32 	%r157, %r116, 3;
	bfe.u32 	%r158, %r4, 2, 1;
	shr.u32 	%r159, %r118, 2;
	or.b32  	%r160, %r159, %r158;
	or.b32  	%r161, %r160, %r157;
	or.b32  	%r162, %r161, %r156;
	or.b32  	%r163, %r162, %r626;
	shr.u32 	%r164, %r6, 2;
	xor.b32  	%r43, %r163, %r164;
	shl.b32 	%r165, %r4, 6;
	and.b32  	%r44, %r165, 192;
	or.b32  	%r166, %r156, 16;
	xor.b32  	%r167, %r166, %r157;
	or.b32  	%r168, %r158, %r167;
	or.b32  	%r169, %r168, %r159;
	or.b32  	%r170, %r169, %r626;
	xor.b32  	%r45, %r170, %r164;
	or.b32  	%r171, %r163, 32;
	xor.b32  	%r46, %r171, %r164;
	or.b32  	%r172, %r156, 48;
	xor.b32  	%r173, %r172, %r157;
	or.b32  	%r174, %r158, %r173;
	or.b32  	%r175, %r174, %r159;
	or.b32  	%r176, %r175, %r626;
	xor.b32  	%r47, %r176, %r164;
	cvt.s64.s32 	%rd4, %r142;
	cvt.s64.s32 	%rd5, %r93;
	cvt.u64.u32 	%rd6, %r122;
	and.pred  	%p2, %p6, %p7;
	or.b32  	%r177, %r153, %r123;
	cvt.u64.u32 	%rd7, %r177;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	or.b32  	%r48, %r177, 32;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	mad.lo.s32 	%r178, %r624, %r93, %r17;
	cvt.u64.u32 	%rd164, %r178;
	shl.b32 	%r179, %r93, 1;
	cvt.u64.u32 	%rd9, %r179;
	add.s32 	%r180, %r178, 60;
	mad.lo.s32 	%r181, %r94, %r180, %r627;
	add.s32 	%r182, %r181, %r127;
	cvt.u64.u32 	%rd163, %r182;
	mul.lo.s32 	%r183, %r94, %r93;
	shl.b32 	%r184, %r183, 1;
	cvt.u64.u32 	%rd11, %r184;
	shl.b32 	%r185, %r94, 5;
	cvt.u64.u32 	%rd12, %r185;
	add.s32 	%r186, %r178, 56;
	mad.lo.s32 	%r187, %r94, %r186, %r627;
	add.s32 	%r188, %r187, %r127;
	cvt.u64.u32 	%rd162, %r188;
	add.s32 	%r189, %r178, 52;
	mad.lo.s32 	%r190, %r94, %r189, %r627;
	add.s32 	%r191, %r190, %r127;
	cvt.u64.u32 	%rd161, %r191;
	add.s32 	%r192, %r178, 48;
	mad.lo.s32 	%r193, %r94, %r192, %r627;
	add.s32 	%r194, %r193, %r127;
	cvt.u64.u32 	%rd160, %r194;
	add.s32 	%r195, %r178, 44;
	mad.lo.s32 	%r196, %r94, %r195, %r627;
	add.s32 	%r197, %r196, %r127;
	cvt.u64.u32 	%rd159, %r197;
	add.s32 	%r198, %r178, 40;
	mad.lo.s32 	%r199, %r94, %r198, %r627;
	add.s32 	%r200, %r199, %r127;
	cvt.u64.u32 	%rd158, %r200;
	add.s32 	%r201, %r178, 36;
	mad.lo.s32 	%r202, %r94, %r201, %r627;
	add.s32 	%r203, %r202, %r127;
	cvt.u64.u32 	%rd157, %r203;
	add.s32 	%r204, %r178, 32;
	mad.lo.s32 	%r205, %r94, %r204, %r627;
	add.s32 	%r206, %r205, %r127;
	cvt.u64.u32 	%rd156, %r206;
	mov.f32 	%f242, 0f00000000;
	setp.lt.s32 	%p11, %r12, %r92;
	shl.b32 	%r407, %r39, 2;
	shl.b32 	%r408, %r40, 2;
	shl.b32 	%r409, %r41, 2;
	shl.b32 	%r410, %r42, 2;
	shl.b32 	%r413, %r43, 2;
	shl.b32 	%r415, %r44, 2;
	shl.b32 	%r417, %r45, 2;
	shl.b32 	%r420, %r46, 2;
	shl.b32 	%r423, %r47, 2;
	mov.f32 	%f243, %f242;
	mov.f32 	%f244, %f242;
	mov.f32 	%f245, %f242;
	mov.f32 	%f246, %f242;
	mov.f32 	%f247, %f242;
	mov.f32 	%f248, %f242;
	mov.f32 	%f249, %f242;
	mov.f32 	%f250, %f242;
	mov.f32 	%f251, %f242;
	mov.f32 	%f252, %f242;
	mov.f32 	%f253, %f242;
	mov.f32 	%f254, %f242;
	mov.f32 	%f255, %f242;
	mov.f32 	%f256, %f242;
	mov.f32 	%f257, %f242;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s32 	%r624, %r624, 2;
	add.s64 	%rd164, %rd164, %rd9;
	add.s64 	%rd163, %rd163, %rd11;
	add.s64 	%rd162, %rd162, %rd11;
	add.s64 	%rd161, %rd161, %rd11;
	add.s64 	%rd160, %rd160, %rd11;
	add.s64 	%rd159, %rd159, %rd11;
	add.s64 	%rd158, %rd158, %rd11;
	add.s64 	%rd157, %rd157, %rd11;
	add.s64 	%rd156, %rd156, %rd11;
	setp.lt.s32 	%p50, %r624, %r3;
	@%p50 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p10, %r11, %r92;
	setp.lt.s32 	%p9, %r10, %r92;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	mul.wide.s32 	%rd70, %r624, 4;
	add.s64 	%rd67, %rd1, %rd70;
	add.s64 	%rd68, %rd2, %rd70;
	add.s64 	%rd69, %rd3, %rd70;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r207, 0xffffffffffffffff;
	@%p9 ld.global.b32 { %r207 }, [ %rd67 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r208, 0xffffffffffffffff;
	@%p10 ld.global.b32 { %r208 }, [ %rd68 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r209, 0xffffffffffffffff;
	@%p11 ld.global.b32 { %r209 }, [ %rd69 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p14, %r209, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p17, %r209, %r91;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p18, %p14, %p17;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r210, 1, 0, %p18;
	shfl.sync.bfly.b32	%r211, %r210, 8, 31, -1;
	and.b32  	%r212, %r211, 1;
	setp.eq.b32 	%p19, %r212, 1;
$L__tmp3:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p20, %p18, %p19;
$L__tmp4:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r213, 1, 0, %p20;
	shfl.sync.bfly.b32	%r214, %r213, 4, 31, -1;
	and.b32  	%r215, %r214, 1;
	setp.eq.b32 	%p21, %r215, 1;
$L__tmp5:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p22, %p20, %p21;
$L__tmp6:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r216, 1, 0, %p22;
	shfl.sync.bfly.b32	%r217, %r216, 2, 31, -1;
	and.b32  	%r218, %r217, 1;
	setp.eq.b32 	%p23, %r218, 1;
$L__tmp7:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p24, %p22, %p23;
$L__tmp8:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r219, 1, 0, %p24;
	shfl.sync.bfly.b32	%r220, %r219, 1, 31, -1;
	and.b32  	%r221, %r220, 1;
	setp.eq.b32 	%p25, %r221, 1;
$L__tmp9:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p26, %p24, %p25;
$L__tmp10:
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p27, %p26;
	@%p27 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.gt.s32 	%p12, %r207, -1;
	setp.gt.s32 	%p13, %r208, -1;
	setp.lt.s32 	%p15, %r207, %r91;
	setp.lt.s32 	%p16, %r208, %r91;
	and.pred  	%p3, %p12, %p15;
	and.pred  	%p4, %p13, %p16;
	setp.lt.s32 	%p28, %r15, 32;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	mul.lo.s32 	%r242, %r624, %r93;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r52, %r207, %r93;
	mul.lo.s32 	%r53, %r208, %r93;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r243, %r52, %r16;
	add.s32 	%r244, %r53, %r16;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd81, %r243, 4;
	add.s64 	%rd71, %rd60, %rd81;
	mul.wide.s32 	%rd82, %r244, 4;
	add.s64 	%rd72, %rd60, %rd82;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s32 	%r245, %r242, %r17;
	add.s32 	%r246, %r242, %r18;
	add.s32 	%r247, %r242, %r19;
	add.s32 	%r248, %r242, %r20;
	add.s32 	%r249, %r242, %r21;
	add.s32 	%r250, %r242, %r22;
	add.s32 	%r251, %r242, %r23;
	add.s32 	%r252, %r242, %r24;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r253, %r245, %r94, %r27;
	mad.lo.s32 	%r254, %r246, %r94, %r27;
	mad.lo.s32 	%r255, %r247, %r94, %r27;
	mad.lo.s32 	%r256, %r248, %r94, %r27;
	mad.lo.s32 	%r257, %r249, %r94, %r27;
	mad.lo.s32 	%r258, %r250, %r94, %r27;
	mad.lo.s32 	%r259, %r251, %r94, %r27;
	mad.lo.s32 	%r260, %r252, %r94, %r27;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd83, %r253, 4;
	add.s64 	%rd73, %rd61, %rd83;
	mul.wide.s32 	%rd84, %r254, 4;
	add.s64 	%rd74, %rd61, %rd84;
	mul.wide.s32 	%rd85, %r255, 4;
	add.s64 	%rd75, %rd61, %rd85;
	mul.wide.s32 	%rd86, %r256, 4;
	add.s64 	%rd76, %rd61, %rd86;
	mul.wide.s32 	%rd87, %r257, 4;
	add.s64 	%rd77, %rd61, %rd87;
	mul.wide.s32 	%rd88, %r258, 4;
	add.s64 	%rd78, %rd61, %rd88;
	mul.wide.s32 	%rd89, %r259, 4;
	add.s64 	%rd79, %rd61, %rd89;
	mul.wide.s32 	%rd90, %r260, 4;
	add.s64 	%rd80, %rd61, %rd90;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p29, %r245, %r26;
	setp.lt.s32 	%p30, %r246, %r26;
	setp.lt.s32 	%p31, %r247, %r26;
	setp.lt.s32 	%p32, %r248, %r26;
	setp.lt.s32 	%p33, %r249, %r26;
	setp.lt.s32 	%p34, %r250, %r26;
	setp.lt.s32 	%p35, %r251, %r26;
	setp.lt.s32 	%p36, %r252, %r26;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	selp.b32 	%r261, 16, 0, %p1;
	selp.b32 	%r223, %r261, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r222 + 0 ], [ %rd71 + 0 ], 0x10, %r223;
	// end inline asm
	selp.b32 	%r225, %r261, 0, %p4;
	// begin inline asm
	cp.async.cg.shared.global [ %r224 + 0 ], [ %rd72 + 0 ], 0x10, %r225;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r262, 16, 0, %p2;
	selp.b32 	%r227, %r262, 0, %p29;
	// begin inline asm
	cp.async.cg.shared.global [ %r226 + 0 ], [ %rd73 + 0 ], 0x10, %r227;
	// end inline asm
	selp.b32 	%r229, %r262, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r228 + 0 ], [ %rd74 + 0 ], 0x10, %r229;
	// end inline asm
	selp.b32 	%r231, %r262, 0, %p31;
	// begin inline asm
	cp.async.cg.shared.global [ %r230 + 0 ], [ %rd75 + 0 ], 0x10, %r231;
	// end inline asm
	selp.b32 	%r233, %r262, 0, %p32;
	// begin inline asm
	cp.async.cg.shared.global [ %r232 + 0 ], [ %rd76 + 0 ], 0x10, %r233;
	// end inline asm
	selp.b32 	%r235, %r262, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r234 + 0 ], [ %rd77 + 0 ], 0x10, %r235;
	// end inline asm
	selp.b32 	%r237, %r262, 0, %p34;
	// begin inline asm
	cp.async.cg.shared.global [ %r236 + 0 ], [ %rd78 + 0 ], 0x10, %r237;
	// end inline asm
	selp.b32 	%r239, %r262, 0, %p35;
	// begin inline asm
	cp.async.cg.shared.global [ %r238 + 0 ], [ %rd79 + 0 ], 0x10, %r239;
	// end inline asm
	selp.b32 	%r241, %r262, 0, %p36;
	// begin inline asm
	cp.async.cg.shared.global [ %r240 + 0 ], [ %rd80 + 0 ], 0x10, %r241;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p28 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r264, %r48, %r53;
	cvt.u64.u32 	%rd29, %r264;
	add.s32 	%r265, %r48, %r52;
	cvt.u64.u32 	%rd30, %r265;
	mov.b32 	%r625, -1;
	mov.b64 	%rd173, 0;
	mov.u64 	%rd165, %rd156;
	mov.u64 	%rd166, %rd157;
	mov.u64 	%rd167, %rd158;
	mov.u64 	%rd168, %rd159;
	mov.u64 	%rd169, %rd160;
	mov.u64 	%rd170, %rd161;
	mov.u64 	%rd171, %rd162;
	mov.u64 	%rd172, %rd163;
	mov.u64 	%rd174, %rd173;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p38, %rd174, %rd4;
	add.s32 	%r402, %r625, 1;
	setp.gt.u32 	%p39, %r625, 2147483646;
	selp.b32 	%r625, %r402, 0, %p39;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r403, %r625, 11;
	add.s32 	%r405, %r623, %r403;
	add.s32 	%r406, %r405, 8192;
	add.s32 	%r270, %r406, %r407;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r286, %r287, %r288, %r289}, [%r270];
	// end inline asm
	add.s32 	%r275, %r406, %r408;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r310, %r311, %r312, %r313}, [%r275];
	// end inline asm
	add.s32 	%r280, %r406, %r409;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r334, %r335, %r336, %r337}, [%r280];
	// end inline asm
	add.s32 	%r285, %r406, %r410;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r358, %r359, %r360, %r361}, [%r285];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	shl.b32 	%r411, %r625, 13;
	add.s32 	%r412, %r623, %r411;
	add.s32 	%r414, %r412, %r413;
	add.s32 	%r416, %r414, %r415;
	ld.shared.u32 	%r290, [%r416];
	ld.shared.u32 	%r291, [%r416+1024];
	ld.shared.u32 	%r314, [%r416+2048];
	ld.shared.u32 	%r315, [%r416+3072];
	ld.shared.u32 	%r338, [%r416+4096];
	ld.shared.u32 	%r339, [%r416+5120];
	ld.shared.u32 	%r362, [%r416+6144];
	ld.shared.u32 	%r363, [%r416+7168];
	add.s32 	%r418, %r412, %r417;
	add.s32 	%r419, %r418, %r415;
	ld.shared.u32 	%r296, [%r419];
	ld.shared.u32 	%r297, [%r419+1024];
	ld.shared.u32 	%r320, [%r419+2048];
	ld.shared.u32 	%r321, [%r419+3072];
	ld.shared.u32 	%r344, [%r419+4096];
	ld.shared.u32 	%r345, [%r419+5120];
	ld.shared.u32 	%r368, [%r419+6144];
	ld.shared.u32 	%r369, [%r419+7168];
	add.s32 	%r421, %r412, %r420;
	add.s32 	%r422, %r421, %r415;
	ld.shared.u32 	%r302, [%r422];
	ld.shared.u32 	%r303, [%r422+1024];
	ld.shared.u32 	%r326, [%r422+2048];
	ld.shared.u32 	%r327, [%r422+3072];
	ld.shared.u32 	%r350, [%r422+4096];
	ld.shared.u32 	%r351, [%r422+5120];
	ld.shared.u32 	%r374, [%r422+6144];
	ld.shared.u32 	%r375, [%r422+7168];
	add.s32 	%r424, %r412, %r423;
	add.s32 	%r425, %r424, %r415;
	ld.shared.u32 	%r308, [%r425];
	ld.shared.u32 	%r309, [%r425+1024];
	ld.shared.u32 	%r332, [%r425+2048];
	ld.shared.u32 	%r333, [%r425+3072];
	ld.shared.u32 	%r356, [%r425+4096];
	ld.shared.u32 	%r357, [%r425+5120];
	ld.shared.u32 	%r380, [%r425+6144];
	ld.shared.u32 	%r381, [%r425+7168];
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f242, %f243, %f244, %f245 }, { %r286, %r287, %r288, %r289 }, { %r290, %r291 }, { %f242, %f243, %f244, %f245 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f246, %f247, %f248, %f249 }, { %r286, %r287, %r288, %r289 }, { %r296, %r297 }, { %f246, %f247, %f248, %f249 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f250, %f251, %f252, %f253 }, { %r286, %r287, %r288, %r289 }, { %r302, %r303 }, { %f250, %f251, %f252, %f253 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f254, %f255, %f256, %f257 }, { %r286, %r287, %r288, %r289 }, { %r308, %r309 }, { %f254, %f255, %f256, %f257 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f242, %f243, %f244, %f245 }, { %r310, %r311, %r312, %r313 }, { %r314, %r315 }, { %f242, %f243, %f244, %f245 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f246, %f247, %f248, %f249 }, { %r310, %r311, %r312, %r313 }, { %r320, %r321 }, { %f246, %f247, %f248, %f249 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f250, %f251, %f252, %f253 }, { %r310, %r311, %r312, %r313 }, { %r326, %r327 }, { %f250, %f251, %f252, %f253 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f254, %f255, %f256, %f257 }, { %r310, %r311, %r312, %r313 }, { %r332, %r333 }, { %f254, %f255, %f256, %f257 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f242, %f243, %f244, %f245 }, { %r334, %r335, %r336, %r337 }, { %r338, %r339 }, { %f242, %f243, %f244, %f245 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f246, %f247, %f248, %f249 }, { %r334, %r335, %r336, %r337 }, { %r344, %r345 }, { %f246, %f247, %f248, %f249 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f250, %f251, %f252, %f253 }, { %r334, %r335, %r336, %r337 }, { %r350, %r351 }, { %f250, %f251, %f252, %f253 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f254, %f255, %f256, %f257 }, { %r334, %r335, %r336, %r337 }, { %r356, %r357 }, { %f254, %f255, %f256, %f257 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f242, %f243, %f244, %f245 }, { %r358, %r359, %r360, %r361 }, { %r362, %r363 }, { %f242, %f243, %f244, %f245 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f246, %f247, %f248, %f249 }, { %r358, %r359, %r360, %r361 }, { %r368, %r369 }, { %f246, %f247, %f248, %f249 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f250, %f251, %f252, %f253 }, { %r358, %r359, %r360, %r361 }, { %r374, %r375 }, { %f250, %f251, %f252, %f253 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f254, %f255, %f256, %f257 }, { %r358, %r359, %r360, %r361 }, { %r380, %r381 }, { %f254, %f255, %f256, %f257 };
	// end inline asm
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd174, %rd174, 1;
	.loc	1 69 89                         // implicit_gemm_kernel.py:69:89
	add.s64 	%rd102, %rd30, %rd173;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd103, %rd29, %rd173;
	cvt.u32.u64 	%r426, %rd102;
	mul.wide.s32 	%rd104, %r426, 4;
	add.s64 	%rd92, %rd60, %rd104;
	cvt.u32.u64 	%r427, %rd103;
	mul.wide.s32 	%rd105, %r427, 4;
	add.s64 	%rd93, %rd60, %rd105;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd42, %rd173, 32;
	.loc	1 70 112                        // implicit_gemm_kernel.py:70:112
	add.s64 	%rd106, %rd42, %rd7;
	setp.lt.s64 	%p40, %rd106, %rd5;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s64 	%rd107, %rd164, %rd173;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	add.s64 	%rd108, %rd7, %rd165;
	add.s64 	%rd109, %rd7, %rd166;
	add.s64 	%rd110, %rd7, %rd167;
	add.s64 	%rd111, %rd7, %rd168;
	add.s64 	%rd112, %rd7, %rd169;
	add.s64 	%rd113, %rd7, %rd170;
	add.s64 	%rd114, %rd7, %rd171;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s64 	%rd115, %rd7, %rd172;
	cvt.u32.u64 	%r428, %rd108;
	mul.wide.s32 	%rd116, %r428, 4;
	add.s64 	%rd94, %rd61, %rd116;
	cvt.u32.u64 	%r429, %rd109;
	mul.wide.s32 	%rd117, %r429, 4;
	add.s64 	%rd95, %rd61, %rd117;
	cvt.u32.u64 	%r430, %rd110;
	mul.wide.s32 	%rd118, %r430, 4;
	add.s64 	%rd96, %rd61, %rd118;
	cvt.u32.u64 	%r431, %rd111;
	mul.wide.s32 	%rd119, %r431, 4;
	add.s64 	%rd97, %rd61, %rd119;
	cvt.u32.u64 	%r432, %rd112;
	mul.wide.s32 	%rd120, %r432, 4;
	add.s64 	%rd98, %rd61, %rd120;
	cvt.u32.u64 	%r433, %rd113;
	mul.wide.s32 	%rd121, %r433, 4;
	add.s64 	%rd99, %rd61, %rd121;
	cvt.u32.u64 	%r434, %rd114;
	mul.wide.s32 	%rd122, %r434, 4;
	add.s64 	%rd100, %rd61, %rd122;
	cvt.u32.u64 	%r435, %rd115;
	mul.wide.s32 	%rd123, %r435, 4;
	add.s64 	%rd101, %rd61, %rd123;
	cvt.u32.u64 	%r436, %rd107;
	add.s32 	%r437, %r436, 32;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p41, %r437, %r26;
	add.s32 	%r438, %r436, 36;
	setp.lt.s32 	%p42, %r438, %r26;
	add.s32 	%r439, %r436, 40;
	setp.lt.s32 	%p43, %r439, %r26;
	add.s32 	%r440, %r436, 44;
	setp.lt.s32 	%p44, %r440, %r26;
	add.s32 	%r441, %r436, 48;
	setp.lt.s32 	%p45, %r441, %r26;
	add.s32 	%r442, %r436, 52;
	setp.lt.s32 	%p46, %r442, %r26;
	add.s32 	%r443, %r436, 56;
	setp.lt.s32 	%p47, %r443, %r26;
	add.s32 	%r444, %r436, 60;
	setp.lt.s32 	%p48, %r444, %r26;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r445, 16, 0, %p40;
	selp.b32 	%r446, %r445, 0, %p3;
	selp.b32 	%r383, %r446, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r222 + 0 ], [ %rd92 + 0 ], 0x10, %r383;
	// end inline asm
	selp.b32 	%r447, %r445, 0, %p4;
	selp.b32 	%r385, %r447, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r224 + 0 ], [ %rd93 + 0 ], 0x10, %r385;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r448, 16, 0, %p41;
	selp.b32 	%r449, %r448, 0, %p6;
	selp.b32 	%r387, %r449, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r226 + 0 ], [ %rd94 + 0 ], 0x10, %r387;
	// end inline asm
	selp.b32 	%r450, 16, 0, %p42;
	selp.b32 	%r451, %r450, 0, %p6;
	selp.b32 	%r389, %r451, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r228 + 0 ], [ %rd95 + 0 ], 0x10, %r389;
	// end inline asm
	selp.b32 	%r452, 16, 0, %p43;
	selp.b32 	%r453, %r452, 0, %p6;
	selp.b32 	%r391, %r453, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r230 + 0 ], [ %rd96 + 0 ], 0x10, %r391;
	// end inline asm
	selp.b32 	%r454, 16, 0, %p44;
	selp.b32 	%r455, %r454, 0, %p6;
	selp.b32 	%r393, %r455, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r232 + 0 ], [ %rd97 + 0 ], 0x10, %r393;
	// end inline asm
	selp.b32 	%r456, 16, 0, %p45;
	selp.b32 	%r457, %r456, 0, %p6;
	selp.b32 	%r395, %r457, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r234 + 0 ], [ %rd98 + 0 ], 0x10, %r395;
	// end inline asm
	selp.b32 	%r458, 16, 0, %p46;
	selp.b32 	%r459, %r458, 0, %p6;
	selp.b32 	%r397, %r459, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r236 + 0 ], [ %rd99 + 0 ], 0x10, %r397;
	// end inline asm
	selp.b32 	%r460, 16, 0, %p47;
	selp.b32 	%r461, %r460, 0, %p6;
	selp.b32 	%r399, %r461, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r238 + 0 ], [ %rd100 + 0 ], 0x10, %r399;
	// end inline asm
	selp.b32 	%r462, 16, 0, %p48;
	selp.b32 	%r463, %r462, 0, %p6;
	selp.b32 	%r401, %r463, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r240 + 0 ], [ %rd101 + 0 ], 0x10, %r401;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd172, %rd172, %rd12;
	add.s64 	%rd171, %rd171, %rd12;
	add.s64 	%rd170, %rd170, %rd12;
	add.s64 	%rd169, %rd169, %rd12;
	add.s64 	%rd168, %rd168, %rd12;
	add.s64 	%rd167, %rd167, %rd12;
	add.s64 	%rd166, %rd166, %rd12;
	add.s64 	%rd165, %rd165, %rd12;
	setp.ne.s64 	%p49, %rd6, %rd174;
	mov.u64 	%rd173, %rd42;
	@%p49 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge31_crit_edge
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r627, %r2, 6;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shr.u32 	%r626, %r5, 2;
	mov.b32 	%r628, 0;
	mov.u32 	%r629, %r628;
	mov.u32 	%r630, %r628;
	mov.u32 	%r631, %r628;
	mov.u32 	%r632, %r628;
	mov.u32 	%r633, %r628;
	mov.u32 	%r634, %r628;
	mov.u32 	%r635, %r628;
	mov.u32 	%r636, %r628;
	mov.u32 	%r637, %r628;
	mov.u32 	%r638, %r628;
	mov.u32 	%r639, %r628;
	mov.u32 	%r640, %r628;
	mov.u32 	%r641, %r628;
	mov.u32 	%r642, %r628;
	mov.u32 	%r643, %r628;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %._crit_edge31.loopexit
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	mov.b32 	%r628, %f242;
	mov.b32 	%r629, %f243;
	mov.b32 	%r632, %f246;
	mov.b32 	%r633, %f247;
	mov.b32 	%r636, %f250;
	mov.b32 	%r637, %f251;
	mov.b32 	%r640, %f254;
	mov.b32 	%r641, %f255;
	mov.b32 	%r630, %f244;
	mov.b32 	%r631, %f245;
	mov.b32 	%r634, %f248;
	mov.b32 	%r635, %f249;
	mov.b32 	%r638, %f252;
	mov.b32 	%r639, %f253;
	mov.b32 	%r642, %f256;
	mov.b32 	%r643, %f257;
$L__BB0_10:                             // %._crit_edge31
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r528, %r9, 1;
	or.b32  	%r529, %r9, 2;
	or.b32  	%r530, %r9, 3;
	or.b32  	%r531, %r9, 4;
	or.b32  	%r532, %r9, 5;
	or.b32  	%r533, %r9, 6;
	or.b32  	%r534, %r9, 7;
	or.b32  	%r535, %r9, 8;
	or.b32  	%r536, %r9, 9;
	or.b32  	%r537, %r9, 10;
	or.b32  	%r538, %r9, 11;
	or.b32  	%r539, %r9, 12;
	or.b32  	%r540, %r9, 13;
	or.b32  	%r541, %r9, 14;
	or.b32  	%r542, %r9, 15;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r543, %r9, %r94;
	add.s32 	%r544, %r543, %r94;
	add.s32 	%r545, %r544, %r94;
	add.s32 	%r546, %r545, %r94;
	add.s32 	%r547, %r546, %r94;
	add.s32 	%r548, %r547, %r94;
	add.s32 	%r549, %r548, %r94;
	add.s32 	%r550, %r549, %r94;
	add.s32 	%r551, %r550, %r94;
	add.s32 	%r552, %r551, %r94;
	add.s32 	%r553, %r552, %r94;
	add.s32 	%r554, %r553, %r94;
	add.s32 	%r555, %r554, %r94;
	add.s32 	%r556, %r555, %r94;
	add.s32 	%r557, %r556, %r94;
	add.s32 	%r558, %r557, %r94;
	.loc	1 87 33                         // implicit_gemm_kernel.py:87:33
	and.b32  	%r559, %r4, 63;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r560, %r627, %r559;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r561, %r560, %r543;
	add.s32 	%r562, %r560, %r544;
	add.s32 	%r563, %r560, %r545;
	add.s32 	%r564, %r560, %r546;
	add.s32 	%r565, %r560, %r547;
	add.s32 	%r566, %r560, %r548;
	add.s32 	%r567, %r560, %r549;
	add.s32 	%r568, %r560, %r550;
	add.s32 	%r569, %r560, %r551;
	add.s32 	%r570, %r560, %r552;
	add.s32 	%r571, %r560, %r553;
	add.s32 	%r572, %r560, %r554;
	add.s32 	%r573, %r560, %r555;
	add.s32 	%r574, %r560, %r556;
	add.s32 	%r575, %r560, %r557;
	add.s32 	%r576, %r560, %r558;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd140, %r561, 4;
	add.s64 	%rd124, %rd62, %rd140;
	mul.wide.s32 	%rd141, %r562, 4;
	add.s64 	%rd125, %rd62, %rd141;
	mul.wide.s32 	%rd142, %r563, 4;
	add.s64 	%rd126, %rd62, %rd142;
	mul.wide.s32 	%rd143, %r564, 4;
	add.s64 	%rd127, %rd62, %rd143;
	mul.wide.s32 	%rd144, %r565, 4;
	add.s64 	%rd128, %rd62, %rd144;
	mul.wide.s32 	%rd145, %r566, 4;
	add.s64 	%rd129, %rd62, %rd145;
	mul.wide.s32 	%rd146, %r567, 4;
	add.s64 	%rd130, %rd62, %rd146;
	mul.wide.s32 	%rd147, %r568, 4;
	add.s64 	%rd131, %rd62, %rd147;
	mul.wide.s32 	%rd148, %r569, 4;
	add.s64 	%rd132, %rd62, %rd148;
	mul.wide.s32 	%rd149, %r570, 4;
	add.s64 	%rd133, %rd62, %rd149;
	mul.wide.s32 	%rd150, %r571, 4;
	add.s64 	%rd134, %rd62, %rd150;
	mul.wide.s32 	%rd151, %r572, 4;
	add.s64 	%rd135, %rd62, %rd151;
	mul.wide.s32 	%rd152, %r573, 4;
	add.s64 	%rd136, %rd62, %rd152;
	mul.wide.s32 	%rd153, %r574, 4;
	add.s64 	%rd137, %rd62, %rd153;
	mul.wide.s32 	%rd154, %r575, 4;
	add.s64 	%rd138, %rd62, %rd154;
	mul.wide.s32 	%rd155, %r576, 4;
	add.s64 	%rd139, %rd62, %rd155;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p83, %r9, %r92;
	setp.lt.s32 	%p84, %r528, %r92;
	setp.lt.s32 	%p85, %r529, %r92;
	setp.lt.s32 	%p86, %r530, %r92;
	setp.lt.s32 	%p87, %r531, %r92;
	setp.lt.s32 	%p88, %r532, %r92;
	setp.lt.s32 	%p89, %r533, %r92;
	setp.lt.s32 	%p90, %r534, %r92;
	setp.lt.s32 	%p91, %r535, %r92;
	setp.lt.s32 	%p92, %r536, %r92;
	setp.lt.s32 	%p93, %r537, %r92;
	setp.lt.s32 	%p94, %r538, %r92;
	setp.lt.s32 	%p95, %r539, %r92;
	setp.lt.s32 	%p96, %r540, %r92;
	setp.lt.s32 	%p97, %r541, %r92;
	setp.lt.s32 	%p98, %r542, %r92;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p99, %r560, %r94;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p67, %p83, %p99;
	and.pred  	%p68, %p84, %p99;
	and.pred  	%p69, %p85, %p99;
	and.pred  	%p70, %p86, %p99;
	and.pred  	%p71, %p87, %p99;
	and.pred  	%p72, %p88, %p99;
	and.pred  	%p73, %p89, %p99;
	and.pred  	%p74, %p90, %p99;
	and.pred  	%p75, %p91, %p99;
	and.pred  	%p76, %p92, %p99;
	and.pred  	%p77, %p93, %p99;
	and.pred  	%p78, %p94, %p99;
	and.pred  	%p79, %p95, %p99;
	and.pred  	%p80, %p96, %p99;
	and.pred  	%p81, %p97, %p99;
	and.pred  	%p82, %p98, %p99;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shl.b32 	%r577, %r4, 4;
	and.b32  	%r578, %r577, 48;
	bfe.u32 	%r579, %r4, 2, 2;
	or.b32  	%r580, %r579, %r578;
	or.b32  	%r581, %r580, %r626;
	shl.b32 	%r582, %r6, 1;
	or.b32  	%r583, %r581, %r582;
	shl.b32 	%r584, %r4, 3;
	and.b32  	%r585, %r584, 504;
	shl.b32 	%r586, %r583, 1;
	and.b32  	%r587, %r586, 224;
	add.s32 	%r589, %r623, %r587;
	shl.b32 	%r590, %r583, 2;
	add.s32 	%r464, %r589, %r590;
	mov.pred 	%p51, -1;
	// begin inline asm
	@%p51 st.shared.b32 [ %r464 + 0 ], %r628;
	// end inline asm
	or.b32  	%r591, %r586, 16;
	and.b32  	%r592, %r591, 240;
	add.s32 	%r593, %r623, %r592;
	add.s32 	%r594, %r593, %r590;
	add.s32 	%r466, %r594, 32;
	// begin inline asm
	@%p51 st.shared.b32 [ %r466 + 0 ], %r629;
	// end inline asm
	or.b32  	%r595, %r586, 256;
	and.b32  	%r596, %r595, 496;
	add.s32 	%r597, %r623, %r596;
	add.s32 	%r598, %r597, %r590;
	add.s32 	%r468, %r598, 512;
	// begin inline asm
	@%p51 st.shared.b32 [ %r468 + 0 ], %r632;
	// end inline asm
	or.b32  	%r599, %r586, 272;
	and.b32  	%r600, %r599, 496;
	add.s32 	%r601, %r623, %r600;
	add.s32 	%r602, %r601, %r590;
	add.s32 	%r470, %r602, 544;
	// begin inline asm
	@%p51 st.shared.b32 [ %r470 + 0 ], %r633;
	// end inline asm
	or.b32  	%r603, %r586, 512;
	and.b32  	%r604, %r603, 752;
	add.s32 	%r605, %r623, %r604;
	add.s32 	%r606, %r605, %r590;
	add.s32 	%r472, %r606, 1024;
	// begin inline asm
	@%p51 st.shared.b32 [ %r472 + 0 ], %r636;
	// end inline asm
	or.b32  	%r607, %r586, 528;
	and.b32  	%r608, %r607, 752;
	add.s32 	%r609, %r623, %r608;
	add.s32 	%r610, %r609, %r590;
	add.s32 	%r474, %r610, 1056;
	// begin inline asm
	@%p51 st.shared.b32 [ %r474 + 0 ], %r637;
	// end inline asm
	or.b32  	%r611, %r586, 768;
	and.b32  	%r612, %r611, 1008;
	add.s32 	%r613, %r623, %r612;
	add.s32 	%r614, %r613, %r590;
	add.s32 	%r476, %r614, 1536;
	// begin inline asm
	@%p51 st.shared.b32 [ %r476 + 0 ], %r640;
	// end inline asm
	or.b32  	%r615, %r586, 784;
	and.b32  	%r616, %r615, 1008;
	add.s32 	%r617, %r623, %r616;
	add.s32 	%r618, %r617, %r590;
	add.s32 	%r478, %r618, 1568;
	// begin inline asm
	@%p51 st.shared.b32 [ %r478 + 0 ], %r641;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r619, %r585, 1;
	add.s32 	%r620, %r623, %r619;
	shl.b32 	%r621, %r585, 2;
	add.s32 	%r622, %r620, %r621;
	ld.shared.v4.f32 	{%f210, %f211, %f212, %f213}, [%r622];
	ld.shared.v4.f32 	{%f214, %f215, %f216, %f217}, [%r622+16];
	bar.sync 	0;
	// begin inline asm
	@%p51 st.shared.b32 [ %r464 + 0 ], %r630;
	// end inline asm
	// begin inline asm
	@%p51 st.shared.b32 [ %r466 + 0 ], %r631;
	// end inline asm
	// begin inline asm
	@%p51 st.shared.b32 [ %r468 + 0 ], %r634;
	// end inline asm
	// begin inline asm
	@%p51 st.shared.b32 [ %r470 + 0 ], %r635;
	// end inline asm
	// begin inline asm
	@%p51 st.shared.b32 [ %r472 + 0 ], %r638;
	// end inline asm
	// begin inline asm
	@%p51 st.shared.b32 [ %r474 + 0 ], %r639;
	// end inline asm
	// begin inline asm
	@%p51 st.shared.b32 [ %r476 + 0 ], %r642;
	// end inline asm
	// begin inline asm
	@%p51 st.shared.b32 [ %r478 + 0 ], %r643;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.f32 	{%f218, %f219, %f220, %f221}, [%r622];
	ld.shared.v4.f32 	{%f222, %f223, %f224, %f225}, [%r622+16];
	mov.b32 	%r497, %f210;
	// begin inline asm
	mov.u32 %r496, 0x0;
	@%p67 atom.global.gpu.acq_rel.add.f32 %r496, [ %rd124 + 0 ], %r497;
	// end inline asm
	mov.b32 	%r499, %f211;
	// begin inline asm
	mov.u32 %r498, 0x0;
	@%p68 atom.global.gpu.acq_rel.add.f32 %r498, [ %rd125 + 0 ], %r499;
	// end inline asm
	mov.b32 	%r501, %f212;
	// begin inline asm
	mov.u32 %r500, 0x0;
	@%p69 atom.global.gpu.acq_rel.add.f32 %r500, [ %rd126 + 0 ], %r501;
	// end inline asm
	mov.b32 	%r503, %f213;
	// begin inline asm
	mov.u32 %r502, 0x0;
	@%p70 atom.global.gpu.acq_rel.add.f32 %r502, [ %rd127 + 0 ], %r503;
	// end inline asm
	mov.b32 	%r505, %f214;
	// begin inline asm
	mov.u32 %r504, 0x0;
	@%p71 atom.global.gpu.acq_rel.add.f32 %r504, [ %rd128 + 0 ], %r505;
	// end inline asm
	mov.b32 	%r507, %f215;
	// begin inline asm
	mov.u32 %r506, 0x0;
	@%p72 atom.global.gpu.acq_rel.add.f32 %r506, [ %rd129 + 0 ], %r507;
	// end inline asm
	mov.b32 	%r509, %f216;
	// begin inline asm
	mov.u32 %r508, 0x0;
	@%p73 atom.global.gpu.acq_rel.add.f32 %r508, [ %rd130 + 0 ], %r509;
	// end inline asm
	mov.b32 	%r511, %f217;
	// begin inline asm
	mov.u32 %r510, 0x0;
	@%p74 atom.global.gpu.acq_rel.add.f32 %r510, [ %rd131 + 0 ], %r511;
	// end inline asm
	mov.b32 	%r513, %f218;
	// begin inline asm
	mov.u32 %r512, 0x0;
	@%p75 atom.global.gpu.acq_rel.add.f32 %r512, [ %rd132 + 0 ], %r513;
	// end inline asm
	mov.b32 	%r515, %f219;
	// begin inline asm
	mov.u32 %r514, 0x0;
	@%p76 atom.global.gpu.acq_rel.add.f32 %r514, [ %rd133 + 0 ], %r515;
	// end inline asm
	mov.b32 	%r517, %f220;
	// begin inline asm
	mov.u32 %r516, 0x0;
	@%p77 atom.global.gpu.acq_rel.add.f32 %r516, [ %rd134 + 0 ], %r517;
	// end inline asm
	mov.b32 	%r519, %f221;
	// begin inline asm
	mov.u32 %r518, 0x0;
	@%p78 atom.global.gpu.acq_rel.add.f32 %r518, [ %rd135 + 0 ], %r519;
	// end inline asm
	mov.b32 	%r521, %f222;
	// begin inline asm
	mov.u32 %r520, 0x0;
	@%p79 atom.global.gpu.acq_rel.add.f32 %r520, [ %rd136 + 0 ], %r521;
	// end inline asm
	mov.b32 	%r523, %f223;
	// begin inline asm
	mov.u32 %r522, 0x0;
	@%p80 atom.global.gpu.acq_rel.add.f32 %r522, [ %rd137 + 0 ], %r523;
	// end inline asm
	mov.b32 	%r525, %f224;
	// begin inline asm
	mov.u32 %r524, 0x0;
	@%p81 atom.global.gpu.acq_rel.add.f32 %r524, [ %rd138 + 0 ], %r525;
	// end inline asm
	mov.b32 	%r527, %f225;
	// begin inline asm
	mov.u32 %r526, 0x0;
	@%p82 atom.global.gpu.acq_rel.add.f32 %r526, [ %rd139 + 0 ], %r527;
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 174                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x98:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
