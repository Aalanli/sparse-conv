//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_89
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<74>;
	.reg .b16 	%rs<227>;
	.reg .b32 	%r<306>;
	.reg .b64 	%rd<76>;
	.loc	1 32 0                          // triton_spconv.py:32:0
$L__func_begin0:
	.loc	1 32 0                          // triton_spconv.py:32:0

// %bb.0:
	ld.param.u32 	%r51, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r49, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd22, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 47 24                         // triton_spconv.py:47:24
	mov.u32 	%r52, %ctaid.x;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r53, %r49, 31;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r54, %r53, 31;
	shr.u32 	%r55, %r54, 27;
	add.s32 	%r56, %r53, %r55;
	shr.s32 	%r57, %r56, 5;
$L__tmp2:
	.loc	1 51 20                         // triton_spconv.py:51:20
	div.s32 	%r1, %r52, %r57;
	.loc	1 50 18                         // triton_spconv.py:50:18
	mul.lo.s32 	%r59, %r1, %r57;
	sub.s32 	%r60, %r52, %r59;
	ld.param.u32 	%r61, [implicit_conv3d_kernel_param_8];
	.loc	1 53 19                         // triton_spconv.py:53:19
	mul.lo.s32 	%r62, %r61, %r61;
	.loc	1 53 23                         // triton_spconv.py:53:23
	mul.lo.s32 	%r2, %r62, %r61;
	.loc	1 56 38                         // triton_spconv.py:56:38
	mov.u32 	%r3, %tid.x;
	and.b32  	%r4, %r3, 16;
	and.b32  	%r6, %r3, 32;
	and.b32  	%r8, %r3, 31;
	.loc	1 56 57                         // triton_spconv.py:56:57
	shl.b32 	%r9, %r60, 5;
	.loc	1 58 19                         // triton_spconv.py:58:19
	setp.gt.s32 	%p3, %r2, 0;
	mov.u32 	%r297, global_smem;
	@%p3 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph17
	.loc	1 0 19                          // triton_spconv.py:0:19
	ld.param.u32 	%r50, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r48, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd21, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd20, [implicit_conv3d_kernel_param_1];
	ld.param.u64 	%rd19, [implicit_conv3d_kernel_param_0];
	.loc	1 56 0                          // triton_spconv.py:56:0
	shr.u32 	%r5, %r4, 1;
	shr.u32 	%r63, %r3, 1;
	and.b32  	%r64, %r63, 23;
	or.b32  	%r7, %r64, %r5;
	or.b32  	%r10, %r9, %r7;
	or.b32  	%r11, %r9, %r8;
	.loc	1 56 68                         // triton_spconv.py:56:68
	mul.lo.s32 	%r65, %r11, %r2;
	.loc	1 56 24                         // triton_spconv.py:56:24
	mul.wide.s32 	%rd24, %r65, 4;
	add.s64 	%rd73, %rd20, %rd24;
	.loc	1 56 68                         // triton_spconv.py:56:68
	mul.lo.s32 	%r66, %r10, %r2;
	.loc	1 56 24                         // triton_spconv.py:56:24
	mul.wide.s32 	%rd25, %r66, 4;
	add.s64 	%rd72, %rd20, %rd25;
	.loc	1 56 38                         // triton_spconv.py:56:38
	and.b32  	%r67, %r3, 15;
	and.b32  	%r68, %r3, 4;
	add.s32 	%r15, %r50, 15;
	shr.s32 	%r69, %r15, 31;
	shr.u32 	%r70, %r69, 28;
	add.s32 	%r71, %r15, %r70;
	shr.s32 	%r72, %r71, 4;
	shl.b32 	%r73, %r3, 3;
	and.b32  	%r16, %r73, 8;
	shr.u32 	%r304, %r3, 2;
	bfe.u32 	%r74, %r3, 2, 3;
	shr.u32 	%r75, %r6, 2;
	or.b32  	%r18, %r74, %r75;
	and.b32  	%r76, %r73, 24;
	shl.b32 	%r305, %r1, 5;
	mul.lo.s32 	%r20, %r2, %r50;
	or.b32  	%r21, %r305, %r76;
	setp.lt.s32 	%p4, %r21, %r51;
	setp.gt.s32 	%p5, %r15, 15;
	setp.lt.s32 	%p6, %r16, %r50;
	.loc	1 58 19                         // triton_spconv.py:58:19
	and.pred  	%p1, %p6, %p5;
	xor.b32  	%r77, %r73, %r3;
	and.b32  	%r78, %r77, 8;
	shl.b32 	%r79, %r78, 1;
	shl.b32 	%r80, %r7, 5;
	or.b32  	%r81, %r80, %r79;
	add.s32 	%r110, %r297, %r81;
	and.b32  	%r83, %r77, 24;
	shl.b32 	%r84, %r18, 6;
	shl.b32 	%r85, %r83, 1;
	or.b32  	%r86, %r84, %r85;
	add.s32 	%r87, %r297, %r86;
	add.s32 	%r112, %r87, 1024;
	add.s32 	%r88, %r72, -1;
	shl.b32 	%r89, %r68, 1;
	xor.b32  	%r90, %r89, %r5;
	shl.b32 	%r91, %r67, 4;
	or.b32  	%r24, %r90, %r91;
	shl.b32 	%r303, %r3, 4;
	and.b32  	%r92, %r303, 240;
	or.b32  	%r26, %r92, %r90;
	shl.b32 	%r93, %r3, 2;
	and.b32  	%r94, %r93, 8;
	shl.b32 	%r95, %r68, 2;
	or.b32  	%r96, %r94, %r95;
	xor.b32  	%r97, %r96, %r75;
	shl.b32 	%r98, %r67, 5;
	or.b32  	%r27, %r97, %r98;
	or.b32  	%r99, %r94, 16;
	or.b32  	%r100, %r75, %r95;
	xor.b32  	%r101, %r100, %r99;
	or.b32  	%r28, %r101, %r98;
	cvt.s64.s32 	%rd3, %r88;
	cvt.u64.u32 	%rd26, %r16;
	cvt.s64.s32 	%rd4, %r50;
	cvt.u64.u32 	%rd5, %r2;
	cvt.u64.u32 	%rd6, %r72;
	and.pred  	%p2, %p4, %p5;
	or.b64  	%rd7, %rd26, 16;
	add.s32 	%r102, %r75, %r74;
	add.s32 	%r299, %r102, 16;
	mad.lo.s32 	%r103, %r51, %r299, %r305;
	add.s32 	%r298, %r103, %r76;
	mul.lo.s32 	%r31, %r51, %r50;
	shl.b32 	%r32, %r51, 4;
	mov.b16 	%rs179, 0x0000;
	mov.b64 	%rd71, 0;
	setp.lt.s32 	%p8, %r11, %r49;
	shl.b32 	%r185, %r24, 1;
	shl.b32 	%r186, %r26, 1;
	shl.b32 	%r189, %r27, 1;
	shl.b32 	%r190, %r28, 1;
	mov.u16 	%rs180, %rs179;
	mov.u16 	%rs181, %rs179;
	mov.u16 	%rs182, %rs179;
	mov.u16 	%rs183, %rs179;
	mov.u16 	%rs184, %rs179;
	mov.u16 	%rs185, %rs179;
	mov.u16 	%rs186, %rs179;
	mov.u16 	%rs187, %rs179;
	mov.u16 	%rs188, %rs179;
	mov.u16 	%rs189, %rs179;
	mov.u16 	%rs190, %rs179;
	mov.u16 	%rs191, %rs179;
	mov.u16 	%rs192, %rs179;
	mov.u16 	%rs193, %rs179;
	mov.u16 	%rs194, %rs179;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 63 28                         // triton_spconv.py:63:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 82 19                         // triton_spconv.py:82:19
	add.s64 	%rd72, %rd72, 4;
	add.s64 	%rd73, %rd73, 4;
	.loc	1 58 19                         // triton_spconv.py:58:19
	add.s64 	%rd71, %rd71, 1;
	add.s32 	%r299, %r299, %r50;
	add.s32 	%r298, %r298, %r31;
	setp.ne.s64 	%p24, %rd71, %rd5;
	@%p24 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 60 81                         // triton_spconv.py:60:81
	setp.lt.s32 	%p7, %r10, %r49;
	.loc	1 60 23                         // triton_spconv.py:60:23
	// begin inline asm
	mov.u32 %r104, 0xffffffffffffffff;
	@%p7 ld.global.b32 { %r104 }, [ %rd72 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r105, 0xffffffffffffffff;
	@%p8 ld.global.b32 { %r105 }, [ %rd73 + 0 ];
	// end inline asm
	.loc	1 62 27                         // triton_spconv.py:62:27
	setp.gt.s32 	%p9, %r105, -1;
	.loc	1 62 43                         // triton_spconv.py:62:43
	setp.lt.s32 	%p10, %r105, %r48;
	.loc	1 62 36                         // triton_spconv.py:62:36
	and.pred  	%p11, %p9, %p10;
	.loc	1 62 50                         // triton_spconv.py:62:50
	selp.u32 	%r106, 1, 0, %p11;
	mov.b32 	%r107, -1;
	redux.sync.or.b32 %r108, %r106, %r107;
	and.b32  	%r109, %r108, 1;
	setp.eq.b32 	%p12, %r109, 1;
	.loc	1 62 11                         // triton_spconv.py:62:11
	not.pred 	%p13, %p12;
	@%p13 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // triton_spconv.py:0:11
	setp.lt.s32 	%p14, %r15, 16;
	.loc	1 64 31                         // triton_spconv.py:64:31
	cvt.u32.u64 	%r114, %rd71;
	.loc	1 66 52                         // triton_spconv.py:66:52
	mul.lo.s32 	%r36, %r104, %r50;
	.loc	1 66 56                         // triton_spconv.py:66:56
	add.s32 	%r115, %r36, %r16;
	.loc	1 67 43                         // triton_spconv.py:67:43
	setp.ne.s32 	%p15, %r104, -1;
	.loc	1 66 36                         // triton_spconv.py:66:36
	mul.wide.s32 	%rd31, %r115, 2;
	add.s64 	%rd29, %rd19, %rd31;
	.loc	1 70 54                         // triton_spconv.py:70:54
	mad.lo.s32 	%r116, %r50, %r114, %r18;
	.loc	1 72 22                         // triton_spconv.py:72:22
	mad.lo.s32 	%r117, %r116, %r51, %r21;
	.loc	1 70 20                         // triton_spconv.py:70:20
	mul.wide.s32 	%rd32, %r117, 2;
	add.s64 	%rd30, %rd21, %rd32;
	.loc	1 74 72                         // triton_spconv.py:74:72
	setp.lt.s32 	%p16, %r116, %r20;
	.loc	1 78 39                         // triton_spconv.py:78:39
	selp.b32 	%r118, 16, 0, %p1;
	selp.b32 	%r111, %r118, 0, %p15;
	// begin inline asm
	cp.async.cg.shared.global [ %r110 + 0 ], [ %rd29 + 0 ], 0x10, %r111;
	// end inline asm
	cp.async.commit_group;
	.loc	1 79 36                         // triton_spconv.py:79:36
	selp.b32 	%r119, 16, 0, %p2;
	selp.b32 	%r113, %r119, 0, %p16;
	// begin inline asm
	cp.async.cg.shared.global [ %r112 + 0 ], [ %rd30 + 0 ], 0x10, %r113;
	// end inline asm
	cp.async.commit_group;
	.loc	1 63 28                         // triton_spconv.py:63:28
	@%p14 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	cvt.u64.u32 	%rd11, %r36;
	mov.b32 	%r302, -1;
	mov.b64 	%rd75, 0;
	mov.u32 	%r300, %r298;
	mov.u32 	%r301, %r299;
	mov.u64 	%rd74, %rd7;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p19, %rd75, %rd3;
	add.s32 	%r181, %r302, 1;
	setp.gt.u32 	%p20, %r302, 2147483646;
	selp.b32 	%r302, %r181, 0, %p20;
	.loc	1 78 39                         // triton_spconv.py:78:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r182, %r302, 10;
	add.s32 	%r184, %r297, %r182;
	add.s32 	%r125, %r184, %r185;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r141, %r142, %r143, %r144}, [%r125];
	// end inline asm
	add.s32 	%r187, %r184, %r186;
	add.s32 	%r130, %r187, 512;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r161, %r162, %r163, %r164}, [%r130];
	// end inline asm
	.loc	1 79 36                         // triton_spconv.py:79:36
	add.s32 	%r188, %r184, 1024;
	add.s32 	%r133, %r188, %r189;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.trans.shared.b16 {%r145, %r146}, [%r133];
	// end inline asm
	add.s32 	%r136, %r188, %r190;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.trans.shared.b16 {%r155, %r156}, [%r136];
	// end inline asm
	.loc	1 81 37                         // triton_spconv.py:81:37
	mov.b32 	%r137, {%rs179, %rs180};
	mov.b32 	%r138, {%rs181, %rs182};
	mov.b32 	%r147, {%rs183, %rs184};
	mov.b32 	%r148, {%rs185, %rs186};
	mov.b32 	%r157, {%rs187, %rs188};
	mov.b32 	%r158, {%rs189, %rs190};
	mov.b32 	%r167, {%rs191, %rs192};
	mov.b32 	%r168, {%rs193, %rs194};
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r137, %r138 }, { %r141, %r142, %r143, %r144 }, { %r145, %r146 }, { %r137, %r138 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r147, %r148 }, { %r141, %r142, %r143, %r144 }, { %r155, %r156 }, { %r147, %r148 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r157, %r158 }, { %r161, %r162, %r163, %r164 }, { %r145, %r146 }, { %r157, %r158 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r167, %r168 }, { %r161, %r162, %r163, %r164 }, { %r155, %r156 }, { %r167, %r168 };
	// end inline asm
	mov.b32 	{%rs179, %rs180}, %r137;
	mov.b32 	{%rs181, %rs182}, %r138;
	mov.b32 	{%rs183, %rs184}, %r147;
	mov.b32 	{%rs185, %rs186}, %r148;
	mov.b32 	{%rs187, %rs188}, %r157;
	mov.b32 	{%rs189, %rs190}, %r158;
	mov.b32 	{%rs191, %rs192}, %r167;
	mov.b32 	{%rs193, %rs194}, %r168;
	.loc	1 63 28                         // triton_spconv.py:63:28
	add.s64 	%rd75, %rd75, 1;
	.loc	1 66 36                         // triton_spconv.py:66:36
	add.s64 	%rd36, %rd11, %rd74;
	cvt.u32.u64 	%r191, %rd36;
	mul.wide.s32 	%rd37, %r191, 2;
	add.s64 	%rd34, %rd19, %rd37;
	.loc	1 67 98                         // triton_spconv.py:67:98
	setp.lt.s64 	%p21, %rd74, %rd4;
	.loc	1 70 20                         // triton_spconv.py:70:20
	mul.wide.s32 	%rd38, %r300, 2;
	add.s64 	%rd35, %rd21, %rd38;
	.loc	1 74 72                         // triton_spconv.py:74:72
	setp.lt.s32 	%p22, %r301, %r20;
	.loc	1 78 39                         // triton_spconv.py:78:39
	bar.sync 	0;
	selp.b32 	%r192, 16, 0, %p21;
	selp.b32 	%r193, %r192, 0, %p15;
	selp.b32 	%r178, %r193, 0, %p19;
	// begin inline asm
	cp.async.cg.shared.global [ %r110 + 0 ], [ %rd34 + 0 ], 0x10, %r178;
	// end inline asm
	cp.async.commit_group;
	.loc	1 79 36                         // triton_spconv.py:79:36
	selp.b32 	%r194, 16, 0, %p22;
	selp.b32 	%r195, %r194, 0, %p4;
	selp.b32 	%r180, %r195, 0, %p19;
	// begin inline asm
	cp.async.cg.shared.global [ %r112 + 0 ], [ %rd35 + 0 ], 0x10, %r180;
	// end inline asm
	cp.async.commit_group;
	.loc	1 63 28                         // triton_spconv.py:63:28
	add.s64 	%rd74, %rd74, 16;
	add.s32 	%r301, %r301, 16;
	add.s32 	%r300, %r300, %r32;
	setp.ne.s64 	%p23, %rd6, %rd75;
	@%p23 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge18_crit_edge
	.loc	1 86 19                         // triton_spconv.py:86:19
	shl.b32 	%r305, %r1, 5;
	.loc	1 92 56                         // triton_spconv.py:92:56
	shr.u32 	%r304, %r3, 2;
	shl.b32 	%r303, %r3, 4;
	mov.b16 	%rs179, 0;
	mov.u16 	%rs180, %rs179;
	mov.u16 	%rs181, %rs179;
	mov.u16 	%rs182, %rs179;
	mov.u16 	%rs183, %rs179;
	mov.u16 	%rs184, %rs179;
	mov.u16 	%rs185, %rs179;
	mov.u16 	%rs186, %rs179;
	mov.u16 	%rs187, %rs179;
	mov.u16 	%rs188, %rs179;
	mov.u16 	%rs189, %rs179;
	mov.u16 	%rs190, %rs179;
	mov.u16 	%rs191, %rs179;
	mov.u16 	%rs192, %rs179;
	mov.u16 	%rs193, %rs179;
	mov.u16 	%rs194, %rs179;
$L__BB0_9:                              // %._crit_edge18
	.loc	1 84 31                         // triton_spconv.py:84:31
	shr.u32 	%r212, %r6, 5;
	.loc	1 84 42                         // triton_spconv.py:84:42
	or.b32  	%r213, %r9, %r212;
	or.b32  	%r214, %r213, 2;
	or.b32  	%r215, %r213, 4;
	or.b32  	%r216, %r213, 6;
	or.b32  	%r217, %r213, 8;
	or.b32  	%r218, %r213, 10;
	or.b32  	%r219, %r213, 12;
	or.b32  	%r220, %r213, 14;
	or.b32  	%r221, %r213, 16;
	or.b32  	%r222, %r213, 18;
	or.b32  	%r223, %r213, 20;
	or.b32  	%r224, %r213, 22;
	or.b32  	%r225, %r213, 24;
	or.b32  	%r226, %r213, 26;
	or.b32  	%r227, %r213, 28;
	or.b32  	%r228, %r213, 30;
	.loc	1 84 61                         // triton_spconv.py:84:61
	mul.lo.s32 	%r229, %r213, %r51;
	shl.b32 	%r230, %r51, 1;
	add.s32 	%r231, %r229, %r230;
	add.s32 	%r232, %r231, %r230;
	add.s32 	%r233, %r232, %r230;
	add.s32 	%r234, %r233, %r230;
	add.s32 	%r235, %r234, %r230;
	add.s32 	%r236, %r235, %r230;
	add.s32 	%r237, %r236, %r230;
	add.s32 	%r238, %r237, %r230;
	add.s32 	%r239, %r238, %r230;
	add.s32 	%r240, %r239, %r230;
	add.s32 	%r241, %r240, %r230;
	add.s32 	%r242, %r241, %r230;
	add.s32 	%r243, %r242, %r230;
	add.s32 	%r244, %r243, %r230;
	add.s32 	%r245, %r244, %r230;
	.loc	1 85 10                         // triton_spconv.py:85:10
	or.b32  	%r246, %r305, %r8;
	.loc	1 86 10                         // triton_spconv.py:86:10
	add.s32 	%r247, %r246, %r229;
	add.s32 	%r248, %r246, %r231;
	add.s32 	%r249, %r246, %r232;
	add.s32 	%r250, %r246, %r233;
	add.s32 	%r251, %r246, %r234;
	add.s32 	%r252, %r246, %r235;
	add.s32 	%r253, %r246, %r236;
	add.s32 	%r254, %r246, %r237;
	add.s32 	%r255, %r246, %r238;
	add.s32 	%r256, %r246, %r239;
	add.s32 	%r257, %r246, %r240;
	add.s32 	%r258, %r246, %r241;
	add.s32 	%r259, %r246, %r242;
	add.s32 	%r260, %r246, %r243;
	add.s32 	%r261, %r246, %r244;
	add.s32 	%r262, %r246, %r245;
	.loc	1 84 8                          // triton_spconv.py:84:8
	mul.wide.s32 	%rd55, %r247, 2;
	add.s64 	%rd39, %rd22, %rd55;
	mul.wide.s32 	%rd56, %r248, 2;
	add.s64 	%rd40, %rd22, %rd56;
	mul.wide.s32 	%rd57, %r249, 2;
	add.s64 	%rd41, %rd22, %rd57;
	mul.wide.s32 	%rd58, %r250, 2;
	add.s64 	%rd42, %rd22, %rd58;
	mul.wide.s32 	%rd59, %r251, 2;
	add.s64 	%rd43, %rd22, %rd59;
	mul.wide.s32 	%rd60, %r252, 2;
	add.s64 	%rd44, %rd22, %rd60;
	mul.wide.s32 	%rd61, %r253, 2;
	add.s64 	%rd45, %rd22, %rd61;
	mul.wide.s32 	%rd62, %r254, 2;
	add.s64 	%rd46, %rd22, %rd62;
	mul.wide.s32 	%rd63, %r255, 2;
	add.s64 	%rd47, %rd22, %rd63;
	mul.wide.s32 	%rd64, %r256, 2;
	add.s64 	%rd48, %rd22, %rd64;
	mul.wide.s32 	%rd65, %r257, 2;
	add.s64 	%rd49, %rd22, %rd65;
	mul.wide.s32 	%rd66, %r258, 2;
	add.s64 	%rd50, %rd22, %rd66;
	mul.wide.s32 	%rd67, %r259, 2;
	add.s64 	%rd51, %rd22, %rd67;
	mul.wide.s32 	%rd68, %r260, 2;
	add.s64 	%rd52, %rd22, %rd68;
	mul.wide.s32 	%rd69, %r261, 2;
	add.s64 	%rd53, %rd22, %rd69;
	mul.wide.s32 	%rd70, %r262, 2;
	add.s64 	%rd54, %rd22, %rd70;
	.loc	1 88 67                         // triton_spconv.py:88:67
	setp.lt.s32 	%p57, %r213, %r49;
	setp.lt.s32 	%p58, %r214, %r49;
	setp.lt.s32 	%p59, %r215, %r49;
	setp.lt.s32 	%p60, %r216, %r49;
	setp.lt.s32 	%p61, %r217, %r49;
	setp.lt.s32 	%p62, %r218, %r49;
	setp.lt.s32 	%p63, %r219, %r49;
	setp.lt.s32 	%p64, %r220, %r49;
	setp.lt.s32 	%p65, %r221, %r49;
	setp.lt.s32 	%p66, %r222, %r49;
	setp.lt.s32 	%p67, %r223, %r49;
	setp.lt.s32 	%p68, %r224, %r49;
	setp.lt.s32 	%p69, %r225, %r49;
	setp.lt.s32 	%p70, %r226, %r49;
	setp.lt.s32 	%p71, %r227, %r49;
	setp.lt.s32 	%p72, %r228, %r49;
	.loc	1 89 62                         // triton_spconv.py:89:62
	setp.lt.s32 	%p73, %r246, %r51;
	.loc	1 89 8                          // triton_spconv.py:89:8
	and.pred  	%p41, %p57, %p73;
	and.pred  	%p42, %p58, %p73;
	and.pred  	%p43, %p59, %p73;
	and.pred  	%p44, %p60, %p73;
	and.pred  	%p45, %p61, %p73;
	and.pred  	%p46, %p62, %p73;
	and.pred  	%p47, %p63, %p73;
	and.pred  	%p48, %p64, %p73;
	and.pred  	%p49, %p65, %p73;
	and.pred  	%p50, %p66, %p73;
	and.pred  	%p51, %p67, %p73;
	and.pred  	%p52, %p68, %p73;
	and.pred  	%p53, %p69, %p73;
	and.pred  	%p54, %p70, %p73;
	and.pred  	%p55, %p71, %p73;
	and.pred  	%p56, %p72, %p73;
	.loc	1 92 56                         // triton_spconv.py:92:56
	shl.b32 	%r263, %r3, 5;
	and.b32  	%r264, %r263, 96;
	and.b32  	%r265, %r304, 3;
	or.b32  	%r266, %r265, %r264;
	shr.u32 	%r267, %r4, 2;
	or.b32  	%r268, %r266, %r267;
	shl.b32 	%r269, %r6, 2;
	or.b32  	%r270, %r268, %r269;
	and.b32  	%r271, %r303, 496;
	or.b32  	%r272, %r271, %r212;
	shr.u32 	%r273, %r270, 3;
	and.b32  	%r274, %r273, 30;
	add.s32 	%r276, %r297, %r274;
	shl.b32 	%r277, %r270, 1;
	add.s32 	%r196, %r276, %r277;
	mov.pred 	%p25, -1;
	// begin inline asm
	@%p25 st.shared.b16 [ %r196 + 0 ], %rs179;
	// end inline asm
	or.b32  	%r278, %r270, 16;
	shr.u32 	%r279, %r278, 3;
	and.b32  	%r280, %r279, 30;
	add.s32 	%r281, %r297, %r280;
	add.s32 	%r282, %r281, %r277;
	add.s32 	%r197, %r282, 32;
	// begin inline asm
	@%p25 st.shared.b16 [ %r197 + 0 ], %rs180;
	// end inline asm
	add.s32 	%r198, %r196, 16;
	// begin inline asm
	@%p25 st.shared.b16 [ %r198 + 0 ], %rs181;
	// end inline asm
	add.s32 	%r199, %r282, 48;
	// begin inline asm
	@%p25 st.shared.b16 [ %r199 + 0 ], %rs182;
	// end inline asm
	or.b32  	%r283, %r270, 256;
	shr.u32 	%r284, %r283, 3;
	and.b32  	%r285, %r284, 62;
	add.s32 	%r286, %r297, %r285;
	add.s32 	%r287, %r286, %r277;
	add.s32 	%r200, %r287, 512;
	// begin inline asm
	@%p25 st.shared.b16 [ %r200 + 0 ], %rs183;
	// end inline asm
	or.b32  	%r288, %r270, 272;
	shr.u32 	%r289, %r288, 3;
	and.b32  	%r290, %r289, 62;
	add.s32 	%r291, %r297, %r290;
	add.s32 	%r292, %r291, %r277;
	add.s32 	%r201, %r292, 544;
	// begin inline asm
	@%p25 st.shared.b16 [ %r201 + 0 ], %rs184;
	// end inline asm
	add.s32 	%r202, %r287, 528;
	// begin inline asm
	@%p25 st.shared.b16 [ %r202 + 0 ], %rs185;
	// end inline asm
	add.s32 	%r203, %r292, 560;
	// begin inline asm
	@%p25 st.shared.b16 [ %r203 + 0 ], %rs186;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r293, %r271, 3;
	add.s32 	%r294, %r297, %r293;
	shl.b32 	%r295, %r272, 1;
	add.s32 	%r296, %r294, %r295;
	ld.shared.u16 	%rs131, [%r296];
	ld.shared.u16 	%rs132, [%r296+4];
	ld.shared.u16 	%rs133, [%r296+8];
	ld.shared.u16 	%rs134, [%r296+12];
	ld.shared.u16 	%rs135, [%r296+16];
	ld.shared.u16 	%rs136, [%r296+20];
	ld.shared.u16 	%rs137, [%r296+24];
	ld.shared.u16 	%rs138, [%r296+28];
	bar.sync 	0;
	// begin inline asm
	@%p25 st.shared.b16 [ %r196 + 0 ], %rs187;
	// end inline asm
	// begin inline asm
	@%p25 st.shared.b16 [ %r197 + 0 ], %rs188;
	// end inline asm
	// begin inline asm
	@%p25 st.shared.b16 [ %r198 + 0 ], %rs189;
	// end inline asm
	// begin inline asm
	@%p25 st.shared.b16 [ %r199 + 0 ], %rs190;
	// end inline asm
	// begin inline asm
	@%p25 st.shared.b16 [ %r200 + 0 ], %rs191;
	// end inline asm
	// begin inline asm
	@%p25 st.shared.b16 [ %r201 + 0 ], %rs192;
	// end inline asm
	// begin inline asm
	@%p25 st.shared.b16 [ %r202 + 0 ], %rs193;
	// end inline asm
	// begin inline asm
	@%p25 st.shared.b16 [ %r203 + 0 ], %rs194;
	// end inline asm
	bar.sync 	0;
	ld.shared.u16 	%rs139, [%r296];
	ld.shared.u16 	%rs140, [%r296+4];
	ld.shared.u16 	%rs141, [%r296+8];
	ld.shared.u16 	%rs142, [%r296+12];
	ld.shared.u16 	%rs143, [%r296+16];
	ld.shared.u16 	%rs144, [%r296+20];
	ld.shared.u16 	%rs145, [%r296+24];
	ld.shared.u16 	%rs146, [%r296+28];
	// begin inline asm
	@%p41 st.global.b16 [ %rd39 + 0 ], { %rs131 };
	// end inline asm
	// begin inline asm
	@%p42 st.global.b16 [ %rd40 + 0 ], { %rs132 };
	// end inline asm
	// begin inline asm
	@%p43 st.global.b16 [ %rd41 + 0 ], { %rs133 };
	// end inline asm
	// begin inline asm
	@%p44 st.global.b16 [ %rd42 + 0 ], { %rs134 };
	// end inline asm
	// begin inline asm
	@%p45 st.global.b16 [ %rd43 + 0 ], { %rs135 };
	// end inline asm
	// begin inline asm
	@%p46 st.global.b16 [ %rd44 + 0 ], { %rs136 };
	// end inline asm
	// begin inline asm
	@%p47 st.global.b16 [ %rd45 + 0 ], { %rs137 };
	// end inline asm
	// begin inline asm
	@%p48 st.global.b16 [ %rd46 + 0 ], { %rs138 };
	// end inline asm
	// begin inline asm
	@%p49 st.global.b16 [ %rd47 + 0 ], { %rs139 };
	// end inline asm
	// begin inline asm
	@%p50 st.global.b16 [ %rd48 + 0 ], { %rs140 };
	// end inline asm
	// begin inline asm
	@%p51 st.global.b16 [ %rd49 + 0 ], { %rs141 };
	// end inline asm
	// begin inline asm
	@%p52 st.global.b16 [ %rd50 + 0 ], { %rs142 };
	// end inline asm
	// begin inline asm
	@%p53 st.global.b16 [ %rd51 + 0 ], { %rs143 };
	// end inline asm
	// begin inline asm
	@%p54 st.global.b16 [ %rd52 + 0 ], { %rs144 };
	// end inline asm
	// begin inline asm
	@%p55 st.global.b16 [ %rd53 + 0 ], { %rs145 };
	// end inline asm
	// begin inline asm
	@%p56 st.global.b16 [ %rd54 + 0 ], { %rs146 };
	// end inline asm
	.loc	1 92 4                          // triton_spconv.py:92:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/waabi-user/sparse-conv/triton_spconv.py"
	.file	2 "/home/waabi-user/.local/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 139                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x84 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 115
.b8 112
.b8 99
.b8 111
.b8 110
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 119
.b8 97
.b8 97
.b8 98
.b8 105
.b8 45
.b8 117
.b8 115
.b8 101
.b8 114
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x47:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x60:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 71                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x75:0x18 DW_TAG_inlined_subroutine
.b32 71                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
