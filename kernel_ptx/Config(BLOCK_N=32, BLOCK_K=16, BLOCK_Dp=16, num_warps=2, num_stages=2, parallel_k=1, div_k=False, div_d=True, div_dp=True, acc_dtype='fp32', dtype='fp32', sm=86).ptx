//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<53>;
	.reg .b32 	%r<331>;
	.reg .f32 	%f<106>;
	.reg .b64 	%rd<64>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r74, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r72, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd19, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r75, %ctaid.x;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r76, %r72, 31;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r77, %r76, 31;
	shr.u32 	%r78, %r77, 27;
	add.s32 	%r79, %r76, %r78;
	shr.s32 	%r80, %r79, 5;
$L__tmp2:
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r1, %r75, %r80;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r82, %r1, %r80;
	sub.s32 	%r83, %r75, %r82;
	ld.param.u32 	%r84, [implicit_conv3d_kernel_param_8];
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r85, %r84, %r84;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r2, %r85, %r84;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r3, %tid.x;
	bfe.u32 	%r5, %r3, 2, 1;
	and.b32  	%r6, %r3, 8;
	shr.u32 	%r7, %r6, 2;
	shr.u32 	%r86, %r3, 2;
	and.b32  	%r8, %r86, 4;
	and.b32  	%r9, %r3, 32;
	and.b32  	%r12, %r3, 15;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r13, %r83, 5;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.gt.s32 	%p3, %r2, 0;
	mov.u32 	%r315, global_smem;
	@%p3 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph10
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r73, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r71, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd18, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd17, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd20, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	and.b32  	%r4, %r3, 4;
	and.b32  	%r10, %r86, 10;
	or.b32  	%r87, %r5, %r10;
	or.b32  	%r11, %r87, %r8;
	and.b32  	%r88, %r3, 31;
	or.b32  	%r14, %r13, %r11;
	or.b32  	%r15, %r14, 16;
	or.b32  	%r16, %r13, %r88;
	mul.lo.s32 	%r89, %r14, %r2;
	shl.b32 	%r90, %r2, 4;
	add.s32 	%r91, %r89, %r90;
	mul.lo.s32 	%r92, %r16, %r2;
	mul.wide.s32 	%rd21, %r89, 4;
	add.s64 	%rd1, %rd20, %rd21;
	mul.wide.s32 	%rd22, %r91, 4;
	add.s64 	%rd2, %rd20, %rd22;
	mul.wide.s32 	%rd23, %r92, 4;
	add.s64 	%rd3, %rd20, %rd23;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r94, %r3, 2;
	add.s32 	%r19, %r73, 15;
	shr.s32 	%r95, %r19, 31;
	shr.u32 	%r96, %r95, 28;
	add.s32 	%r97, %r19, %r96;
	shr.s32 	%r98, %r97, 4;
	shl.b32 	%r99, %r94, 2;
	shl.b32 	%r100, %r3, 2;
	and.b32  	%r20, %r100, 12;
	shl.b32 	%r322, %r1, 4;
	mul.lo.s32 	%r22, %r2, %r73;
	or.b32  	%r23, %r322, %r20;
	setp.lt.s32 	%p4, %r23, %r74;
	setp.gt.s32 	%p5, %r19, 15;
	setp.lt.s32 	%p6, %r20, %r73;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p1, %p6, %p5;
	shr.u32 	%r101, %r3, 1;
	xor.b32  	%r102, %r101, %r100;
	and.b32  	%r103, %r102, 12;
	shl.b32 	%r104, %r11, 4;
	or.b32  	%r105, %r104, %r103;
	shl.b32 	%r106, %r105, 2;
	add.s32 	%r135, %r315, %r106;
	add.s32 	%r137, %r135, 1024;
	xor.b32  	%r108, %r20, %r6;
	or.b32  	%r109, %r104, %r108;
	shl.b32 	%r110, %r109, 2;
	add.s32 	%r111, %r315, %r110;
	add.s32 	%r139, %r111, 2048;
	add.s32 	%r112, %r98, -1;
	shl.b32 	%r113, %r94, 1;
	shl.b32 	%r114, %r4, 1;
	or.b32  	%r115, %r113, %r114;
	xor.b32  	%r116, %r115, %r8;
	shr.u32 	%r321, %r9, 1;
	or.b32  	%r117, %r321, %r12;
	shl.b32 	%r118, %r117, 4;
	or.b32  	%r28, %r116, %r118;
	or.b32  	%r119, %r113, 8;
	or.b32  	%r120, %r8, %r114;
	xor.b32  	%r121, %r120, %r119;
	or.b32  	%r29, %r121, %r118;
	or.b32  	%r122, %r8, %r99;
	or.b32  	%r123, %r122, %r7;
	or.b32  	%r30, %r123, %r5;
	shl.b32 	%r124, %r3, 4;
	and.b32  	%r31, %r124, 48;
	or.b32  	%r32, %r30, %r31;
	xor.b32  	%r33, %r30, 8;
	or.b32  	%r34, %r33, %r31;
	cvt.s64.s32 	%rd4, %r112;
	cvt.u64.u32 	%rd25, %r20;
	cvt.s64.s32 	%rd5, %r73;
	cvt.u64.u32 	%rd6, %r2;
	cvt.u64.u32 	%rd7, %r98;
	and.pred  	%p2, %p4, %p5;
	or.b64  	%rd8, %rd25, 16;
	add.s32 	%r125, %r10, %r8;
	add.s32 	%r126, %r125, %r5;
	add.s32 	%r317, %r126, 16;
	mad.lo.s32 	%r127, %r74, %r317, %r322;
	add.s32 	%r316, %r127, %r20;
	mul.lo.s32 	%r37, %r74, %r73;
	shl.b32 	%r38, %r74, 4;
	mov.f32 	%f82, 0f00000000;
	mov.b64 	%rd61, 0;
	setp.lt.s32 	%p9, %r16, %r72;
	shl.b32 	%r193, %r28, 2;
	shl.b32 	%r194, %r29, 2;
	shl.b32 	%r198, %r32, 2;
	shl.b32 	%r203, %r34, 2;
	mov.f32 	%f83, %f82;
	mov.f32 	%f84, %f82;
	mov.f32 	%f85, %f82;
	mov.f32 	%f86, %f82;
	mov.f32 	%f87, %f82;
	mov.f32 	%f88, %f82;
	mov.f32 	%f89, %f82;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s64 	%rd61, %rd61, 1;
	add.s32 	%r317, %r317, %r73;
	add.s32 	%r316, %r316, %r37;
	setp.ne.s64 	%p27, %rd61, %rd6;
	@%p27 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p8, %r15, %r72;
	setp.lt.s32 	%p7, %r14, %r72;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	shl.b64 	%rd29, %rd61, 2;
	add.s64 	%rd26, %rd1, %rd29;
	add.s64 	%rd27, %rd2, %rd29;
	add.s64 	%rd28, %rd3, %rd29;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r128, 0xffffffffffffffff;
	@%p7 ld.global.b32 { %r128 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r129, 0xffffffffffffffff;
	@%p8 ld.global.b32 { %r129 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r130, 0xffffffffffffffff;
	@%p9 ld.global.b32 { %r130 }, [ %rd28 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p10, %r130, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p11, %r130, %r71;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p12, %p10, %p11;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r131, 1, 0, %p12;
	mov.b32 	%r132, -1;
	redux.sync.or.b32 %r133, %r131, %r132;
	and.b32  	%r134, %r133, 1;
	setp.eq.b32 	%p13, %r134, 1;
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p14, %p13;
	@%p14 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.lt.s32 	%p15, %r19, 16;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	cvt.u32.u64 	%r141, %rd61;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r43, %r128, %r73;
	mul.lo.s32 	%r44, %r129, %r73;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r142, %r43, %r20;
	add.s32 	%r143, %r44, %r20;
	.loc	1 70 43                         // implicit_gemm_kernel.py:70:43
	setp.ne.s32 	%p16, %r128, -1;
	setp.ne.s32 	%p17, %r129, -1;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd33, %r142, 4;
	add.s64 	%rd30, %rd17, %rd33;
	mul.wide.s32 	%rd34, %r143, 4;
	add.s64 	%rd31, %rd17, %rd34;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	mad.lo.s32 	%r144, %r73, %r141, %r11;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r145, %r144, %r74, %r23;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd35, %r145, 4;
	add.s64 	%rd32, %rd18, %rd35;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p18, %r144, %r22;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	selp.b32 	%r146, 16, 0, %p1;
	selp.b32 	%r136, %r146, 0, %p16;
	// begin inline asm
	cp.async.cg.shared.global [ %r135 + 0 ], [ %rd30 + 0 ], 0x10, %r136;
	// end inline asm
	selp.b32 	%r138, %r146, 0, %p17;
	// begin inline asm
	cp.async.cg.shared.global [ %r137 + 0 ], [ %rd31 + 0 ], 0x10, %r138;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r147, 16, 0, %p2;
	selp.b32 	%r140, %r147, 0, %p18;
	// begin inline asm
	cp.async.cg.shared.global [ %r139 + 0 ], [ %rd32 + 0 ], 0x10, %r140;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p15 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	cvt.u64.u32 	%rd10, %r44;
	cvt.u64.u32 	%rd11, %r43;
	mov.b32 	%r320, -1;
	mov.b64 	%rd63, 0;
	mov.u32 	%r318, %r316;
	mov.u32 	%r319, %r317;
	mov.u64 	%rd62, %rd8;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p22, %rd63, %rd4;
	add.s32 	%r189, %r320, 1;
	setp.gt.u32 	%p23, %r320, 2147483646;
	selp.b32 	%r320, %r189, 0, %p23;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r190, %r320, 11;
	add.s32 	%r192, %r315, %r190;
	add.s32 	%r153, %r192, %r193;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r159, %r160, %r161, %r162}, [%r153];
	// end inline asm
	add.s32 	%r158, %r192, %r194;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r171, %r172, %r173, %r174}, [%r158];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	shl.b32 	%r195, %r320, 10;
	add.s32 	%r196, %r315, %r195;
	add.s32 	%r197, %r196, 2048;
	add.s32 	%r199, %r197, %r198;
	ld.shared.u32 	%r163, [%r199];
	add.s32 	%r200, %r30, %r31;
	shl.b32 	%r201, %r200, 2;
	add.s32 	%r202, %r197, %r201;
	ld.shared.u32 	%r164, [%r202+256];
	ld.shared.u32 	%r175, [%r202+512];
	ld.shared.u32 	%r176, [%r202+768];
	add.s32 	%r204, %r197, %r203;
	ld.shared.u32 	%r169, [%r204];
	add.s32 	%r205, %r33, %r31;
	shl.b32 	%r206, %r205, 2;
	add.s32 	%r207, %r197, %r206;
	ld.shared.u32 	%r170, [%r207+256];
	ld.shared.u32 	%r181, [%r207+512];
	ld.shared.u32 	%r182, [%r207+768];
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f82, %f83, %f84, %f85 }, { %r159, %r160, %r161, %r162 }, { %r163, %r164 }, { %f82, %f83, %f84, %f85 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f86, %f87, %f88, %f89 }, { %r159, %r160, %r161, %r162 }, { %r169, %r170 }, { %f86, %f87, %f88, %f89 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f82, %f83, %f84, %f85 }, { %r171, %r172, %r173, %r174 }, { %r175, %r176 }, { %f82, %f83, %f84, %f85 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f86, %f87, %f88, %f89 }, { %r171, %r172, %r173, %r174 }, { %r181, %r182 }, { %f86, %f87, %f88, %f89 };
	// end inline asm
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd63, %rd63, 1;
	.loc	1 69 89                         // implicit_gemm_kernel.py:69:89
	add.s64 	%rd40, %rd11, %rd62;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd41, %rd10, %rd62;
	cvt.u32.u64 	%r208, %rd40;
	mul.wide.s32 	%rd42, %r208, 4;
	add.s64 	%rd37, %rd17, %rd42;
	cvt.u32.u64 	%r209, %rd41;
	mul.wide.s32 	%rd43, %r209, 4;
	add.s64 	%rd38, %rd17, %rd43;
	.loc	1 70 98                         // implicit_gemm_kernel.py:70:98
	setp.lt.s64 	%p24, %rd62, %rd5;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd44, %r318, 4;
	add.s64 	%rd39, %rd18, %rd44;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p25, %r319, %r22;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r210, 16, 0, %p24;
	selp.b32 	%r211, %r210, 0, %p16;
	selp.b32 	%r184, %r211, 0, %p22;
	// begin inline asm
	cp.async.cg.shared.global [ %r135 + 0 ], [ %rd37 + 0 ], 0x10, %r184;
	// end inline asm
	selp.b32 	%r212, %r210, 0, %p17;
	selp.b32 	%r186, %r212, 0, %p22;
	// begin inline asm
	cp.async.cg.shared.global [ %r137 + 0 ], [ %rd38 + 0 ], 0x10, %r186;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r213, 16, 0, %p25;
	selp.b32 	%r214, %r213, 0, %p4;
	selp.b32 	%r188, %r214, 0, %p22;
	// begin inline asm
	cp.async.cg.shared.global [ %r139 + 0 ], [ %rd39 + 0 ], 0x10, %r188;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd62, %rd62, 16;
	add.s32 	%r319, %r319, 16;
	add.s32 	%r318, %r318, %r38;
	setp.ne.s64 	%p26, %rd7, %rd63;
	@%p26 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_9:                              // %._crit_edge11.loopexit
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	mov.b32 	%r323, %f82;
	mov.b32 	%r324, %f83;
	mov.b32 	%r325, %f84;
	mov.b32 	%r326, %f85;
	mov.b32 	%r327, %f86;
	mov.b32 	%r328, %f87;
	mov.b32 	%r329, %f88;
	mov.b32 	%r330, %f89;
	bra.uni 	$L__BB0_10;
$L__BB0_1:                              // %.._crit_edge11_crit_edge
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r322, %r1, 4;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	shr.u32 	%r321, %r9, 1;
	mov.b32 	%r323, 0;
	mov.u32 	%r324, %r323;
	mov.u32 	%r325, %r323;
	mov.u32 	%r326, %r323;
	mov.u32 	%r327, %r323;
	mov.u32 	%r328, %r323;
	mov.u32 	%r329, %r323;
	mov.u32 	%r330, %r323;
$L__BB0_10:                             // %._crit_edge11
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	bfe.u32 	%r239, %r3, 4, 2;
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r240, %r239, %r13;
	or.b32  	%r241, %r240, 4;
	or.b32  	%r242, %r240, 8;
	or.b32  	%r243, %r240, 12;
	or.b32  	%r244, %r240, 16;
	or.b32  	%r245, %r240, 20;
	or.b32  	%r246, %r240, 24;
	or.b32  	%r247, %r240, 28;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r248, %r240, %r74;
	shl.b32 	%r249, %r74, 2;
	add.s32 	%r250, %r248, %r249;
	add.s32 	%r251, %r250, %r249;
	add.s32 	%r252, %r251, %r249;
	add.s32 	%r253, %r252, %r249;
	add.s32 	%r254, %r253, %r249;
	add.s32 	%r255, %r254, %r249;
	add.s32 	%r256, %r255, %r249;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r257, %r322, %r12;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r258, %r257, %r248;
	add.s32 	%r259, %r257, %r250;
	add.s32 	%r260, %r257, %r251;
	add.s32 	%r261, %r257, %r252;
	add.s32 	%r262, %r257, %r253;
	add.s32 	%r263, %r257, %r254;
	add.s32 	%r264, %r257, %r255;
	add.s32 	%r265, %r257, %r256;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd53, %r258, 4;
	add.s64 	%rd45, %rd19, %rd53;
	mul.wide.s32 	%rd54, %r259, 4;
	add.s64 	%rd46, %rd19, %rd54;
	mul.wide.s32 	%rd55, %r260, 4;
	add.s64 	%rd47, %rd19, %rd55;
	mul.wide.s32 	%rd56, %r261, 4;
	add.s64 	%rd48, %rd19, %rd56;
	mul.wide.s32 	%rd57, %r262, 4;
	add.s64 	%rd49, %rd19, %rd57;
	mul.wide.s32 	%rd58, %r263, 4;
	add.s64 	%rd50, %rd19, %rd58;
	mul.wide.s32 	%rd59, %r264, 4;
	add.s64 	%rd51, %rd19, %rd59;
	mul.wide.s32 	%rd60, %r265, 4;
	add.s64 	%rd52, %rd19, %rd60;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p44, %r240, %r72;
	setp.lt.s32 	%p45, %r241, %r72;
	setp.lt.s32 	%p46, %r242, %r72;
	setp.lt.s32 	%p47, %r243, %r72;
	setp.lt.s32 	%p48, %r244, %r72;
	setp.lt.s32 	%p49, %r245, %r72;
	setp.lt.s32 	%p50, %r246, %r72;
	setp.lt.s32 	%p51, %r247, %r72;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p52, %r257, %r74;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p36, %p44, %p52;
	and.pred  	%p37, %p45, %p52;
	and.pred  	%p38, %p46, %p52;
	and.pred  	%p39, %p47, %p52;
	and.pred  	%p40, %p48, %p52;
	and.pred  	%p41, %p49, %p52;
	and.pred  	%p42, %p50, %p52;
	and.pred  	%p43, %p51, %p52;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	shl.b32 	%r266, %r3, 6;
	and.b32  	%r267, %r266, 192;
	or.b32  	%r268, %r267, %r321;
	or.b32  	%r269, %r268, %r5;
	or.b32  	%r270, %r269, %r7;
	or.b32  	%r271, %r270, %r8;
	shl.b32 	%r272, %r3, 5;
	and.b32  	%r273, %r272, 480;
	or.b32  	%r274, %r239, %r273;
	shr.u32 	%r275, %r267, 3;
	add.s32 	%r277, %r315, %r275;
	shl.b32 	%r278, %r271, 2;
	add.s32 	%r215, %r277, %r278;
	mov.pred 	%p28, -1;
	// begin inline asm
	@%p28 st.shared.b32 [ %r215 + 0 ], %r323;
	// end inline asm
	or.b32  	%r279, %r271, 32;
	shr.u32 	%r280, %r279, 3;
	and.b32  	%r281, %r280, 536870908;
	add.s32 	%r282, %r315, %r281;
	shl.b32 	%r283, %r279, 2;
	add.s32 	%r217, %r282, %r283;
	// begin inline asm
	@%p28 st.shared.b32 [ %r217 + 0 ], %r324;
	// end inline asm
	xor.b32  	%r284, %r271, 8;
	shl.b32 	%r285, %r284, 2;
	add.s32 	%r219, %r277, %r285;
	// begin inline asm
	@%p28 st.shared.b32 [ %r219 + 0 ], %r325;
	// end inline asm
	xor.b32  	%r286, %r271, 40;
	shr.u32 	%r287, %r286, 3;
	and.b32  	%r288, %r287, 536870908;
	add.s32 	%r289, %r315, %r288;
	shl.b32 	%r290, %r286, 2;
	add.s32 	%r221, %r289, %r290;
	// begin inline asm
	@%p28 st.shared.b32 [ %r221 + 0 ], %r326;
	// end inline asm
	or.b32  	%r291, %r271, 256;
	shr.u32 	%r292, %r291, 3;
	and.b32  	%r293, %r292, 536870908;
	add.s32 	%r294, %r315, %r293;
	shl.b32 	%r295, %r291, 2;
	add.s32 	%r223, %r294, %r295;
	// begin inline asm
	@%p28 st.shared.b32 [ %r223 + 0 ], %r327;
	// end inline asm
	or.b32  	%r296, %r271, 288;
	shr.u32 	%r297, %r296, 3;
	and.b32  	%r298, %r297, 536870908;
	add.s32 	%r299, %r315, %r298;
	shl.b32 	%r300, %r296, 2;
	add.s32 	%r225, %r299, %r300;
	// begin inline asm
	@%p28 st.shared.b32 [ %r225 + 0 ], %r328;
	// end inline asm
	xor.b32  	%r301, %r271, 264;
	shr.u32 	%r302, %r301, 3;
	and.b32  	%r303, %r302, 536870908;
	add.s32 	%r304, %r315, %r303;
	shl.b32 	%r305, %r301, 2;
	add.s32 	%r227, %r304, %r305;
	// begin inline asm
	@%p28 st.shared.b32 [ %r227 + 0 ], %r329;
	// end inline asm
	xor.b32  	%r306, %r271, 296;
	shr.u32 	%r307, %r306, 3;
	and.b32  	%r308, %r307, 536870908;
	add.s32 	%r309, %r315, %r308;
	shl.b32 	%r310, %r306, 2;
	add.s32 	%r229, %r309, %r310;
	// begin inline asm
	@%p28 st.shared.b32 [ %r229 + 0 ], %r330;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r311, %r273, 3;
	add.s32 	%r312, %r315, %r311;
	shl.b32 	%r313, %r274, 2;
	add.s32 	%r314, %r312, %r313;
	ld.shared.u32 	%r231, [%r314];
	ld.shared.u32 	%r232, [%r314+16];
	ld.shared.u32 	%r233, [%r314+32];
	ld.shared.u32 	%r234, [%r314+48];
	ld.shared.u32 	%r235, [%r314+64];
	ld.shared.u32 	%r236, [%r314+80];
	ld.shared.u32 	%r237, [%r314+96];
	ld.shared.u32 	%r238, [%r314+112];
	// begin inline asm
	@%p36 st.global.b32 [ %rd45 + 0 ], { %r231 };
	// end inline asm
	// begin inline asm
	@%p37 st.global.b32 [ %rd46 + 0 ], { %r232 };
	// end inline asm
	// begin inline asm
	@%p38 st.global.b32 [ %rd47 + 0 ], { %r233 };
	// end inline asm
	// begin inline asm
	@%p39 st.global.b32 [ %rd48 + 0 ], { %r234 };
	// end inline asm
	// begin inline asm
	@%p40 st.global.b32 [ %rd49 + 0 ], { %r235 };
	// end inline asm
	// begin inline asm
	@%p41 st.global.b32 [ %rd50 + 0 ], { %r236 };
	// end inline asm
	// begin inline asm
	@%p42 st.global.b32 [ %rd51 + 0 ], { %r237 };
	// end inline asm
	// begin inline asm
	@%p43 st.global.b32 [ %rd52 + 0 ], { %r238 };
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 150                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x8f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
