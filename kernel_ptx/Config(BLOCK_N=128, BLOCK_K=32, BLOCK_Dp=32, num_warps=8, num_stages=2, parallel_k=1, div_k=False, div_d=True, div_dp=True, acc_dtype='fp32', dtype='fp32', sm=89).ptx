//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_89
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<98>;
	.reg .b16 	%rs<8>;
	.reg .b32 	%r<570>;
	.reg .f32 	%f<274>;
	.reg .b64 	%rd<116>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r100, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r98, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd34, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r101, %ctaid.x;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r102, %r98, 127;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r103, %r102, 31;
	shr.u32 	%r104, %r103, 25;
	add.s32 	%r105, %r102, %r104;
	shr.s32 	%r106, %r105, 7;
$L__tmp2:
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r1, %r101, %r106;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r108, %r1, %r106;
	sub.s32 	%r109, %r101, %r108;
	ld.param.u32 	%r110, [implicit_conv3d_kernel_param_8];
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r111, %r110, %r110;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r2, %r111, %r110;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r3, %tid.x;
	and.b32  	%r4, %r3, 16;
	and.b32  	%r5, %r3, 32;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r8, %r109, 7;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.gt.s32 	%p8, %r2, 0;
	mov.u32 	%r546, global_smem;
	@%p8 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph14
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r99, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r97, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd33, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd32, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd35, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	shr.u32 	%r6, %r3, 3;
	bfe.u32 	%r7, %r3, 3, 5;
	and.b32  	%r112, %r3, 127;
	or.b32  	%r9, %r8, %r7;
	or.b32  	%r10, %r9, 32;
	or.b32  	%r11, %r9, 64;
	or.b32  	%r12, %r9, 96;
	or.b32  	%r13, %r8, %r112;
	mul.lo.s32 	%r113, %r9, %r2;
	shl.b32 	%r114, %r2, 5;
	add.s32 	%r115, %r113, %r114;
	add.s32 	%r116, %r115, %r114;
	add.s32 	%r117, %r116, %r114;
	mul.lo.s32 	%r118, %r13, %r2;
	mul.wide.s32 	%rd36, %r113, 4;
	add.s64 	%rd1, %rd35, %rd36;
	mul.wide.s32 	%rd37, %r115, 4;
	add.s64 	%rd2, %rd35, %rd37;
	mul.wide.s32 	%rd38, %r116, 4;
	add.s64 	%rd3, %rd35, %rd38;
	mul.wide.s32 	%rd39, %r117, 4;
	add.s64 	%rd4, %rd35, %rd39;
	mul.wide.s32 	%rd40, %r118, 4;
	add.s64 	%rd5, %rd35, %rd40;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r120, %r3, 15;
	and.b32  	%r121, %r3, 4;
	and.b32  	%r122, %r3, 2;
	and.b32  	%r123, %r3, 1;
	shr.u32 	%r553, %r3, 5;
	bfe.u32 	%r124, %r3, 5, 2;
	and.b32  	%r20, %r3, 159;
	add.s32 	%r181, %r546, %r124;
	setp.lt.s32 	%p9, %r3, 4;
	add.s32 	%r182, %r546, %r3;
	and.b32  	%r126, %r3, 3;
	setp.eq.s32 	%p10, %r126, 0;
	and.pred  	%p21, %p9, %p10;
	add.s32 	%r23, %r99, 31;
	shr.s32 	%r127, %r23, 31;
	shr.u32 	%r128, %r127, 27;
	add.s32 	%r129, %r23, %r128;
	shr.s32 	%r130, %r129, 5;
	shl.b32 	%r131, %r123, 2;
	shl.b32 	%r132, %r122, 2;
	or.b32  	%r133, %r131, %r132;
	shl.b32 	%r134, %r121, 2;
	or.b32  	%r24, %r133, %r134;
	shl.b32 	%r552, %r1, 5;
	mul.lo.s32 	%r26, %r2, %r99;
	or.b32  	%r27, %r552, %r24;
	setp.lt.s32 	%p11, %r27, %r100;
	setp.gt.s32 	%p12, %r23, 31;
	setp.lt.s32 	%p13, %r24, %r99;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p2, %p13, %p12;
	shr.u32 	%r135, %r3, 1;
	and.b32  	%r136, %r135, 28;
	xor.b32  	%r137, %r24, %r136;
	shl.b32 	%r138, %r7, 5;
	or.b32  	%r139, %r137, %r138;
	shl.b32 	%r140, %r139, 2;
	add.s32 	%r194, %r546, %r140;
	add.s32 	%r196, %r194, 4096;
	add.s32 	%r198, %r194, 8192;
	add.s32 	%r200, %r194, 12288;
	and.b32  	%r141, %r3, 24;
	xor.b32  	%r142, %r24, %r141;
	or.b32  	%r143, %r142, %r138;
	shl.b32 	%r144, %r143, 2;
	add.s32 	%r145, %r546, %r144;
	add.s32 	%r202, %r145, 16384;
	add.s32 	%r146, %r130, -1;
	shr.u32 	%r550, %r4, 2;
	xor.b32  	%r34, %r24, %r550;
	shr.u32 	%r551, %r3, 2;
	and.b32  	%r549, %r551, 48;
	or.b32  	%r147, %r549, %r120;
	shl.b32 	%r37, %r147, 5;
	or.b32  	%r38, %r34, %r37;
	or.b32  	%r148, %r131, 8;
	xor.b32  	%r149, %r148, %r132;
	or.b32  	%r150, %r149, %r134;
	xor.b32  	%r39, %r150, %r550;
	or.b32  	%r40, %r39, %r37;
	or.b32  	%r151, %r133, 16;
	or.b32  	%r152, %r550, %r134;
	xor.b32  	%r41, %r152, %r151;
	or.b32  	%r42, %r41, %r37;
	or.b32  	%r153, %r131, 24;
	or.b32  	%r154, %r134, %r132;
	or.b32  	%r155, %r154, %r550;
	xor.b32  	%r43, %r155, %r153;
	or.b32  	%r44, %r43, %r37;
	shl.b32 	%r156, %r123, 3;
	shl.b32 	%r157, %r122, 3;
	bfe.u32 	%r158, %r3, 2, 1;
	and.b32  	%r159, %r551, 2;
	or.b32  	%r160, %r159, %r158;
	or.b32  	%r161, %r160, %r157;
	or.b32  	%r162, %r161, %r156;
	or.b32  	%r163, %r162, %r550;
	shr.u32 	%r164, %r5, 2;
	xor.b32  	%r45, %r163, %r164;
	shl.b32 	%r165, %r3, 5;
	and.b32  	%r46, %r165, 96;
	or.b32  	%r166, %r156, 16;
	xor.b32  	%r167, %r166, %r157;
	or.b32  	%r168, %r158, %r167;
	or.b32  	%r169, %r168, %r159;
	or.b32  	%r170, %r169, %r550;
	xor.b32  	%r47, %r170, %r164;
	cvt.s64.s32 	%rd6, %r146;
	cvt.s64.s32 	%rd7, %r99;
	cvt.u64.u32 	%rd8, %r2;
	cvt.u64.u32 	%rd9, %r130;
	and.pred  	%p3, %p11, %p12;
	or.b32  	%r171, %r154, %r131;
	cvt.u64.u32 	%rd10, %r171;
	cvt.u64.u32 	%rd42, %r6;
	and.b64  	%rd43, %rd42, 31;
	or.b64  	%rd111, %rd43, 32;
	cvt.u64.u32 	%rd12, %r99;
	or.b32  	%r172, %r7, 32;
	mad.lo.s32 	%r173, %r100, %r172, %r552;
	cvt.u64.u32 	%rd110, %r173;
	mul.lo.s32 	%r174, %r100, %r99;
	cvt.u64.u32 	%rd14, %r174;
	shl.b32 	%r175, %r100, 5;
	cvt.u64.u32 	%rd15, %r175;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	or.b32  	%r48, %r171, 32;
	mov.f32 	%f226, 0f00000000;
	mov.b64 	%rd112, 0;
	shl.b32 	%r368, %r38, 2;
	shl.b32 	%r369, %r40, 2;
	shl.b32 	%r370, %r42, 2;
	shl.b32 	%r371, %r44, 2;
	shl.b32 	%r387, %r45, 2;
	shl.b32 	%r389, %r46, 2;
	shl.b32 	%r391, %r47, 2;
	mov.f32 	%f227, %f226;
	mov.f32 	%f228, %f226;
	mov.f32 	%f229, %f226;
	mov.f32 	%f230, %f226;
	mov.f32 	%f231, %f226;
	mov.f32 	%f232, %f226;
	mov.f32 	%f233, %f226;
	mov.f32 	%f234, %f226;
	mov.f32 	%f235, %f226;
	mov.f32 	%f236, %f226;
	mov.f32 	%f237, %f226;
	mov.f32 	%f238, %f226;
	mov.f32 	%f239, %f226;
	mov.f32 	%f240, %f226;
	mov.f32 	%f241, %f226;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s64 	%rd112, %rd112, 1;
	add.s64 	%rd111, %rd111, %rd12;
	add.s64 	%rd110, %rd110, %rd14;
	setp.ne.s64 	%p48, %rd112, %rd8;
	@%p48 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	setp.eq.s32 	%p19, %r20, 0;
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p18, %r13, %r98;
	setp.lt.s32 	%p17, %r12, %r98;
	setp.lt.s32 	%p16, %r11, %r98;
	setp.lt.s32 	%p15, %r10, %r98;
	setp.lt.s32 	%p14, %r9, %r98;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	shl.b64 	%rd49, %rd112, 2;
	add.s64 	%rd44, %rd1, %rd49;
	add.s64 	%rd45, %rd2, %rd49;
	add.s64 	%rd46, %rd3, %rd49;
	add.s64 	%rd47, %rd4, %rd49;
	add.s64 	%rd48, %rd5, %rd49;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r176, 0xffffffffffffffff;
	@%p14 ld.global.b32 { %r176 }, [ %rd44 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r177, 0xffffffffffffffff;
	@%p15 ld.global.b32 { %r177 }, [ %rd45 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r178, 0xffffffffffffffff;
	@%p16 ld.global.b32 { %r178 }, [ %rd46 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r179, 0xffffffffffffffff;
	@%p17 ld.global.b32 { %r179 }, [ %rd47 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r180, 0xffffffffffffffff;
	@%p18 ld.global.b32 { %r180 }, [ %rd48 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p26, %r180, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p31, %r180, %r97;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p32, %p26, %p31;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	bar.sync 	0;
	selp.u32 	%r184, 1, 0, %p32;
	mov.b32 	%r185, -1;
	redux.sync.or.b32 %r186, %r184, %r185;
	cvt.u16.u32 	%rs4, %r186;
	and.b16  	%rs1, %rs4, 1;
	// begin inline asm
	@%p19 st.shared.b8 [ %r181 + 0 ], %rs1;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p9 ld.shared.b8 %rs2, [ %r182 + 0 ];
	// end inline asm
	cvt.u32.u16 	%r187, %rs2;
	and.b16  	%rs5, %rs2, 1;
	setp.eq.b16 	%p33, %rs5, 1;
	and.b32  	%r188, %r187, 1;
	shfl.sync.bfly.b32	%r189, %r188, 2, 31, -1;
	and.b32  	%r190, %r189, 1;
	setp.eq.b32 	%p34, %r190, 1;
$L__tmp3:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p35, %p33, %p34;
$L__tmp4:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r191, 1, 0, %p35;
	shfl.sync.bfly.b32	%r192, %r191, 1, 31, -1;
	and.b32  	%r193, %r192, 1;
	setp.eq.b32 	%p36, %r193, 1;
$L__tmp5:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p37, %p35, %p36;
$L__tmp6:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u16 	%rs3, 1, 0, %p37;
	// begin inline asm
	@%p21 st.shared.b8 [ %r182 + 0 ], %rs3;
	// end inline asm
	bar.sync 	0;
	ld.shared.u8 	%rs6, [global_smem];
	and.b16  	%rs7, %rs6, 1;
	setp.eq.b16 	%p38, %rs7, 1;
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p39, %p38;
	@%p39 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.gt.s32 	%p22, %r176, -1;
	setp.gt.s32 	%p23, %r177, -1;
	setp.gt.s32 	%p24, %r178, -1;
	setp.gt.s32 	%p25, %r179, -1;
	setp.lt.s32 	%p27, %r176, %r97;
	setp.lt.s32 	%p28, %r177, %r97;
	setp.lt.s32 	%p29, %r178, %r97;
	setp.lt.s32 	%p30, %r179, %r97;
	and.pred  	%p4, %p22, %p27;
	and.pred  	%p5, %p23, %p28;
	and.pred  	%p6, %p24, %p29;
	and.pred  	%p7, %p25, %p30;
	setp.lt.s32 	%p40, %r23, 32;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	cvt.u32.u64 	%r204, %rd112;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r53, %r176, %r99;
	mul.lo.s32 	%r54, %r177, %r99;
	mul.lo.s32 	%r55, %r178, %r99;
	mul.lo.s32 	%r56, %r179, %r99;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r205, %r53, %r24;
	add.s32 	%r206, %r54, %r24;
	add.s32 	%r207, %r55, %r24;
	add.s32 	%r208, %r56, %r24;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd55, %r205, 4;
	add.s64 	%rd50, %rd32, %rd55;
	mul.wide.s32 	%rd56, %r206, 4;
	add.s64 	%rd51, %rd32, %rd56;
	mul.wide.s32 	%rd57, %r207, 4;
	add.s64 	%rd52, %rd32, %rd57;
	mul.wide.s32 	%rd58, %r208, 4;
	add.s64 	%rd53, %rd32, %rd58;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	mad.lo.s32 	%r209, %r99, %r204, %r7;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r210, %r209, %r100, %r27;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd59, %r210, 4;
	add.s64 	%rd54, %rd33, %rd59;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p41, %r209, %r26;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r211, 16, 0, %p2;
	selp.b32 	%r195, %r211, 0, %p4;
	// begin inline asm
	cp.async.cg.shared.global [ %r194 + 0 ], [ %rd50 + 0 ], 0x10, %r195;
	// end inline asm
	selp.b32 	%r197, %r211, 0, %p5;
	// begin inline asm
	cp.async.cg.shared.global [ %r196 + 0 ], [ %rd51 + 0 ], 0x10, %r197;
	// end inline asm
	selp.b32 	%r199, %r211, 0, %p6;
	// begin inline asm
	cp.async.cg.shared.global [ %r198 + 0 ], [ %rd52 + 0 ], 0x10, %r199;
	// end inline asm
	selp.b32 	%r201, %r211, 0, %p7;
	// begin inline asm
	cp.async.cg.shared.global [ %r200 + 0 ], [ %rd53 + 0 ], 0x10, %r201;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r212, 16, 0, %p3;
	selp.b32 	%r203, %r212, 0, %p41;
	// begin inline asm
	cp.async.cg.shared.global [ %r202 + 0 ], [ %rd54 + 0 ], 0x10, %r203;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p40 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r214, %r48, %r56;
	cvt.u64.u32 	%rd19, %r214;
	add.s32 	%r215, %r48, %r55;
	cvt.u64.u32 	%rd20, %r215;
	add.s32 	%r216, %r48, %r54;
	cvt.u64.u32 	%rd21, %r216;
	add.s32 	%r217, %r48, %r53;
	cvt.u64.u32 	%rd22, %r217;
	mov.b32 	%r547, -1;
	mov.b64 	%rd114, 0;
	mov.u64 	%rd113, %rd110;
	mov.u64 	%rd115, %rd114;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p43, %rd115, %rd6;
	add.s32 	%r364, %r547, 1;
	setp.gt.u32 	%p44, %r547, 2147483646;
	selp.b32 	%r547, %r364, 0, %p44;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r365, %r547, 14;
	add.s32 	%r367, %r546, %r365;
	add.s32 	%r222, %r367, %r368;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r258, %r259, %r260, %r261}, [%r222];
	// end inline asm
	add.s32 	%r227, %r367, %r369;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r282, %r283, %r284, %r285}, [%r227];
	// end inline asm
	add.s32 	%r232, %r367, %r370;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r306, %r307, %r308, %r309}, [%r232];
	// end inline asm
	add.s32 	%r237, %r367, %r371;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r330, %r331, %r332, %r333}, [%r237];
	// end inline asm
	add.s32 	%r372, %r34, %r37;
	shl.b32 	%r373, %r372, 2;
	add.s32 	%r374, %r367, %r373;
	add.s32 	%r242, %r374, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r270, %r271, %r272, %r273}, [%r242];
	// end inline asm
	add.s32 	%r375, %r39, %r37;
	shl.b32 	%r376, %r375, 2;
	add.s32 	%r377, %r367, %r376;
	add.s32 	%r247, %r377, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r294, %r295, %r296, %r297}, [%r247];
	// end inline asm
	add.s32 	%r378, %r41, %r37;
	shl.b32 	%r379, %r378, 2;
	add.s32 	%r380, %r367, %r379;
	add.s32 	%r252, %r380, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r318, %r319, %r320, %r321}, [%r252];
	// end inline asm
	add.s32 	%r381, %r43, %r37;
	shl.b32 	%r382, %r381, 2;
	add.s32 	%r383, %r367, %r382;
	add.s32 	%r257, %r383, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r342, %r343, %r344, %r345}, [%r257];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	shl.b32 	%r384, %r547, 12;
	add.s32 	%r385, %r546, %r384;
	add.s32 	%r386, %r385, 16384;
	add.s32 	%r388, %r386, %r387;
	add.s32 	%r390, %r388, %r389;
	ld.shared.u32 	%r262, [%r390];
	ld.shared.u32 	%r263, [%r390+512];
	ld.shared.u32 	%r286, [%r390+1024];
	ld.shared.u32 	%r287, [%r390+1536];
	ld.shared.u32 	%r310, [%r390+2048];
	ld.shared.u32 	%r311, [%r390+2560];
	ld.shared.u32 	%r334, [%r390+3072];
	ld.shared.u32 	%r335, [%r390+3584];
	add.s32 	%r392, %r386, %r391;
	add.s32 	%r393, %r392, %r389;
	ld.shared.u32 	%r268, [%r393];
	ld.shared.u32 	%r269, [%r393+512];
	ld.shared.u32 	%r292, [%r393+1024];
	ld.shared.u32 	%r293, [%r393+1536];
	ld.shared.u32 	%r316, [%r393+2048];
	ld.shared.u32 	%r317, [%r393+2560];
	ld.shared.u32 	%r340, [%r393+3072];
	ld.shared.u32 	%r341, [%r393+3584];
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f226, %f227, %f228, %f229 }, { %r258, %r259, %r260, %r261 }, { %r262, %r263 }, { %f226, %f227, %f228, %f229 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f230, %f231, %f232, %f233 }, { %r258, %r259, %r260, %r261 }, { %r268, %r269 }, { %f230, %f231, %f232, %f233 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f234, %f235, %f236, %f237 }, { %r270, %r271, %r272, %r273 }, { %r262, %r263 }, { %f234, %f235, %f236, %f237 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f238, %f239, %f240, %f241 }, { %r270, %r271, %r272, %r273 }, { %r268, %r269 }, { %f238, %f239, %f240, %f241 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f226, %f227, %f228, %f229 }, { %r282, %r283, %r284, %r285 }, { %r286, %r287 }, { %f226, %f227, %f228, %f229 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f230, %f231, %f232, %f233 }, { %r282, %r283, %r284, %r285 }, { %r292, %r293 }, { %f230, %f231, %f232, %f233 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f234, %f235, %f236, %f237 }, { %r294, %r295, %r296, %r297 }, { %r286, %r287 }, { %f234, %f235, %f236, %f237 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f238, %f239, %f240, %f241 }, { %r294, %r295, %r296, %r297 }, { %r292, %r293 }, { %f238, %f239, %f240, %f241 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f226, %f227, %f228, %f229 }, { %r306, %r307, %r308, %r309 }, { %r310, %r311 }, { %f226, %f227, %f228, %f229 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f230, %f231, %f232, %f233 }, { %r306, %r307, %r308, %r309 }, { %r316, %r317 }, { %f230, %f231, %f232, %f233 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f234, %f235, %f236, %f237 }, { %r318, %r319, %r320, %r321 }, { %r310, %r311 }, { %f234, %f235, %f236, %f237 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f238, %f239, %f240, %f241 }, { %r318, %r319, %r320, %r321 }, { %r316, %r317 }, { %f238, %f239, %f240, %f241 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f226, %f227, %f228, %f229 }, { %r330, %r331, %r332, %r333 }, { %r334, %r335 }, { %f226, %f227, %f228, %f229 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f230, %f231, %f232, %f233 }, { %r330, %r331, %r332, %r333 }, { %r340, %r341 }, { %f230, %f231, %f232, %f233 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f234, %f235, %f236, %f237 }, { %r342, %r343, %r344, %r345 }, { %r334, %r335 }, { %f234, %f235, %f236, %f237 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f238, %f239, %f240, %f241 }, { %r342, %r343, %r344, %r345 }, { %r340, %r341 }, { %f238, %f239, %f240, %f241 };
	// end inline asm
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd115, %rd115, 1;
	.loc	1 69 89                         // implicit_gemm_kernel.py:69:89
	add.s64 	%rd66, %rd22, %rd114;
	add.s64 	%rd67, %rd21, %rd114;
	add.s64 	%rd68, %rd20, %rd114;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd69, %rd19, %rd114;
	cvt.u32.u64 	%r394, %rd66;
	mul.wide.s32 	%rd70, %r394, 4;
	add.s64 	%rd61, %rd32, %rd70;
	cvt.u32.u64 	%r395, %rd67;
	mul.wide.s32 	%rd71, %r395, 4;
	add.s64 	%rd62, %rd32, %rd71;
	cvt.u32.u64 	%r396, %rd68;
	mul.wide.s32 	%rd72, %r396, 4;
	add.s64 	%rd63, %rd32, %rd72;
	cvt.u32.u64 	%r397, %rd69;
	mul.wide.s32 	%rd73, %r397, 4;
	add.s64 	%rd64, %rd32, %rd73;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd27, %rd114, 32;
	.loc	1 70 112                        // implicit_gemm_kernel.py:70:112
	add.s64 	%rd74, %rd27, %rd10;
	setp.lt.s64 	%p45, %rd74, %rd7;
	.loc	1 73 66                         // implicit_gemm_kernel.py:73:66
	add.s64 	%rd75, %rd111, %rd114;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s64 	%rd76, %rd10, %rd113;
	cvt.u32.u64 	%r398, %rd76;
	mul.wide.s32 	%rd77, %r398, 4;
	add.s64 	%rd65, %rd33, %rd77;
	cvt.u32.u64 	%r399, %rd75;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p46, %r399, %r26;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r400, 16, 0, %p45;
	selp.b32 	%r401, %r400, 0, %p4;
	selp.b32 	%r355, %r401, 0, %p43;
	// begin inline asm
	cp.async.cg.shared.global [ %r194 + 0 ], [ %rd61 + 0 ], 0x10, %r355;
	// end inline asm
	selp.b32 	%r402, %r400, 0, %p5;
	selp.b32 	%r357, %r402, 0, %p43;
	// begin inline asm
	cp.async.cg.shared.global [ %r196 + 0 ], [ %rd62 + 0 ], 0x10, %r357;
	// end inline asm
	selp.b32 	%r403, %r400, 0, %p6;
	selp.b32 	%r359, %r403, 0, %p43;
	// begin inline asm
	cp.async.cg.shared.global [ %r198 + 0 ], [ %rd63 + 0 ], 0x10, %r359;
	// end inline asm
	selp.b32 	%r404, %r400, 0, %p7;
	selp.b32 	%r361, %r404, 0, %p43;
	// begin inline asm
	cp.async.cg.shared.global [ %r200 + 0 ], [ %rd64 + 0 ], 0x10, %r361;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r405, 16, 0, %p46;
	selp.b32 	%r406, %r405, 0, %p11;
	selp.b32 	%r363, %r406, 0, %p43;
	// begin inline asm
	cp.async.cg.shared.global [ %r202 + 0 ], [ %rd65 + 0 ], 0x10, %r363;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd113, %rd113, %rd15;
	setp.ne.s64 	%p47, %rd9, %rd115;
	mov.u64 	%rd114, %rd27;
	@%p47 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_9:                              // %._crit_edge15.loopexit
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	mov.b32 	%r554, %f226;
	mov.b32 	%r555, %f227;
	mov.b32 	%r556, %f228;
	mov.b32 	%r557, %f229;
	mov.b32 	%r558, %f230;
	mov.b32 	%r559, %f231;
	mov.b32 	%r560, %f232;
	mov.b32 	%r561, %f233;
	mov.b32 	%r562, %f234;
	mov.b32 	%r563, %f235;
	mov.b32 	%r564, %f236;
	mov.b32 	%r565, %f237;
	mov.b32 	%r566, %f238;
	mov.b32 	%r567, %f239;
	mov.b32 	%r568, %f240;
	mov.b32 	%r569, %f241;
	bra.uni 	$L__BB0_10;
$L__BB0_1:                              // %.._crit_edge15_crit_edge
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	shr.u32 	%r553, %r3, 5;
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r552, %r1, 5;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	shr.u32 	%r551, %r3, 2;
	shr.u32 	%r550, %r4, 2;
	and.b32  	%r549, %r551, 48;
	mov.b32 	%r554, 0;
	mov.u32 	%r555, %r554;
	mov.u32 	%r556, %r554;
	mov.u32 	%r557, %r554;
	mov.u32 	%r558, %r554;
	mov.u32 	%r559, %r554;
	mov.u32 	%r560, %r554;
	mov.u32 	%r561, %r554;
	mov.u32 	%r562, %r554;
	mov.u32 	%r563, %r554;
	mov.u32 	%r564, %r554;
	mov.u32 	%r565, %r554;
	mov.u32 	%r566, %r554;
	mov.u32 	%r567, %r554;
	mov.u32 	%r568, %r554;
	mov.u32 	%r569, %r554;
$L__BB0_10:                             // %._crit_edge15
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r455, %r3, 31;
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	shr.u32 	%r456, %r5, 5;
	and.b32  	%r457, %r553, 2;
	or.b32  	%r458, %r456, %r457;
	and.b32  	%r459, %r553, 4;
	or.b32  	%r460, %r458, %r459;
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r461, %r460, %r8;
	or.b32  	%r462, %r461, 8;
	or.b32  	%r463, %r461, 16;
	or.b32  	%r464, %r461, 24;
	or.b32  	%r465, %r461, 32;
	or.b32  	%r466, %r461, 40;
	or.b32  	%r467, %r461, 48;
	or.b32  	%r468, %r461, 56;
	or.b32  	%r469, %r461, 64;
	or.b32  	%r470, %r461, 72;
	or.b32  	%r471, %r461, 80;
	or.b32  	%r472, %r461, 88;
	or.b32  	%r473, %r461, 96;
	or.b32  	%r474, %r461, 104;
	or.b32  	%r475, %r461, 112;
	or.b32  	%r476, %r461, 120;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r477, %r461, %r100;
	shl.b32 	%r478, %r100, 3;
	add.s32 	%r479, %r477, %r478;
	add.s32 	%r480, %r479, %r478;
	add.s32 	%r481, %r480, %r478;
	add.s32 	%r482, %r481, %r478;
	add.s32 	%r483, %r482, %r478;
	add.s32 	%r484, %r483, %r478;
	add.s32 	%r485, %r484, %r478;
	add.s32 	%r486, %r485, %r478;
	add.s32 	%r487, %r486, %r478;
	add.s32 	%r488, %r487, %r478;
	add.s32 	%r489, %r488, %r478;
	add.s32 	%r490, %r489, %r478;
	add.s32 	%r491, %r490, %r478;
	add.s32 	%r492, %r491, %r478;
	add.s32 	%r493, %r492, %r478;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r494, %r552, %r455;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r495, %r494, %r477;
	add.s32 	%r496, %r494, %r479;
	add.s32 	%r497, %r494, %r480;
	add.s32 	%r498, %r494, %r481;
	add.s32 	%r499, %r494, %r482;
	add.s32 	%r500, %r494, %r483;
	add.s32 	%r501, %r494, %r484;
	add.s32 	%r502, %r494, %r485;
	add.s32 	%r503, %r494, %r486;
	add.s32 	%r504, %r494, %r487;
	add.s32 	%r505, %r494, %r488;
	add.s32 	%r506, %r494, %r489;
	add.s32 	%r507, %r494, %r490;
	add.s32 	%r508, %r494, %r491;
	add.s32 	%r509, %r494, %r492;
	add.s32 	%r510, %r494, %r493;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd94, %r495, 4;
	add.s64 	%rd78, %rd34, %rd94;
	mul.wide.s32 	%rd95, %r496, 4;
	add.s64 	%rd79, %rd34, %rd95;
	mul.wide.s32 	%rd96, %r497, 4;
	add.s64 	%rd80, %rd34, %rd96;
	mul.wide.s32 	%rd97, %r498, 4;
	add.s64 	%rd81, %rd34, %rd97;
	mul.wide.s32 	%rd98, %r499, 4;
	add.s64 	%rd82, %rd34, %rd98;
	mul.wide.s32 	%rd99, %r500, 4;
	add.s64 	%rd83, %rd34, %rd99;
	mul.wide.s32 	%rd100, %r501, 4;
	add.s64 	%rd84, %rd34, %rd100;
	mul.wide.s32 	%rd101, %r502, 4;
	add.s64 	%rd85, %rd34, %rd101;
	mul.wide.s32 	%rd102, %r503, 4;
	add.s64 	%rd86, %rd34, %rd102;
	mul.wide.s32 	%rd103, %r504, 4;
	add.s64 	%rd87, %rd34, %rd103;
	mul.wide.s32 	%rd104, %r505, 4;
	add.s64 	%rd88, %rd34, %rd104;
	mul.wide.s32 	%rd105, %r506, 4;
	add.s64 	%rd89, %rd34, %rd105;
	mul.wide.s32 	%rd106, %r507, 4;
	add.s64 	%rd90, %rd34, %rd106;
	mul.wide.s32 	%rd107, %r508, 4;
	add.s64 	%rd91, %rd34, %rd107;
	mul.wide.s32 	%rd108, %r509, 4;
	add.s64 	%rd92, %rd34, %rd108;
	mul.wide.s32 	%rd109, %r510, 4;
	add.s64 	%rd93, %rd34, %rd109;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p81, %r461, %r98;
	setp.lt.s32 	%p82, %r462, %r98;
	setp.lt.s32 	%p83, %r463, %r98;
	setp.lt.s32 	%p84, %r464, %r98;
	setp.lt.s32 	%p85, %r465, %r98;
	setp.lt.s32 	%p86, %r466, %r98;
	setp.lt.s32 	%p87, %r467, %r98;
	setp.lt.s32 	%p88, %r468, %r98;
	setp.lt.s32 	%p89, %r469, %r98;
	setp.lt.s32 	%p90, %r470, %r98;
	setp.lt.s32 	%p91, %r471, %r98;
	setp.lt.s32 	%p92, %r472, %r98;
	setp.lt.s32 	%p93, %r473, %r98;
	setp.lt.s32 	%p94, %r474, %r98;
	setp.lt.s32 	%p95, %r475, %r98;
	setp.lt.s32 	%p96, %r476, %r98;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p97, %r494, %r100;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p65, %p81, %p97;
	and.pred  	%p66, %p82, %p97;
	and.pred  	%p67, %p83, %p97;
	and.pred  	%p68, %p84, %p97;
	and.pred  	%p69, %p85, %p97;
	and.pred  	%p70, %p86, %p97;
	and.pred  	%p71, %p87, %p97;
	and.pred  	%p72, %p88, %p97;
	and.pred  	%p73, %p89, %p97;
	and.pred  	%p74, %p90, %p97;
	and.pred  	%p75, %p91, %p97;
	and.pred  	%p76, %p92, %p97;
	and.pred  	%p77, %p93, %p97;
	and.pred  	%p78, %p94, %p97;
	and.pred  	%p79, %p95, %p97;
	and.pred  	%p80, %p96, %p97;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	bar.sync 	0;
	shl.b32 	%r511, %r3, 7;
	and.b32  	%r512, %r511, 384;
	and.b32  	%r513, %r551, 3;
	or.b32  	%r514, %r513, %r512;
	or.b32  	%r515, %r514, %r550;
	shl.b32 	%r516, %r5, 4;
	or.b32  	%r517, %r515, %r516;
	or.b32  	%r518, %r517, %r549;
	shl.b32 	%r519, %r3, 6;
	and.b32  	%r520, %r519, 1984;
	or.b32  	%r521, %r460, %r520;
	shr.u32 	%r522, %r517, 4;
	and.b32  	%r523, %r522, 60;
	add.s32 	%r525, %r546, %r523;
	shl.b32 	%r526, %r518, 2;
	add.s32 	%r407, %r525, %r526;
	mov.pred 	%p49, -1;
	// begin inline asm
	@%p49 st.shared.b32 [ %r407 + 0 ], %r554;
	// end inline asm
	or.b32  	%r527, %r517, 64;
	shr.u32 	%r528, %r527, 4;
	and.b32  	%r529, %r528, 60;
	add.s32 	%r530, %r546, %r529;
	add.s32 	%r531, %r530, %r526;
	add.s32 	%r409, %r531, 256;
	// begin inline asm
	@%p49 st.shared.b32 [ %r409 + 0 ], %r555;
	// end inline asm
	add.s32 	%r411, %r407, 32;
	// begin inline asm
	@%p49 st.shared.b32 [ %r411 + 0 ], %r556;
	// end inline asm
	add.s32 	%r413, %r531, 288;
	// begin inline asm
	@%p49 st.shared.b32 [ %r413 + 0 ], %r557;
	// end inline asm
	or.b32  	%r532, %r517, 1024;
	shr.u32 	%r533, %r532, 4;
	and.b32  	%r534, %r533, 124;
	add.s32 	%r535, %r546, %r534;
	add.s32 	%r536, %r535, %r526;
	add.s32 	%r415, %r536, 4096;
	// begin inline asm
	@%p49 st.shared.b32 [ %r415 + 0 ], %r558;
	// end inline asm
	or.b32  	%r537, %r517, 1088;
	shr.u32 	%r538, %r537, 4;
	and.b32  	%r539, %r538, 124;
	add.s32 	%r540, %r546, %r539;
	add.s32 	%r541, %r540, %r526;
	add.s32 	%r417, %r541, 4352;
	// begin inline asm
	@%p49 st.shared.b32 [ %r417 + 0 ], %r559;
	// end inline asm
	add.s32 	%r419, %r536, 4128;
	// begin inline asm
	@%p49 st.shared.b32 [ %r419 + 0 ], %r560;
	// end inline asm
	add.s32 	%r421, %r541, 4384;
	// begin inline asm
	@%p49 st.shared.b32 [ %r421 + 0 ], %r561;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r542, %r520, 4;
	add.s32 	%r543, %r546, %r542;
	shl.b32 	%r544, %r521, 2;
	add.s32 	%r545, %r543, %r544;
	ld.shared.u32 	%r439, [%r545];
	ld.shared.u32 	%r440, [%r545+32];
	ld.shared.u32 	%r441, [%r545+64];
	ld.shared.u32 	%r442, [%r545+96];
	ld.shared.u32 	%r443, [%r545+128];
	ld.shared.u32 	%r444, [%r545+160];
	ld.shared.u32 	%r445, [%r545+192];
	ld.shared.u32 	%r446, [%r545+224];
	bar.sync 	0;
	// begin inline asm
	@%p49 st.shared.b32 [ %r407 + 0 ], %r562;
	// end inline asm
	// begin inline asm
	@%p49 st.shared.b32 [ %r409 + 0 ], %r563;
	// end inline asm
	// begin inline asm
	@%p49 st.shared.b32 [ %r411 + 0 ], %r564;
	// end inline asm
	// begin inline asm
	@%p49 st.shared.b32 [ %r413 + 0 ], %r565;
	// end inline asm
	// begin inline asm
	@%p49 st.shared.b32 [ %r415 + 0 ], %r566;
	// end inline asm
	// begin inline asm
	@%p49 st.shared.b32 [ %r417 + 0 ], %r567;
	// end inline asm
	// begin inline asm
	@%p49 st.shared.b32 [ %r419 + 0 ], %r568;
	// end inline asm
	// begin inline asm
	@%p49 st.shared.b32 [ %r421 + 0 ], %r569;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r447, [%r545];
	ld.shared.u32 	%r448, [%r545+32];
	ld.shared.u32 	%r449, [%r545+64];
	ld.shared.u32 	%r450, [%r545+96];
	ld.shared.u32 	%r451, [%r545+128];
	ld.shared.u32 	%r452, [%r545+160];
	ld.shared.u32 	%r453, [%r545+192];
	ld.shared.u32 	%r454, [%r545+224];
	// begin inline asm
	@%p65 st.global.b32 [ %rd78 + 0 ], { %r439 };
	// end inline asm
	// begin inline asm
	@%p66 st.global.b32 [ %rd79 + 0 ], { %r440 };
	// end inline asm
	// begin inline asm
	@%p67 st.global.b32 [ %rd80 + 0 ], { %r441 };
	// end inline asm
	// begin inline asm
	@%p68 st.global.b32 [ %rd81 + 0 ], { %r442 };
	// end inline asm
	// begin inline asm
	@%p69 st.global.b32 [ %rd82 + 0 ], { %r443 };
	// end inline asm
	// begin inline asm
	@%p70 st.global.b32 [ %rd83 + 0 ], { %r444 };
	// end inline asm
	// begin inline asm
	@%p71 st.global.b32 [ %rd84 + 0 ], { %r445 };
	// end inline asm
	// begin inline asm
	@%p72 st.global.b32 [ %rd85 + 0 ], { %r446 };
	// end inline asm
	// begin inline asm
	@%p73 st.global.b32 [ %rd86 + 0 ], { %r447 };
	// end inline asm
	// begin inline asm
	@%p74 st.global.b32 [ %rd87 + 0 ], { %r448 };
	// end inline asm
	// begin inline asm
	@%p75 st.global.b32 [ %rd88 + 0 ], { %r449 };
	// end inline asm
	// begin inline asm
	@%p76 st.global.b32 [ %rd89 + 0 ], { %r450 };
	// end inline asm
	// begin inline asm
	@%p77 st.global.b32 [ %rd90 + 0 ], { %r451 };
	// end inline asm
	// begin inline asm
	@%p78 st.global.b32 [ %rd91 + 0 ], { %r452 };
	// end inline asm
	// begin inline asm
	@%p79 st.global.b32 [ %rd92 + 0 ], { %r453 };
	// end inline asm
	// begin inline asm
	@%p80 st.global.b32 [ %rd93 + 0 ], { %r454 };
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 174                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x98:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
