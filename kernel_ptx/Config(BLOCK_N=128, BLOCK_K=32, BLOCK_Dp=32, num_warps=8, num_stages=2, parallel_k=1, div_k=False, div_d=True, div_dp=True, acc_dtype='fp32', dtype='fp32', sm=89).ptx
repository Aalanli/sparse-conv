//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_89
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<94>;
	.reg .b16 	%rs<8>;
	.reg .b32 	%r<568>;
	.reg .f32 	%f<274>;
	.reg .b64 	%rd<116>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r99, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r97, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd34, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r100, %ctaid.x;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r101, %r97, 127;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r102, %r101, 31;
	shr.u32 	%r103, %r102, 25;
	add.s32 	%r104, %r101, %r103;
	shr.s32 	%r105, %r104, 7;
$L__tmp2:
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r1, %r100, %r105;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r107, %r1, %r105;
	sub.s32 	%r108, %r100, %r107;
	ld.param.u32 	%r109, [implicit_conv3d_kernel_param_8];
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r110, %r109, %r109;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r2, %r110, %r109;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r3, %tid.x;
	and.b32  	%r4, %r3, 16;
	and.b32  	%r5, %r3, 32;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r8, %r108, 7;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.gt.s32 	%p4, %r2, 0;
	mov.u32 	%r544, global_smem;
	@%p4 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph13
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r98, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r96, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd33, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd32, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd35, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	shr.u32 	%r6, %r3, 3;
	bfe.u32 	%r7, %r3, 3, 5;
	and.b32  	%r111, %r3, 127;
	or.b32  	%r9, %r8, %r7;
	or.b32  	%r10, %r9, 32;
	or.b32  	%r11, %r9, 64;
	or.b32  	%r12, %r9, 96;
	or.b32  	%r13, %r8, %r111;
	mul.lo.s32 	%r112, %r9, %r2;
	shl.b32 	%r113, %r2, 5;
	add.s32 	%r114, %r112, %r113;
	add.s32 	%r115, %r114, %r113;
	add.s32 	%r116, %r115, %r113;
	mul.lo.s32 	%r117, %r13, %r2;
	mul.wide.s32 	%rd36, %r112, 4;
	add.s64 	%rd1, %rd35, %rd36;
	mul.wide.s32 	%rd37, %r114, 4;
	add.s64 	%rd2, %rd35, %rd37;
	mul.wide.s32 	%rd38, %r115, 4;
	add.s64 	%rd3, %rd35, %rd38;
	mul.wide.s32 	%rd39, %r116, 4;
	add.s64 	%rd4, %rd35, %rd39;
	mul.wide.s32 	%rd40, %r117, 4;
	add.s64 	%rd5, %rd35, %rd40;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r119, %r3, 15;
	and.b32  	%r120, %r3, 4;
	and.b32  	%r121, %r3, 2;
	and.b32  	%r122, %r3, 1;
	shr.u32 	%r551, %r3, 5;
	bfe.u32 	%r123, %r3, 5, 2;
	and.b32  	%r20, %r3, 159;
	add.s32 	%r183, %r544, %r123;
	setp.lt.s32 	%p5, %r3, 4;
	add.s32 	%r184, %r544, %r3;
	and.b32  	%r125, %r3, 3;
	setp.eq.s32 	%p6, %r125, 0;
	and.pred  	%p17, %p5, %p6;
	add.s32 	%r23, %r98, 31;
	shr.s32 	%r126, %r23, 31;
	shr.u32 	%r127, %r126, 27;
	add.s32 	%r128, %r23, %r127;
	shr.s32 	%r129, %r128, 5;
	shl.b32 	%r130, %r122, 2;
	shl.b32 	%r131, %r121, 2;
	or.b32  	%r132, %r130, %r131;
	shl.b32 	%r133, %r120, 2;
	or.b32  	%r24, %r132, %r133;
	shl.b32 	%r550, %r1, 5;
	mul.lo.s32 	%r26, %r2, %r98;
	or.b32  	%r27, %r550, %r24;
	setp.lt.s32 	%p7, %r27, %r99;
	setp.gt.s32 	%p8, %r23, 31;
	setp.lt.s32 	%p9, %r24, %r98;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p2, %p9, %p8;
	shr.u32 	%r134, %r3, 1;
	and.b32  	%r135, %r134, 28;
	xor.b32  	%r136, %r24, %r135;
	shl.b32 	%r137, %r7, 5;
	or.b32  	%r138, %r136, %r137;
	shl.b32 	%r139, %r138, 2;
	add.s32 	%r196, %r544, %r139;
	add.s32 	%r198, %r196, 4096;
	add.s32 	%r200, %r196, 8192;
	add.s32 	%r202, %r196, 12288;
	and.b32  	%r140, %r3, 24;
	xor.b32  	%r141, %r24, %r140;
	or.b32  	%r142, %r141, %r137;
	shl.b32 	%r143, %r142, 2;
	add.s32 	%r144, %r544, %r143;
	add.s32 	%r204, %r144, 16384;
	add.s32 	%r145, %r129, -1;
	shr.u32 	%r548, %r4, 2;
	xor.b32  	%r34, %r24, %r548;
	shr.u32 	%r549, %r3, 2;
	and.b32  	%r547, %r549, 48;
	or.b32  	%r146, %r547, %r119;
	shl.b32 	%r37, %r146, 5;
	or.b32  	%r38, %r34, %r37;
	or.b32  	%r147, %r130, 8;
	xor.b32  	%r148, %r147, %r131;
	or.b32  	%r149, %r148, %r133;
	xor.b32  	%r39, %r149, %r548;
	or.b32  	%r40, %r39, %r37;
	or.b32  	%r150, %r132, 16;
	or.b32  	%r151, %r548, %r133;
	xor.b32  	%r41, %r151, %r150;
	or.b32  	%r42, %r41, %r37;
	or.b32  	%r152, %r130, 24;
	or.b32  	%r153, %r133, %r131;
	or.b32  	%r154, %r153, %r548;
	xor.b32  	%r43, %r154, %r152;
	or.b32  	%r44, %r43, %r37;
	shl.b32 	%r155, %r122, 3;
	shl.b32 	%r156, %r121, 3;
	bfe.u32 	%r157, %r3, 2, 1;
	and.b32  	%r158, %r549, 2;
	or.b32  	%r159, %r158, %r157;
	or.b32  	%r160, %r159, %r156;
	or.b32  	%r161, %r160, %r155;
	or.b32  	%r162, %r161, %r548;
	shr.u32 	%r163, %r5, 2;
	xor.b32  	%r164, %r162, %r163;
	shl.b32 	%r165, %r3, 5;
	and.b32  	%r166, %r165, 96;
	add.s32 	%r45, %r164, %r166;
	or.b32  	%r167, %r155, 16;
	xor.b32  	%r168, %r167, %r156;
	or.b32  	%r169, %r157, %r168;
	or.b32  	%r170, %r169, %r158;
	or.b32  	%r171, %r170, %r548;
	xor.b32  	%r172, %r171, %r163;
	add.s32 	%r46, %r172, %r166;
	cvt.s64.s32 	%rd6, %r145;
	cvt.s64.s32 	%rd7, %r98;
	cvt.u64.u32 	%rd8, %r2;
	cvt.u64.u32 	%rd9, %r129;
	and.pred  	%p3, %p7, %p8;
	or.b32  	%r173, %r153, %r130;
	cvt.u64.u32 	%rd10, %r173;
	cvt.u64.u32 	%rd42, %r6;
	and.b64  	%rd43, %rd42, 31;
	or.b64  	%rd111, %rd43, 32;
	cvt.u64.u32 	%rd12, %r98;
	or.b32  	%r174, %r7, 32;
	mad.lo.s32 	%r175, %r99, %r174, %r550;
	cvt.u64.u32 	%rd110, %r175;
	mul.lo.s32 	%r176, %r99, %r98;
	cvt.u64.u32 	%rd14, %r176;
	shl.b32 	%r177, %r99, 5;
	cvt.u64.u32 	%rd15, %r177;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	or.b32  	%r47, %r173, 32;
	mov.f32 	%f226, 0f00000000;
	mov.b64 	%rd112, 0;
	shl.b32 	%r371, %r38, 2;
	shl.b32 	%r372, %r40, 2;
	shl.b32 	%r373, %r42, 2;
	shl.b32 	%r374, %r44, 2;
	shl.b32 	%r389, %r45, 2;
	shl.b32 	%r391, %r46, 2;
	mov.f32 	%f227, %f226;
	mov.f32 	%f228, %f226;
	mov.f32 	%f229, %f226;
	mov.f32 	%f230, %f226;
	mov.f32 	%f231, %f226;
	mov.f32 	%f232, %f226;
	mov.f32 	%f233, %f226;
	mov.f32 	%f234, %f226;
	mov.f32 	%f235, %f226;
	mov.f32 	%f236, %f226;
	mov.f32 	%f237, %f226;
	mov.f32 	%f238, %f226;
	mov.f32 	%f239, %f226;
	mov.f32 	%f240, %f226;
	mov.f32 	%f241, %f226;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s64 	%rd112, %rd112, 1;
	add.s64 	%rd111, %rd111, %rd12;
	add.s64 	%rd110, %rd110, %rd14;
	setp.ne.s64 	%p44, %rd112, %rd8;
	@%p44 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	setp.eq.s32 	%p15, %r20, 0;
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p14, %r13, %r97;
	setp.lt.s32 	%p13, %r12, %r97;
	setp.lt.s32 	%p12, %r11, %r97;
	setp.lt.s32 	%p11, %r10, %r97;
	setp.lt.s32 	%p10, %r9, %r97;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	shl.b64 	%rd49, %rd112, 2;
	add.s64 	%rd44, %rd1, %rd49;
	add.s64 	%rd45, %rd2, %rd49;
	add.s64 	%rd46, %rd3, %rd49;
	add.s64 	%rd47, %rd4, %rd49;
	add.s64 	%rd48, %rd5, %rd49;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r178, 0xffffffffffffffff;
	@%p10 ld.global.b32 { %r178 }, [ %rd44 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r179, 0xffffffffffffffff;
	@%p11 ld.global.b32 { %r179 }, [ %rd45 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r180, 0xffffffffffffffff;
	@%p12 ld.global.b32 { %r180 }, [ %rd46 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r181, 0xffffffffffffffff;
	@%p13 ld.global.b32 { %r181 }, [ %rd47 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r182, 0xffffffffffffffff;
	@%p14 ld.global.b32 { %r182 }, [ %rd48 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p18, %r182, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p19, %r182, %r96;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p20, %p18, %p19;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	bar.sync 	0;
	selp.u32 	%r186, 1, 0, %p20;
	mov.b32 	%r187, -1;
	redux.sync.or.b32 %r188, %r186, %r187;
	cvt.u16.u32 	%rs4, %r188;
	and.b16  	%rs1, %rs4, 1;
	// begin inline asm
	@%p15 st.shared.b8 [ %r183 + 0 ], %rs1;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p5 ld.shared.b8 %rs2, [ %r184 + 0 ];
	// end inline asm
	cvt.u32.u16 	%r189, %rs2;
	and.b16  	%rs5, %rs2, 1;
	setp.eq.b16 	%p21, %rs5, 1;
	and.b32  	%r190, %r189, 1;
	shfl.sync.bfly.b32	%r191, %r190, 2, 31, -1;
	and.b32  	%r192, %r191, 1;
	setp.eq.b32 	%p22, %r192, 1;
$L__tmp3:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p23, %p21, %p22;
$L__tmp4:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r193, 1, 0, %p23;
	shfl.sync.bfly.b32	%r194, %r193, 1, 31, -1;
	and.b32  	%r195, %r194, 1;
	setp.eq.b32 	%p24, %r195, 1;
$L__tmp5:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p25, %p23, %p24;
$L__tmp6:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u16 	%rs3, 1, 0, %p25;
	// begin inline asm
	@%p17 st.shared.b8 [ %r184 + 0 ], %rs3;
	// end inline asm
	bar.sync 	0;
	ld.shared.u8 	%rs6, [global_smem];
	and.b16  	%rs7, %rs6, 1;
	setp.eq.b16 	%p26, %rs7, 1;
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p27, %p26;
	@%p27 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.lt.s32 	%p28, %r23, 32;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	cvt.u32.u64 	%r206, %rd112;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r52, %r178, %r98;
	mul.lo.s32 	%r53, %r179, %r98;
	mul.lo.s32 	%r54, %r180, %r98;
	mul.lo.s32 	%r55, %r181, %r98;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r207, %r52, %r24;
	add.s32 	%r208, %r53, %r24;
	add.s32 	%r209, %r54, %r24;
	add.s32 	%r210, %r55, %r24;
	.loc	1 70 43                         // implicit_gemm_kernel.py:70:43
	setp.ne.s32 	%p29, %r178, -1;
	setp.ne.s32 	%p30, %r179, -1;
	setp.ne.s32 	%p31, %r180, -1;
	setp.ne.s32 	%p32, %r181, -1;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd55, %r207, 4;
	add.s64 	%rd50, %rd32, %rd55;
	mul.wide.s32 	%rd56, %r208, 4;
	add.s64 	%rd51, %rd32, %rd56;
	mul.wide.s32 	%rd57, %r209, 4;
	add.s64 	%rd52, %rd32, %rd57;
	mul.wide.s32 	%rd58, %r210, 4;
	add.s64 	%rd53, %rd32, %rd58;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	mad.lo.s32 	%r211, %r98, %r206, %r7;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r212, %r211, %r99, %r27;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd59, %r212, 4;
	add.s64 	%rd54, %rd33, %rd59;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p33, %r211, %r26;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r213, 16, 0, %p2;
	selp.b32 	%r197, %r213, 0, %p29;
	// begin inline asm
	cp.async.cg.shared.global [ %r196 + 0 ], [ %rd50 + 0 ], 0x10, %r197;
	// end inline asm
	selp.b32 	%r199, %r213, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r198 + 0 ], [ %rd51 + 0 ], 0x10, %r199;
	// end inline asm
	selp.b32 	%r201, %r213, 0, %p31;
	// begin inline asm
	cp.async.cg.shared.global [ %r200 + 0 ], [ %rd52 + 0 ], 0x10, %r201;
	// end inline asm
	selp.b32 	%r203, %r213, 0, %p32;
	// begin inline asm
	cp.async.cg.shared.global [ %r202 + 0 ], [ %rd53 + 0 ], 0x10, %r203;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r214, 16, 0, %p3;
	selp.b32 	%r205, %r214, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r204 + 0 ], [ %rd54 + 0 ], 0x10, %r205;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p28 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r216, %r47, %r55;
	cvt.u64.u32 	%rd19, %r216;
	add.s32 	%r217, %r47, %r54;
	cvt.u64.u32 	%rd20, %r217;
	add.s32 	%r218, %r47, %r53;
	cvt.u64.u32 	%rd21, %r218;
	add.s32 	%r219, %r47, %r52;
	cvt.u64.u32 	%rd22, %r219;
	mov.b32 	%r545, -1;
	mov.b64 	%rd114, 0;
	mov.u64 	%rd113, %rd110;
	mov.u64 	%rd115, %rd114;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p39, %rd115, %rd6;
	add.s32 	%r366, %r545, 1;
	setp.gt.u32 	%p40, %r545, 2147483646;
	selp.b32 	%r545, %r366, 0, %p40;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r367, %r545, 12;
	shl.b32 	%r368, %r545, 14;
	add.s32 	%r370, %r544, %r368;
	add.s32 	%r224, %r370, %r371;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r260, %r261, %r262, %r263}, [%r224];
	// end inline asm
	add.s32 	%r229, %r370, %r372;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r284, %r285, %r286, %r287}, [%r229];
	// end inline asm
	add.s32 	%r234, %r370, %r373;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r308, %r309, %r310, %r311}, [%r234];
	// end inline asm
	add.s32 	%r239, %r370, %r374;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r332, %r333, %r334, %r335}, [%r239];
	// end inline asm
	add.s32 	%r375, %r34, %r37;
	shl.b32 	%r376, %r375, 2;
	add.s32 	%r377, %r370, %r376;
	add.s32 	%r244, %r377, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r272, %r273, %r274, %r275}, [%r244];
	// end inline asm
	add.s32 	%r378, %r39, %r37;
	shl.b32 	%r379, %r378, 2;
	add.s32 	%r380, %r370, %r379;
	add.s32 	%r249, %r380, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r296, %r297, %r298, %r299}, [%r249];
	// end inline asm
	add.s32 	%r381, %r41, %r37;
	shl.b32 	%r382, %r381, 2;
	add.s32 	%r383, %r370, %r382;
	add.s32 	%r254, %r383, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r320, %r321, %r322, %r323}, [%r254];
	// end inline asm
	add.s32 	%r384, %r43, %r37;
	shl.b32 	%r385, %r384, 2;
	add.s32 	%r386, %r370, %r385;
	add.s32 	%r259, %r386, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r344, %r345, %r346, %r347}, [%r259];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	add.s32 	%r387, %r544, %r367;
	add.s32 	%r388, %r387, 16384;
	add.s32 	%r390, %r388, %r389;
	ld.shared.u32 	%r264, [%r390];
	ld.shared.u32 	%r265, [%r390+512];
	ld.shared.u32 	%r288, [%r390+1024];
	ld.shared.u32 	%r289, [%r390+1536];
	ld.shared.u32 	%r312, [%r390+2048];
	ld.shared.u32 	%r313, [%r390+2560];
	ld.shared.u32 	%r336, [%r390+3072];
	ld.shared.u32 	%r337, [%r390+3584];
	add.s32 	%r392, %r388, %r391;
	ld.shared.u32 	%r270, [%r392];
	ld.shared.u32 	%r271, [%r392+512];
	ld.shared.u32 	%r294, [%r392+1024];
	ld.shared.u32 	%r295, [%r392+1536];
	ld.shared.u32 	%r318, [%r392+2048];
	ld.shared.u32 	%r319, [%r392+2560];
	ld.shared.u32 	%r342, [%r392+3072];
	ld.shared.u32 	%r343, [%r392+3584];
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f226, %f227, %f228, %f229 }, { %r260, %r261, %r262, %r263 }, { %r264, %r265 }, { %f226, %f227, %f228, %f229 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f230, %f231, %f232, %f233 }, { %r260, %r261, %r262, %r263 }, { %r270, %r271 }, { %f230, %f231, %f232, %f233 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f234, %f235, %f236, %f237 }, { %r272, %r273, %r274, %r275 }, { %r264, %r265 }, { %f234, %f235, %f236, %f237 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f238, %f239, %f240, %f241 }, { %r272, %r273, %r274, %r275 }, { %r270, %r271 }, { %f238, %f239, %f240, %f241 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f226, %f227, %f228, %f229 }, { %r284, %r285, %r286, %r287 }, { %r288, %r289 }, { %f226, %f227, %f228, %f229 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f230, %f231, %f232, %f233 }, { %r284, %r285, %r286, %r287 }, { %r294, %r295 }, { %f230, %f231, %f232, %f233 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f234, %f235, %f236, %f237 }, { %r296, %r297, %r298, %r299 }, { %r288, %r289 }, { %f234, %f235, %f236, %f237 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f238, %f239, %f240, %f241 }, { %r296, %r297, %r298, %r299 }, { %r294, %r295 }, { %f238, %f239, %f240, %f241 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f226, %f227, %f228, %f229 }, { %r308, %r309, %r310, %r311 }, { %r312, %r313 }, { %f226, %f227, %f228, %f229 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f230, %f231, %f232, %f233 }, { %r308, %r309, %r310, %r311 }, { %r318, %r319 }, { %f230, %f231, %f232, %f233 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f234, %f235, %f236, %f237 }, { %r320, %r321, %r322, %r323 }, { %r312, %r313 }, { %f234, %f235, %f236, %f237 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f238, %f239, %f240, %f241 }, { %r320, %r321, %r322, %r323 }, { %r318, %r319 }, { %f238, %f239, %f240, %f241 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f226, %f227, %f228, %f229 }, { %r332, %r333, %r334, %r335 }, { %r336, %r337 }, { %f226, %f227, %f228, %f229 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f230, %f231, %f232, %f233 }, { %r332, %r333, %r334, %r335 }, { %r342, %r343 }, { %f230, %f231, %f232, %f233 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f234, %f235, %f236, %f237 }, { %r344, %r345, %r346, %r347 }, { %r336, %r337 }, { %f234, %f235, %f236, %f237 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f238, %f239, %f240, %f241 }, { %r344, %r345, %r346, %r347 }, { %r342, %r343 }, { %f238, %f239, %f240, %f241 };
	// end inline asm
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd115, %rd115, 1;
	.loc	1 69 89                         // implicit_gemm_kernel.py:69:89
	add.s64 	%rd66, %rd22, %rd114;
	add.s64 	%rd67, %rd21, %rd114;
	add.s64 	%rd68, %rd20, %rd114;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd69, %rd19, %rd114;
	cvt.u32.u64 	%r393, %rd66;
	mul.wide.s32 	%rd70, %r393, 4;
	add.s64 	%rd61, %rd32, %rd70;
	cvt.u32.u64 	%r394, %rd67;
	mul.wide.s32 	%rd71, %r394, 4;
	add.s64 	%rd62, %rd32, %rd71;
	cvt.u32.u64 	%r395, %rd68;
	mul.wide.s32 	%rd72, %r395, 4;
	add.s64 	%rd63, %rd32, %rd72;
	cvt.u32.u64 	%r396, %rd69;
	mul.wide.s32 	%rd73, %r396, 4;
	add.s64 	%rd64, %rd32, %rd73;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd27, %rd114, 32;
	.loc	1 70 98                         // implicit_gemm_kernel.py:70:98
	add.s64 	%rd74, %rd27, %rd10;
	setp.lt.s64 	%p41, %rd74, %rd7;
	.loc	1 73 66                         // implicit_gemm_kernel.py:73:66
	add.s64 	%rd75, %rd111, %rd114;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s64 	%rd76, %rd10, %rd113;
	cvt.u32.u64 	%r397, %rd76;
	mul.wide.s32 	%rd77, %r397, 4;
	add.s64 	%rd65, %rd33, %rd77;
	cvt.u32.u64 	%r398, %rd75;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p42, %r398, %r26;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r399, 16, 0, %p41;
	selp.b32 	%r400, %r399, 0, %p29;
	selp.b32 	%r357, %r400, 0, %p39;
	// begin inline asm
	cp.async.cg.shared.global [ %r196 + 0 ], [ %rd61 + 0 ], 0x10, %r357;
	// end inline asm
	selp.b32 	%r401, %r399, 0, %p30;
	selp.b32 	%r359, %r401, 0, %p39;
	// begin inline asm
	cp.async.cg.shared.global [ %r198 + 0 ], [ %rd62 + 0 ], 0x10, %r359;
	// end inline asm
	selp.b32 	%r402, %r399, 0, %p31;
	selp.b32 	%r361, %r402, 0, %p39;
	// begin inline asm
	cp.async.cg.shared.global [ %r200 + 0 ], [ %rd63 + 0 ], 0x10, %r361;
	// end inline asm
	selp.b32 	%r403, %r399, 0, %p32;
	selp.b32 	%r363, %r403, 0, %p39;
	// begin inline asm
	cp.async.cg.shared.global [ %r202 + 0 ], [ %rd64 + 0 ], 0x10, %r363;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r404, 16, 0, %p42;
	selp.b32 	%r405, %r404, 0, %p7;
	selp.b32 	%r365, %r405, 0, %p39;
	// begin inline asm
	cp.async.cg.shared.global [ %r204 + 0 ], [ %rd65 + 0 ], 0x10, %r365;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd113, %rd113, %rd15;
	setp.ne.s64 	%p43, %rd9, %rd115;
	mov.u64 	%rd114, %rd27;
	@%p43 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_9:                              // %._crit_edge14.loopexit
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	mov.b32 	%r552, %f226;
	mov.b32 	%r553, %f227;
	mov.b32 	%r554, %f228;
	mov.b32 	%r555, %f229;
	mov.b32 	%r556, %f230;
	mov.b32 	%r557, %f231;
	mov.b32 	%r558, %f232;
	mov.b32 	%r559, %f233;
	mov.b32 	%r560, %f234;
	mov.b32 	%r561, %f235;
	mov.b32 	%r562, %f236;
	mov.b32 	%r563, %f237;
	mov.b32 	%r564, %f238;
	mov.b32 	%r565, %f239;
	mov.b32 	%r566, %f240;
	mov.b32 	%r567, %f241;
	bra.uni 	$L__BB0_10;
$L__BB0_1:                              // %.._crit_edge14_crit_edge
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	shr.u32 	%r551, %r3, 5;
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r550, %r1, 5;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	shr.u32 	%r549, %r3, 2;
	shr.u32 	%r548, %r4, 2;
	and.b32  	%r547, %r549, 48;
	mov.b32 	%r552, 0;
	mov.u32 	%r553, %r552;
	mov.u32 	%r554, %r552;
	mov.u32 	%r555, %r552;
	mov.u32 	%r556, %r552;
	mov.u32 	%r557, %r552;
	mov.u32 	%r558, %r552;
	mov.u32 	%r559, %r552;
	mov.u32 	%r560, %r552;
	mov.u32 	%r561, %r552;
	mov.u32 	%r562, %r552;
	mov.u32 	%r563, %r552;
	mov.u32 	%r564, %r552;
	mov.u32 	%r565, %r552;
	mov.u32 	%r566, %r552;
	mov.u32 	%r567, %r552;
$L__BB0_10:                             // %._crit_edge14
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r454, %r3, 31;
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	shr.u32 	%r455, %r5, 5;
	and.b32  	%r456, %r551, 2;
	or.b32  	%r457, %r455, %r456;
	and.b32  	%r458, %r551, 4;
	or.b32  	%r459, %r457, %r458;
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r460, %r459, %r8;
	or.b32  	%r461, %r460, 8;
	or.b32  	%r462, %r460, 16;
	or.b32  	%r463, %r460, 24;
	or.b32  	%r464, %r460, 32;
	or.b32  	%r465, %r460, 40;
	or.b32  	%r466, %r460, 48;
	or.b32  	%r467, %r460, 56;
	or.b32  	%r468, %r460, 64;
	or.b32  	%r469, %r460, 72;
	or.b32  	%r470, %r460, 80;
	or.b32  	%r471, %r460, 88;
	or.b32  	%r472, %r460, 96;
	or.b32  	%r473, %r460, 104;
	or.b32  	%r474, %r460, 112;
	or.b32  	%r475, %r460, 120;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r476, %r460, %r99;
	shl.b32 	%r477, %r99, 3;
	add.s32 	%r478, %r476, %r477;
	add.s32 	%r479, %r478, %r477;
	add.s32 	%r480, %r479, %r477;
	add.s32 	%r481, %r480, %r477;
	add.s32 	%r482, %r481, %r477;
	add.s32 	%r483, %r482, %r477;
	add.s32 	%r484, %r483, %r477;
	add.s32 	%r485, %r484, %r477;
	add.s32 	%r486, %r485, %r477;
	add.s32 	%r487, %r486, %r477;
	add.s32 	%r488, %r487, %r477;
	add.s32 	%r489, %r488, %r477;
	add.s32 	%r490, %r489, %r477;
	add.s32 	%r491, %r490, %r477;
	add.s32 	%r492, %r491, %r477;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r493, %r550, %r454;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r494, %r493, %r476;
	add.s32 	%r495, %r493, %r478;
	add.s32 	%r496, %r493, %r479;
	add.s32 	%r497, %r493, %r480;
	add.s32 	%r498, %r493, %r481;
	add.s32 	%r499, %r493, %r482;
	add.s32 	%r500, %r493, %r483;
	add.s32 	%r501, %r493, %r484;
	add.s32 	%r502, %r493, %r485;
	add.s32 	%r503, %r493, %r486;
	add.s32 	%r504, %r493, %r487;
	add.s32 	%r505, %r493, %r488;
	add.s32 	%r506, %r493, %r489;
	add.s32 	%r507, %r493, %r490;
	add.s32 	%r508, %r493, %r491;
	add.s32 	%r509, %r493, %r492;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd94, %r494, 4;
	add.s64 	%rd78, %rd34, %rd94;
	mul.wide.s32 	%rd95, %r495, 4;
	add.s64 	%rd79, %rd34, %rd95;
	mul.wide.s32 	%rd96, %r496, 4;
	add.s64 	%rd80, %rd34, %rd96;
	mul.wide.s32 	%rd97, %r497, 4;
	add.s64 	%rd81, %rd34, %rd97;
	mul.wide.s32 	%rd98, %r498, 4;
	add.s64 	%rd82, %rd34, %rd98;
	mul.wide.s32 	%rd99, %r499, 4;
	add.s64 	%rd83, %rd34, %rd99;
	mul.wide.s32 	%rd100, %r500, 4;
	add.s64 	%rd84, %rd34, %rd100;
	mul.wide.s32 	%rd101, %r501, 4;
	add.s64 	%rd85, %rd34, %rd101;
	mul.wide.s32 	%rd102, %r502, 4;
	add.s64 	%rd86, %rd34, %rd102;
	mul.wide.s32 	%rd103, %r503, 4;
	add.s64 	%rd87, %rd34, %rd103;
	mul.wide.s32 	%rd104, %r504, 4;
	add.s64 	%rd88, %rd34, %rd104;
	mul.wide.s32 	%rd105, %r505, 4;
	add.s64 	%rd89, %rd34, %rd105;
	mul.wide.s32 	%rd106, %r506, 4;
	add.s64 	%rd90, %rd34, %rd106;
	mul.wide.s32 	%rd107, %r507, 4;
	add.s64 	%rd91, %rd34, %rd107;
	mul.wide.s32 	%rd108, %r508, 4;
	add.s64 	%rd92, %rd34, %rd108;
	mul.wide.s32 	%rd109, %r509, 4;
	add.s64 	%rd93, %rd34, %rd109;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p77, %r460, %r97;
	setp.lt.s32 	%p78, %r461, %r97;
	setp.lt.s32 	%p79, %r462, %r97;
	setp.lt.s32 	%p80, %r463, %r97;
	setp.lt.s32 	%p81, %r464, %r97;
	setp.lt.s32 	%p82, %r465, %r97;
	setp.lt.s32 	%p83, %r466, %r97;
	setp.lt.s32 	%p84, %r467, %r97;
	setp.lt.s32 	%p85, %r468, %r97;
	setp.lt.s32 	%p86, %r469, %r97;
	setp.lt.s32 	%p87, %r470, %r97;
	setp.lt.s32 	%p88, %r471, %r97;
	setp.lt.s32 	%p89, %r472, %r97;
	setp.lt.s32 	%p90, %r473, %r97;
	setp.lt.s32 	%p91, %r474, %r97;
	setp.lt.s32 	%p92, %r475, %r97;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p93, %r493, %r99;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p61, %p77, %p93;
	and.pred  	%p62, %p78, %p93;
	and.pred  	%p63, %p79, %p93;
	and.pred  	%p64, %p80, %p93;
	and.pred  	%p65, %p81, %p93;
	and.pred  	%p66, %p82, %p93;
	and.pred  	%p67, %p83, %p93;
	and.pred  	%p68, %p84, %p93;
	and.pred  	%p69, %p85, %p93;
	and.pred  	%p70, %p86, %p93;
	and.pred  	%p71, %p87, %p93;
	and.pred  	%p72, %p88, %p93;
	and.pred  	%p73, %p89, %p93;
	and.pred  	%p74, %p90, %p93;
	and.pred  	%p75, %p91, %p93;
	and.pred  	%p76, %p92, %p93;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	bar.sync 	0;
	shl.b32 	%r510, %r3, 7;
	and.b32  	%r511, %r510, 384;
	and.b32  	%r512, %r549, 3;
	or.b32  	%r513, %r512, %r511;
	or.b32  	%r514, %r513, %r548;
	shl.b32 	%r515, %r5, 4;
	or.b32  	%r516, %r514, %r515;
	or.b32  	%r517, %r516, %r547;
	shl.b32 	%r518, %r3, 6;
	and.b32  	%r519, %r518, 1984;
	or.b32  	%r520, %r459, %r519;
	shr.u32 	%r521, %r516, 6;
	add.s32 	%r522, %r521, %r517;
	shl.b32 	%r523, %r522, 2;
	add.s32 	%r406, %r544, %r523;
	mov.pred 	%p45, -1;
	// begin inline asm
	@%p45 st.shared.b32 [ %r406 + 0 ], %r552;
	// end inline asm
	or.b32  	%r525, %r516, 64;
	shr.u32 	%r526, %r525, 6;
	add.s32 	%r527, %r526, %r517;
	shl.b32 	%r528, %r527, 2;
	add.s32 	%r529, %r544, %r528;
	add.s32 	%r408, %r529, 256;
	// begin inline asm
	@%p45 st.shared.b32 [ %r408 + 0 ], %r553;
	// end inline asm
	add.s32 	%r410, %r406, 32;
	// begin inline asm
	@%p45 st.shared.b32 [ %r410 + 0 ], %r554;
	// end inline asm
	add.s32 	%r412, %r529, 288;
	// begin inline asm
	@%p45 st.shared.b32 [ %r412 + 0 ], %r555;
	// end inline asm
	or.b32  	%r530, %r516, 1024;
	shr.u32 	%r531, %r530, 6;
	add.s32 	%r532, %r531, %r517;
	shl.b32 	%r533, %r532, 2;
	add.s32 	%r534, %r544, %r533;
	add.s32 	%r414, %r534, 4096;
	// begin inline asm
	@%p45 st.shared.b32 [ %r414 + 0 ], %r556;
	// end inline asm
	or.b32  	%r535, %r516, 1088;
	shr.u32 	%r536, %r535, 6;
	add.s32 	%r537, %r536, %r517;
	shl.b32 	%r538, %r537, 2;
	add.s32 	%r539, %r544, %r538;
	add.s32 	%r416, %r539, 4352;
	// begin inline asm
	@%p45 st.shared.b32 [ %r416 + 0 ], %r557;
	// end inline asm
	add.s32 	%r418, %r534, 4128;
	// begin inline asm
	@%p45 st.shared.b32 [ %r418 + 0 ], %r558;
	// end inline asm
	add.s32 	%r420, %r539, 4384;
	// begin inline asm
	@%p45 st.shared.b32 [ %r420 + 0 ], %r559;
	// end inline asm
	bar.sync 	0;
	bfe.u32 	%r540, %r518, 6, 5;
	add.s32 	%r541, %r520, %r540;
	shl.b32 	%r542, %r541, 2;
	add.s32 	%r543, %r544, %r542;
	ld.shared.u32 	%r438, [%r543];
	ld.shared.u32 	%r439, [%r543+32];
	ld.shared.u32 	%r440, [%r543+64];
	ld.shared.u32 	%r441, [%r543+96];
	ld.shared.u32 	%r442, [%r543+128];
	ld.shared.u32 	%r443, [%r543+160];
	ld.shared.u32 	%r444, [%r543+192];
	ld.shared.u32 	%r445, [%r543+224];
	bar.sync 	0;
	// begin inline asm
	@%p45 st.shared.b32 [ %r406 + 0 ], %r560;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r408 + 0 ], %r561;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r410 + 0 ], %r562;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r412 + 0 ], %r563;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r414 + 0 ], %r564;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r416 + 0 ], %r565;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r418 + 0 ], %r566;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r420 + 0 ], %r567;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r446, [%r543];
	ld.shared.u32 	%r447, [%r543+32];
	ld.shared.u32 	%r448, [%r543+64];
	ld.shared.u32 	%r449, [%r543+96];
	ld.shared.u32 	%r450, [%r543+128];
	ld.shared.u32 	%r451, [%r543+160];
	ld.shared.u32 	%r452, [%r543+192];
	ld.shared.u32 	%r453, [%r543+224];
	// begin inline asm
	@%p61 st.global.b32 [ %rd78 + 0 ], { %r438 };
	// end inline asm
	// begin inline asm
	@%p62 st.global.b32 [ %rd79 + 0 ], { %r439 };
	// end inline asm
	// begin inline asm
	@%p63 st.global.b32 [ %rd80 + 0 ], { %r440 };
	// end inline asm
	// begin inline asm
	@%p64 st.global.b32 [ %rd81 + 0 ], { %r441 };
	// end inline asm
	// begin inline asm
	@%p65 st.global.b32 [ %rd82 + 0 ], { %r442 };
	// end inline asm
	// begin inline asm
	@%p66 st.global.b32 [ %rd83 + 0 ], { %r443 };
	// end inline asm
	// begin inline asm
	@%p67 st.global.b32 [ %rd84 + 0 ], { %r444 };
	// end inline asm
	// begin inline asm
	@%p68 st.global.b32 [ %rd85 + 0 ], { %r445 };
	// end inline asm
	// begin inline asm
	@%p69 st.global.b32 [ %rd86 + 0 ], { %r446 };
	// end inline asm
	// begin inline asm
	@%p70 st.global.b32 [ %rd87 + 0 ], { %r447 };
	// end inline asm
	// begin inline asm
	@%p71 st.global.b32 [ %rd88 + 0 ], { %r448 };
	// end inline asm
	// begin inline asm
	@%p72 st.global.b32 [ %rd89 + 0 ], { %r449 };
	// end inline asm
	// begin inline asm
	@%p73 st.global.b32 [ %rd90 + 0 ], { %r450 };
	// end inline asm
	// begin inline asm
	@%p74 st.global.b32 [ %rd91 + 0 ], { %r451 };
	// end inline asm
	// begin inline asm
	@%p75 st.global.b32 [ %rd92 + 0 ], { %r452 };
	// end inline asm
	// begin inline asm
	@%p76 st.global.b32 [ %rd93 + 0 ], { %r453 };
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 174                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x98:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
