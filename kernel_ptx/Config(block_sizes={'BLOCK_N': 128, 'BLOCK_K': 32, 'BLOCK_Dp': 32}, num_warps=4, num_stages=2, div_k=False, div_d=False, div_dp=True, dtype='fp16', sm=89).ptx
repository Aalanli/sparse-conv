//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_89
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<193>;
	.reg .b16 	%rs<522>;
	.reg .b32 	%r<674>;
	.reg .b64 	%rd<232>;
	.loc	1 25 0                          // implicit_gemm_kernel.py:25:0
$L__func_begin0:
	.loc	1 25 0                          // implicit_gemm_kernel.py:25:0

// %bb.0:
	ld.param.u32 	%r117, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r115, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd54, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 40 24                         // implicit_gemm_kernel.py:40:24
	mov.u32 	%r118, %ctaid.x;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r119, %r115, 127;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r120, %r119, 31;
	shr.u32 	%r121, %r120, 25;
	add.s32 	%r122, %r119, %r121;
	shr.s32 	%r123, %r122, 7;
$L__tmp2:
	.loc	1 44 20                         // implicit_gemm_kernel.py:44:20
	div.s32 	%r1, %r118, %r123;
	.loc	1 43 18                         // implicit_gemm_kernel.py:43:18
	mul.lo.s32 	%r125, %r1, %r123;
	sub.s32 	%r126, %r118, %r125;
	ld.param.u32 	%r127, [implicit_conv3d_kernel_param_8];
	.loc	1 46 19                         // implicit_gemm_kernel.py:46:19
	mul.lo.s32 	%r128, %r127, %r127;
	.loc	1 46 23                         // implicit_gemm_kernel.py:46:23
	mul.lo.s32 	%r2, %r128, %r127;
	.loc	1 49 38                         // implicit_gemm_kernel.py:49:38
	mov.u32 	%r3, %tid.x;
	and.b32  	%r4, %r3, 31;
	and.b32  	%r5, %r3, 16;
	and.b32  	%r6, %r3, 64;
	.loc	1 49 57                         // implicit_gemm_kernel.py:49:57
	shl.b32 	%r8, %r126, 7;
	.loc	1 51 19                         // implicit_gemm_kernel.py:51:19
	setp.gt.s32 	%p3, %r2, 0;
	mov.u32 	%r666, global_smem;
	@%p3 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph15
	.loc	1 0 19                          // implicit_gemm_kernel.py:0:19
	ld.param.u32 	%r116, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r114, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd53, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd52, [implicit_conv3d_kernel_param_1];
	ld.param.u64 	%rd51, [implicit_conv3d_kernel_param_0];
	.loc	1 49 0                          // implicit_gemm_kernel.py:49:0
	and.b32  	%r7, %r3, 127;
	or.b32  	%r9, %r8, %r7;
	.loc	1 49 68                         // implicit_gemm_kernel.py:49:68
	mul.lo.s32 	%r130, %r9, %r2;
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mul.wide.s32 	%rd56, %r130, 4;
	add.s64 	%rd229, %rd52, %rd56;
	.loc	1 49 38                         // implicit_gemm_kernel.py:49:38
	and.b32  	%r131, %r3, 15;
	shr.u32 	%r673, %r3, 5;
	bfe.u32 	%r132, %r3, 5, 2;
	shl.b32 	%r133, %r7, 2;
	add.s32 	%r180, %r666, %r133;
	shl.b32 	%r135, %r132, 2;
	add.s32 	%r16, %r666, %r135;
	add.s32 	%r182, %r666, %r132;
	setp.lt.s32 	%p4, %r3, 4;
	add.s32 	%r183, %r666, %r3;
	and.b32  	%r136, %r3, 3;
	setp.eq.s32 	%p5, %r136, 0;
	and.pred  	%p12, %p4, %p5;
	add.s32 	%r19, %r116, 31;
	shr.s32 	%r137, %r19, 31;
	shr.u32 	%r138, %r137, 27;
	add.s32 	%r139, %r19, %r138;
	shr.s32 	%r140, %r139, 5;
	shl.b32 	%r141, %r3, 3;
	and.b32  	%r142, %r141, 24;
	shr.u32 	%r671, %r3, 2;
	bfe.u32 	%r21, %r3, 2, 5;
	shl.b32 	%r672, %r1, 5;
	mul.lo.s32 	%r23, %r2, %r116;
	or.b32  	%r24, %r672, %r142;
	setp.lt.s32 	%p6, %r24, %r117;
	setp.gt.s32 	%p7, %r19, 31;
	xor.b32  	%r143, %r141, %r3;
	and.b32  	%r144, %r143, 24;
	shl.b32 	%r145, %r144, 1;
	shl.b32 	%r146, %r21, 6;
	or.b32  	%r147, %r146, %r145;
	add.s32 	%r148, %r666, %r147;
	add.s32 	%r195, %r148, 8192;
	add.s32 	%r149, %r140, -1;
	shr.u32 	%r150, %r6, 3;
	xor.b32  	%r151, %r150, %r4;
	shl.b32 	%r152, %r132, 5;
	or.b32  	%r153, %r151, %r152;
	shl.b32 	%r154, %r153, 1;
	add.s32 	%r26, %r666, %r154;
	or.b32  	%r155, %r131, 16;
	xor.b32  	%r156, %r155, %r5;
	xor.b32  	%r157, %r156, %r150;
	or.b32  	%r158, %r157, %r152;
	shl.b32 	%r159, %r158, 1;
	add.s32 	%r27, %r666, %r159;
	shl.b32 	%r160, %r3, 2;
	and.b32  	%r161, %r160, 8;
	and.b32  	%r162, %r160, 16;
	and.b32  	%r163, %r160, 24;
	shr.u32 	%r164, %r5, 1;
	xor.b32  	%r165, %r163, %r164;
	shr.u32 	%r166, %r3, 1;
	and.b32  	%r670, %r166, 48;
	or.b32  	%r167, %r670, %r131;
	shl.b32 	%r168, %r167, 5;
	or.b32  	%r169, %r168, %r165;
	shl.b32 	%r170, %r169, 1;
	add.s32 	%r238, %r666, %r170;
	or.b32  	%r171, %r161, 16;
	xor.b32  	%r172, %r171, %r162;
	xor.b32  	%r173, %r172, %r164;
	or.b32  	%r174, %r173, %r168;
	shl.b32 	%r175, %r174, 1;
	add.s32 	%r243, %r666, %r175;
	add.s32 	%r248, %r238, 4096;
	add.s32 	%r253, %r243, 4096;
	shl.b32 	%r176, %r4, 5;
	or.b32  	%r33, %r163, %r176;
	xor.b32  	%r34, %r33, 8;
	or.b32  	%r35, %r172, %r176;
	xor.b32  	%r36, %r33, 24;
	.loc	1 51 19                         // implicit_gemm_kernel.py:51:19
	cvt.u64.u32 	%rd2, %r4;
	cvt.s64.s32 	%rd3, %r116;
	cvt.s64.s32 	%rd4, %r149;
	cvt.u64.u32 	%rd5, %r2;
	cvt.u64.u32 	%rd6, %r140;
	and.pred  	%p2, %p6, %p7;
	cvt.u64.u32 	%rd57, %r671;
	and.b64  	%rd58, %rd57, 31;
	or.b64  	%rd227, %rd58, 32;
	cvt.u64.u32 	%rd8, %r116;
	or.b32  	%r177, %r21, 32;
	mad.lo.s32 	%r178, %r117, %r177, %r672;
	add.s32 	%r667, %r178, %r142;
	mul.lo.s32 	%r38, %r117, %r116;
	shl.b32 	%r39, %r117, 5;
	mov.b16 	%rs426, 0x0000;
	mov.b64 	%rd228, 0;
	setp.eq.s32 	%p10, %r4, 0;
	setp.lt.s32 	%p8, %r9, %r115;
	shl.b32 	%r474, %r34, 1;
	shl.b32 	%r475, %r35, 1;
	shl.b32 	%r476, %r36, 1;
	mov.u16 	%rs427, %rs426;
	mov.u16 	%rs428, %rs426;
	mov.u16 	%rs429, %rs426;
	mov.u16 	%rs430, %rs426;
	mov.u16 	%rs431, %rs426;
	mov.u16 	%rs432, %rs426;
	mov.u16 	%rs433, %rs426;
	mov.u16 	%rs434, %rs426;
	mov.u16 	%rs435, %rs426;
	mov.u16 	%rs436, %rs426;
	mov.u16 	%rs437, %rs426;
	mov.u16 	%rs438, %rs426;
	mov.u16 	%rs439, %rs426;
	mov.u16 	%rs440, %rs426;
	mov.u16 	%rs441, %rs426;
	mov.u16 	%rs442, %rs426;
	mov.u16 	%rs443, %rs426;
	mov.u16 	%rs444, %rs426;
	mov.u16 	%rs445, %rs426;
	mov.u16 	%rs446, %rs426;
	mov.u16 	%rs447, %rs426;
	mov.u16 	%rs448, %rs426;
	mov.u16 	%rs449, %rs426;
	mov.u16 	%rs450, %rs426;
	mov.u16 	%rs451, %rs426;
	mov.u16 	%rs452, %rs426;
	mov.u16 	%rs453, %rs426;
	mov.u16 	%rs454, %rs426;
	mov.u16 	%rs455, %rs426;
	mov.u16 	%rs456, %rs426;
	mov.u16 	%rs457, %rs426;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 56 28                         // implicit_gemm_kernel.py:56:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 75 19                         // implicit_gemm_kernel.py:75:19
	add.s64 	%rd229, %rd229, 4;
	.loc	1 51 19                         // implicit_gemm_kernel.py:51:19
	add.s64 	%rd228, %rd228, 1;
	add.s64 	%rd227, %rd227, %rd8;
	add.s32 	%r667, %r667, %r38;
	setp.ne.s64 	%p95, %rd228, %rd5;
	@%p95 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 53 23                         // implicit_gemm_kernel.py:53:23
	// begin inline asm
	mov.u32 %r181, 0xffffffffffffffff;
	@%p8 ld.global.b32 { %r181 }, [ %rd229 + 0 ];
	// end inline asm
	.loc	1 59 56                         // implicit_gemm_kernel.py:59:56
	bar.sync 	0;
	mov.pred 	%p9, -1;
	// begin inline asm
	@%p9 st.shared.b32 [ %r180 + 0 ], %r181;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r41, [%r16];
	ld.shared.u32 	%r42, [%r16+16];
	ld.shared.u32 	%r43, [%r16+32];
	ld.shared.u32 	%r44, [%r16+48];
	ld.shared.u32 	%r45, [%r16+64];
	ld.shared.u32 	%r46, [%r16+80];
	ld.shared.u32 	%r47, [%r16+96];
	ld.shared.u32 	%r48, [%r16+112];
	ld.shared.u32 	%r49, [%r16+128];
	ld.shared.u32 	%r50, [%r16+144];
	ld.shared.u32 	%r51, [%r16+160];
	ld.shared.u32 	%r52, [%r16+176];
	ld.shared.u32 	%r53, [%r16+192];
	ld.shared.u32 	%r54, [%r16+208];
	ld.shared.u32 	%r55, [%r16+224];
	ld.shared.u32 	%r56, [%r16+240];
	ld.shared.u32 	%r57, [%r16+256];
	ld.shared.u32 	%r58, [%r16+272];
	ld.shared.u32 	%r59, [%r16+288];
	ld.shared.u32 	%r60, [%r16+304];
	ld.shared.u32 	%r61, [%r16+320];
	ld.shared.u32 	%r62, [%r16+336];
	ld.shared.u32 	%r63, [%r16+352];
	ld.shared.u32 	%r64, [%r16+368];
	ld.shared.u32 	%r65, [%r16+384];
	ld.shared.u32 	%r66, [%r16+400];
	ld.shared.u32 	%r67, [%r16+416];
	ld.shared.u32 	%r68, [%r16+432];
	ld.shared.u32 	%r69, [%r16+448];
	ld.shared.u32 	%r70, [%r16+464];
	ld.shared.u32 	%r71, [%r16+480];
	ld.shared.u32 	%r72, [%r16+496];
	.loc	1 55 27                         // implicit_gemm_kernel.py:55:27
	setp.gt.s32 	%p13, %r181, -1;
	.loc	1 55 43                         // implicit_gemm_kernel.py:55:43
	setp.lt.s32 	%p14, %r181, %r114;
	.loc	1 55 36                         // implicit_gemm_kernel.py:55:36
	and.pred  	%p15, %p13, %p14;
	.loc	1 55 50                         // implicit_gemm_kernel.py:55:50
	bar.sync 	0;
	selp.u32 	%r185, 1, 0, %p15;
	mov.b32 	%r186, -1;
	redux.sync.or.b32 %r187, %r185, %r186;
	cvt.u16.u32 	%rs230, %r187;
	and.b16  	%rs227, %rs230, 1;
	// begin inline asm
	@%p10 st.shared.b8 [ %r182 + 0 ], %rs227;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p4 ld.shared.b8 %rs228, [ %r183 + 0 ];
	// end inline asm
	cvt.u32.u16 	%r188, %rs228;
	and.b16  	%rs231, %rs228, 1;
	setp.eq.b16 	%p16, %rs231, 1;
	and.b32  	%r189, %r188, 1;
	shfl.sync.bfly.b32	%r190, %r189, 2, 31, -1;
	and.b32  	%r191, %r190, 1;
	setp.eq.b32 	%p17, %r191, 1;
$L__tmp3:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p18, %p16, %p17;
$L__tmp4:
	.loc	1 55 50                         // implicit_gemm_kernel.py:55:50
	selp.u32 	%r192, 1, 0, %p18;
	shfl.sync.bfly.b32	%r193, %r192, 1, 31, -1;
	and.b32  	%r194, %r193, 1;
	setp.eq.b32 	%p19, %r194, 1;
$L__tmp5:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p20, %p18, %p19;
$L__tmp6:
	.loc	1 55 50                         // implicit_gemm_kernel.py:55:50
	selp.u16 	%rs229, 1, 0, %p20;
	// begin inline asm
	@%p12 st.shared.b8 [ %r183 + 0 ], %rs229;
	// end inline asm
	bar.sync 	0;
	ld.shared.u8 	%rs232, [global_smem];
	and.b16  	%rs233, %rs232, 1;
	setp.eq.b16 	%p21, %rs233, 1;
	.loc	1 55 11                         // implicit_gemm_kernel.py:55:11
	not.pred 	%p22, %p21;
	@%p22 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.lt.s32 	%p23, %r19, 32;
	.loc	1 57 31                         // implicit_gemm_kernel.py:57:31
	cvt.u32.u64 	%r197, %rd228;
	.loc	1 63 54                         // implicit_gemm_kernel.py:63:54
	mad.lo.s32 	%r198, %r116, %r197, %r21;
	.loc	1 65 22                         // implicit_gemm_kernel.py:65:22
	mad.lo.s32 	%r199, %r198, %r117, %r24;
	.loc	1 63 20                         // implicit_gemm_kernel.py:63:20
	mul.wide.s32 	%rd61, %r199, 2;
	add.s64 	%rd60, %rd53, %rd61;
	.loc	1 67 72                         // implicit_gemm_kernel.py:67:72
	setp.lt.s32 	%p24, %r198, %r23;
	.loc	1 72 36                         // implicit_gemm_kernel.py:72:36
	selp.b32 	%r200, 16, 0, %p2;
	selp.b32 	%r196, %r200, 0, %p24;
	// begin inline asm
	cp.async.cg.shared.global [ %r195 + 0 ], [ %rd60 + 0 ], 0x10, %r196;
	// end inline asm
	cp.async.commit_group;
	.loc	1 56 28                         // implicit_gemm_kernel.py:56:28
	@%p23 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 0                           // implicit_gemm_kernel.py:0:0
	mul.lo.s32 	%r73, %r41, %r116;
	mul.lo.s32 	%r74, %r42, %r116;
	mul.lo.s32 	%r75, %r43, %r116;
	mul.lo.s32 	%r76, %r44, %r116;
	mul.lo.s32 	%r77, %r45, %r116;
	mul.lo.s32 	%r78, %r46, %r116;
	mul.lo.s32 	%r79, %r47, %r116;
	mul.lo.s32 	%r80, %r48, %r116;
	mul.lo.s32 	%r81, %r49, %r116;
	mul.lo.s32 	%r82, %r50, %r116;
	mul.lo.s32 	%r83, %r51, %r116;
	mul.lo.s32 	%r84, %r52, %r116;
	mul.lo.s32 	%r85, %r53, %r116;
	mul.lo.s32 	%r86, %r54, %r116;
	mul.lo.s32 	%r87, %r55, %r116;
	mul.lo.s32 	%r88, %r56, %r116;
	mul.lo.s32 	%r89, %r57, %r116;
	mul.lo.s32 	%r90, %r58, %r116;
	mul.lo.s32 	%r91, %r59, %r116;
	mul.lo.s32 	%r92, %r60, %r116;
	mul.lo.s32 	%r93, %r61, %r116;
	mul.lo.s32 	%r94, %r62, %r116;
	mul.lo.s32 	%r95, %r63, %r116;
	mul.lo.s32 	%r96, %r64, %r116;
	mul.lo.s32 	%r97, %r65, %r116;
	mul.lo.s32 	%r98, %r66, %r116;
	mul.lo.s32 	%r99, %r67, %r116;
	mul.lo.s32 	%r100, %r68, %r116;
	mul.lo.s32 	%r101, %r69, %r116;
	mul.lo.s32 	%r102, %r70, %r116;
	mul.lo.s32 	%r103, %r71, %r116;
	mul.lo.s32 	%r104, %r72, %r116;
	.loc	1 56 28                         // implicit_gemm_kernel.py:56:28
	add.s32 	%r202, %r4, %r104;
	cvt.u64.u32 	%rd12, %r202;
	add.s32 	%r203, %r4, %r103;
	cvt.u64.u32 	%rd13, %r203;
	add.s32 	%r204, %r4, %r102;
	cvt.u64.u32 	%rd14, %r204;
	add.s32 	%r205, %r4, %r101;
	cvt.u64.u32 	%rd15, %r205;
	add.s32 	%r206, %r4, %r100;
	cvt.u64.u32 	%rd16, %r206;
	add.s32 	%r207, %r4, %r99;
	cvt.u64.u32 	%rd17, %r207;
	add.s32 	%r208, %r4, %r98;
	cvt.u64.u32 	%rd18, %r208;
	add.s32 	%r209, %r4, %r97;
	cvt.u64.u32 	%rd19, %r209;
	add.s32 	%r210, %r4, %r96;
	cvt.u64.u32 	%rd20, %r210;
	add.s32 	%r211, %r4, %r95;
	cvt.u64.u32 	%rd21, %r211;
	add.s32 	%r212, %r4, %r94;
	cvt.u64.u32 	%rd22, %r212;
	add.s32 	%r213, %r4, %r93;
	cvt.u64.u32 	%rd23, %r213;
	add.s32 	%r214, %r4, %r92;
	cvt.u64.u32 	%rd24, %r214;
	add.s32 	%r215, %r4, %r91;
	cvt.u64.u32 	%rd25, %r215;
	add.s32 	%r216, %r4, %r90;
	cvt.u64.u32 	%rd26, %r216;
	add.s32 	%r217, %r4, %r89;
	cvt.u64.u32 	%rd27, %r217;
	add.s32 	%r218, %r4, %r88;
	cvt.u64.u32 	%rd28, %r218;
	add.s32 	%r219, %r4, %r87;
	cvt.u64.u32 	%rd29, %r219;
	add.s32 	%r220, %r4, %r86;
	cvt.u64.u32 	%rd30, %r220;
	add.s32 	%r221, %r4, %r85;
	cvt.u64.u32 	%rd31, %r221;
	add.s32 	%r222, %r4, %r84;
	cvt.u64.u32 	%rd32, %r222;
	add.s32 	%r223, %r4, %r83;
	cvt.u64.u32 	%rd33, %r223;
	add.s32 	%r224, %r4, %r82;
	cvt.u64.u32 	%rd34, %r224;
	add.s32 	%r225, %r4, %r81;
	cvt.u64.u32 	%rd35, %r225;
	add.s32 	%r226, %r4, %r80;
	cvt.u64.u32 	%rd36, %r226;
	add.s32 	%r227, %r4, %r79;
	cvt.u64.u32 	%rd37, %r227;
	add.s32 	%r228, %r4, %r78;
	cvt.u64.u32 	%rd38, %r228;
	add.s32 	%r229, %r4, %r77;
	cvt.u64.u32 	%rd39, %r229;
	add.s32 	%r230, %r4, %r76;
	cvt.u64.u32 	%rd40, %r230;
	add.s32 	%r231, %r4, %r75;
	cvt.u64.u32 	%rd41, %r231;
	add.s32 	%r232, %r4, %r74;
	cvt.u64.u32 	%rd42, %r232;
	add.s32 	%r233, %r4, %r73;
	cvt.u64.u32 	%rd43, %r233;
	mov.b32 	%r669, -1;
	mov.b64 	%rd230, 0;
	mov.u32 	%r668, %r667;
	mov.u64 	%rd231, %rd230;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.loc	1 60 43                         // implicit_gemm_kernel.py:60:43
	setp.ne.s32 	%p57, %r72, -1;
	setp.ne.s32 	%p58, %r71, -1;
	setp.ne.s32 	%p59, %r70, -1;
	setp.ne.s32 	%p60, %r69, -1;
	setp.ne.s32 	%p61, %r68, -1;
	setp.ne.s32 	%p62, %r67, -1;
	setp.ne.s32 	%p63, %r66, -1;
	setp.ne.s32 	%p64, %r65, -1;
	setp.ne.s32 	%p65, %r64, -1;
	setp.ne.s32 	%p66, %r63, -1;
	setp.ne.s32 	%p67, %r62, -1;
	setp.ne.s32 	%p68, %r61, -1;
	setp.ne.s32 	%p69, %r60, -1;
	setp.ne.s32 	%p70, %r59, -1;
	setp.ne.s32 	%p71, %r58, -1;
	setp.ne.s32 	%p72, %r57, -1;
	setp.ne.s32 	%p73, %r56, -1;
	setp.ne.s32 	%p74, %r55, -1;
	setp.ne.s32 	%p75, %r54, -1;
	setp.ne.s32 	%p76, %r53, -1;
	setp.ne.s32 	%p77, %r52, -1;
	setp.ne.s32 	%p78, %r51, -1;
	setp.ne.s32 	%p79, %r50, -1;
	setp.ne.s32 	%p80, %r49, -1;
	setp.ne.s32 	%p81, %r48, -1;
	setp.ne.s32 	%p82, %r47, -1;
	setp.ne.s32 	%p83, %r46, -1;
	setp.ne.s32 	%p84, %r45, -1;
	setp.ne.s32 	%p85, %r44, -1;
	setp.ne.s32 	%p86, %r43, -1;
	setp.ne.s32 	%p87, %r42, -1;
	setp.ne.s32 	%p88, %r41, -1;
	.loc	1 56 28                         // implicit_gemm_kernel.py:56:28
	setp.lt.s64 	%p90, %rd230, %rd4;
	add.s32 	%r436, %r669, 1;
	setp.gt.u32 	%p91, %r669, 2147483646;
	selp.b32 	%r669, %r436, 0, %p91;
	.loc	1 59 89                         // implicit_gemm_kernel.py:59:89
	add.s64 	%rd96, %rd43, %rd231;
	add.s64 	%rd97, %rd42, %rd231;
	add.s64 	%rd98, %rd41, %rd231;
	add.s64 	%rd99, %rd40, %rd231;
	add.s64 	%rd100, %rd39, %rd231;
	add.s64 	%rd101, %rd38, %rd231;
	add.s64 	%rd102, %rd37, %rd231;
	add.s64 	%rd103, %rd36, %rd231;
	add.s64 	%rd104, %rd35, %rd231;
	add.s64 	%rd105, %rd34, %rd231;
	add.s64 	%rd106, %rd33, %rd231;
	add.s64 	%rd107, %rd32, %rd231;
	add.s64 	%rd108, %rd31, %rd231;
	add.s64 	%rd109, %rd30, %rd231;
	add.s64 	%rd110, %rd29, %rd231;
	add.s64 	%rd111, %rd28, %rd231;
	add.s64 	%rd112, %rd27, %rd231;
	add.s64 	%rd113, %rd26, %rd231;
	add.s64 	%rd114, %rd25, %rd231;
	add.s64 	%rd115, %rd24, %rd231;
	add.s64 	%rd116, %rd23, %rd231;
	add.s64 	%rd117, %rd22, %rd231;
	add.s64 	%rd118, %rd21, %rd231;
	add.s64 	%rd119, %rd20, %rd231;
	add.s64 	%rd120, %rd19, %rd231;
	add.s64 	%rd121, %rd18, %rd231;
	add.s64 	%rd122, %rd17, %rd231;
	add.s64 	%rd123, %rd16, %rd231;
	add.s64 	%rd124, %rd15, %rd231;
	add.s64 	%rd125, %rd14, %rd231;
	add.s64 	%rd126, %rd13, %rd231;
	.loc	1 59 36                         // implicit_gemm_kernel.py:59:36
	add.s64 	%rd127, %rd12, %rd231;
	cvt.u32.u64 	%r437, %rd96;
	mul.wide.s32 	%rd128, %r437, 2;
	add.s64 	%rd63, %rd51, %rd128;
	cvt.u32.u64 	%r438, %rd97;
	mul.wide.s32 	%rd129, %r438, 2;
	add.s64 	%rd64, %rd51, %rd129;
	cvt.u32.u64 	%r439, %rd98;
	mul.wide.s32 	%rd130, %r439, 2;
	add.s64 	%rd65, %rd51, %rd130;
	cvt.u32.u64 	%r440, %rd99;
	mul.wide.s32 	%rd131, %r440, 2;
	add.s64 	%rd66, %rd51, %rd131;
	cvt.u32.u64 	%r441, %rd100;
	mul.wide.s32 	%rd132, %r441, 2;
	add.s64 	%rd67, %rd51, %rd132;
	cvt.u32.u64 	%r442, %rd101;
	mul.wide.s32 	%rd133, %r442, 2;
	add.s64 	%rd68, %rd51, %rd133;
	cvt.u32.u64 	%r443, %rd102;
	mul.wide.s32 	%rd134, %r443, 2;
	add.s64 	%rd69, %rd51, %rd134;
	cvt.u32.u64 	%r444, %rd103;
	mul.wide.s32 	%rd135, %r444, 2;
	add.s64 	%rd70, %rd51, %rd135;
	cvt.u32.u64 	%r445, %rd104;
	mul.wide.s32 	%rd136, %r445, 2;
	add.s64 	%rd71, %rd51, %rd136;
	cvt.u32.u64 	%r446, %rd105;
	mul.wide.s32 	%rd137, %r446, 2;
	add.s64 	%rd72, %rd51, %rd137;
	cvt.u32.u64 	%r447, %rd106;
	mul.wide.s32 	%rd138, %r447, 2;
	add.s64 	%rd73, %rd51, %rd138;
	cvt.u32.u64 	%r448, %rd107;
	mul.wide.s32 	%rd139, %r448, 2;
	add.s64 	%rd74, %rd51, %rd139;
	cvt.u32.u64 	%r449, %rd108;
	mul.wide.s32 	%rd140, %r449, 2;
	add.s64 	%rd75, %rd51, %rd140;
	cvt.u32.u64 	%r450, %rd109;
	mul.wide.s32 	%rd141, %r450, 2;
	add.s64 	%rd76, %rd51, %rd141;
	cvt.u32.u64 	%r451, %rd110;
	mul.wide.s32 	%rd142, %r451, 2;
	add.s64 	%rd77, %rd51, %rd142;
	cvt.u32.u64 	%r452, %rd111;
	mul.wide.s32 	%rd143, %r452, 2;
	add.s64 	%rd78, %rd51, %rd143;
	cvt.u32.u64 	%r453, %rd112;
	mul.wide.s32 	%rd144, %r453, 2;
	add.s64 	%rd79, %rd51, %rd144;
	cvt.u32.u64 	%r454, %rd113;
	mul.wide.s32 	%rd145, %r454, 2;
	add.s64 	%rd80, %rd51, %rd145;
	cvt.u32.u64 	%r455, %rd114;
	mul.wide.s32 	%rd146, %r455, 2;
	add.s64 	%rd81, %rd51, %rd146;
	cvt.u32.u64 	%r456, %rd115;
	mul.wide.s32 	%rd147, %r456, 2;
	add.s64 	%rd82, %rd51, %rd147;
	cvt.u32.u64 	%r457, %rd116;
	mul.wide.s32 	%rd148, %r457, 2;
	add.s64 	%rd83, %rd51, %rd148;
	cvt.u32.u64 	%r458, %rd117;
	mul.wide.s32 	%rd149, %r458, 2;
	add.s64 	%rd84, %rd51, %rd149;
	cvt.u32.u64 	%r459, %rd118;
	mul.wide.s32 	%rd150, %r459, 2;
	add.s64 	%rd85, %rd51, %rd150;
	cvt.u32.u64 	%r460, %rd119;
	mul.wide.s32 	%rd151, %r460, 2;
	add.s64 	%rd86, %rd51, %rd151;
	cvt.u32.u64 	%r461, %rd120;
	mul.wide.s32 	%rd152, %r461, 2;
	add.s64 	%rd87, %rd51, %rd152;
	cvt.u32.u64 	%r462, %rd121;
	mul.wide.s32 	%rd153, %r462, 2;
	add.s64 	%rd88, %rd51, %rd153;
	cvt.u32.u64 	%r463, %rd122;
	mul.wide.s32 	%rd154, %r463, 2;
	add.s64 	%rd89, %rd51, %rd154;
	cvt.u32.u64 	%r464, %rd123;
	mul.wide.s32 	%rd155, %r464, 2;
	add.s64 	%rd90, %rd51, %rd155;
	cvt.u32.u64 	%r465, %rd124;
	mul.wide.s32 	%rd156, %r465, 2;
	add.s64 	%rd91, %rd51, %rd156;
	cvt.u32.u64 	%r466, %rd125;
	mul.wide.s32 	%rd157, %r466, 2;
	add.s64 	%rd92, %rd51, %rd157;
	cvt.u32.u64 	%r467, %rd126;
	mul.wide.s32 	%rd158, %r467, 2;
	add.s64 	%rd93, %rd51, %rd158;
	cvt.u32.u64 	%r468, %rd127;
	mul.wide.s32 	%rd159, %r468, 2;
	add.s64 	%rd94, %rd51, %rd159;
	.loc	1 60 98                         // implicit_gemm_kernel.py:60:98
	add.s64 	%rd160, %rd2, %rd231;
	setp.lt.s64 	%p92, %rd160, %rd3;
	.loc	1 60 50                         // implicit_gemm_kernel.py:60:50
	and.pred  	%p25, %p88, %p92;
	and.pred  	%p26, %p87, %p92;
	and.pred  	%p27, %p86, %p92;
	and.pred  	%p28, %p85, %p92;
	and.pred  	%p29, %p84, %p92;
	and.pred  	%p30, %p83, %p92;
	and.pred  	%p31, %p82, %p92;
	and.pred  	%p32, %p81, %p92;
	and.pred  	%p33, %p80, %p92;
	and.pred  	%p34, %p79, %p92;
	and.pred  	%p35, %p78, %p92;
	and.pred  	%p36, %p77, %p92;
	and.pred  	%p37, %p76, %p92;
	and.pred  	%p38, %p75, %p92;
	and.pred  	%p39, %p74, %p92;
	and.pred  	%p40, %p73, %p92;
	and.pred  	%p41, %p72, %p92;
	and.pred  	%p42, %p71, %p92;
	and.pred  	%p43, %p70, %p92;
	and.pred  	%p44, %p69, %p92;
	and.pred  	%p45, %p68, %p92;
	and.pred  	%p46, %p67, %p92;
	and.pred  	%p47, %p66, %p92;
	and.pred  	%p48, %p65, %p92;
	and.pred  	%p49, %p64, %p92;
	and.pred  	%p50, %p63, %p92;
	and.pred  	%p51, %p62, %p92;
	and.pred  	%p52, %p61, %p92;
	and.pred  	%p53, %p60, %p92;
	and.pred  	%p54, %p59, %p92;
	and.pred  	%p55, %p58, %p92;
	and.pred  	%p56, %p57, %p92;
	mov.b16 	%rs235, 0;
	.loc	1 71 39                         // implicit_gemm_kernel.py:71:39
	// begin inline asm
	mov.u16 %rs234, %rs235;
	@%p25 ld.global.b16 { %rs234 }, [ %rd63 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs236, %rs235;
	@%p26 ld.global.b16 { %rs236 }, [ %rd64 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs238, %rs235;
	@%p27 ld.global.b16 { %rs238 }, [ %rd65 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs240, %rs235;
	@%p28 ld.global.b16 { %rs240 }, [ %rd66 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs242, %rs235;
	@%p29 ld.global.b16 { %rs242 }, [ %rd67 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs244, %rs235;
	@%p30 ld.global.b16 { %rs244 }, [ %rd68 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs246, %rs235;
	@%p31 ld.global.b16 { %rs246 }, [ %rd69 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs248, %rs235;
	@%p32 ld.global.b16 { %rs248 }, [ %rd70 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs250, %rs235;
	@%p33 ld.global.b16 { %rs250 }, [ %rd71 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs252, %rs235;
	@%p34 ld.global.b16 { %rs252 }, [ %rd72 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs254, %rs235;
	@%p35 ld.global.b16 { %rs254 }, [ %rd73 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs256, %rs235;
	@%p36 ld.global.b16 { %rs256 }, [ %rd74 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs258, %rs235;
	@%p37 ld.global.b16 { %rs258 }, [ %rd75 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs260, %rs235;
	@%p38 ld.global.b16 { %rs260 }, [ %rd76 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs262, %rs235;
	@%p39 ld.global.b16 { %rs262 }, [ %rd77 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs264, %rs235;
	@%p40 ld.global.b16 { %rs264 }, [ %rd78 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs266, %rs235;
	@%p41 ld.global.b16 { %rs266 }, [ %rd79 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs268, %rs235;
	@%p42 ld.global.b16 { %rs268 }, [ %rd80 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs270, %rs235;
	@%p43 ld.global.b16 { %rs270 }, [ %rd81 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs272, %rs235;
	@%p44 ld.global.b16 { %rs272 }, [ %rd82 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs274, %rs235;
	@%p45 ld.global.b16 { %rs274 }, [ %rd83 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs276, %rs235;
	@%p46 ld.global.b16 { %rs276 }, [ %rd84 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs278, %rs235;
	@%p47 ld.global.b16 { %rs278 }, [ %rd85 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs280, %rs235;
	@%p48 ld.global.b16 { %rs280 }, [ %rd86 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs282, %rs235;
	@%p49 ld.global.b16 { %rs282 }, [ %rd87 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs284, %rs235;
	@%p50 ld.global.b16 { %rs284 }, [ %rd88 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs286, %rs235;
	@%p51 ld.global.b16 { %rs286 }, [ %rd89 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs288, %rs235;
	@%p52 ld.global.b16 { %rs288 }, [ %rd90 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs290, %rs235;
	@%p53 ld.global.b16 { %rs290 }, [ %rd91 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs292, %rs235;
	@%p54 ld.global.b16 { %rs292 }, [ %rd92 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs294, %rs235;
	@%p55 ld.global.b16 { %rs294 }, [ %rd93 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs296, %rs235;
	@%p56 ld.global.b16 { %rs296 }, [ %rd94 + 0 ];
	// end inline asm
	bar.sync 	0;
	st.shared.u16 	[%r26], %rs234;
	st.shared.u16 	[%r27+256], %rs236;
	st.shared.u16 	[%r26+512], %rs238;
	st.shared.u16 	[%r27+768], %rs240;
	st.shared.u16 	[%r26+1024], %rs242;
	st.shared.u16 	[%r27+1280], %rs244;
	st.shared.u16 	[%r26+1536], %rs246;
	st.shared.u16 	[%r27+1792], %rs248;
	st.shared.u16 	[%r26+2048], %rs250;
	st.shared.u16 	[%r27+2304], %rs252;
	st.shared.u16 	[%r26+2560], %rs254;
	st.shared.u16 	[%r27+2816], %rs256;
	st.shared.u16 	[%r26+3072], %rs258;
	st.shared.u16 	[%r27+3328], %rs260;
	st.shared.u16 	[%r26+3584], %rs262;
	st.shared.u16 	[%r27+3840], %rs264;
	st.shared.u16 	[%r26+4096], %rs266;
	st.shared.u16 	[%r27+4352], %rs268;
	st.shared.u16 	[%r26+4608], %rs270;
	st.shared.u16 	[%r27+4864], %rs272;
	st.shared.u16 	[%r26+5120], %rs274;
	st.shared.u16 	[%r27+5376], %rs276;
	st.shared.u16 	[%r26+5632], %rs278;
	st.shared.u16 	[%r27+5888], %rs280;
	st.shared.u16 	[%r26+6144], %rs282;
	st.shared.u16 	[%r27+6400], %rs284;
	st.shared.u16 	[%r26+6656], %rs286;
	st.shared.u16 	[%r27+6912], %rs288;
	st.shared.u16 	[%r26+7168], %rs290;
	st.shared.u16 	[%r27+7424], %rs292;
	st.shared.u16 	[%r26+7680], %rs294;
	st.shared.u16 	[%r27+7936], %rs296;
	.loc	1 72 36                         // implicit_gemm_kernel.py:72:36
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r469, %r669, 11;
	add.s32 	%r471, %r666, %r469;
	add.s32 	%r472, %r471, 8192;
	.loc	1 71 39                         // implicit_gemm_kernel.py:71:39
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r278, %r279, %r280, %r281}, [%r238];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r358, %r359, %r360, %r361}, [%r243];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r318, %r319, %r320, %r321}, [%r248];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r398, %r399, %r400, %r401}, [%r253];
	// end inline asm
	.loc	1 72 36                         // implicit_gemm_kernel.py:72:36
	shl.b32 	%r473, %r33, 1;
	add.s32 	%r258, %r472, %r473;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r282, %r283, %r362, %r363}, [%r258];
	// end inline asm
	add.s32 	%r263, %r472, %r474;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r292, %r293, %r372, %r373}, [%r263];
	// end inline asm
	add.s32 	%r268, %r472, %r475;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r302, %r303, %r382, %r383}, [%r268];
	// end inline asm
	add.s32 	%r273, %r472, %r476;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r312, %r313, %r392, %r393}, [%r273];
	// end inline asm
	.loc	1 74 37                         // implicit_gemm_kernel.py:74:37
	mov.b32 	%r354, {%rs426, %rs427};
	mov.b32 	%r355, {%rs428, %rs429};
	mov.b32 	%r364, {%rs430, %rs431};
	mov.b32 	%r365, {%rs432, %rs433};
	mov.b32 	%r374, {%rs434, %rs435};
	mov.b32 	%r375, {%rs436, %rs437};
	mov.b32 	%r384, {%rs438, %rs439};
	mov.b32 	%r385, {%rs440, %rs441};
	mov.b32 	%r394, {%rs442, %rs443};
	mov.b32 	%r395, {%rs444, %rs445};
	mov.b32 	%r404, {%rs446, %rs447};
	mov.b32 	%r405, {%rs448, %rs449};
	mov.b32 	%r414, {%rs450, %rs451};
	mov.b32 	%r415, {%rs452, %rs453};
	mov.b32 	%r424, {%rs454, %rs455};
	mov.b32 	%r425, {%rs456, %rs457};
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r354, %r355 }, { %r278, %r279, %r280, %r281 }, { %r282, %r283 }, { %r354, %r355 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r364, %r365 }, { %r278, %r279, %r280, %r281 }, { %r292, %r293 }, { %r364, %r365 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r374, %r375 }, { %r278, %r279, %r280, %r281 }, { %r302, %r303 }, { %r374, %r375 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r384, %r385 }, { %r278, %r279, %r280, %r281 }, { %r312, %r313 }, { %r384, %r385 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r394, %r395 }, { %r318, %r319, %r320, %r321 }, { %r282, %r283 }, { %r394, %r395 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r404, %r405 }, { %r318, %r319, %r320, %r321 }, { %r292, %r293 }, { %r404, %r405 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r414, %r415 }, { %r318, %r319, %r320, %r321 }, { %r302, %r303 }, { %r414, %r415 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r424, %r425 }, { %r318, %r319, %r320, %r321 }, { %r312, %r313 }, { %r424, %r425 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r354, %r355 }, { %r358, %r359, %r360, %r361 }, { %r362, %r363 }, { %r354, %r355 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r364, %r365 }, { %r358, %r359, %r360, %r361 }, { %r372, %r373 }, { %r364, %r365 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r374, %r375 }, { %r358, %r359, %r360, %r361 }, { %r382, %r383 }, { %r374, %r375 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r384, %r385 }, { %r358, %r359, %r360, %r361 }, { %r392, %r393 }, { %r384, %r385 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r394, %r395 }, { %r398, %r399, %r400, %r401 }, { %r362, %r363 }, { %r394, %r395 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r404, %r405 }, { %r398, %r399, %r400, %r401 }, { %r372, %r373 }, { %r404, %r405 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r414, %r415 }, { %r398, %r399, %r400, %r401 }, { %r382, %r383 }, { %r414, %r415 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r424, %r425 }, { %r398, %r399, %r400, %r401 }, { %r392, %r393 }, { %r424, %r425 };
	// end inline asm
	mov.b32 	{%rs426, %rs427}, %r354;
	mov.b32 	{%rs428, %rs429}, %r355;
	mov.b32 	{%rs430, %rs431}, %r364;
	mov.b32 	{%rs432, %rs433}, %r365;
	mov.b32 	{%rs434, %rs435}, %r374;
	mov.b32 	{%rs436, %rs437}, %r375;
	mov.b32 	{%rs438, %rs439}, %r384;
	mov.b32 	{%rs440, %rs441}, %r385;
	mov.b32 	{%rs442, %rs443}, %r394;
	mov.b32 	{%rs444, %rs445}, %r395;
	mov.b32 	{%rs446, %rs447}, %r404;
	mov.b32 	{%rs448, %rs449}, %r405;
	mov.b32 	{%rs450, %rs451}, %r414;
	mov.b32 	{%rs452, %rs453}, %r415;
	mov.b32 	{%rs454, %rs455}, %r424;
	mov.b32 	{%rs456, %rs457}, %r425;
	.loc	1 56 28                         // implicit_gemm_kernel.py:56:28
	add.s64 	%rd230, %rd230, 1;
	.loc	1 63 66                         // implicit_gemm_kernel.py:63:66
	add.s64 	%rd161, %rd227, %rd231;
	.loc	1 63 20                         // implicit_gemm_kernel.py:63:20
	mul.wide.s32 	%rd162, %r668, 2;
	add.s64 	%rd95, %rd53, %rd162;
	cvt.u32.u64 	%r477, %rd161;
	.loc	1 67 72                         // implicit_gemm_kernel.py:67:72
	setp.lt.s32 	%p93, %r477, %r23;
	.loc	1 72 36                         // implicit_gemm_kernel.py:72:36
	bar.sync 	0;
	selp.b32 	%r478, 16, 0, %p93;
	selp.b32 	%r479, %r478, 0, %p90;
	selp.b32 	%r435, %r479, 0, %p6;
	// begin inline asm
	cp.async.cg.shared.global [ %r195 + 0 ], [ %rd95 + 0 ], 0x10, %r435;
	// end inline asm
	cp.async.commit_group;
	.loc	1 57 40                         // implicit_gemm_kernel.py:57:40
	add.s64 	%rd231, %rd231, 32;
	.loc	1 56 28                         // implicit_gemm_kernel.py:56:28
	add.s32 	%r668, %r668, %r39;
	setp.ne.s64 	%p94, %rd6, %rd230;
	@%p94 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge16_crit_edge
	.loc	1 77 31                         // implicit_gemm_kernel.py:77:31
	shr.u32 	%r673, %r3, 5;
	.loc	1 79 19                         // implicit_gemm_kernel.py:79:19
	shl.b32 	%r672, %r1, 5;
	.loc	1 85 56                         // implicit_gemm_kernel.py:85:56
	shr.u32 	%r671, %r3, 2;
	shr.u32 	%r129, %r3, 1;
	and.b32  	%r670, %r129, 48;
	mov.b16 	%rs426, 0;
	mov.u16 	%rs427, %rs426;
	mov.u16 	%rs428, %rs426;
	mov.u16 	%rs429, %rs426;
	mov.u16 	%rs430, %rs426;
	mov.u16 	%rs431, %rs426;
	mov.u16 	%rs432, %rs426;
	mov.u16 	%rs433, %rs426;
	mov.u16 	%rs434, %rs426;
	mov.u16 	%rs435, %rs426;
	mov.u16 	%rs436, %rs426;
	mov.u16 	%rs437, %rs426;
	mov.u16 	%rs438, %rs426;
	mov.u16 	%rs439, %rs426;
	mov.u16 	%rs440, %rs426;
	mov.u16 	%rs441, %rs426;
	mov.u16 	%rs442, %rs426;
	mov.u16 	%rs443, %rs426;
	mov.u16 	%rs444, %rs426;
	mov.u16 	%rs445, %rs426;
	mov.u16 	%rs446, %rs426;
	mov.u16 	%rs447, %rs426;
	mov.u16 	%rs448, %rs426;
	mov.u16 	%rs449, %rs426;
	mov.u16 	%rs450, %rs426;
	mov.u16 	%rs451, %rs426;
	mov.u16 	%rs452, %rs426;
	mov.u16 	%rs453, %rs426;
	mov.u16 	%rs454, %rs426;
	mov.u16 	%rs455, %rs426;
	mov.u16 	%rs456, %rs426;
	mov.u16 	%rs457, %rs426;
$L__BB0_9:                              // %._crit_edge16
	.loc	1 77 31                         // implicit_gemm_kernel.py:77:31
	and.b32  	%r512, %r673, 1;
	shr.u32 	%r513, %r6, 5;
	or.b32  	%r514, %r512, %r513;
	.loc	1 77 42                         // implicit_gemm_kernel.py:77:42
	or.b32  	%r515, %r514, %r8;
	or.b32  	%r516, %r515, 4;
	or.b32  	%r517, %r515, 8;
	or.b32  	%r518, %r515, 12;
	or.b32  	%r519, %r515, 16;
	or.b32  	%r520, %r515, 20;
	or.b32  	%r521, %r515, 24;
	or.b32  	%r522, %r515, 28;
	or.b32  	%r523, %r515, 32;
	or.b32  	%r524, %r515, 36;
	or.b32  	%r525, %r515, 40;
	or.b32  	%r526, %r515, 44;
	or.b32  	%r527, %r515, 48;
	or.b32  	%r528, %r515, 52;
	or.b32  	%r529, %r515, 56;
	or.b32  	%r530, %r515, 60;
	or.b32  	%r531, %r515, 64;
	or.b32  	%r532, %r515, 68;
	or.b32  	%r533, %r515, 72;
	or.b32  	%r534, %r515, 76;
	or.b32  	%r535, %r515, 80;
	or.b32  	%r536, %r515, 84;
	or.b32  	%r537, %r515, 88;
	or.b32  	%r538, %r515, 92;
	or.b32  	%r539, %r515, 96;
	or.b32  	%r540, %r515, 100;
	or.b32  	%r541, %r515, 104;
	or.b32  	%r542, %r515, 108;
	or.b32  	%r543, %r515, 112;
	or.b32  	%r544, %r515, 116;
	or.b32  	%r545, %r515, 120;
	or.b32  	%r546, %r515, 124;
	.loc	1 77 61                         // implicit_gemm_kernel.py:77:61
	mul.lo.s32 	%r547, %r515, %r117;
	shl.b32 	%r548, %r117, 2;
	add.s32 	%r549, %r547, %r548;
	add.s32 	%r550, %r549, %r548;
	add.s32 	%r551, %r550, %r548;
	add.s32 	%r552, %r551, %r548;
	add.s32 	%r553, %r552, %r548;
	add.s32 	%r554, %r553, %r548;
	add.s32 	%r555, %r554, %r548;
	add.s32 	%r556, %r555, %r548;
	add.s32 	%r557, %r556, %r548;
	add.s32 	%r558, %r557, %r548;
	add.s32 	%r559, %r558, %r548;
	add.s32 	%r560, %r559, %r548;
	add.s32 	%r561, %r560, %r548;
	add.s32 	%r562, %r561, %r548;
	add.s32 	%r563, %r562, %r548;
	add.s32 	%r564, %r563, %r548;
	add.s32 	%r565, %r564, %r548;
	add.s32 	%r566, %r565, %r548;
	add.s32 	%r567, %r566, %r548;
	add.s32 	%r568, %r567, %r548;
	add.s32 	%r569, %r568, %r548;
	add.s32 	%r570, %r569, %r548;
	add.s32 	%r571, %r570, %r548;
	add.s32 	%r572, %r571, %r548;
	add.s32 	%r573, %r572, %r548;
	add.s32 	%r574, %r573, %r548;
	add.s32 	%r575, %r574, %r548;
	add.s32 	%r576, %r575, %r548;
	add.s32 	%r577, %r576, %r548;
	add.s32 	%r578, %r577, %r548;
	add.s32 	%r579, %r578, %r548;
	.loc	1 78 10                         // implicit_gemm_kernel.py:78:10
	or.b32  	%r580, %r672, %r4;
	.loc	1 79 10                         // implicit_gemm_kernel.py:79:10
	add.s32 	%r581, %r580, %r547;
	add.s32 	%r582, %r580, %r549;
	add.s32 	%r583, %r580, %r550;
	add.s32 	%r584, %r580, %r551;
	add.s32 	%r585, %r580, %r552;
	add.s32 	%r586, %r580, %r553;
	add.s32 	%r587, %r580, %r554;
	add.s32 	%r588, %r580, %r555;
	add.s32 	%r589, %r580, %r556;
	add.s32 	%r590, %r580, %r557;
	add.s32 	%r591, %r580, %r558;
	add.s32 	%r592, %r580, %r559;
	add.s32 	%r593, %r580, %r560;
	add.s32 	%r594, %r580, %r561;
	add.s32 	%r595, %r580, %r562;
	add.s32 	%r596, %r580, %r563;
	add.s32 	%r597, %r580, %r564;
	add.s32 	%r598, %r580, %r565;
	add.s32 	%r599, %r580, %r566;
	add.s32 	%r600, %r580, %r567;
	add.s32 	%r601, %r580, %r568;
	add.s32 	%r602, %r580, %r569;
	add.s32 	%r603, %r580, %r570;
	add.s32 	%r604, %r580, %r571;
	add.s32 	%r605, %r580, %r572;
	add.s32 	%r606, %r580, %r573;
	add.s32 	%r607, %r580, %r574;
	add.s32 	%r608, %r580, %r575;
	add.s32 	%r609, %r580, %r576;
	add.s32 	%r610, %r580, %r577;
	add.s32 	%r611, %r580, %r578;
	add.s32 	%r612, %r580, %r579;
	.loc	1 77 8                          // implicit_gemm_kernel.py:77:8
	mul.wide.s32 	%rd195, %r581, 2;
	add.s64 	%rd163, %rd54, %rd195;
	mul.wide.s32 	%rd196, %r582, 2;
	add.s64 	%rd164, %rd54, %rd196;
	mul.wide.s32 	%rd197, %r583, 2;
	add.s64 	%rd165, %rd54, %rd197;
	mul.wide.s32 	%rd198, %r584, 2;
	add.s64 	%rd166, %rd54, %rd198;
	mul.wide.s32 	%rd199, %r585, 2;
	add.s64 	%rd167, %rd54, %rd199;
	mul.wide.s32 	%rd200, %r586, 2;
	add.s64 	%rd168, %rd54, %rd200;
	mul.wide.s32 	%rd201, %r587, 2;
	add.s64 	%rd169, %rd54, %rd201;
	mul.wide.s32 	%rd202, %r588, 2;
	add.s64 	%rd170, %rd54, %rd202;
	mul.wide.s32 	%rd203, %r589, 2;
	add.s64 	%rd171, %rd54, %rd203;
	mul.wide.s32 	%rd204, %r590, 2;
	add.s64 	%rd172, %rd54, %rd204;
	mul.wide.s32 	%rd205, %r591, 2;
	add.s64 	%rd173, %rd54, %rd205;
	mul.wide.s32 	%rd206, %r592, 2;
	add.s64 	%rd174, %rd54, %rd206;
	mul.wide.s32 	%rd207, %r593, 2;
	add.s64 	%rd175, %rd54, %rd207;
	mul.wide.s32 	%rd208, %r594, 2;
	add.s64 	%rd176, %rd54, %rd208;
	mul.wide.s32 	%rd209, %r595, 2;
	add.s64 	%rd177, %rd54, %rd209;
	mul.wide.s32 	%rd210, %r596, 2;
	add.s64 	%rd178, %rd54, %rd210;
	mul.wide.s32 	%rd211, %r597, 2;
	add.s64 	%rd179, %rd54, %rd211;
	mul.wide.s32 	%rd212, %r598, 2;
	add.s64 	%rd180, %rd54, %rd212;
	mul.wide.s32 	%rd213, %r599, 2;
	add.s64 	%rd181, %rd54, %rd213;
	mul.wide.s32 	%rd214, %r600, 2;
	add.s64 	%rd182, %rd54, %rd214;
	mul.wide.s32 	%rd215, %r601, 2;
	add.s64 	%rd183, %rd54, %rd215;
	mul.wide.s32 	%rd216, %r602, 2;
	add.s64 	%rd184, %rd54, %rd216;
	mul.wide.s32 	%rd217, %r603, 2;
	add.s64 	%rd185, %rd54, %rd217;
	mul.wide.s32 	%rd218, %r604, 2;
	add.s64 	%rd186, %rd54, %rd218;
	mul.wide.s32 	%rd219, %r605, 2;
	add.s64 	%rd187, %rd54, %rd219;
	mul.wide.s32 	%rd220, %r606, 2;
	add.s64 	%rd188, %rd54, %rd220;
	mul.wide.s32 	%rd221, %r607, 2;
	add.s64 	%rd189, %rd54, %rd221;
	mul.wide.s32 	%rd222, %r608, 2;
	add.s64 	%rd190, %rd54, %rd222;
	mul.wide.s32 	%rd223, %r609, 2;
	add.s64 	%rd191, %rd54, %rd223;
	mul.wide.s32 	%rd224, %r610, 2;
	add.s64 	%rd192, %rd54, %rd224;
	mul.wide.s32 	%rd225, %r611, 2;
	add.s64 	%rd193, %rd54, %rd225;
	mul.wide.s32 	%rd226, %r612, 2;
	add.s64 	%rd194, %rd54, %rd226;
	.loc	1 81 67                         // implicit_gemm_kernel.py:81:67
	setp.lt.s32 	%p160, %r515, %r115;
	setp.lt.s32 	%p161, %r516, %r115;
	setp.lt.s32 	%p162, %r517, %r115;
	setp.lt.s32 	%p163, %r518, %r115;
	setp.lt.s32 	%p164, %r519, %r115;
	setp.lt.s32 	%p165, %r520, %r115;
	setp.lt.s32 	%p166, %r521, %r115;
	setp.lt.s32 	%p167, %r522, %r115;
	setp.lt.s32 	%p168, %r523, %r115;
	setp.lt.s32 	%p169, %r524, %r115;
	setp.lt.s32 	%p170, %r525, %r115;
	setp.lt.s32 	%p171, %r526, %r115;
	setp.lt.s32 	%p172, %r527, %r115;
	setp.lt.s32 	%p173, %r528, %r115;
	setp.lt.s32 	%p174, %r529, %r115;
	setp.lt.s32 	%p175, %r530, %r115;
	setp.lt.s32 	%p176, %r531, %r115;
	setp.lt.s32 	%p177, %r532, %r115;
	setp.lt.s32 	%p178, %r533, %r115;
	setp.lt.s32 	%p179, %r534, %r115;
	setp.lt.s32 	%p180, %r535, %r115;
	setp.lt.s32 	%p181, %r536, %r115;
	setp.lt.s32 	%p182, %r537, %r115;
	setp.lt.s32 	%p183, %r538, %r115;
	setp.lt.s32 	%p184, %r539, %r115;
	setp.lt.s32 	%p185, %r540, %r115;
	setp.lt.s32 	%p186, %r541, %r115;
	setp.lt.s32 	%p187, %r542, %r115;
	setp.lt.s32 	%p188, %r543, %r115;
	setp.lt.s32 	%p189, %r544, %r115;
	setp.lt.s32 	%p190, %r545, %r115;
	setp.lt.s32 	%p191, %r546, %r115;
	.loc	1 82 62                         // implicit_gemm_kernel.py:82:62
	setp.lt.s32 	%p192, %r580, %r117;
	.loc	1 82 8                          // implicit_gemm_kernel.py:82:8
	and.pred  	%p128, %p160, %p192;
	and.pred  	%p129, %p161, %p192;
	and.pred  	%p130, %p162, %p192;
	and.pred  	%p131, %p163, %p192;
	and.pred  	%p132, %p164, %p192;
	and.pred  	%p133, %p165, %p192;
	and.pred  	%p134, %p166, %p192;
	and.pred  	%p135, %p167, %p192;
	and.pred  	%p136, %p168, %p192;
	and.pred  	%p137, %p169, %p192;
	and.pred  	%p138, %p170, %p192;
	and.pred  	%p139, %p171, %p192;
	and.pred  	%p140, %p172, %p192;
	and.pred  	%p141, %p173, %p192;
	and.pred  	%p142, %p174, %p192;
	and.pred  	%p143, %p175, %p192;
	and.pred  	%p144, %p176, %p192;
	and.pred  	%p145, %p177, %p192;
	and.pred  	%p146, %p178, %p192;
	and.pred  	%p147, %p179, %p192;
	and.pred  	%p148, %p180, %p192;
	and.pred  	%p149, %p181, %p192;
	and.pred  	%p150, %p182, %p192;
	and.pred  	%p151, %p183, %p192;
	and.pred  	%p152, %p184, %p192;
	and.pred  	%p153, %p185, %p192;
	and.pred  	%p154, %p186, %p192;
	and.pred  	%p155, %p187, %p192;
	and.pred  	%p156, %p188, %p192;
	and.pred  	%p157, %p189, %p192;
	and.pred  	%p158, %p190, %p192;
	and.pred  	%p159, %p191, %p192;
	.loc	1 85 56                         // implicit_gemm_kernel.py:85:56
	bar.sync 	0;
	shl.b32 	%r613, %r3, 7;
	and.b32  	%r614, %r613, 384;
	and.b32  	%r615, %r671, 3;
	shr.u32 	%r616, %r5, 2;
	or.b32  	%r617, %r616, %r670;
	or.b32  	%r618, %r617, %r615;
	or.b32  	%r619, %r618, %r614;
	shl.b32 	%r620, %r3, 6;
	and.b32  	%r621, %r620, 1984;
	or.b32  	%r622, %r514, %r621;
	shr.u32 	%r623, %r614, 5;
	add.s32 	%r625, %r666, %r623;
	shl.b32 	%r626, %r619, 1;
	add.s32 	%r480, %r625, %r626;
	mov.pred 	%p96, -1;
	// begin inline asm
	@%p96 st.shared.b16 [ %r480 + 0 ], %rs426;
	// end inline asm
	or.b32  	%r627, %r619, 64;
	shr.u32 	%r628, %r627, 5;
	and.b32  	%r629, %r628, 33554430;
	add.s32 	%r630, %r666, %r629;
	add.s32 	%r631, %r630, %r626;
	add.s32 	%r481, %r631, 128;
	// begin inline asm
	@%p96 st.shared.b16 [ %r481 + 0 ], %rs427;
	// end inline asm
	add.s32 	%r482, %r480, 16;
	// begin inline asm
	@%p96 st.shared.b16 [ %r482 + 0 ], %rs428;
	// end inline asm
	add.s32 	%r483, %r631, 144;
	// begin inline asm
	@%p96 st.shared.b16 [ %r483 + 0 ], %rs429;
	// end inline asm
	or.b32  	%r632, %r619, 512;
	shr.u32 	%r633, %r632, 5;
	and.b32  	%r634, %r633, 33554430;
	add.s32 	%r635, %r666, %r634;
	add.s32 	%r636, %r635, %r626;
	add.s32 	%r484, %r636, 1024;
	// begin inline asm
	@%p96 st.shared.b16 [ %r484 + 0 ], %rs430;
	// end inline asm
	or.b32  	%r637, %r619, 576;
	shr.u32 	%r638, %r637, 5;
	and.b32  	%r639, %r638, 33554430;
	add.s32 	%r640, %r666, %r639;
	add.s32 	%r641, %r640, %r626;
	add.s32 	%r485, %r641, 1152;
	// begin inline asm
	@%p96 st.shared.b16 [ %r485 + 0 ], %rs431;
	// end inline asm
	add.s32 	%r486, %r636, 1040;
	// begin inline asm
	@%p96 st.shared.b16 [ %r486 + 0 ], %rs432;
	// end inline asm
	add.s32 	%r487, %r641, 1168;
	// begin inline asm
	@%p96 st.shared.b16 [ %r487 + 0 ], %rs433;
	// end inline asm
	or.b32  	%r642, %r619, 1024;
	shr.u32 	%r643, %r642, 5;
	and.b32  	%r644, %r643, 33554430;
	add.s32 	%r645, %r666, %r644;
	add.s32 	%r646, %r645, %r626;
	add.s32 	%r488, %r646, 2048;
	// begin inline asm
	@%p96 st.shared.b16 [ %r488 + 0 ], %rs434;
	// end inline asm
	or.b32  	%r647, %r619, 1088;
	shr.u32 	%r648, %r647, 5;
	and.b32  	%r649, %r648, 33554430;
	add.s32 	%r650, %r666, %r649;
	add.s32 	%r651, %r650, %r626;
	add.s32 	%r489, %r651, 2176;
	// begin inline asm
	@%p96 st.shared.b16 [ %r489 + 0 ], %rs435;
	// end inline asm
	add.s32 	%r490, %r646, 2064;
	// begin inline asm
	@%p96 st.shared.b16 [ %r490 + 0 ], %rs436;
	// end inline asm
	add.s32 	%r491, %r651, 2192;
	// begin inline asm
	@%p96 st.shared.b16 [ %r491 + 0 ], %rs437;
	// end inline asm
	or.b32  	%r652, %r619, 1536;
	shr.u32 	%r653, %r652, 5;
	and.b32  	%r654, %r653, 33554430;
	add.s32 	%r655, %r666, %r654;
	add.s32 	%r656, %r655, %r626;
	add.s32 	%r492, %r656, 3072;
	// begin inline asm
	@%p96 st.shared.b16 [ %r492 + 0 ], %rs438;
	// end inline asm
	or.b32  	%r657, %r619, 1600;
	shr.u32 	%r658, %r657, 5;
	and.b32  	%r659, %r658, 33554430;
	add.s32 	%r660, %r666, %r659;
	add.s32 	%r661, %r660, %r626;
	add.s32 	%r493, %r661, 3200;
	// begin inline asm
	@%p96 st.shared.b16 [ %r493 + 0 ], %rs439;
	// end inline asm
	add.s32 	%r494, %r656, 3088;
	// begin inline asm
	@%p96 st.shared.b16 [ %r494 + 0 ], %rs440;
	// end inline asm
	add.s32 	%r495, %r661, 3216;
	// begin inline asm
	@%p96 st.shared.b16 [ %r495 + 0 ], %rs441;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r662, %r621, 5;
	add.s32 	%r663, %r666, %r662;
	shl.b32 	%r664, %r622, 1;
	add.s32 	%r665, %r663, %r664;
	ld.shared.u16 	%rs330, [%r665];
	ld.shared.u16 	%rs331, [%r665+8];
	ld.shared.u16 	%rs332, [%r665+16];
	ld.shared.u16 	%rs333, [%r665+24];
	ld.shared.u16 	%rs334, [%r665+32];
	ld.shared.u16 	%rs335, [%r665+40];
	ld.shared.u16 	%rs336, [%r665+48];
	ld.shared.u16 	%rs337, [%r665+56];
	ld.shared.u16 	%rs338, [%r665+64];
	ld.shared.u16 	%rs339, [%r665+72];
	ld.shared.u16 	%rs340, [%r665+80];
	ld.shared.u16 	%rs341, [%r665+88];
	ld.shared.u16 	%rs342, [%r665+96];
	ld.shared.u16 	%rs343, [%r665+104];
	ld.shared.u16 	%rs344, [%r665+112];
	ld.shared.u16 	%rs345, [%r665+120];
	bar.sync 	0;
	// begin inline asm
	@%p96 st.shared.b16 [ %r480 + 0 ], %rs442;
	// end inline asm
	// begin inline asm
	@%p96 st.shared.b16 [ %r481 + 0 ], %rs443;
	// end inline asm
	// begin inline asm
	@%p96 st.shared.b16 [ %r482 + 0 ], %rs444;
	// end inline asm
	// begin inline asm
	@%p96 st.shared.b16 [ %r483 + 0 ], %rs445;
	// end inline asm
	// begin inline asm
	@%p96 st.shared.b16 [ %r484 + 0 ], %rs446;
	// end inline asm
	// begin inline asm
	@%p96 st.shared.b16 [ %r485 + 0 ], %rs447;
	// end inline asm
	// begin inline asm
	@%p96 st.shared.b16 [ %r486 + 0 ], %rs448;
	// end inline asm
	// begin inline asm
	@%p96 st.shared.b16 [ %r487 + 0 ], %rs449;
	// end inline asm
	// begin inline asm
	@%p96 st.shared.b16 [ %r488 + 0 ], %rs450;
	// end inline asm
	// begin inline asm
	@%p96 st.shared.b16 [ %r489 + 0 ], %rs451;
	// end inline asm
	// begin inline asm
	@%p96 st.shared.b16 [ %r490 + 0 ], %rs452;
	// end inline asm
	// begin inline asm
	@%p96 st.shared.b16 [ %r491 + 0 ], %rs453;
	// end inline asm
	// begin inline asm
	@%p96 st.shared.b16 [ %r492 + 0 ], %rs454;
	// end inline asm
	// begin inline asm
	@%p96 st.shared.b16 [ %r493 + 0 ], %rs455;
	// end inline asm
	// begin inline asm
	@%p96 st.shared.b16 [ %r494 + 0 ], %rs456;
	// end inline asm
	// begin inline asm
	@%p96 st.shared.b16 [ %r495 + 0 ], %rs457;
	// end inline asm
	bar.sync 	0;
	ld.shared.u16 	%rs346, [%r665];
	ld.shared.u16 	%rs347, [%r665+8];
	ld.shared.u16 	%rs348, [%r665+16];
	ld.shared.u16 	%rs349, [%r665+24];
	ld.shared.u16 	%rs350, [%r665+32];
	ld.shared.u16 	%rs351, [%r665+40];
	ld.shared.u16 	%rs352, [%r665+48];
	ld.shared.u16 	%rs353, [%r665+56];
	ld.shared.u16 	%rs354, [%r665+64];
	ld.shared.u16 	%rs355, [%r665+72];
	ld.shared.u16 	%rs356, [%r665+80];
	ld.shared.u16 	%rs357, [%r665+88];
	ld.shared.u16 	%rs358, [%r665+96];
	ld.shared.u16 	%rs359, [%r665+104];
	ld.shared.u16 	%rs360, [%r665+112];
	ld.shared.u16 	%rs361, [%r665+120];
	// begin inline asm
	@%p128 st.global.b16 [ %rd163 + 0 ], { %rs330 };
	// end inline asm
	// begin inline asm
	@%p129 st.global.b16 [ %rd164 + 0 ], { %rs331 };
	// end inline asm
	// begin inline asm
	@%p130 st.global.b16 [ %rd165 + 0 ], { %rs332 };
	// end inline asm
	// begin inline asm
	@%p131 st.global.b16 [ %rd166 + 0 ], { %rs333 };
	// end inline asm
	// begin inline asm
	@%p132 st.global.b16 [ %rd167 + 0 ], { %rs334 };
	// end inline asm
	// begin inline asm
	@%p133 st.global.b16 [ %rd168 + 0 ], { %rs335 };
	// end inline asm
	// begin inline asm
	@%p134 st.global.b16 [ %rd169 + 0 ], { %rs336 };
	// end inline asm
	// begin inline asm
	@%p135 st.global.b16 [ %rd170 + 0 ], { %rs337 };
	// end inline asm
	// begin inline asm
	@%p136 st.global.b16 [ %rd171 + 0 ], { %rs338 };
	// end inline asm
	// begin inline asm
	@%p137 st.global.b16 [ %rd172 + 0 ], { %rs339 };
	// end inline asm
	// begin inline asm
	@%p138 st.global.b16 [ %rd173 + 0 ], { %rs340 };
	// end inline asm
	// begin inline asm
	@%p139 st.global.b16 [ %rd174 + 0 ], { %rs341 };
	// end inline asm
	// begin inline asm
	@%p140 st.global.b16 [ %rd175 + 0 ], { %rs342 };
	// end inline asm
	// begin inline asm
	@%p141 st.global.b16 [ %rd176 + 0 ], { %rs343 };
	// end inline asm
	// begin inline asm
	@%p142 st.global.b16 [ %rd177 + 0 ], { %rs344 };
	// end inline asm
	// begin inline asm
	@%p143 st.global.b16 [ %rd178 + 0 ], { %rs345 };
	// end inline asm
	// begin inline asm
	@%p144 st.global.b16 [ %rd179 + 0 ], { %rs346 };
	// end inline asm
	// begin inline asm
	@%p145 st.global.b16 [ %rd180 + 0 ], { %rs347 };
	// end inline asm
	// begin inline asm
	@%p146 st.global.b16 [ %rd181 + 0 ], { %rs348 };
	// end inline asm
	// begin inline asm
	@%p147 st.global.b16 [ %rd182 + 0 ], { %rs349 };
	// end inline asm
	// begin inline asm
	@%p148 st.global.b16 [ %rd183 + 0 ], { %rs350 };
	// end inline asm
	// begin inline asm
	@%p149 st.global.b16 [ %rd184 + 0 ], { %rs351 };
	// end inline asm
	// begin inline asm
	@%p150 st.global.b16 [ %rd185 + 0 ], { %rs352 };
	// end inline asm
	// begin inline asm
	@%p151 st.global.b16 [ %rd186 + 0 ], { %rs353 };
	// end inline asm
	// begin inline asm
	@%p152 st.global.b16 [ %rd187 + 0 ], { %rs354 };
	// end inline asm
	// begin inline asm
	@%p153 st.global.b16 [ %rd188 + 0 ], { %rs355 };
	// end inline asm
	// begin inline asm
	@%p154 st.global.b16 [ %rd189 + 0 ], { %rs356 };
	// end inline asm
	// begin inline asm
	@%p155 st.global.b16 [ %rd190 + 0 ], { %rs357 };
	// end inline asm
	// begin inline asm
	@%p156 st.global.b16 [ %rd191 + 0 ], { %rs358 };
	// end inline asm
	// begin inline asm
	@%p157 st.global.b16 [ %rd192 + 0 ], { %rs359 };
	// end inline asm
	// begin inline asm
	@%p158 st.global.b16 [ %rd193 + 0 ], { %rs360 };
	// end inline asm
	// begin inline asm
	@%p159 st.global.b16 [ %rd194 + 0 ], { %rs361 };
	// end inline asm
	.loc	1 85 4                          // implicit_gemm_kernel.py:85:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 174                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x98:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
