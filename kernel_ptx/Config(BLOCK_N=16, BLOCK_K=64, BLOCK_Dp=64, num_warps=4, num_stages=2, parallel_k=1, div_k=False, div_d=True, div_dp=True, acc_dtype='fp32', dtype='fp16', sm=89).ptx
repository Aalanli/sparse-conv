//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_89
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<64>;
	.reg .b16 	%rs<115>;
	.reg .b32 	%r<390>;
	.reg .b64 	%rd<109>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r47, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r45, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd44, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r48, %ctaid.x;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r49, %r45, 15;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r50, %r49, 31;
	shr.u32 	%r51, %r50, 28;
	add.s32 	%r52, %r49, %r51;
	shr.s32 	%r53, %r52, 4;
$L__tmp2:
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r1, %r48, %r53;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r55, %r1, %r53;
	sub.s32 	%r56, %r48, %r55;
	ld.param.u32 	%r57, [implicit_conv3d_kernel_param_8];
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r58, %r57, %r57;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r2, %r58, %r57;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r3, %tid.x;
	and.b32  	%r4, %r3, 16;
	and.b32  	%r5, %r3, 64;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r9, %r56, 4;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.gt.s32 	%p4, %r2, 0;
	shl.b32 	%r12, %r3, 3;
	mov.u32 	%r386, global_smem;
	@%p4 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph14
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r46, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r44, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd43, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd42, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd45, [implicit_conv3d_kernel_param_1];
	shr.u32 	%r6, %r3, 3;
	bfe.u32 	%r7, %r3, 3, 4;
	and.b32  	%r8, %r3, 15;
	or.b32  	%r10, %r9, %r7;
	or.b32  	%r11, %r9, %r8;
	mul.lo.s32 	%r59, %r10, %r2;
	mul.lo.s32 	%r60, %r11, %r2;
	mul.wide.s32 	%rd46, %r59, 4;
	add.s64 	%rd1, %rd45, %rd46;
	mul.wide.s32 	%rd47, %r60, 4;
	add.s64 	%rd2, %rd45, %rd47;
	add.s32 	%r15, %r46, 63;
	shr.s32 	%r61, %r15, 31;
	shr.u32 	%r62, %r61, 26;
	add.s32 	%r63, %r15, %r62;
	shr.s32 	%r64, %r63, 6;
	and.b32  	%r65, %r12, 8;
	and.b32  	%r66, %r12, 16;
	and.b32  	%r67, %r12, 24;
	and.b32  	%r68, %r12, 32;
	and.b32  	%r69, %r12, 56;
	or.b32  	%r16, %r7, 16;
	or.b32  	%r17, %r7, 32;
	or.b32  	%r18, %r7, 48;
	shl.b32 	%r389, %r1, 6;
	mul.lo.s32 	%r20, %r2, %r46;
	or.b32  	%r21, %r389, %r69;
	setp.lt.s32 	%p5, %r21, %r47;
	setp.gt.s32 	%p6, %r15, 63;
	setp.lt.s32 	%p7, %r69, %r46;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p1, %p7, %p6;
	xor.b32  	%r70, %r12, %r3;
	and.b32  	%r71, %r70, 56;
	shl.b32 	%r72, %r71, 1;
	shl.b32 	%r73, %r7, 7;
	or.b32  	%r74, %r73, %r72;
	add.s32 	%r122, %r386, %r74;
	add.s32 	%r120, %r122, 8192;
	add.s32 	%r124, %r122, 2048;
	add.s32 	%r126, %r122, 4096;
	add.s32 	%r128, %r122, 6144;
	add.s32 	%r76, %r64, -1;
	shr.u32 	%r77, %r4, 1;
	xor.b32  	%r78, %r69, %r77;
	shl.b32 	%r79, %r8, 6;
	or.b32  	%r27, %r78, %r79;
	or.b32  	%r80, %r65, 16;
	xor.b32  	%r81, %r80, %r66;
	or.b32  	%r82, %r81, %r68;
	xor.b32  	%r83, %r82, %r77;
	or.b32  	%r28, %r83, %r79;
	or.b32  	%r84, %r67, 32;
	xor.b32  	%r85, %r84, %r68;
	xor.b32  	%r86, %r85, %r77;
	or.b32  	%r29, %r86, %r79;
	or.b32  	%r87, %r65, 48;
	and.b32  	%r88, %r12, 48;
	or.b32  	%r89, %r77, %r88;
	xor.b32  	%r90, %r89, %r87;
	or.b32  	%r30, %r90, %r79;
	shr.u32 	%r388, %r3, 2;
	and.b32  	%r91, %r388, 8;
	xor.b32  	%r92, %r69, %r91;
	shr.u32 	%r93, %r5, 2;
	xor.b32  	%r32, %r92, %r93;
	shl.b32 	%r94, %r3, 6;
	and.b32  	%r33, %r94, 1984;
	or.b32  	%r34, %r32, %r33;
	or.b32  	%r95, %r93, %r91;
	xor.b32  	%r35, %r95, %r85;
	or.b32  	%r36, %r35, %r33;
	cvt.s64.s32 	%rd3, %r76;
	cvt.u64.u32 	%rd4, %r69;
	cvt.s64.s32 	%rd5, %r46;
	cvt.u64.u32 	%rd6, %r2;
	cvt.u64.u32 	%rd7, %r64;
	and.pred  	%p2, %p5, %p6;
	or.b64  	%rd8, %rd4, 64;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	or.b32  	%r37, %r69, 64;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	cvt.u64.u32 	%rd49, %r6;
	and.b64  	%rd101, %rd49, 15;
	cvt.u64.u32 	%rd10, %r46;
	or.b32  	%r96, %r7, 112;
	mad.lo.s32 	%r97, %r47, %r96, %r389;
	cvt.u64.u32 	%rd100, %r97;
	mul.lo.s32 	%r98, %r47, %r46;
	cvt.u64.u32 	%rd12, %r98;
	shl.b32 	%r99, %r47, 6;
	cvt.u64.u32 	%rd13, %r99;
	or.b32  	%r100, %r7, 96;
	mad.lo.s32 	%r101, %r47, %r100, %r389;
	cvt.u64.u32 	%rd99, %r101;
	or.b32  	%r102, %r7, 80;
	mad.lo.s32 	%r103, %r47, %r102, %r389;
	cvt.u64.u32 	%rd98, %r103;
	or.b32  	%r104, %r7, 64;
	mad.lo.s32 	%r105, %r47, %r104, %r389;
	cvt.u64.u32 	%rd97, %r105;
	mov.b16 	%rs91, 0x0000;
	mov.b64 	%rd102, 0;
	setp.lt.s32 	%p9, %r11, %r45;
	shl.b32 	%r281, %r27, 1;
	shl.b32 	%r282, %r28, 1;
	shl.b32 	%r283, %r29, 1;
	shl.b32 	%r284, %r30, 1;
	shl.b32 	%r287, %r34, 1;
	shl.b32 	%r291, %r36, 1;
	mov.u16 	%rs92, %rs91;
	mov.u16 	%rs93, %rs91;
	mov.u16 	%rs94, %rs91;
	mov.u16 	%rs95, %rs91;
	mov.u16 	%rs96, %rs91;
	mov.u16 	%rs97, %rs91;
	mov.u16 	%rs98, %rs91;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s64 	%rd102, %rd102, 1;
	add.s64 	%rd101, %rd101, %rd10;
	add.s64 	%rd100, %rd100, %rd12;
	add.s64 	%rd99, %rd99, %rd12;
	add.s64 	%rd98, %rd98, %rd12;
	add.s64 	%rd97, %rd97, %rd12;
	setp.ne.s64 	%p38, %rd102, %rd6;
	@%p38 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p8, %r10, %r45;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	shl.b64 	%rd52, %rd102, 2;
	add.s64 	%rd50, %rd1, %rd52;
	add.s64 	%rd51, %rd2, %rd52;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r106, 0xffffffffffffffff;
	@%p8 ld.global.b32 { %r106 }, [ %rd50 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r107, 0xffffffffffffffff;
	@%p9 ld.global.b32 { %r107 }, [ %rd51 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p11, %r107, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p13, %r107, %r44;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p14, %p11, %p13;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r108, 1, 0, %p14;
	shfl.sync.bfly.b32	%r109, %r108, 8, 31, -1;
	and.b32  	%r110, %r109, 1;
	setp.eq.b32 	%p15, %r110, 1;
$L__tmp3:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p16, %p14, %p15;
$L__tmp4:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r111, 1, 0, %p16;
	shfl.sync.bfly.b32	%r112, %r111, 4, 31, -1;
	and.b32  	%r113, %r112, 1;
	setp.eq.b32 	%p17, %r113, 1;
$L__tmp5:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p18, %p16, %p17;
$L__tmp6:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r114, 1, 0, %p18;
	shfl.sync.bfly.b32	%r115, %r114, 2, 31, -1;
	and.b32  	%r116, %r115, 1;
	setp.eq.b32 	%p19, %r116, 1;
$L__tmp7:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p20, %p18, %p19;
$L__tmp8:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r117, 1, 0, %p20;
	shfl.sync.bfly.b32	%r118, %r117, 1, 31, -1;
	and.b32  	%r119, %r118, 1;
	setp.eq.b32 	%p21, %r119, 1;
$L__tmp9:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p22, %p20, %p21;
$L__tmp10:
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p23, %p22;
	@%p23 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.gt.s32 	%p10, %r106, -1;
	setp.lt.s32 	%p12, %r106, %r44;
	and.pred  	%p3, %p10, %p12;
	cvt.u32.u64 	%r130, %rd4;
	setp.lt.s32 	%p24, %r15, 64;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	cvt.u32.u64 	%r131, %rd102;
	mul.lo.s32 	%r132, %r46, %r131;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r39, %r106, %r46;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r133, %r39, %r130;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd58, %r133, 2;
	add.s64 	%rd53, %rd42, %rd58;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s32 	%r134, %r132, %r7;
	add.s32 	%r135, %r132, %r16;
	add.s32 	%r136, %r132, %r17;
	add.s32 	%r137, %r132, %r18;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r138, %r134, %r47, %r21;
	mad.lo.s32 	%r139, %r135, %r47, %r21;
	mad.lo.s32 	%r140, %r136, %r47, %r21;
	mad.lo.s32 	%r141, %r137, %r47, %r21;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd59, %r138, 2;
	add.s64 	%rd54, %rd43, %rd59;
	mul.wide.s32 	%rd60, %r139, 2;
	add.s64 	%rd55, %rd43, %rd60;
	mul.wide.s32 	%rd61, %r140, 2;
	add.s64 	%rd56, %rd43, %rd61;
	mul.wide.s32 	%rd62, %r141, 2;
	add.s64 	%rd57, %rd43, %rd62;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p25, %r134, %r20;
	setp.lt.s32 	%p26, %r135, %r20;
	setp.lt.s32 	%p27, %r136, %r20;
	setp.lt.s32 	%p28, %r137, %r20;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	selp.b32 	%r142, 16, 0, %p1;
	selp.b32 	%r121, %r142, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r120 + 0 ], [ %rd53 + 0 ], 0x10, %r121;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r143, 16, 0, %p2;
	selp.b32 	%r123, %r143, 0, %p25;
	// begin inline asm
	cp.async.cg.shared.global [ %r122 + 0 ], [ %rd54 + 0 ], 0x10, %r123;
	// end inline asm
	selp.b32 	%r125, %r143, 0, %p26;
	// begin inline asm
	cp.async.cg.shared.global [ %r124 + 0 ], [ %rd55 + 0 ], 0x10, %r125;
	// end inline asm
	selp.b32 	%r127, %r143, 0, %p27;
	// begin inline asm
	cp.async.cg.shared.global [ %r126 + 0 ], [ %rd56 + 0 ], 0x10, %r127;
	// end inline asm
	selp.b32 	%r129, %r143, 0, %p28;
	// begin inline asm
	cp.async.cg.shared.global [ %r128 + 0 ], [ %rd57 + 0 ], 0x10, %r129;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p24 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r145, %r37, %r39;
	cvt.u64.u32 	%rd23, %r145;
	mov.b32 	%r387, -1;
	mov.b64 	%rd107, 0;
	mov.u64 	%rd103, %rd97;
	mov.u64 	%rd104, %rd98;
	mov.u64 	%rd105, %rd99;
	mov.u64 	%rd106, %rd100;
	mov.u64 	%rd108, %rd107;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p30, %rd108, %rd3;
	add.s32 	%r276, %r387, 1;
	setp.gt.u32 	%p31, %r387, 2147483646;
	selp.b32 	%r387, %r276, 0, %p31;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r277, %r387, 11;
	add.s32 	%r279, %r386, %r277;
	add.s32 	%r280, %r279, 8192;
	add.s32 	%r150, %r280, %r281;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r190, %r191, %r192, %r193}, [%r150];
	// end inline asm
	add.s32 	%r155, %r280, %r282;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r210, %r211, %r212, %r213}, [%r155];
	// end inline asm
	add.s32 	%r160, %r280, %r283;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r230, %r231, %r232, %r233}, [%r160];
	// end inline asm
	add.s32 	%r165, %r280, %r284;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r250, %r251, %r252, %r253}, [%r165];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	shl.b32 	%r285, %r387, 13;
	add.s32 	%r286, %r386, %r285;
	add.s32 	%r170, %r286, %r287;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r166, %r167, %r168, %r169}, [%r170];
	// end inline asm
	add.s32 	%r288, %r32, %r33;
	shl.b32 	%r289, %r288, 1;
	add.s32 	%r290, %r286, %r289;
	add.s32 	%r175, %r290, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r171, %r172, %r173, %r174}, [%r175];
	// end inline asm
	add.s32 	%r180, %r286, %r291;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r176, %r177, %r178, %r179}, [%r180];
	// end inline asm
	add.s32 	%r292, %r35, %r33;
	shl.b32 	%r293, %r292, 1;
	add.s32 	%r294, %r286, %r293;
	add.s32 	%r185, %r294, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r181, %r182, %r183, %r184}, [%r185];
	// end inline asm
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	mov.b32 	%r206, {%rs91, %rs92};
	mov.b32 	%r207, {%rs93, %rs94};
	mov.b32 	%r216, {%rs95, %rs96};
	mov.b32 	%r217, {%rs97, %rs98};
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r206, %r207 }, { %r190, %r191, %r192, %r193 }, { %r166, %r167 }, { %r206, %r207 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r216, %r217 }, { %r190, %r191, %r192, %r193 }, { %r176, %r177 }, { %r216, %r217 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r206, %r207 }, { %r210, %r211, %r212, %r213 }, { %r168, %r169 }, { %r206, %r207 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r216, %r217 }, { %r210, %r211, %r212, %r213 }, { %r178, %r179 }, { %r216, %r217 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r206, %r207 }, { %r230, %r231, %r232, %r233 }, { %r171, %r172 }, { %r206, %r207 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r216, %r217 }, { %r230, %r231, %r232, %r233 }, { %r181, %r182 }, { %r216, %r217 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r206, %r207 }, { %r250, %r251, %r252, %r253 }, { %r173, %r174 }, { %r206, %r207 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r216, %r217 }, { %r250, %r251, %r252, %r253 }, { %r183, %r184 }, { %r216, %r217 };
	// end inline asm
	mov.b32 	{%rs91, %rs92}, %r206;
	mov.b32 	{%rs93, %rs94}, %r207;
	mov.b32 	{%rs95, %rs96}, %r216;
	mov.b32 	{%rs97, %rs98}, %r217;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd108, %rd108, 1;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd69, %rd23, %rd107;
	cvt.u32.u64 	%r295, %rd69;
	mul.wide.s32 	%rd70, %r295, 2;
	add.s64 	%rd64, %rd42, %rd70;
	.loc	1 70 112                        // implicit_gemm_kernel.py:70:112
	add.s64 	%rd71, %rd8, %rd107;
	setp.lt.s64 	%p32, %rd71, %rd5;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s64 	%rd72, %rd101, %rd107;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	add.s64 	%rd73, %rd4, %rd103;
	add.s64 	%rd74, %rd4, %rd104;
	add.s64 	%rd75, %rd4, %rd105;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s64 	%rd76, %rd4, %rd106;
	cvt.u32.u64 	%r296, %rd73;
	mul.wide.s32 	%rd77, %r296, 2;
	add.s64 	%rd65, %rd43, %rd77;
	cvt.u32.u64 	%r297, %rd74;
	mul.wide.s32 	%rd78, %r297, 2;
	add.s64 	%rd66, %rd43, %rd78;
	cvt.u32.u64 	%r298, %rd75;
	mul.wide.s32 	%rd79, %r298, 2;
	add.s64 	%rd67, %rd43, %rd79;
	cvt.u32.u64 	%r299, %rd76;
	mul.wide.s32 	%rd80, %r299, 2;
	add.s64 	%rd68, %rd43, %rd80;
	cvt.u32.u64 	%r300, %rd72;
	add.s32 	%r301, %r300, 64;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p33, %r301, %r20;
	add.s32 	%r302, %r300, 80;
	setp.lt.s32 	%p34, %r302, %r20;
	add.s32 	%r303, %r300, 96;
	setp.lt.s32 	%p35, %r303, %r20;
	add.s32 	%r304, %r300, 112;
	setp.lt.s32 	%p36, %r304, %r20;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r305, 16, 0, %p32;
	selp.b32 	%r306, %r305, 0, %p3;
	selp.b32 	%r267, %r306, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r120 + 0 ], [ %rd64 + 0 ], 0x10, %r267;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r307, 16, 0, %p33;
	selp.b32 	%r308, %r307, 0, %p5;
	selp.b32 	%r269, %r308, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r122 + 0 ], [ %rd65 + 0 ], 0x10, %r269;
	// end inline asm
	selp.b32 	%r309, 16, 0, %p34;
	selp.b32 	%r310, %r309, 0, %p5;
	selp.b32 	%r271, %r310, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r124 + 0 ], [ %rd66 + 0 ], 0x10, %r271;
	// end inline asm
	selp.b32 	%r311, 16, 0, %p35;
	selp.b32 	%r312, %r311, 0, %p5;
	selp.b32 	%r273, %r312, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r126 + 0 ], [ %rd67 + 0 ], 0x10, %r273;
	// end inline asm
	selp.b32 	%r313, 16, 0, %p36;
	selp.b32 	%r314, %r313, 0, %p5;
	selp.b32 	%r275, %r314, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r128 + 0 ], [ %rd68 + 0 ], 0x10, %r275;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd107, %rd107, 64;
	add.s64 	%rd106, %rd106, %rd13;
	add.s64 	%rd105, %rd105, %rd13;
	add.s64 	%rd104, %rd104, %rd13;
	add.s64 	%rd103, %rd103, %rd13;
	setp.ne.s64 	%p37, %rd7, %rd108;
	@%p37 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge15_crit_edge
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r389, %r1, 6;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	shr.u32 	%r388, %r3, 2;
	mov.b16 	%rs91, 0;
	mov.u16 	%rs92, %rs91;
	mov.u16 	%rs93, %rs91;
	mov.u16 	%rs94, %rs91;
	mov.u16 	%rs95, %rs91;
	mov.u16 	%rs96, %rs91;
	mov.u16 	%rs97, %rs91;
	mov.u16 	%rs98, %rs91;
$L__BB0_9:                              // %._crit_edge15
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	shr.u32 	%r323, %r5, 6;
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r324, %r9, %r323;
	or.b32  	%r325, %r324, 2;
	or.b32  	%r326, %r324, 4;
	or.b32  	%r327, %r324, 6;
	or.b32  	%r328, %r324, 8;
	or.b32  	%r329, %r324, 10;
	or.b32  	%r330, %r324, 12;
	or.b32  	%r331, %r324, 14;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r332, %r324, %r47;
	shl.b32 	%r333, %r47, 1;
	add.s32 	%r334, %r332, %r333;
	add.s32 	%r335, %r334, %r333;
	add.s32 	%r336, %r335, %r333;
	add.s32 	%r337, %r336, %r333;
	add.s32 	%r338, %r337, %r333;
	add.s32 	%r339, %r338, %r333;
	add.s32 	%r340, %r339, %r333;
	.loc	1 87 33                         // implicit_gemm_kernel.py:87:33
	and.b32  	%r341, %r3, 63;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r342, %r389, %r341;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r343, %r342, %r332;
	add.s32 	%r344, %r342, %r334;
	add.s32 	%r345, %r342, %r335;
	add.s32 	%r346, %r342, %r336;
	add.s32 	%r347, %r342, %r337;
	add.s32 	%r348, %r342, %r338;
	add.s32 	%r349, %r342, %r339;
	add.s32 	%r350, %r342, %r340;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd89, %r343, 2;
	add.s64 	%rd81, %rd44, %rd89;
	mul.wide.s32 	%rd90, %r344, 2;
	add.s64 	%rd82, %rd44, %rd90;
	mul.wide.s32 	%rd91, %r345, 2;
	add.s64 	%rd83, %rd44, %rd91;
	mul.wide.s32 	%rd92, %r346, 2;
	add.s64 	%rd84, %rd44, %rd92;
	mul.wide.s32 	%rd93, %r347, 2;
	add.s64 	%rd85, %rd44, %rd93;
	mul.wide.s32 	%rd94, %r348, 2;
	add.s64 	%rd86, %rd44, %rd94;
	mul.wide.s32 	%rd95, %r349, 2;
	add.s64 	%rd87, %rd44, %rd95;
	mul.wide.s32 	%rd96, %r350, 2;
	add.s64 	%rd88, %rd44, %rd96;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p55, %r324, %r45;
	setp.lt.s32 	%p56, %r325, %r45;
	setp.lt.s32 	%p57, %r326, %r45;
	setp.lt.s32 	%p58, %r327, %r45;
	setp.lt.s32 	%p59, %r328, %r45;
	setp.lt.s32 	%p60, %r329, %r45;
	setp.lt.s32 	%p61, %r330, %r45;
	setp.lt.s32 	%p62, %r331, %r45;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p63, %r342, %r47;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p47, %p55, %p63;
	and.pred  	%p48, %p56, %p63;
	and.pred  	%p49, %p57, %p63;
	and.pred  	%p50, %p58, %p63;
	and.pred  	%p51, %p59, %p63;
	and.pred  	%p52, %p60, %p63;
	and.pred  	%p53, %p61, %p63;
	and.pred  	%p54, %p62, %p63;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	shl.b32 	%r351, %r3, 4;
	and.b32  	%r352, %r351, 48;
	and.b32  	%r353, %r388, 3;
	or.b32  	%r354, %r353, %r352;
	shr.u32 	%r355, %r4, 2;
	or.b32  	%r356, %r354, %r355;
	shl.b32 	%r357, %r3, 1;
	and.b32  	%r358, %r357, 192;
	or.b32  	%r359, %r356, %r358;
	and.b32  	%r360, %r12, 504;
	or.b32  	%r361, %r360, %r323;
	shr.u32 	%r362, %r359, 2;
	and.b32  	%r363, %r362, 60;
	add.s32 	%r365, %r386, %r363;
	shl.b32 	%r366, %r359, 1;
	add.s32 	%r315, %r365, %r366;
	mov.pred 	%p39, -1;
	// begin inline asm
	@%p39 st.shared.b16 [ %r315 + 0 ], %rs91;
	// end inline asm
	or.b32  	%r367, %r359, 8;
	shr.u32 	%r368, %r367, 2;
	and.b32  	%r369, %r368, 62;
	add.s32 	%r370, %r386, %r369;
	add.s32 	%r371, %r370, %r366;
	add.s32 	%r316, %r371, 16;
	// begin inline asm
	@%p39 st.shared.b16 [ %r316 + 0 ], %rs92;
	// end inline asm
	or.b32  	%r372, %r359, 256;
	shr.u32 	%r373, %r372, 2;
	and.b32  	%r374, %r373, 124;
	add.s32 	%r375, %r386, %r374;
	add.s32 	%r376, %r375, %r366;
	add.s32 	%r317, %r376, 512;
	// begin inline asm
	@%p39 st.shared.b16 [ %r317 + 0 ], %rs95;
	// end inline asm
	or.b32  	%r377, %r359, 264;
	shr.u32 	%r378, %r377, 2;
	and.b32  	%r379, %r378, 126;
	add.s32 	%r380, %r386, %r379;
	add.s32 	%r381, %r380, %r366;
	add.s32 	%r318, %r381, 528;
	// begin inline asm
	@%p39 st.shared.b16 [ %r318 + 0 ], %rs96;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r382, %r360, 2;
	add.s32 	%r383, %r386, %r382;
	shl.b32 	%r384, %r361, 1;
	add.s32 	%r385, %r383, %r384;
	ld.shared.u16 	%rs67, [%r385];
	ld.shared.u16 	%rs68, [%r385+4];
	ld.shared.u16 	%rs69, [%r385+8];
	ld.shared.u16 	%rs70, [%r385+12];
	bar.sync 	0;
	// begin inline asm
	@%p39 st.shared.b16 [ %r315 + 0 ], %rs93;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r316 + 0 ], %rs94;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r317 + 0 ], %rs97;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r318 + 0 ], %rs98;
	// end inline asm
	bar.sync 	0;
	ld.shared.u16 	%rs71, [%r385];
	ld.shared.u16 	%rs72, [%r385+4];
	ld.shared.u16 	%rs73, [%r385+8];
	ld.shared.u16 	%rs74, [%r385+12];
	// begin inline asm
	@%p47 st.global.b16 [ %rd81 + 0 ], { %rs67 };
	// end inline asm
	// begin inline asm
	@%p48 st.global.b16 [ %rd82 + 0 ], { %rs68 };
	// end inline asm
	// begin inline asm
	@%p49 st.global.b16 [ %rd83 + 0 ], { %rs69 };
	// end inline asm
	// begin inline asm
	@%p50 st.global.b16 [ %rd84 + 0 ], { %rs70 };
	// end inline asm
	// begin inline asm
	@%p51 st.global.b16 [ %rd85 + 0 ], { %rs71 };
	// end inline asm
	// begin inline asm
	@%p52 st.global.b16 [ %rd86 + 0 ], { %rs72 };
	// end inline asm
	// begin inline asm
	@%p53 st.global.b16 [ %rd87 + 0 ], { %rs73 };
	// end inline asm
	// begin inline asm
	@%p54 st.global.b16 [ %rd88 + 0 ], { %rs74 };
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 174                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x98:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
