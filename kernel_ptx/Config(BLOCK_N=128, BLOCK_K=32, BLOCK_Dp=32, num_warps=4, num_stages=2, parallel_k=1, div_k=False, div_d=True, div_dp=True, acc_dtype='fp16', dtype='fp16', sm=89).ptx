//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_89
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<136>;
	.reg .b16 	%rs<467>;
	.reg .b32 	%r<593>;
	.reg .b64 	%rd<125>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r66, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r64, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd23, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r67, %ctaid.x;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r68, %r64, 127;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r69, %r68, 31;
	shr.u32 	%r70, %r69, 25;
	add.s32 	%r71, %r68, %r70;
	shr.s32 	%r72, %r71, 7;
$L__tmp2:
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r1, %r67, %r72;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r74, %r1, %r72;
	sub.s32 	%r75, %r67, %r74;
	ld.param.u32 	%r76, [implicit_conv3d_kernel_param_8];
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r77, %r76, %r76;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r2, %r77, %r76;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r3, %tid.x;
	and.b32  	%r4, %r3, 31;
	and.b32  	%r5, %r3, 16;
	and.b32  	%r6, %r3, 64;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r8, %r75, 7;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.gt.s32 	%p9, %r2, 0;
	shr.u32 	%r10, %r3, 2;
	mov.u32 	%r586, global_smem;
	@%p9 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph12
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r65, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r63, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd22, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd21, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd24, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	and.b32  	%r7, %r3, 127;
	or.b32  	%r9, %r8, %r7;
	mul.lo.s32 	%r78, %r9, %r2;
	mul.wide.s32 	%rd25, %r78, 4;
	add.s64 	%rd1, %rd24, %rd25;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r80, %r3, 15;
	shr.u32 	%r592, %r3, 5;
	and.b32  	%r81, %r10, 15;
	shr.u32 	%r82, %r6, 2;
	or.b32  	%r15, %r81, %r82;
	shl.b32 	%r83, %r7, 2;
	add.s32 	%r113, %r586, %r83;
	shl.b32 	%r85, %r15, 2;
	add.s32 	%r17, %r586, %r85;
	bfe.u32 	%r86, %r3, 5, 2;
	add.s32 	%r115, %r586, %r86;
	setp.lt.s32 	%p10, %r3, 4;
	add.s32 	%r116, %r586, %r3;
	and.b32  	%r87, %r3, 3;
	setp.eq.s32 	%p11, %r87, 0;
	and.pred  	%p19, %p10, %p11;
	add.s32 	%r20, %r65, 31;
	shr.s32 	%r88, %r20, 31;
	shr.u32 	%r89, %r88, 27;
	add.s32 	%r90, %r20, %r89;
	shr.s32 	%r91, %r90, 5;
	shl.b32 	%r92, %r3, 3;
	and.b32  	%r21, %r92, 24;
	add.s32 	%r128, %r586, %r7;
	add.s32 	%r23, %r586, %r15;
	shl.b32 	%r591, %r1, 5;
	mul.lo.s32 	%r25, %r2, %r65;
	or.b32  	%r26, %r591, %r21;
	setp.lt.s32 	%p12, %r26, %r66;
	setp.gt.s32 	%p13, %r20, 31;
	setp.lt.s32 	%p14, %r21, %r65;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p2, %p14, %p13;
	xor.b32  	%r93, %r92, %r3;
	and.b32  	%r94, %r93, 24;
	shl.b32 	%r95, %r15, 6;
	shl.b32 	%r96, %r94, 1;
	or.b32  	%r97, %r95, %r96;
	add.s32 	%r129, %r586, %r97;
	add.s32 	%r131, %r129, 2048;
	add.s32 	%r133, %r129, 4096;
	add.s32 	%r135, %r129, 6144;
	add.s32 	%r137, %r129, 8192;
	add.s32 	%r98, %r91, -1;
	shl.b32 	%r99, %r3, 2;
	and.b32  	%r100, %r99, 8;
	and.b32  	%r101, %r99, 16;
	and.b32  	%r102, %r99, 24;
	shr.u32 	%r103, %r5, 1;
	xor.b32  	%r32, %r102, %r103;
	shr.u32 	%r104, %r3, 1;
	and.b32  	%r590, %r104, 48;
	or.b32  	%r105, %r590, %r80;
	shl.b32 	%r34, %r105, 5;
	or.b32  	%r35, %r32, %r34;
	or.b32  	%r106, %r100, 16;
	xor.b32  	%r107, %r106, %r101;
	xor.b32  	%r36, %r107, %r103;
	or.b32  	%r37, %r36, %r34;
	shl.b32 	%r108, %r4, 5;
	or.b32  	%r38, %r102, %r108;
	xor.b32  	%r39, %r38, 8;
	or.b32  	%r40, %r107, %r108;
	xor.b32  	%r41, %r38, 24;
	cvt.s64.s32 	%rd2, %r98;
	cvt.u64.u32 	%rd27, %r21;
	cvt.s64.s32 	%rd3, %r65;
	cvt.u64.u32 	%rd4, %r2;
	cvt.u64.u32 	%rd5, %r91;
	and.pred  	%p3, %p12, %p13;
	or.b64  	%rd6, %rd27, 32;
	add.s32 	%r109, %r82, %r81;
	add.s32 	%r110, %r109, 32;
	cvt.u64.u32 	%rd121, %r110;
	cvt.u64.u32 	%rd8, %r65;
	mad.lo.s32 	%r111, %r66, %r110, %r591;
	add.s32 	%r587, %r111, %r21;
	mul.lo.s32 	%r43, %r66, %r65;
	shl.b32 	%r44, %r66, 5;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	or.b32  	%r45, %r21, 32;
	mov.b16 	%rs371, 0x0000;
	mov.b64 	%rd122, 0;
	shl.b32 	%r370, %r35, 1;
	shl.b32 	%r371, %r37, 1;
	shl.b32 	%r382, %r39, 1;
	shl.b32 	%r383, %r40, 1;
	shl.b32 	%r384, %r41, 1;
	mov.u16 	%rs372, %rs371;
	mov.u16 	%rs373, %rs371;
	mov.u16 	%rs374, %rs371;
	mov.u16 	%rs375, %rs371;
	mov.u16 	%rs376, %rs371;
	mov.u16 	%rs377, %rs371;
	mov.u16 	%rs378, %rs371;
	mov.u16 	%rs379, %rs371;
	mov.u16 	%rs380, %rs371;
	mov.u16 	%rs381, %rs371;
	mov.u16 	%rs382, %rs371;
	mov.u16 	%rs383, %rs371;
	mov.u16 	%rs384, %rs371;
	mov.u16 	%rs385, %rs371;
	mov.u16 	%rs386, %rs371;
	mov.u16 	%rs387, %rs371;
	mov.u16 	%rs388, %rs371;
	mov.u16 	%rs389, %rs371;
	mov.u16 	%rs390, %rs371;
	mov.u16 	%rs391, %rs371;
	mov.u16 	%rs392, %rs371;
	mov.u16 	%rs393, %rs371;
	mov.u16 	%rs394, %rs371;
	mov.u16 	%rs395, %rs371;
	mov.u16 	%rs396, %rs371;
	mov.u16 	%rs397, %rs371;
	mov.u16 	%rs398, %rs371;
	mov.u16 	%rs399, %rs371;
	mov.u16 	%rs400, %rs371;
	mov.u16 	%rs401, %rs371;
	mov.u16 	%rs402, %rs371;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s64 	%rd122, %rd122, 1;
	add.s64 	%rd121, %rd121, %rd8;
	add.s32 	%r587, %r587, %r43;
	setp.ne.s64 	%p38, %rd122, %rd4;
	@%p38 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	setp.eq.s32 	%p17, %r4, 0;
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p15, %r9, %r64;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	shl.b64 	%rd29, %rd122, 2;
	add.s64 	%rd28, %rd1, %rd29;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r114, 0xffffffffffffffff;
	@%p15 ld.global.b32 { %r114 }, [ %rd28 + 0 ];
	// end inline asm
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	bar.sync 	0;
	mov.pred 	%p16, -1;
	// begin inline asm
	@%p16 st.shared.b32 [ %r113 + 0 ], %r114;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r47, [%r17];
	ld.shared.u32 	%r48, [%r17+128];
	ld.shared.u32 	%r49, [%r17+256];
	ld.shared.u32 	%r50, [%r17+384];
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p20, %r114, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p21, %r114, %r63;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p4, %p20, %p21;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	bar.sync 	0;
	selp.u32 	%r118, 1, 0, %p4;
	mov.b32 	%r119, -1;
	redux.sync.or.b32 %r120, %r118, %r119;
	cvt.u16.u32 	%rs230, %r120;
	and.b16  	%rs227, %rs230, 1;
	// begin inline asm
	@%p17 st.shared.b8 [ %r115 + 0 ], %rs227;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p10 ld.shared.b8 %rs228, [ %r116 + 0 ];
	// end inline asm
	cvt.u32.u16 	%r121, %rs228;
	and.b16  	%rs231, %rs228, 1;
	setp.eq.b16 	%p22, %rs231, 1;
	and.b32  	%r122, %r121, 1;
	shfl.sync.bfly.b32	%r123, %r122, 2, 31, -1;
	and.b32  	%r124, %r123, 1;
	setp.eq.b32 	%p23, %r124, 1;
$L__tmp3:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p24, %p22, %p23;
$L__tmp4:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r125, 1, 0, %p24;
	shfl.sync.bfly.b32	%r126, %r125, 1, 31, -1;
	and.b32  	%r127, %r126, 1;
	setp.eq.b32 	%p25, %r127, 1;
$L__tmp5:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p26, %p24, %p25;
$L__tmp6:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u16 	%rs229, 1, 0, %p26;
	// begin inline asm
	@%p19 st.shared.b8 [ %r116 + 0 ], %rs229;
	// end inline asm
	bar.sync 	0;
	ld.shared.u8 	%rs232, [global_smem];
	and.b16  	%rs233, %rs232, 1;
	setp.eq.b16 	%p27, %rs233, 1;
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p28, %p27;
	@%p28 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.lt.s32 	%p30, %r20, 32;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	cvt.u32.u64 	%r139, %rd122;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r51, %r47, %r65;
	mul.lo.s32 	%r52, %r48, %r65;
	mul.lo.s32 	%r53, %r49, %r65;
	mul.lo.s32 	%r54, %r50, %r65;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r140, %r51, %r21;
	add.s32 	%r141, %r52, %r21;
	add.s32 	%r142, %r53, %r21;
	add.s32 	%r143, %r54, %r21;
	.loc	1 70 64                         // implicit_gemm_kernel.py:70:64
	bar.sync 	0;
	selp.u16 	%rs234, 1, 0, %p4;
	// begin inline asm
	@%p16 st.shared.b8 [ %r128 + 0 ], %rs234;
	// end inline asm
	bar.sync 	0;
	ld.shared.u8 	%rs235, [%r23];
	ld.shared.u8 	%rs236, [%r23+32];
	ld.shared.u8 	%rs237, [%r23+64];
	ld.shared.u8 	%rs238, [%r23+96];
	and.b16  	%rs239, %rs235, 1;
	setp.eq.b16 	%p5, %rs239, 1;
	and.b16  	%rs240, %rs236, 1;
	setp.eq.b16 	%p6, %rs240, 1;
	and.b16  	%rs241, %rs237, 1;
	setp.eq.b16 	%p7, %rs241, 1;
	and.b16  	%rs242, %rs238, 1;
	setp.eq.b16 	%p8, %rs242, 1;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd35, %r140, 2;
	add.s64 	%rd30, %rd21, %rd35;
	mul.wide.s32 	%rd36, %r141, 2;
	add.s64 	%rd31, %rd21, %rd36;
	mul.wide.s32 	%rd37, %r142, 2;
	add.s64 	%rd32, %rd21, %rd37;
	mul.wide.s32 	%rd38, %r143, 2;
	add.s64 	%rd33, %rd21, %rd38;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	mad.lo.s32 	%r144, %r65, %r139, %r15;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r145, %r144, %r66, %r26;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd39, %r145, 2;
	add.s64 	%rd34, %rd22, %rd39;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p31, %r144, %r25;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r146, 16, 0, %p5;
	selp.b32 	%r130, %r146, 0, %p2;
	// begin inline asm
	cp.async.cg.shared.global [ %r129 + 0 ], [ %rd30 + 0 ], 0x10, %r130;
	// end inline asm
	selp.b32 	%r147, 16, 0, %p6;
	selp.b32 	%r132, %r147, 0, %p2;
	// begin inline asm
	cp.async.cg.shared.global [ %r131 + 0 ], [ %rd31 + 0 ], 0x10, %r132;
	// end inline asm
	selp.b32 	%r148, 16, 0, %p7;
	selp.b32 	%r134, %r148, 0, %p2;
	// begin inline asm
	cp.async.cg.shared.global [ %r133 + 0 ], [ %rd32 + 0 ], 0x10, %r134;
	// end inline asm
	selp.b32 	%r149, 16, 0, %p8;
	selp.b32 	%r136, %r149, 0, %p2;
	// begin inline asm
	cp.async.cg.shared.global [ %r135 + 0 ], [ %rd33 + 0 ], 0x10, %r136;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r150, 16, 0, %p3;
	selp.b32 	%r138, %r150, 0, %p31;
	// begin inline asm
	cp.async.cg.shared.global [ %r137 + 0 ], [ %rd34 + 0 ], 0x10, %r138;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p30 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r152, %r45, %r54;
	cvt.u64.u32 	%rd11, %r152;
	add.s32 	%r153, %r45, %r53;
	cvt.u64.u32 	%rd12, %r153;
	add.s32 	%r154, %r45, %r52;
	cvt.u64.u32 	%rd13, %r154;
	add.s32 	%r155, %r45, %r51;
	cvt.u64.u32 	%rd14, %r155;
	mov.b32 	%r589, -1;
	mov.b64 	%rd123, 0;
	mov.u32 	%r588, %r587;
	mov.u64 	%rd124, %rd123;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p33, %rd124, %rd2;
	add.s32 	%r366, %r589, 1;
	setp.gt.u32 	%p34, %r589, 2147483646;
	selp.b32 	%r589, %r366, 0, %p34;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r367, %r589, 13;
	add.s32 	%r369, %r586, %r367;
	add.s32 	%r160, %r369, %r370;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r200, %r201, %r202, %r203}, [%r160];
	// end inline asm
	add.s32 	%r165, %r369, %r371;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r280, %r281, %r282, %r283}, [%r165];
	// end inline asm
	add.s32 	%r372, %r34, %r32;
	shl.b32 	%r373, %r372, 1;
	add.s32 	%r374, %r369, %r373;
	add.s32 	%r170, %r374, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r240, %r241, %r242, %r243}, [%r170];
	// end inline asm
	add.s32 	%r375, %r36, %r34;
	shl.b32 	%r376, %r375, 1;
	add.s32 	%r377, %r369, %r376;
	add.s32 	%r175, %r377, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r320, %r321, %r322, %r323}, [%r175];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	shl.b32 	%r378, %r589, 11;
	add.s32 	%r379, %r586, %r378;
	add.s32 	%r380, %r379, 8192;
	shl.b32 	%r381, %r38, 1;
	add.s32 	%r180, %r380, %r381;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r204, %r205, %r284, %r285}, [%r180];
	// end inline asm
	add.s32 	%r185, %r380, %r382;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r214, %r215, %r294, %r295}, [%r185];
	// end inline asm
	add.s32 	%r190, %r380, %r383;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r224, %r225, %r304, %r305}, [%r190];
	// end inline asm
	add.s32 	%r195, %r380, %r384;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r234, %r235, %r314, %r315}, [%r195];
	// end inline asm
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	mov.b32 	%r276, {%rs371, %rs372};
	mov.b32 	%r277, {%rs373, %rs374};
	mov.b32 	%r286, {%rs375, %rs376};
	mov.b32 	%r287, {%rs377, %rs378};
	mov.b32 	%r296, {%rs379, %rs380};
	mov.b32 	%r297, {%rs381, %rs382};
	mov.b32 	%r306, {%rs383, %rs384};
	mov.b32 	%r307, {%rs385, %rs386};
	mov.b32 	%r316, {%rs387, %rs388};
	mov.b32 	%r317, {%rs389, %rs390};
	mov.b32 	%r326, {%rs391, %rs392};
	mov.b32 	%r327, {%rs393, %rs394};
	mov.b32 	%r336, {%rs395, %rs396};
	mov.b32 	%r337, {%rs397, %rs398};
	mov.b32 	%r346, {%rs399, %rs400};
	mov.b32 	%r347, {%rs401, %rs402};
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r276, %r277 }, { %r200, %r201, %r202, %r203 }, { %r204, %r205 }, { %r276, %r277 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r286, %r287 }, { %r200, %r201, %r202, %r203 }, { %r214, %r215 }, { %r286, %r287 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r296, %r297 }, { %r200, %r201, %r202, %r203 }, { %r224, %r225 }, { %r296, %r297 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r306, %r307 }, { %r200, %r201, %r202, %r203 }, { %r234, %r235 }, { %r306, %r307 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r316, %r317 }, { %r240, %r241, %r242, %r243 }, { %r204, %r205 }, { %r316, %r317 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r326, %r327 }, { %r240, %r241, %r242, %r243 }, { %r214, %r215 }, { %r326, %r327 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r336, %r337 }, { %r240, %r241, %r242, %r243 }, { %r224, %r225 }, { %r336, %r337 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r346, %r347 }, { %r240, %r241, %r242, %r243 }, { %r234, %r235 }, { %r346, %r347 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r276, %r277 }, { %r280, %r281, %r282, %r283 }, { %r284, %r285 }, { %r276, %r277 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r286, %r287 }, { %r280, %r281, %r282, %r283 }, { %r294, %r295 }, { %r286, %r287 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r296, %r297 }, { %r280, %r281, %r282, %r283 }, { %r304, %r305 }, { %r296, %r297 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r306, %r307 }, { %r280, %r281, %r282, %r283 }, { %r314, %r315 }, { %r306, %r307 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r316, %r317 }, { %r320, %r321, %r322, %r323 }, { %r284, %r285 }, { %r316, %r317 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r326, %r327 }, { %r320, %r321, %r322, %r323 }, { %r294, %r295 }, { %r326, %r327 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r336, %r337 }, { %r320, %r321, %r322, %r323 }, { %r304, %r305 }, { %r336, %r337 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r346, %r347 }, { %r320, %r321, %r322, %r323 }, { %r314, %r315 }, { %r346, %r347 };
	// end inline asm
	mov.b32 	{%rs371, %rs372}, %r276;
	mov.b32 	{%rs373, %rs374}, %r277;
	mov.b32 	{%rs375, %rs376}, %r286;
	mov.b32 	{%rs377, %rs378}, %r287;
	mov.b32 	{%rs379, %rs380}, %r296;
	mov.b32 	{%rs381, %rs382}, %r297;
	mov.b32 	{%rs383, %rs384}, %r306;
	mov.b32 	{%rs385, %rs386}, %r307;
	mov.b32 	{%rs387, %rs388}, %r316;
	mov.b32 	{%rs389, %rs390}, %r317;
	mov.b32 	{%rs391, %rs392}, %r326;
	mov.b32 	{%rs393, %rs394}, %r327;
	mov.b32 	{%rs395, %rs396}, %r336;
	mov.b32 	{%rs397, %rs398}, %r337;
	mov.b32 	{%rs399, %rs400}, %r346;
	mov.b32 	{%rs401, %rs402}, %r347;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd124, %rd124, 1;
	.loc	1 69 89                         // implicit_gemm_kernel.py:69:89
	add.s64 	%rd46, %rd14, %rd123;
	add.s64 	%rd47, %rd13, %rd123;
	add.s64 	%rd48, %rd12, %rd123;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd49, %rd11, %rd123;
	cvt.u32.u64 	%r385, %rd46;
	mul.wide.s32 	%rd50, %r385, 2;
	add.s64 	%rd41, %rd21, %rd50;
	cvt.u32.u64 	%r386, %rd47;
	mul.wide.s32 	%rd51, %r386, 2;
	add.s64 	%rd42, %rd21, %rd51;
	cvt.u32.u64 	%r387, %rd48;
	mul.wide.s32 	%rd52, %r387, 2;
	add.s64 	%rd43, %rd21, %rd52;
	cvt.u32.u64 	%r388, %rd49;
	mul.wide.s32 	%rd53, %r388, 2;
	add.s64 	%rd44, %rd21, %rd53;
	.loc	1 70 112                        // implicit_gemm_kernel.py:70:112
	add.s64 	%rd54, %rd6, %rd123;
	setp.lt.s64 	%p35, %rd54, %rd3;
	.loc	1 73 66                         // implicit_gemm_kernel.py:73:66
	add.s64 	%rd55, %rd121, %rd123;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd56, %r588, 2;
	add.s64 	%rd45, %rd22, %rd56;
	cvt.u32.u64 	%r389, %rd55;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p36, %r389, %r25;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r391, %r146, 0, %p35;
	selp.b32 	%r357, %r391, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r129 + 0 ], [ %rd41 + 0 ], 0x10, %r357;
	// end inline asm
	selp.b32 	%r393, %r147, 0, %p35;
	selp.b32 	%r359, %r393, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r131 + 0 ], [ %rd42 + 0 ], 0x10, %r359;
	// end inline asm
	selp.b32 	%r395, %r148, 0, %p35;
	selp.b32 	%r361, %r395, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r133 + 0 ], [ %rd43 + 0 ], 0x10, %r361;
	// end inline asm
	selp.b32 	%r397, %r149, 0, %p35;
	selp.b32 	%r363, %r397, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r135 + 0 ], [ %rd44 + 0 ], 0x10, %r363;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r398, 16, 0, %p36;
	selp.b32 	%r399, %r398, 0, %p12;
	selp.b32 	%r365, %r399, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r137 + 0 ], [ %rd45 + 0 ], 0x10, %r365;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd123, %rd123, 32;
	add.s32 	%r588, %r588, %r44;
	setp.ne.s64 	%p37, %rd5, %rd124;
	@%p37 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge13_crit_edge
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	shr.u32 	%r592, %r3, 5;
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r591, %r1, 5;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	shr.u32 	%r79, %r3, 1;
	and.b32  	%r590, %r79, 48;
	mov.b16 	%rs371, 0;
	mov.u16 	%rs372, %rs371;
	mov.u16 	%rs373, %rs371;
	mov.u16 	%rs374, %rs371;
	mov.u16 	%rs375, %rs371;
	mov.u16 	%rs376, %rs371;
	mov.u16 	%rs377, %rs371;
	mov.u16 	%rs378, %rs371;
	mov.u16 	%rs379, %rs371;
	mov.u16 	%rs380, %rs371;
	mov.u16 	%rs381, %rs371;
	mov.u16 	%rs382, %rs371;
	mov.u16 	%rs383, %rs371;
	mov.u16 	%rs384, %rs371;
	mov.u16 	%rs385, %rs371;
	mov.u16 	%rs386, %rs371;
	mov.u16 	%rs387, %rs371;
	mov.u16 	%rs388, %rs371;
	mov.u16 	%rs389, %rs371;
	mov.u16 	%rs390, %rs371;
	mov.u16 	%rs391, %rs371;
	mov.u16 	%rs392, %rs371;
	mov.u16 	%rs393, %rs371;
	mov.u16 	%rs394, %rs371;
	mov.u16 	%rs395, %rs371;
	mov.u16 	%rs396, %rs371;
	mov.u16 	%rs397, %rs371;
	mov.u16 	%rs398, %rs371;
	mov.u16 	%rs399, %rs371;
	mov.u16 	%rs400, %rs371;
	mov.u16 	%rs401, %rs371;
	mov.u16 	%rs402, %rs371;
$L__BB0_9:                              // %._crit_edge13
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	and.b32  	%r432, %r592, 1;
	shr.u32 	%r433, %r6, 5;
	or.b32  	%r434, %r432, %r433;
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r435, %r434, %r8;
	or.b32  	%r436, %r435, 4;
	or.b32  	%r437, %r435, 8;
	or.b32  	%r438, %r435, 12;
	or.b32  	%r439, %r435, 16;
	or.b32  	%r440, %r435, 20;
	or.b32  	%r441, %r435, 24;
	or.b32  	%r442, %r435, 28;
	or.b32  	%r443, %r435, 32;
	or.b32  	%r444, %r435, 36;
	or.b32  	%r445, %r435, 40;
	or.b32  	%r446, %r435, 44;
	or.b32  	%r447, %r435, 48;
	or.b32  	%r448, %r435, 52;
	or.b32  	%r449, %r435, 56;
	or.b32  	%r450, %r435, 60;
	or.b32  	%r451, %r435, 64;
	or.b32  	%r452, %r435, 68;
	or.b32  	%r453, %r435, 72;
	or.b32  	%r454, %r435, 76;
	or.b32  	%r455, %r435, 80;
	or.b32  	%r456, %r435, 84;
	or.b32  	%r457, %r435, 88;
	or.b32  	%r458, %r435, 92;
	or.b32  	%r459, %r435, 96;
	or.b32  	%r460, %r435, 100;
	or.b32  	%r461, %r435, 104;
	or.b32  	%r462, %r435, 108;
	or.b32  	%r463, %r435, 112;
	or.b32  	%r464, %r435, 116;
	or.b32  	%r465, %r435, 120;
	or.b32  	%r466, %r435, 124;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r467, %r435, %r66;
	shl.b32 	%r468, %r66, 2;
	add.s32 	%r469, %r467, %r468;
	add.s32 	%r470, %r469, %r468;
	add.s32 	%r471, %r470, %r468;
	add.s32 	%r472, %r471, %r468;
	add.s32 	%r473, %r472, %r468;
	add.s32 	%r474, %r473, %r468;
	add.s32 	%r475, %r474, %r468;
	add.s32 	%r476, %r475, %r468;
	add.s32 	%r477, %r476, %r468;
	add.s32 	%r478, %r477, %r468;
	add.s32 	%r479, %r478, %r468;
	add.s32 	%r480, %r479, %r468;
	add.s32 	%r481, %r480, %r468;
	add.s32 	%r482, %r481, %r468;
	add.s32 	%r483, %r482, %r468;
	add.s32 	%r484, %r483, %r468;
	add.s32 	%r485, %r484, %r468;
	add.s32 	%r486, %r485, %r468;
	add.s32 	%r487, %r486, %r468;
	add.s32 	%r488, %r487, %r468;
	add.s32 	%r489, %r488, %r468;
	add.s32 	%r490, %r489, %r468;
	add.s32 	%r491, %r490, %r468;
	add.s32 	%r492, %r491, %r468;
	add.s32 	%r493, %r492, %r468;
	add.s32 	%r494, %r493, %r468;
	add.s32 	%r495, %r494, %r468;
	add.s32 	%r496, %r495, %r468;
	add.s32 	%r497, %r496, %r468;
	add.s32 	%r498, %r497, %r468;
	add.s32 	%r499, %r498, %r468;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r500, %r591, %r4;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r501, %r500, %r467;
	add.s32 	%r502, %r500, %r469;
	add.s32 	%r503, %r500, %r470;
	add.s32 	%r504, %r500, %r471;
	add.s32 	%r505, %r500, %r472;
	add.s32 	%r506, %r500, %r473;
	add.s32 	%r507, %r500, %r474;
	add.s32 	%r508, %r500, %r475;
	add.s32 	%r509, %r500, %r476;
	add.s32 	%r510, %r500, %r477;
	add.s32 	%r511, %r500, %r478;
	add.s32 	%r512, %r500, %r479;
	add.s32 	%r513, %r500, %r480;
	add.s32 	%r514, %r500, %r481;
	add.s32 	%r515, %r500, %r482;
	add.s32 	%r516, %r500, %r483;
	add.s32 	%r517, %r500, %r484;
	add.s32 	%r518, %r500, %r485;
	add.s32 	%r519, %r500, %r486;
	add.s32 	%r520, %r500, %r487;
	add.s32 	%r521, %r500, %r488;
	add.s32 	%r522, %r500, %r489;
	add.s32 	%r523, %r500, %r490;
	add.s32 	%r524, %r500, %r491;
	add.s32 	%r525, %r500, %r492;
	add.s32 	%r526, %r500, %r493;
	add.s32 	%r527, %r500, %r494;
	add.s32 	%r528, %r500, %r495;
	add.s32 	%r529, %r500, %r496;
	add.s32 	%r530, %r500, %r497;
	add.s32 	%r531, %r500, %r498;
	add.s32 	%r532, %r500, %r499;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd89, %r501, 2;
	add.s64 	%rd57, %rd23, %rd89;
	mul.wide.s32 	%rd90, %r502, 2;
	add.s64 	%rd58, %rd23, %rd90;
	mul.wide.s32 	%rd91, %r503, 2;
	add.s64 	%rd59, %rd23, %rd91;
	mul.wide.s32 	%rd92, %r504, 2;
	add.s64 	%rd60, %rd23, %rd92;
	mul.wide.s32 	%rd93, %r505, 2;
	add.s64 	%rd61, %rd23, %rd93;
	mul.wide.s32 	%rd94, %r506, 2;
	add.s64 	%rd62, %rd23, %rd94;
	mul.wide.s32 	%rd95, %r507, 2;
	add.s64 	%rd63, %rd23, %rd95;
	mul.wide.s32 	%rd96, %r508, 2;
	add.s64 	%rd64, %rd23, %rd96;
	mul.wide.s32 	%rd97, %r509, 2;
	add.s64 	%rd65, %rd23, %rd97;
	mul.wide.s32 	%rd98, %r510, 2;
	add.s64 	%rd66, %rd23, %rd98;
	mul.wide.s32 	%rd99, %r511, 2;
	add.s64 	%rd67, %rd23, %rd99;
	mul.wide.s32 	%rd100, %r512, 2;
	add.s64 	%rd68, %rd23, %rd100;
	mul.wide.s32 	%rd101, %r513, 2;
	add.s64 	%rd69, %rd23, %rd101;
	mul.wide.s32 	%rd102, %r514, 2;
	add.s64 	%rd70, %rd23, %rd102;
	mul.wide.s32 	%rd103, %r515, 2;
	add.s64 	%rd71, %rd23, %rd103;
	mul.wide.s32 	%rd104, %r516, 2;
	add.s64 	%rd72, %rd23, %rd104;
	mul.wide.s32 	%rd105, %r517, 2;
	add.s64 	%rd73, %rd23, %rd105;
	mul.wide.s32 	%rd106, %r518, 2;
	add.s64 	%rd74, %rd23, %rd106;
	mul.wide.s32 	%rd107, %r519, 2;
	add.s64 	%rd75, %rd23, %rd107;
	mul.wide.s32 	%rd108, %r520, 2;
	add.s64 	%rd76, %rd23, %rd108;
	mul.wide.s32 	%rd109, %r521, 2;
	add.s64 	%rd77, %rd23, %rd109;
	mul.wide.s32 	%rd110, %r522, 2;
	add.s64 	%rd78, %rd23, %rd110;
	mul.wide.s32 	%rd111, %r523, 2;
	add.s64 	%rd79, %rd23, %rd111;
	mul.wide.s32 	%rd112, %r524, 2;
	add.s64 	%rd80, %rd23, %rd112;
	mul.wide.s32 	%rd113, %r525, 2;
	add.s64 	%rd81, %rd23, %rd113;
	mul.wide.s32 	%rd114, %r526, 2;
	add.s64 	%rd82, %rd23, %rd114;
	mul.wide.s32 	%rd115, %r527, 2;
	add.s64 	%rd83, %rd23, %rd115;
	mul.wide.s32 	%rd116, %r528, 2;
	add.s64 	%rd84, %rd23, %rd116;
	mul.wide.s32 	%rd117, %r529, 2;
	add.s64 	%rd85, %rd23, %rd117;
	mul.wide.s32 	%rd118, %r530, 2;
	add.s64 	%rd86, %rd23, %rd118;
	mul.wide.s32 	%rd119, %r531, 2;
	add.s64 	%rd87, %rd23, %rd119;
	mul.wide.s32 	%rd120, %r532, 2;
	add.s64 	%rd88, %rd23, %rd120;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p103, %r435, %r64;
	setp.lt.s32 	%p104, %r436, %r64;
	setp.lt.s32 	%p105, %r437, %r64;
	setp.lt.s32 	%p106, %r438, %r64;
	setp.lt.s32 	%p107, %r439, %r64;
	setp.lt.s32 	%p108, %r440, %r64;
	setp.lt.s32 	%p109, %r441, %r64;
	setp.lt.s32 	%p110, %r442, %r64;
	setp.lt.s32 	%p111, %r443, %r64;
	setp.lt.s32 	%p112, %r444, %r64;
	setp.lt.s32 	%p113, %r445, %r64;
	setp.lt.s32 	%p114, %r446, %r64;
	setp.lt.s32 	%p115, %r447, %r64;
	setp.lt.s32 	%p116, %r448, %r64;
	setp.lt.s32 	%p117, %r449, %r64;
	setp.lt.s32 	%p118, %r450, %r64;
	setp.lt.s32 	%p119, %r451, %r64;
	setp.lt.s32 	%p120, %r452, %r64;
	setp.lt.s32 	%p121, %r453, %r64;
	setp.lt.s32 	%p122, %r454, %r64;
	setp.lt.s32 	%p123, %r455, %r64;
	setp.lt.s32 	%p124, %r456, %r64;
	setp.lt.s32 	%p125, %r457, %r64;
	setp.lt.s32 	%p126, %r458, %r64;
	setp.lt.s32 	%p127, %r459, %r64;
	setp.lt.s32 	%p128, %r460, %r64;
	setp.lt.s32 	%p129, %r461, %r64;
	setp.lt.s32 	%p130, %r462, %r64;
	setp.lt.s32 	%p131, %r463, %r64;
	setp.lt.s32 	%p132, %r464, %r64;
	setp.lt.s32 	%p133, %r465, %r64;
	setp.lt.s32 	%p134, %r466, %r64;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p135, %r500, %r66;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p71, %p103, %p135;
	and.pred  	%p72, %p104, %p135;
	and.pred  	%p73, %p105, %p135;
	and.pred  	%p74, %p106, %p135;
	and.pred  	%p75, %p107, %p135;
	and.pred  	%p76, %p108, %p135;
	and.pred  	%p77, %p109, %p135;
	and.pred  	%p78, %p110, %p135;
	and.pred  	%p79, %p111, %p135;
	and.pred  	%p80, %p112, %p135;
	and.pred  	%p81, %p113, %p135;
	and.pred  	%p82, %p114, %p135;
	and.pred  	%p83, %p115, %p135;
	and.pred  	%p84, %p116, %p135;
	and.pred  	%p85, %p117, %p135;
	and.pred  	%p86, %p118, %p135;
	and.pred  	%p87, %p119, %p135;
	and.pred  	%p88, %p120, %p135;
	and.pred  	%p89, %p121, %p135;
	and.pred  	%p90, %p122, %p135;
	and.pred  	%p91, %p123, %p135;
	and.pred  	%p92, %p124, %p135;
	and.pred  	%p93, %p125, %p135;
	and.pred  	%p94, %p126, %p135;
	and.pred  	%p95, %p127, %p135;
	and.pred  	%p96, %p128, %p135;
	and.pred  	%p97, %p129, %p135;
	and.pred  	%p98, %p130, %p135;
	and.pred  	%p99, %p131, %p135;
	and.pred  	%p100, %p132, %p135;
	and.pred  	%p101, %p133, %p135;
	and.pred  	%p102, %p134, %p135;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	bar.sync 	0;
	shl.b32 	%r533, %r3, 7;
	and.b32  	%r534, %r533, 384;
	and.b32  	%r535, %r10, 3;
	shr.u32 	%r536, %r5, 2;
	or.b32  	%r537, %r536, %r590;
	or.b32  	%r538, %r537, %r535;
	or.b32  	%r539, %r538, %r534;
	shl.b32 	%r540, %r3, 6;
	and.b32  	%r541, %r540, 1984;
	or.b32  	%r542, %r434, %r541;
	shr.u32 	%r543, %r534, 5;
	add.s32 	%r545, %r586, %r543;
	shl.b32 	%r546, %r539, 1;
	add.s32 	%r400, %r545, %r546;
	mov.pred 	%p39, -1;
	// begin inline asm
	@%p39 st.shared.b16 [ %r400 + 0 ], %rs371;
	// end inline asm
	or.b32  	%r547, %r539, 64;
	shr.u32 	%r548, %r547, 5;
	and.b32  	%r549, %r548, 33554430;
	add.s32 	%r550, %r586, %r549;
	add.s32 	%r551, %r550, %r546;
	add.s32 	%r401, %r551, 128;
	// begin inline asm
	@%p39 st.shared.b16 [ %r401 + 0 ], %rs372;
	// end inline asm
	add.s32 	%r402, %r400, 16;
	// begin inline asm
	@%p39 st.shared.b16 [ %r402 + 0 ], %rs373;
	// end inline asm
	add.s32 	%r403, %r551, 144;
	// begin inline asm
	@%p39 st.shared.b16 [ %r403 + 0 ], %rs374;
	// end inline asm
	or.b32  	%r552, %r539, 512;
	shr.u32 	%r553, %r552, 5;
	and.b32  	%r554, %r553, 33554430;
	add.s32 	%r555, %r586, %r554;
	add.s32 	%r556, %r555, %r546;
	add.s32 	%r404, %r556, 1024;
	// begin inline asm
	@%p39 st.shared.b16 [ %r404 + 0 ], %rs375;
	// end inline asm
	or.b32  	%r557, %r539, 576;
	shr.u32 	%r558, %r557, 5;
	and.b32  	%r559, %r558, 33554430;
	add.s32 	%r560, %r586, %r559;
	add.s32 	%r561, %r560, %r546;
	add.s32 	%r405, %r561, 1152;
	// begin inline asm
	@%p39 st.shared.b16 [ %r405 + 0 ], %rs376;
	// end inline asm
	add.s32 	%r406, %r556, 1040;
	// begin inline asm
	@%p39 st.shared.b16 [ %r406 + 0 ], %rs377;
	// end inline asm
	add.s32 	%r407, %r561, 1168;
	// begin inline asm
	@%p39 st.shared.b16 [ %r407 + 0 ], %rs378;
	// end inline asm
	or.b32  	%r562, %r539, 1024;
	shr.u32 	%r563, %r562, 5;
	and.b32  	%r564, %r563, 33554430;
	add.s32 	%r565, %r586, %r564;
	add.s32 	%r566, %r565, %r546;
	add.s32 	%r408, %r566, 2048;
	// begin inline asm
	@%p39 st.shared.b16 [ %r408 + 0 ], %rs379;
	// end inline asm
	or.b32  	%r567, %r539, 1088;
	shr.u32 	%r568, %r567, 5;
	and.b32  	%r569, %r568, 33554430;
	add.s32 	%r570, %r586, %r569;
	add.s32 	%r571, %r570, %r546;
	add.s32 	%r409, %r571, 2176;
	// begin inline asm
	@%p39 st.shared.b16 [ %r409 + 0 ], %rs380;
	// end inline asm
	add.s32 	%r410, %r566, 2064;
	// begin inline asm
	@%p39 st.shared.b16 [ %r410 + 0 ], %rs381;
	// end inline asm
	add.s32 	%r411, %r571, 2192;
	// begin inline asm
	@%p39 st.shared.b16 [ %r411 + 0 ], %rs382;
	// end inline asm
	or.b32  	%r572, %r539, 1536;
	shr.u32 	%r573, %r572, 5;
	and.b32  	%r574, %r573, 33554430;
	add.s32 	%r575, %r586, %r574;
	add.s32 	%r576, %r575, %r546;
	add.s32 	%r412, %r576, 3072;
	// begin inline asm
	@%p39 st.shared.b16 [ %r412 + 0 ], %rs383;
	// end inline asm
	or.b32  	%r577, %r539, 1600;
	shr.u32 	%r578, %r577, 5;
	and.b32  	%r579, %r578, 33554430;
	add.s32 	%r580, %r586, %r579;
	add.s32 	%r581, %r580, %r546;
	add.s32 	%r413, %r581, 3200;
	// begin inline asm
	@%p39 st.shared.b16 [ %r413 + 0 ], %rs384;
	// end inline asm
	add.s32 	%r414, %r576, 3088;
	// begin inline asm
	@%p39 st.shared.b16 [ %r414 + 0 ], %rs385;
	// end inline asm
	add.s32 	%r415, %r581, 3216;
	// begin inline asm
	@%p39 st.shared.b16 [ %r415 + 0 ], %rs386;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r582, %r541, 5;
	add.s32 	%r583, %r586, %r582;
	shl.b32 	%r584, %r542, 1;
	add.s32 	%r585, %r583, %r584;
	ld.shared.u16 	%rs275, [%r585];
	ld.shared.u16 	%rs276, [%r585+8];
	ld.shared.u16 	%rs277, [%r585+16];
	ld.shared.u16 	%rs278, [%r585+24];
	ld.shared.u16 	%rs279, [%r585+32];
	ld.shared.u16 	%rs280, [%r585+40];
	ld.shared.u16 	%rs281, [%r585+48];
	ld.shared.u16 	%rs282, [%r585+56];
	ld.shared.u16 	%rs283, [%r585+64];
	ld.shared.u16 	%rs284, [%r585+72];
	ld.shared.u16 	%rs285, [%r585+80];
	ld.shared.u16 	%rs286, [%r585+88];
	ld.shared.u16 	%rs287, [%r585+96];
	ld.shared.u16 	%rs288, [%r585+104];
	ld.shared.u16 	%rs289, [%r585+112];
	ld.shared.u16 	%rs290, [%r585+120];
	bar.sync 	0;
	// begin inline asm
	@%p39 st.shared.b16 [ %r400 + 0 ], %rs387;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r401 + 0 ], %rs388;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r402 + 0 ], %rs389;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r403 + 0 ], %rs390;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r404 + 0 ], %rs391;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r405 + 0 ], %rs392;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r406 + 0 ], %rs393;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r407 + 0 ], %rs394;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r408 + 0 ], %rs395;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r409 + 0 ], %rs396;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r410 + 0 ], %rs397;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r411 + 0 ], %rs398;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r412 + 0 ], %rs399;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r413 + 0 ], %rs400;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r414 + 0 ], %rs401;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r415 + 0 ], %rs402;
	// end inline asm
	bar.sync 	0;
	ld.shared.u16 	%rs291, [%r585];
	ld.shared.u16 	%rs292, [%r585+8];
	ld.shared.u16 	%rs293, [%r585+16];
	ld.shared.u16 	%rs294, [%r585+24];
	ld.shared.u16 	%rs295, [%r585+32];
	ld.shared.u16 	%rs296, [%r585+40];
	ld.shared.u16 	%rs297, [%r585+48];
	ld.shared.u16 	%rs298, [%r585+56];
	ld.shared.u16 	%rs299, [%r585+64];
	ld.shared.u16 	%rs300, [%r585+72];
	ld.shared.u16 	%rs301, [%r585+80];
	ld.shared.u16 	%rs302, [%r585+88];
	ld.shared.u16 	%rs303, [%r585+96];
	ld.shared.u16 	%rs304, [%r585+104];
	ld.shared.u16 	%rs305, [%r585+112];
	ld.shared.u16 	%rs306, [%r585+120];
	// begin inline asm
	@%p71 st.global.b16 [ %rd57 + 0 ], { %rs275 };
	// end inline asm
	// begin inline asm
	@%p72 st.global.b16 [ %rd58 + 0 ], { %rs276 };
	// end inline asm
	// begin inline asm
	@%p73 st.global.b16 [ %rd59 + 0 ], { %rs277 };
	// end inline asm
	// begin inline asm
	@%p74 st.global.b16 [ %rd60 + 0 ], { %rs278 };
	// end inline asm
	// begin inline asm
	@%p75 st.global.b16 [ %rd61 + 0 ], { %rs279 };
	// end inline asm
	// begin inline asm
	@%p76 st.global.b16 [ %rd62 + 0 ], { %rs280 };
	// end inline asm
	// begin inline asm
	@%p77 st.global.b16 [ %rd63 + 0 ], { %rs281 };
	// end inline asm
	// begin inline asm
	@%p78 st.global.b16 [ %rd64 + 0 ], { %rs282 };
	// end inline asm
	// begin inline asm
	@%p79 st.global.b16 [ %rd65 + 0 ], { %rs283 };
	// end inline asm
	// begin inline asm
	@%p80 st.global.b16 [ %rd66 + 0 ], { %rs284 };
	// end inline asm
	// begin inline asm
	@%p81 st.global.b16 [ %rd67 + 0 ], { %rs285 };
	// end inline asm
	// begin inline asm
	@%p82 st.global.b16 [ %rd68 + 0 ], { %rs286 };
	// end inline asm
	// begin inline asm
	@%p83 st.global.b16 [ %rd69 + 0 ], { %rs287 };
	// end inline asm
	// begin inline asm
	@%p84 st.global.b16 [ %rd70 + 0 ], { %rs288 };
	// end inline asm
	// begin inline asm
	@%p85 st.global.b16 [ %rd71 + 0 ], { %rs289 };
	// end inline asm
	// begin inline asm
	@%p86 st.global.b16 [ %rd72 + 0 ], { %rs290 };
	// end inline asm
	// begin inline asm
	@%p87 st.global.b16 [ %rd73 + 0 ], { %rs291 };
	// end inline asm
	// begin inline asm
	@%p88 st.global.b16 [ %rd74 + 0 ], { %rs292 };
	// end inline asm
	// begin inline asm
	@%p89 st.global.b16 [ %rd75 + 0 ], { %rs293 };
	// end inline asm
	// begin inline asm
	@%p90 st.global.b16 [ %rd76 + 0 ], { %rs294 };
	// end inline asm
	// begin inline asm
	@%p91 st.global.b16 [ %rd77 + 0 ], { %rs295 };
	// end inline asm
	// begin inline asm
	@%p92 st.global.b16 [ %rd78 + 0 ], { %rs296 };
	// end inline asm
	// begin inline asm
	@%p93 st.global.b16 [ %rd79 + 0 ], { %rs297 };
	// end inline asm
	// begin inline asm
	@%p94 st.global.b16 [ %rd80 + 0 ], { %rs298 };
	// end inline asm
	// begin inline asm
	@%p95 st.global.b16 [ %rd81 + 0 ], { %rs299 };
	// end inline asm
	// begin inline asm
	@%p96 st.global.b16 [ %rd82 + 0 ], { %rs300 };
	// end inline asm
	// begin inline asm
	@%p97 st.global.b16 [ %rd83 + 0 ], { %rs301 };
	// end inline asm
	// begin inline asm
	@%p98 st.global.b16 [ %rd84 + 0 ], { %rs302 };
	// end inline asm
	// begin inline asm
	@%p99 st.global.b16 [ %rd85 + 0 ], { %rs303 };
	// end inline asm
	// begin inline asm
	@%p100 st.global.b16 [ %rd86 + 0 ], { %rs304 };
	// end inline asm
	// begin inline asm
	@%p101 st.global.b16 [ %rd87 + 0 ], { %rs305 };
	// end inline asm
	// begin inline asm
	@%p102 st.global.b16 [ %rd88 + 0 ], { %rs306 };
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 174                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x98:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
