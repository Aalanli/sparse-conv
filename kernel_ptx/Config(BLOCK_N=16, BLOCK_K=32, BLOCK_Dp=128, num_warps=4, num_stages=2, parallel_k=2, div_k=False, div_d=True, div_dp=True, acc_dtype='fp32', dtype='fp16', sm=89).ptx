//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_89
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<88>;
	.reg .b16 	%rs<243>;
	.reg .b32 	%r<490>;
	.reg .b64 	%rd<84>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r70, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r68, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd18, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r71, %ctaid.x;
	.loc	1 50 36                         // implicit_gemm_kernel.py:50:36
	shr.u32 	%r72, %r71, 31;
	add.s32 	%r73, %r71, %r72;
	and.b32  	%r74, %r73, -2;
	sub.s32 	%r482, %r71, %r74;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r75, %r68, 15;
$L__tmp2:
	.loc	1 49 35                         // implicit_gemm_kernel.py:49:35
	shr.s32 	%r76, %r73, 1;
	shr.s32 	%r78, %r75, 31;
	shr.u32 	%r79, %r78, 28;
	add.s32 	%r80, %r75, %r79;
	shr.s32 	%r81, %r80, 4;
	ld.param.u32 	%r82, [implicit_conv3d_kernel_param_8];
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r2, %r76, %r81;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r83, %r2, %r81;
	sub.s32 	%r84, %r76, %r83;
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r85, %r82, %r82;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r3, %r85, %r82;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r4, %tid.x;
	and.b32  	%r5, %r4, 16;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r8, %r84, 4;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.lt.s32 	%p4, %r482, %r3;
	mov.u32 	%r477, global_smem;
	@%p4 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph34
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r69, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r67, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd17, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd16, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd19, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	bfe.u32 	%r6, %r4, 3, 4;
	and.b32  	%r7, %r4, 15;
	or.b32  	%r9, %r8, %r6;
	or.b32  	%r10, %r8, %r7;
	mul.lo.s32 	%r86, %r9, %r3;
	mul.lo.s32 	%r87, %r10, %r3;
	mul.wide.s32 	%rd20, %r86, 4;
	add.s64 	%rd1, %rd19, %rd20;
	mul.wide.s32 	%rd21, %r87, 4;
	add.s64 	%rd2, %rd19, %rd21;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r88, %r4, 4;
	and.b32  	%r89, %r4, 2;
	and.b32  	%r90, %r4, 32;
	add.s32 	%r13, %r69, 31;
	shr.s32 	%r91, %r13, 31;
	shr.u32 	%r92, %r91, 27;
	add.s32 	%r93, %r13, %r92;
	shr.s32 	%r94, %r93, 5;
	shl.b32 	%r95, %r89, 2;
	shl.b32 	%r96, %r4, 2;
	and.b32  	%r97, %r96, 12;
	shl.b32 	%r98, %r88, 2;
	or.b32  	%r14, %r97, %r98;
	bfe.u32 	%r15, %r4, 4, 3;
	or.b32  	%r16, %r15, 8;
	or.b32  	%r17, %r15, 16;
	or.b32  	%r18, %r15, 24;
	shl.b32 	%r99, %r4, 3;
	and.b32  	%r19, %r99, 8;
	shl.b32 	%r100, %r89, 3;
	or.b32  	%r101, %r19, %r100;
	shl.b32 	%r102, %r88, 3;
	or.b32  	%r103, %r101, %r102;
	and.b32  	%r104, %r99, 64;
	or.b32  	%r105, %r103, %r104;
	shl.b32 	%r489, %r2, 7;
	mul.lo.s32 	%r21, %r3, %r69;
	or.b32  	%r22, %r489, %r105;
	setp.lt.s32 	%p5, %r22, %r70;
	setp.gt.s32 	%p6, %r13, 31;
	setp.lt.s32 	%p7, %r14, %r69;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p1, %p7, %p6;
	shr.u32 	%r106, %r5, 1;
	shr.u32 	%r107, %r90, 1;
	or.b32  	%r108, %r107, %r106;
	xor.b32  	%r109, %r108, %r14;
	shl.b32 	%r110, %r109, 1;
	shl.b32 	%r111, %r6, 6;
	or.b32  	%r112, %r111, %r110;
	add.s32 	%r114, %r477, %r112;
	add.s32 	%r171, %r114, 8192;
	shr.u32 	%r115, %r4, 1;
	and.b32  	%r116, %r115, 40;
	or.b32  	%r117, %r107, %r116;
	xor.b32  	%r118, %r117, %r105;
	shl.b32 	%r119, %r118, 1;
	add.s32 	%r120, %r477, %r119;
	shl.b32 	%r121, %r15, 8;
	add.s32 	%r173, %r120, %r121;
	add.s32 	%r175, %r173, 2048;
	add.s32 	%r177, %r173, 4096;
	add.s32 	%r179, %r173, 6144;
	add.s32 	%r122, %r94, -1;
	or.b32  	%r123, %r95, %r98;
	xor.b32  	%r124, %r123, %r106;
	shl.b32 	%r125, %r7, 5;
	or.b32  	%r28, %r124, %r125;
	or.b32  	%r126, %r95, 16;
	or.b32  	%r127, %r106, %r98;
	xor.b32  	%r128, %r127, %r126;
	or.b32  	%r29, %r128, %r125;
	shr.u32 	%r129, %r90, 2;
	shr.u32 	%r488, %r4, 2;
	and.b32  	%r130, %r488, 16;
	or.b32  	%r131, %r130, %r129;
	xor.b32  	%r132, %r131, %r103;
	shl.b32 	%r133, %r4, 7;
	and.b32  	%r31, %r133, 3968;
	or.b32  	%r32, %r132, %r31;
	or.b32  	%r134, %r101, 32;
	or.b32  	%r135, %r131, %r102;
	xor.b32  	%r33, %r135, %r134;
	or.b32  	%r136, %r103, 64;
	xor.b32  	%r34, %r131, %r136;
	or.b32  	%r137, %r101, 96;
	xor.b32  	%r35, %r135, %r137;
	cvt.s64.s32 	%rd3, %r122;
	cvt.s64.s32 	%rd4, %r69;
	cvt.u64.u32 	%rd5, %r94;
	and.pred  	%p2, %p5, %p6;
	cvt.u64.u32 	%rd6, %r14;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	or.b32  	%r36, %r14, 32;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	mad.lo.s32 	%r138, %r482, %r69, %r15;
	cvt.u64.u32 	%rd81, %r138;
	shl.b32 	%r139, %r69, 1;
	cvt.u64.u32 	%rd8, %r139;
	add.s32 	%r140, %r138, 56;
	mad.lo.s32 	%r141, %r70, %r140, %r489;
	add.s32 	%r142, %r141, %r104;
	add.s32 	%r143, %r142, %r102;
	add.s32 	%r481, %r143, %r100;
	mul.lo.s32 	%r144, %r70, %r69;
	shl.b32 	%r38, %r144, 1;
	shl.b32 	%r39, %r70, 5;
	add.s32 	%r145, %r138, 48;
	mad.lo.s32 	%r146, %r70, %r145, %r489;
	add.s32 	%r147, %r146, %r104;
	add.s32 	%r148, %r147, %r102;
	add.s32 	%r480, %r148, %r100;
	add.s32 	%r149, %r138, 40;
	mad.lo.s32 	%r150, %r70, %r149, %r489;
	add.s32 	%r151, %r150, %r104;
	add.s32 	%r152, %r151, %r102;
	add.s32 	%r479, %r152, %r100;
	add.s32 	%r153, %r138, 32;
	mad.lo.s32 	%r154, %r70, %r153, %r489;
	add.s32 	%r155, %r154, %r104;
	add.s32 	%r156, %r155, %r102;
	add.s32 	%r478, %r156, %r100;
	mov.b16 	%rs195, 0x0000;
	setp.lt.s32 	%p9, %r10, %r68;
	shl.b32 	%r320, %r28, 1;
	shl.b32 	%r321, %r29, 1;
	shl.b32 	%r324, %r32, 1;
	shl.b32 	%r325, %r33, 1;
	shl.b32 	%r328, %r34, 1;
	shl.b32 	%r330, %r35, 1;
	mov.u16 	%rs196, %rs195;
	mov.u16 	%rs197, %rs195;
	mov.u16 	%rs198, %rs195;
	mov.u16 	%rs199, %rs195;
	mov.u16 	%rs200, %rs195;
	mov.u16 	%rs201, %rs195;
	mov.u16 	%rs202, %rs195;
	mov.u16 	%rs203, %rs195;
	mov.u16 	%rs204, %rs195;
	mov.u16 	%rs205, %rs195;
	mov.u16 	%rs206, %rs195;
	mov.u16 	%rs207, %rs195;
	mov.u16 	%rs208, %rs195;
	mov.u16 	%rs209, %rs195;
	mov.u16 	%rs210, %rs195;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s32 	%r482, %r482, 2;
	add.s64 	%rd81, %rd81, %rd8;
	add.s32 	%r481, %r481, %r38;
	add.s32 	%r480, %r480, %r38;
	add.s32 	%r479, %r479, %r38;
	add.s32 	%r478, %r478, %r38;
	setp.lt.s32 	%p38, %r482, %r3;
	@%p38 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p8, %r9, %r68;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	mul.wide.s32 	%rd24, %r482, 4;
	add.s64 	%rd22, %rd1, %rd24;
	add.s64 	%rd23, %rd2, %rd24;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r157, 0xffffffffffffffff;
	@%p8 ld.global.b32 { %r157 }, [ %rd22 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r158, 0xffffffffffffffff;
	@%p9 ld.global.b32 { %r158 }, [ %rd23 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p11, %r158, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p13, %r158, %r67;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p14, %p11, %p13;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r159, 1, 0, %p14;
	shfl.sync.bfly.b32	%r160, %r159, 8, 31, -1;
	and.b32  	%r161, %r160, 1;
	setp.eq.b32 	%p15, %r161, 1;
$L__tmp3:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p16, %p14, %p15;
$L__tmp4:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r162, 1, 0, %p16;
	shfl.sync.bfly.b32	%r163, %r162, 4, 31, -1;
	and.b32  	%r164, %r163, 1;
	setp.eq.b32 	%p17, %r164, 1;
$L__tmp5:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p18, %p16, %p17;
$L__tmp6:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r165, 1, 0, %p18;
	shfl.sync.bfly.b32	%r166, %r165, 2, 31, -1;
	and.b32  	%r167, %r166, 1;
	setp.eq.b32 	%p19, %r167, 1;
$L__tmp7:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p20, %p18, %p19;
$L__tmp8:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r168, 1, 0, %p20;
	shfl.sync.bfly.b32	%r169, %r168, 1, 31, -1;
	and.b32  	%r170, %r169, 1;
	setp.eq.b32 	%p21, %r170, 1;
$L__tmp9:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p22, %p20, %p21;
$L__tmp10:
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p23, %p22;
	@%p23 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.gt.s32 	%p10, %r157, -1;
	setp.lt.s32 	%p12, %r157, %r67;
	and.pred  	%p3, %p10, %p12;
	setp.lt.s32 	%p24, %r13, 32;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	mul.lo.s32 	%r181, %r482, %r69;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r49, %r157, %r69;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r182, %r49, %r14;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd30, %r182, 2;
	add.s64 	%rd25, %rd16, %rd30;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s32 	%r183, %r181, %r15;
	add.s32 	%r184, %r181, %r16;
	add.s32 	%r185, %r181, %r17;
	add.s32 	%r186, %r181, %r18;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r187, %r183, %r70, %r22;
	mad.lo.s32 	%r188, %r184, %r70, %r22;
	mad.lo.s32 	%r189, %r185, %r70, %r22;
	mad.lo.s32 	%r190, %r186, %r70, %r22;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd31, %r187, 2;
	add.s64 	%rd26, %rd17, %rd31;
	mul.wide.s32 	%rd32, %r188, 2;
	add.s64 	%rd27, %rd17, %rd32;
	mul.wide.s32 	%rd33, %r189, 2;
	add.s64 	%rd28, %rd17, %rd33;
	mul.wide.s32 	%rd34, %r190, 2;
	add.s64 	%rd29, %rd17, %rd34;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p25, %r183, %r21;
	setp.lt.s32 	%p26, %r184, %r21;
	setp.lt.s32 	%p27, %r185, %r21;
	setp.lt.s32 	%p28, %r186, %r21;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	selp.b32 	%r191, 8, 0, %p1;
	selp.b32 	%r172, %r191, 0, %p3;
	// begin inline asm
	cp.async.ca.shared.global [ %r171 + 0 ], [ %rd25 + 0 ], 0x8, %r172;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r192, 16, 0, %p2;
	selp.b32 	%r174, %r192, 0, %p25;
	// begin inline asm
	cp.async.cg.shared.global [ %r173 + 0 ], [ %rd26 + 0 ], 0x10, %r174;
	// end inline asm
	selp.b32 	%r176, %r192, 0, %p26;
	// begin inline asm
	cp.async.cg.shared.global [ %r175 + 0 ], [ %rd27 + 0 ], 0x10, %r176;
	// end inline asm
	selp.b32 	%r178, %r192, 0, %p27;
	// begin inline asm
	cp.async.cg.shared.global [ %r177 + 0 ], [ %rd28 + 0 ], 0x10, %r178;
	// end inline asm
	selp.b32 	%r180, %r192, 0, %p28;
	// begin inline asm
	cp.async.cg.shared.global [ %r179 + 0 ], [ %rd29 + 0 ], 0x10, %r180;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p24 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r194, %r36, %r49;
	cvt.u64.u32 	%rd10, %r194;
	mov.b32 	%r487, -1;
	mov.b64 	%rd82, 0;
	mov.u32 	%r483, %r478;
	mov.u32 	%r484, %r479;
	mov.u32 	%r485, %r480;
	mov.u32 	%r486, %r481;
	mov.u64 	%rd83, %rd82;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p30, %rd83, %rd3;
	add.s32 	%r315, %r487, 1;
	setp.gt.u32 	%p31, %r487, 2147483646;
	selp.b32 	%r487, %r315, 0, %p31;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r316, %r487, 10;
	add.s32 	%r318, %r477, %r316;
	add.s32 	%r319, %r318, 8192;
	add.s32 	%r199, %r319, %r320;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r229, %r230, %r231, %r232}, [%r199];
	// end inline asm
	add.s32 	%r204, %r319, %r321;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r269, %r270, %r271, %r272}, [%r204];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	shl.b32 	%r322, %r487, 13;
	add.s32 	%r323, %r477, %r322;
	add.s32 	%r209, %r323, %r324;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r205, %r206, %r207, %r208}, [%r209];
	// end inline asm
	add.s32 	%r326, %r323, %r325;
	shl.b32 	%r327, %r31, 1;
	add.s32 	%r214, %r326, %r327;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r210, %r211, %r212, %r213}, [%r214];
	// end inline asm
	add.s32 	%r329, %r323, %r328;
	add.s32 	%r219, %r329, %r327;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r215, %r216, %r217, %r218}, [%r219];
	// end inline asm
	add.s32 	%r331, %r323, %r330;
	add.s32 	%r224, %r331, %r327;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r220, %r221, %r222, %r223}, [%r224];
	// end inline asm
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	mov.b32 	%r265, {%rs195, %rs196};
	mov.b32 	%r266, {%rs197, %rs198};
	mov.b32 	%r275, {%rs199, %rs200};
	mov.b32 	%r276, {%rs201, %rs202};
	mov.b32 	%r285, {%rs203, %rs204};
	mov.b32 	%r286, {%rs205, %rs206};
	mov.b32 	%r295, {%rs207, %rs208};
	mov.b32 	%r296, {%rs209, %rs210};
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r265, %r266 }, { %r229, %r230, %r231, %r232 }, { %r205, %r206 }, { %r265, %r266 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r275, %r276 }, { %r229, %r230, %r231, %r232 }, { %r210, %r211 }, { %r275, %r276 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r285, %r286 }, { %r229, %r230, %r231, %r232 }, { %r215, %r216 }, { %r285, %r286 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r295, %r296 }, { %r229, %r230, %r231, %r232 }, { %r220, %r221 }, { %r295, %r296 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r265, %r266 }, { %r269, %r270, %r271, %r272 }, { %r207, %r208 }, { %r265, %r266 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r275, %r276 }, { %r269, %r270, %r271, %r272 }, { %r212, %r213 }, { %r275, %r276 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r285, %r286 }, { %r269, %r270, %r271, %r272 }, { %r217, %r218 }, { %r285, %r286 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r295, %r296 }, { %r269, %r270, %r271, %r272 }, { %r222, %r223 }, { %r295, %r296 };
	// end inline asm
	mov.b32 	{%rs195, %rs196}, %r265;
	mov.b32 	{%rs197, %rs198}, %r266;
	mov.b32 	{%rs199, %rs200}, %r275;
	mov.b32 	{%rs201, %rs202}, %r276;
	mov.b32 	{%rs203, %rs204}, %r285;
	mov.b32 	{%rs205, %rs206}, %r286;
	mov.b32 	{%rs207, %rs208}, %r295;
	mov.b32 	{%rs209, %rs210}, %r296;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd83, %rd83, 1;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd41, %rd10, %rd82;
	cvt.u32.u64 	%r332, %rd41;
	mul.wide.s32 	%rd42, %r332, 2;
	add.s64 	%rd36, %rd16, %rd42;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd14, %rd82, 32;
	.loc	1 70 112                        // implicit_gemm_kernel.py:70:112
	add.s64 	%rd43, %rd14, %rd6;
	setp.lt.s64 	%p32, %rd43, %rd4;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s64 	%rd44, %rd81, %rd82;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	add.s32 	%r333, %r19, %r483;
	add.s32 	%r334, %r19, %r484;
	add.s32 	%r335, %r19, %r485;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s32 	%r336, %r19, %r486;
	mul.wide.s32 	%rd45, %r333, 2;
	add.s64 	%rd37, %rd17, %rd45;
	mul.wide.s32 	%rd46, %r334, 2;
	add.s64 	%rd38, %rd17, %rd46;
	mul.wide.s32 	%rd47, %r335, 2;
	add.s64 	%rd39, %rd17, %rd47;
	mul.wide.s32 	%rd48, %r336, 2;
	add.s64 	%rd40, %rd17, %rd48;
	cvt.u32.u64 	%r337, %rd44;
	add.s32 	%r338, %r337, 32;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p33, %r338, %r21;
	add.s32 	%r339, %r337, 40;
	setp.lt.s32 	%p34, %r339, %r21;
	add.s32 	%r340, %r337, 48;
	setp.lt.s32 	%p35, %r340, %r21;
	add.s32 	%r341, %r337, 56;
	setp.lt.s32 	%p36, %r341, %r21;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r342, 8, 0, %p32;
	selp.b32 	%r343, %r342, 0, %p3;
	selp.b32 	%r306, %r343, 0, %p30;
	// begin inline asm
	cp.async.ca.shared.global [ %r171 + 0 ], [ %rd36 + 0 ], 0x8, %r306;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r344, 16, 0, %p33;
	selp.b32 	%r345, %r344, 0, %p5;
	selp.b32 	%r308, %r345, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r173 + 0 ], [ %rd37 + 0 ], 0x10, %r308;
	// end inline asm
	selp.b32 	%r346, 16, 0, %p34;
	selp.b32 	%r347, %r346, 0, %p5;
	selp.b32 	%r310, %r347, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r175 + 0 ], [ %rd38 + 0 ], 0x10, %r310;
	// end inline asm
	selp.b32 	%r348, 16, 0, %p35;
	selp.b32 	%r349, %r348, 0, %p5;
	selp.b32 	%r312, %r349, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r177 + 0 ], [ %rd39 + 0 ], 0x10, %r312;
	// end inline asm
	selp.b32 	%r350, 16, 0, %p36;
	selp.b32 	%r351, %r350, 0, %p5;
	selp.b32 	%r314, %r351, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r179 + 0 ], [ %rd40 + 0 ], 0x10, %r314;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s32 	%r486, %r486, %r39;
	add.s32 	%r485, %r485, %r39;
	add.s32 	%r484, %r484, %r39;
	add.s32 	%r483, %r483, %r39;
	setp.ne.s64 	%p37, %rd5, %rd83;
	mov.u64 	%rd82, %rd14;
	@%p37 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge35_crit_edge
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r489, %r2, 7;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shr.u32 	%r488, %r4, 2;
	mov.b16 	%rs195, 0;
	mov.u16 	%rs196, %rs195;
	mov.u16 	%rs197, %rs195;
	mov.u16 	%rs198, %rs195;
	mov.u16 	%rs199, %rs195;
	mov.u16 	%rs200, %rs195;
	mov.u16 	%rs201, %rs195;
	mov.u16 	%rs202, %rs195;
	mov.u16 	%rs203, %rs195;
	mov.u16 	%rs204, %rs195;
	mov.u16 	%rs205, %rs195;
	mov.u16 	%rs206, %rs195;
	mov.u16 	%rs207, %rs195;
	mov.u16 	%rs208, %rs195;
	mov.u16 	%rs209, %rs195;
	mov.u16 	%rs210, %rs195;
$L__BB0_9:                              // %._crit_edge35
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r368, %r8, 1;
	or.b32  	%r369, %r8, 2;
	or.b32  	%r370, %r8, 3;
	or.b32  	%r371, %r8, 4;
	or.b32  	%r372, %r8, 5;
	or.b32  	%r373, %r8, 6;
	or.b32  	%r374, %r8, 7;
	or.b32  	%r375, %r8, 8;
	or.b32  	%r376, %r8, 9;
	or.b32  	%r377, %r8, 10;
	or.b32  	%r378, %r8, 11;
	or.b32  	%r379, %r8, 12;
	or.b32  	%r380, %r8, 13;
	or.b32  	%r381, %r8, 14;
	or.b32  	%r382, %r8, 15;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r383, %r8, %r70;
	add.s32 	%r384, %r383, %r70;
	add.s32 	%r385, %r384, %r70;
	add.s32 	%r386, %r385, %r70;
	add.s32 	%r387, %r386, %r70;
	add.s32 	%r388, %r387, %r70;
	add.s32 	%r389, %r388, %r70;
	add.s32 	%r390, %r389, %r70;
	add.s32 	%r391, %r390, %r70;
	add.s32 	%r392, %r391, %r70;
	add.s32 	%r393, %r392, %r70;
	add.s32 	%r394, %r393, %r70;
	add.s32 	%r395, %r394, %r70;
	add.s32 	%r396, %r395, %r70;
	add.s32 	%r397, %r396, %r70;
	add.s32 	%r398, %r397, %r70;
	.loc	1 87 33                         // implicit_gemm_kernel.py:87:33
	and.b32  	%r399, %r4, 127;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r400, %r489, %r399;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r401, %r400, %r383;
	add.s32 	%r402, %r400, %r384;
	add.s32 	%r403, %r400, %r385;
	add.s32 	%r404, %r400, %r386;
	add.s32 	%r405, %r400, %r387;
	add.s32 	%r406, %r400, %r388;
	add.s32 	%r407, %r400, %r389;
	add.s32 	%r408, %r400, %r390;
	add.s32 	%r409, %r400, %r391;
	add.s32 	%r410, %r400, %r392;
	add.s32 	%r411, %r400, %r393;
	add.s32 	%r412, %r400, %r394;
	add.s32 	%r413, %r400, %r395;
	add.s32 	%r414, %r400, %r396;
	add.s32 	%r415, %r400, %r397;
	add.s32 	%r416, %r400, %r398;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd65, %r401, 2;
	add.s64 	%rd49, %rd18, %rd65;
	mul.wide.s32 	%rd66, %r402, 2;
	add.s64 	%rd50, %rd18, %rd66;
	mul.wide.s32 	%rd67, %r403, 2;
	add.s64 	%rd51, %rd18, %rd67;
	mul.wide.s32 	%rd68, %r404, 2;
	add.s64 	%rd52, %rd18, %rd68;
	mul.wide.s32 	%rd69, %r405, 2;
	add.s64 	%rd53, %rd18, %rd69;
	mul.wide.s32 	%rd70, %r406, 2;
	add.s64 	%rd54, %rd18, %rd70;
	mul.wide.s32 	%rd71, %r407, 2;
	add.s64 	%rd55, %rd18, %rd71;
	mul.wide.s32 	%rd72, %r408, 2;
	add.s64 	%rd56, %rd18, %rd72;
	mul.wide.s32 	%rd73, %r409, 2;
	add.s64 	%rd57, %rd18, %rd73;
	mul.wide.s32 	%rd74, %r410, 2;
	add.s64 	%rd58, %rd18, %rd74;
	mul.wide.s32 	%rd75, %r411, 2;
	add.s64 	%rd59, %rd18, %rd75;
	mul.wide.s32 	%rd76, %r412, 2;
	add.s64 	%rd60, %rd18, %rd76;
	mul.wide.s32 	%rd77, %r413, 2;
	add.s64 	%rd61, %rd18, %rd77;
	mul.wide.s32 	%rd78, %r414, 2;
	add.s64 	%rd62, %rd18, %rd78;
	mul.wide.s32 	%rd79, %r415, 2;
	add.s64 	%rd63, %rd18, %rd79;
	mul.wide.s32 	%rd80, %r416, 2;
	add.s64 	%rd64, %rd18, %rd80;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p71, %r8, %r68;
	setp.lt.s32 	%p72, %r368, %r68;
	setp.lt.s32 	%p73, %r369, %r68;
	setp.lt.s32 	%p74, %r370, %r68;
	setp.lt.s32 	%p75, %r371, %r68;
	setp.lt.s32 	%p76, %r372, %r68;
	setp.lt.s32 	%p77, %r373, %r68;
	setp.lt.s32 	%p78, %r374, %r68;
	setp.lt.s32 	%p79, %r375, %r68;
	setp.lt.s32 	%p80, %r376, %r68;
	setp.lt.s32 	%p81, %r377, %r68;
	setp.lt.s32 	%p82, %r378, %r68;
	setp.lt.s32 	%p83, %r379, %r68;
	setp.lt.s32 	%p84, %r380, %r68;
	setp.lt.s32 	%p85, %r381, %r68;
	setp.lt.s32 	%p86, %r382, %r68;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p87, %r400, %r70;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p55, %p71, %p87;
	and.pred  	%p56, %p72, %p87;
	and.pred  	%p57, %p73, %p87;
	and.pred  	%p58, %p74, %p87;
	and.pred  	%p59, %p75, %p87;
	and.pred  	%p60, %p76, %p87;
	and.pred  	%p61, %p77, %p87;
	and.pred  	%p62, %p78, %p87;
	and.pred  	%p63, %p79, %p87;
	and.pred  	%p64, %p80, %p87;
	and.pred  	%p65, %p81, %p87;
	and.pred  	%p66, %p82, %p87;
	and.pred  	%p67, %p83, %p87;
	and.pred  	%p68, %p84, %p87;
	and.pred  	%p69, %p85, %p87;
	and.pred  	%p70, %p86, %p87;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shl.b32 	%r417, %r4, 4;
	and.b32  	%r418, %r417, 48;
	and.b32  	%r419, %r488, 3;
	or.b32  	%r420, %r419, %r418;
	shr.u32 	%r421, %r5, 2;
	or.b32  	%r422, %r420, %r421;
	shl.b32 	%r423, %r4, 1;
	and.b32  	%r424, %r423, 192;
	or.b32  	%r425, %r422, %r424;
	and.b32  	%r426, %r425, 240;
	shl.b32 	%r427, %r426, 1;
	add.s32 	%r429, %r477, %r427;
	shl.b32 	%r430, %r425, 1;
	add.s32 	%r352, %r429, %r430;
	mov.pred 	%p39, -1;
	// begin inline asm
	@%p39 st.shared.b16 [ %r352 + 0 ], %rs195;
	// end inline asm
	or.b32  	%r431, %r425, 8;
	and.b32  	%r432, %r431, 248;
	shl.b32 	%r433, %r432, 1;
	add.s32 	%r434, %r477, %r433;
	add.s32 	%r435, %r434, %r430;
	add.s32 	%r353, %r435, 16;
	// begin inline asm
	@%p39 st.shared.b16 [ %r353 + 0 ], %rs196;
	// end inline asm
	or.b32  	%r436, %r425, 256;
	and.b32  	%r437, %r436, 496;
	shl.b32 	%r438, %r437, 1;
	add.s32 	%r439, %r477, %r438;
	add.s32 	%r440, %r439, %r430;
	add.s32 	%r354, %r440, 512;
	// begin inline asm
	@%p39 st.shared.b16 [ %r354 + 0 ], %rs199;
	// end inline asm
	or.b32  	%r441, %r425, 264;
	and.b32  	%r442, %r441, 504;
	shl.b32 	%r443, %r442, 1;
	add.s32 	%r444, %r477, %r443;
	add.s32 	%r445, %r444, %r430;
	add.s32 	%r355, %r445, 528;
	// begin inline asm
	@%p39 st.shared.b16 [ %r355 + 0 ], %rs200;
	// end inline asm
	or.b32  	%r446, %r425, 512;
	and.b32  	%r447, %r446, 752;
	shl.b32 	%r448, %r447, 1;
	add.s32 	%r449, %r477, %r448;
	add.s32 	%r450, %r449, %r430;
	add.s32 	%r356, %r450, 1024;
	// begin inline asm
	@%p39 st.shared.b16 [ %r356 + 0 ], %rs203;
	// end inline asm
	or.b32  	%r451, %r425, 520;
	and.b32  	%r452, %r451, 760;
	shl.b32 	%r453, %r452, 1;
	add.s32 	%r454, %r477, %r453;
	add.s32 	%r455, %r454, %r430;
	add.s32 	%r357, %r455, 1040;
	// begin inline asm
	@%p39 st.shared.b16 [ %r357 + 0 ], %rs204;
	// end inline asm
	or.b32  	%r456, %r425, 768;
	and.b32  	%r457, %r456, 1008;
	shl.b32 	%r458, %r457, 1;
	add.s32 	%r459, %r477, %r458;
	add.s32 	%r460, %r459, %r430;
	add.s32 	%r358, %r460, 1536;
	// begin inline asm
	@%p39 st.shared.b16 [ %r358 + 0 ], %rs207;
	// end inline asm
	or.b32  	%r461, %r425, 776;
	and.b32  	%r462, %r461, 1016;
	shl.b32 	%r463, %r462, 1;
	add.s32 	%r464, %r477, %r463;
	add.s32 	%r465, %r464, %r430;
	add.s32 	%r359, %r465, 1552;
	// begin inline asm
	@%p39 st.shared.b16 [ %r359 + 0 ], %rs208;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r466, %r4, 5;
	and.b32  	%r467, %r466, 4064;
	add.s32 	%r468, %r477, %r467;
	ld.shared.v4.b32 	{%r469, %r470, %r471, %r472}, [%r468];
	mov.b32 	{%rs144, %rs146}, %r472;
	mov.b32 	{%rs140, %rs142}, %r471;
	mov.b32 	{%rs136, %rs138}, %r470;
	mov.b32 	{%rs132, %rs134}, %r469;
	bar.sync 	0;
	// begin inline asm
	@%p39 st.shared.b16 [ %r352 + 0 ], %rs197;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r353 + 0 ], %rs198;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r354 + 0 ], %rs201;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r355 + 0 ], %rs202;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r356 + 0 ], %rs205;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r357 + 0 ], %rs206;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r358 + 0 ], %rs209;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r359 + 0 ], %rs210;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.b32 	{%r473, %r474, %r475, %r476}, [%r468];
	mov.b32 	{%rs160, %rs162}, %r476;
	mov.b32 	{%rs156, %rs158}, %r475;
	mov.b32 	{%rs152, %rs154}, %r474;
	mov.b32 	{%rs148, %rs150}, %r473;
	// begin inline asm
	mov.u16 %rs131, 0x0;
	@%p55 atom.global.gpu.acq_rel.add.noftz.f16 %rs131, [ %rd49 + 0 ], %rs132;
	// end inline asm
	// begin inline asm
	mov.u16 %rs133, 0x0;
	@%p56 atom.global.gpu.acq_rel.add.noftz.f16 %rs133, [ %rd50 + 0 ], %rs134;
	// end inline asm
	// begin inline asm
	mov.u16 %rs135, 0x0;
	@%p57 atom.global.gpu.acq_rel.add.noftz.f16 %rs135, [ %rd51 + 0 ], %rs136;
	// end inline asm
	// begin inline asm
	mov.u16 %rs137, 0x0;
	@%p58 atom.global.gpu.acq_rel.add.noftz.f16 %rs137, [ %rd52 + 0 ], %rs138;
	// end inline asm
	// begin inline asm
	mov.u16 %rs139, 0x0;
	@%p59 atom.global.gpu.acq_rel.add.noftz.f16 %rs139, [ %rd53 + 0 ], %rs140;
	// end inline asm
	// begin inline asm
	mov.u16 %rs141, 0x0;
	@%p60 atom.global.gpu.acq_rel.add.noftz.f16 %rs141, [ %rd54 + 0 ], %rs142;
	// end inline asm
	// begin inline asm
	mov.u16 %rs143, 0x0;
	@%p61 atom.global.gpu.acq_rel.add.noftz.f16 %rs143, [ %rd55 + 0 ], %rs144;
	// end inline asm
	// begin inline asm
	mov.u16 %rs145, 0x0;
	@%p62 atom.global.gpu.acq_rel.add.noftz.f16 %rs145, [ %rd56 + 0 ], %rs146;
	// end inline asm
	// begin inline asm
	mov.u16 %rs147, 0x0;
	@%p63 atom.global.gpu.acq_rel.add.noftz.f16 %rs147, [ %rd57 + 0 ], %rs148;
	// end inline asm
	// begin inline asm
	mov.u16 %rs149, 0x0;
	@%p64 atom.global.gpu.acq_rel.add.noftz.f16 %rs149, [ %rd58 + 0 ], %rs150;
	// end inline asm
	// begin inline asm
	mov.u16 %rs151, 0x0;
	@%p65 atom.global.gpu.acq_rel.add.noftz.f16 %rs151, [ %rd59 + 0 ], %rs152;
	// end inline asm
	// begin inline asm
	mov.u16 %rs153, 0x0;
	@%p66 atom.global.gpu.acq_rel.add.noftz.f16 %rs153, [ %rd60 + 0 ], %rs154;
	// end inline asm
	// begin inline asm
	mov.u16 %rs155, 0x0;
	@%p67 atom.global.gpu.acq_rel.add.noftz.f16 %rs155, [ %rd61 + 0 ], %rs156;
	// end inline asm
	// begin inline asm
	mov.u16 %rs157, 0x0;
	@%p68 atom.global.gpu.acq_rel.add.noftz.f16 %rs157, [ %rd62 + 0 ], %rs158;
	// end inline asm
	// begin inline asm
	mov.u16 %rs159, 0x0;
	@%p69 atom.global.gpu.acq_rel.add.noftz.f16 %rs159, [ %rd63 + 0 ], %rs160;
	// end inline asm
	// begin inline asm
	mov.u16 %rs161, 0x0;
	@%p70 atom.global.gpu.acq_rel.add.noftz.f16 %rs161, [ %rd64 + 0 ], %rs162;
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 174                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x98:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
