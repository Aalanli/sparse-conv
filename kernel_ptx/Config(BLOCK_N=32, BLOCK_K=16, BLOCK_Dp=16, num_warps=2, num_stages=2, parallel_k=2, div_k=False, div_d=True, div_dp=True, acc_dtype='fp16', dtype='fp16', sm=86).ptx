//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<51>;
	.reg .b16 	%rs<123>;
	.reg .b32 	%r<236>;
	.reg .b64 	%rd<50>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r50, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r48, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd14, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r51, %ctaid.x;
	.loc	1 50 36                         // implicit_gemm_kernel.py:50:36
	shr.u32 	%r52, %r51, 31;
	add.s32 	%r53, %r51, %r52;
	and.b32  	%r54, %r53, -2;
	sub.s32 	%r230, %r51, %r54;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r55, %r48, 31;
$L__tmp2:
	.loc	1 49 35                         // implicit_gemm_kernel.py:49:35
	shr.s32 	%r56, %r53, 1;
	shr.s32 	%r58, %r55, 31;
	shr.u32 	%r59, %r58, 27;
	add.s32 	%r60, %r55, %r59;
	shr.s32 	%r61, %r60, 5;
	ld.param.u32 	%r62, [implicit_conv3d_kernel_param_8];
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r2, %r56, %r61;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r63, %r2, %r61;
	sub.s32 	%r64, %r56, %r63;
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r65, %r62, %r62;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r3, %r65, %r62;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r4, %tid.x;
	shr.u32 	%r66, %r4, 1;
	and.b32  	%r6, %r66, 16;
	and.b32  	%r8, %r4, 15;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r9, %r64, 5;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.lt.s32 	%p4, %r230, %r3;
	mov.u32 	%r227, global_smem;
	@%p4 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph14
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r49, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r47, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd13, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd12, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd15, [implicit_conv3d_kernel_param_1];
	and.b32  	%r5, %r66, 8;
	bfe.u32 	%r7, %r4, 1, 5;
	and.b32  	%r67, %r4, 31;
	or.b32  	%r10, %r9, %r7;
	or.b32  	%r11, %r9, %r67;
	mul.lo.s32 	%r68, %r10, %r3;
	mul.lo.s32 	%r69, %r11, %r3;
	mul.wide.s32 	%rd16, %r68, 4;
	add.s64 	%rd1, %rd15, %rd16;
	mul.wide.s32 	%rd17, %r69, 4;
	add.s64 	%rd2, %rd15, %rd17;
	add.s32 	%r14, %r49, 15;
	shr.s32 	%r70, %r14, 31;
	shr.u32 	%r71, %r70, 28;
	add.s32 	%r72, %r14, %r71;
	shr.s32 	%r73, %r72, 4;
	shl.b32 	%r74, %r4, 3;
	and.b32  	%r15, %r74, 8;
	shl.b32 	%r75, %r4, 2;
	and.b32  	%r76, %r75, 12;
	shr.u32 	%r234, %r4, 2;
	bfe.u32 	%r17, %r4, 2, 4;
	shl.b32 	%r235, %r2, 4;
	mul.lo.s32 	%r19, %r3, %r49;
	or.b32  	%r20, %r235, %r76;
	setp.lt.s32 	%p5, %r20, %r50;
	setp.gt.s32 	%p6, %r14, 15;
	setp.lt.s32 	%p7, %r15, %r49;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p1, %p7, %p6;
	xor.b32  	%r77, %r74, %r4;
	and.b32  	%r78, %r77, 8;
	shl.b32 	%r79, %r78, 1;
	shl.b32 	%r80, %r7, 5;
	or.b32  	%r81, %r80, %r79;
	add.s32 	%r106, %r227, %r81;
	xor.b32  	%r83, %r76, %r5;
	shl.b32 	%r84, %r83, 1;
	shl.b32 	%r85, %r17, 5;
	or.b32  	%r86, %r85, %r84;
	add.s32 	%r87, %r227, %r86;
	add.s32 	%r108, %r87, 1024;
	add.s32 	%r88, %r73, -1;
	shl.b32 	%r89, %r4, 1;
	and.b32  	%r90, %r89, 8;
	xor.b32  	%r91, %r90, %r5;
	or.b32  	%r92, %r6, %r8;
	shl.b32 	%r93, %r92, 5;
	shl.b32 	%r94, %r91, 1;
	or.b32  	%r95, %r93, %r94;
	add.s32 	%r23, %r227, %r95;
	shl.b32 	%r96, %r8, 4;
	or.b32  	%r24, %r90, %r96;
	xor.b32  	%r25, %r24, 8;
	cvt.s64.s32 	%rd3, %r88;
	cvt.u64.u32 	%rd18, %r15;
	cvt.s64.s32 	%rd4, %r49;
	cvt.u64.u32 	%rd5, %r73;
	and.pred  	%p2, %p5, %p6;
	or.b64  	%rd6, %rd18, 16;
	mad.lo.s32 	%r97, %r230, %r49, %r17;
	add.s32 	%r229, %r97, 16;
	shl.b32 	%r27, %r49, 1;
	mad.lo.s32 	%r98, %r50, %r229, %r235;
	add.s32 	%r228, %r98, %r76;
	mul.lo.s32 	%r99, %r50, %r49;
	shl.b32 	%r29, %r99, 1;
	shl.b32 	%r30, %r50, 4;
	mov.b16 	%rs99, 0x0000;
	setp.lt.s32 	%p9, %r11, %r48;
	shl.b32 	%r158, %r25, 1;
	mov.u16 	%rs100, %rs99;
	mov.u16 	%rs101, %rs99;
	mov.u16 	%rs102, %rs99;
	mov.u16 	%rs103, %rs99;
	mov.u16 	%rs104, %rs99;
	mov.u16 	%rs105, %rs99;
	mov.u16 	%rs106, %rs99;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s32 	%r230, %r230, 2;
	add.s32 	%r229, %r229, %r27;
	add.s32 	%r228, %r228, %r29;
	setp.lt.s32 	%p25, %r230, %r3;
	@%p25 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p8, %r10, %r48;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	mul.wide.s32 	%rd21, %r230, 4;
	add.s64 	%rd19, %rd1, %rd21;
	add.s64 	%rd20, %rd2, %rd21;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r100, 0xffffffffffffffff;
	@%p8 ld.global.b32 { %r100 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r101, 0xffffffffffffffff;
	@%p9 ld.global.b32 { %r101 }, [ %rd20 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p11, %r101, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p13, %r101, %r47;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p14, %p11, %p13;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r102, 1, 0, %p14;
	mov.b32 	%r103, -1;
	redux.sync.or.b32 %r104, %r102, %r103;
	and.b32  	%r105, %r104, 1;
	setp.eq.b32 	%p15, %r105, 1;
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p16, %p15;
	@%p16 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.gt.s32 	%p10, %r100, -1;
	setp.lt.s32 	%p12, %r100, %r47;
	and.pred  	%p3, %p10, %p12;
	setp.lt.s32 	%p17, %r14, 16;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r35, %r100, %r49;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r110, %r35, %r15;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd24, %r110, 2;
	add.s64 	%rd22, %rd12, %rd24;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	mad.lo.s32 	%r111, %r230, %r49, %r17;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r112, %r111, %r50, %r20;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd25, %r112, 2;
	add.s64 	%rd23, %rd13, %rd25;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p18, %r111, %r19;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	selp.b32 	%r113, 16, 0, %p1;
	selp.b32 	%r107, %r113, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r106 + 0 ], [ %rd22 + 0 ], 0x10, %r107;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r114, 8, 0, %p2;
	selp.b32 	%r109, %r114, 0, %p18;
	// begin inline asm
	cp.async.ca.shared.global [ %r108 + 0 ], [ %rd23 + 0 ], 0x8, %r109;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p17 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	cvt.u64.u32 	%rd7, %r35;
	mov.b32 	%r233, -1;
	mov.b64 	%rd49, 0;
	mov.u32 	%r231, %r228;
	mov.u32 	%r232, %r229;
	mov.u64 	%rd48, %rd6;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p20, %rd49, %rd3;
	add.s32 	%r151, %r233, 1;
	setp.gt.u32 	%p21, %r233, 2147483646;
	selp.b32 	%r233, %r151, 0, %p21;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r152, %r233, 10;
	add.s32 	%r120, %r23, %r152;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r131, %r132, %r133, %r134}, [%r120];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	shl.b32 	%r153, %r233, 9;
	add.s32 	%r155, %r227, %r153;
	add.s32 	%r156, %r155, 1024;
	shl.b32 	%r157, %r24, 1;
	add.s32 	%r123, %r156, %r157;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.trans.shared.b16 {%r121, %r122}, [%r123];
	// end inline asm
	add.s32 	%r126, %r156, %r158;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.trans.shared.b16 {%r124, %r125}, [%r126];
	// end inline asm
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	mov.b32 	%r127, {%rs99, %rs100};
	mov.b32 	%r128, {%rs101, %rs102};
	mov.b32 	%r137, {%rs103, %rs104};
	mov.b32 	%r138, {%rs105, %rs106};
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r127, %r128 }, { %r131, %r132, %r133, %r134 }, { %r121, %r122 }, { %r127, %r128 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r137, %r138 }, { %r131, %r132, %r133, %r134 }, { %r124, %r125 }, { %r137, %r138 };
	// end inline asm
	mov.b32 	{%rs99, %rs100}, %r127;
	mov.b32 	{%rs101, %rs102}, %r128;
	mov.b32 	{%rs103, %rs104}, %r137;
	mov.b32 	{%rs105, %rs106}, %r138;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd49, %rd49, 1;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd29, %rd7, %rd48;
	cvt.u32.u64 	%r159, %rd29;
	mul.wide.s32 	%rd30, %r159, 2;
	add.s64 	%rd27, %rd12, %rd30;
	.loc	1 70 112                        // implicit_gemm_kernel.py:70:112
	setp.lt.s64 	%p22, %rd48, %rd4;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd31, %r231, 2;
	add.s64 	%rd28, %rd13, %rd31;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p23, %r232, %r19;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r160, 16, 0, %p22;
	selp.b32 	%r161, %r160, 0, %p3;
	selp.b32 	%r148, %r161, 0, %p20;
	// begin inline asm
	cp.async.cg.shared.global [ %r106 + 0 ], [ %rd27 + 0 ], 0x10, %r148;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r162, 8, 0, %p23;
	selp.b32 	%r163, %r162, 0, %p5;
	selp.b32 	%r150, %r163, 0, %p20;
	// begin inline asm
	cp.async.ca.shared.global [ %r108 + 0 ], [ %rd28 + 0 ], 0x8, %r150;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd48, %rd48, 16;
	add.s32 	%r232, %r232, 16;
	add.s32 	%r231, %r231, %r30;
	setp.ne.s64 	%p24, %rd5, %rd49;
	@%p24 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge15_crit_edge
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r235, %r2, 4;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shr.u32 	%r234, %r4, 2;
	mov.b16 	%rs99, 0;
	mov.u16 	%rs100, %rs99;
	mov.u16 	%rs101, %rs99;
	mov.u16 	%rs102, %rs99;
	mov.u16 	%rs103, %rs99;
	mov.u16 	%rs104, %rs99;
	mov.u16 	%rs105, %rs99;
	mov.u16 	%rs106, %rs99;
$L__BB0_9:                              // %._crit_edge15
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	bfe.u32 	%r172, %r4, 4, 2;
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r173, %r172, %r9;
	or.b32  	%r174, %r173, 4;
	or.b32  	%r175, %r173, 8;
	or.b32  	%r176, %r173, 12;
	or.b32  	%r177, %r173, 16;
	or.b32  	%r178, %r173, 20;
	or.b32  	%r179, %r173, 24;
	or.b32  	%r180, %r173, 28;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r181, %r173, %r50;
	shl.b32 	%r182, %r50, 2;
	add.s32 	%r183, %r181, %r182;
	add.s32 	%r184, %r183, %r182;
	add.s32 	%r185, %r184, %r182;
	add.s32 	%r186, %r185, %r182;
	add.s32 	%r187, %r186, %r182;
	add.s32 	%r188, %r187, %r182;
	add.s32 	%r189, %r188, %r182;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r190, %r235, %r8;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r191, %r190, %r181;
	add.s32 	%r192, %r190, %r183;
	add.s32 	%r193, %r190, %r184;
	add.s32 	%r194, %r190, %r185;
	add.s32 	%r195, %r190, %r186;
	add.s32 	%r196, %r190, %r187;
	add.s32 	%r197, %r190, %r188;
	add.s32 	%r198, %r190, %r189;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd40, %r191, 2;
	add.s64 	%rd32, %rd14, %rd40;
	mul.wide.s32 	%rd41, %r192, 2;
	add.s64 	%rd33, %rd14, %rd41;
	mul.wide.s32 	%rd42, %r193, 2;
	add.s64 	%rd34, %rd14, %rd42;
	mul.wide.s32 	%rd43, %r194, 2;
	add.s64 	%rd35, %rd14, %rd43;
	mul.wide.s32 	%rd44, %r195, 2;
	add.s64 	%rd36, %rd14, %rd44;
	mul.wide.s32 	%rd45, %r196, 2;
	add.s64 	%rd37, %rd14, %rd45;
	mul.wide.s32 	%rd46, %r197, 2;
	add.s64 	%rd38, %rd14, %rd46;
	mul.wide.s32 	%rd47, %r198, 2;
	add.s64 	%rd39, %rd14, %rd47;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p42, %r173, %r48;
	setp.lt.s32 	%p43, %r174, %r48;
	setp.lt.s32 	%p44, %r175, %r48;
	setp.lt.s32 	%p45, %r176, %r48;
	setp.lt.s32 	%p46, %r177, %r48;
	setp.lt.s32 	%p47, %r178, %r48;
	setp.lt.s32 	%p48, %r179, %r48;
	setp.lt.s32 	%p49, %r180, %r48;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p50, %r190, %r50;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p34, %p42, %p50;
	and.pred  	%p35, %p43, %p50;
	and.pred  	%p36, %p44, %p50;
	and.pred  	%p37, %p45, %p50;
	and.pred  	%p38, %p46, %p50;
	and.pred  	%p39, %p47, %p50;
	and.pred  	%p40, %p48, %p50;
	and.pred  	%p41, %p49, %p50;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shl.b32 	%r199, %r4, 6;
	and.b32  	%r200, %r199, 192;
	and.b32  	%r201, %r234, 7;
	or.b32  	%r202, %r201, %r200;
	or.b32  	%r203, %r202, %r6;
	shl.b32 	%r204, %r4, 5;
	and.b32  	%r205, %r204, 480;
	or.b32  	%r206, %r172, %r205;
	shr.u32 	%r207, %r200, 4;
	add.s32 	%r209, %r227, %r207;
	shl.b32 	%r210, %r203, 1;
	add.s32 	%r164, %r209, %r210;
	mov.pred 	%p26, -1;
	// begin inline asm
	@%p26 st.shared.b16 [ %r164 + 0 ], %rs99;
	// end inline asm
	or.b32  	%r211, %r200, 32;
	shr.u32 	%r212, %r211, 4;
	add.s32 	%r213, %r227, %r212;
	add.s32 	%r214, %r213, %r210;
	add.s32 	%r165, %r214, 64;
	// begin inline asm
	@%p26 st.shared.b16 [ %r165 + 0 ], %rs100;
	// end inline asm
	add.s32 	%r166, %r164, 16;
	// begin inline asm
	@%p26 st.shared.b16 [ %r166 + 0 ], %rs101;
	// end inline asm
	add.s32 	%r167, %r214, 80;
	// begin inline asm
	@%p26 st.shared.b16 [ %r167 + 0 ], %rs102;
	// end inline asm
	or.b32  	%r215, %r200, 256;
	shr.u32 	%r216, %r215, 4;
	add.s32 	%r217, %r227, %r216;
	add.s32 	%r218, %r217, %r210;
	add.s32 	%r168, %r218, 512;
	// begin inline asm
	@%p26 st.shared.b16 [ %r168 + 0 ], %rs103;
	// end inline asm
	or.b32  	%r219, %r200, 288;
	shr.u32 	%r220, %r219, 4;
	add.s32 	%r221, %r227, %r220;
	add.s32 	%r222, %r221, %r210;
	add.s32 	%r169, %r222, 576;
	// begin inline asm
	@%p26 st.shared.b16 [ %r169 + 0 ], %rs104;
	// end inline asm
	add.s32 	%r170, %r218, 528;
	// begin inline asm
	@%p26 st.shared.b16 [ %r170 + 0 ], %rs105;
	// end inline asm
	add.s32 	%r171, %r222, 592;
	// begin inline asm
	@%p26 st.shared.b16 [ %r171 + 0 ], %rs106;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r223, %r205, 4;
	add.s32 	%r224, %r227, %r223;
	shl.b32 	%r225, %r206, 1;
	add.s32 	%r226, %r224, %r225;
	ld.shared.u16 	%rs68, [%r226];
	ld.shared.u16 	%rs70, [%r226+8];
	ld.shared.u16 	%rs72, [%r226+16];
	ld.shared.u16 	%rs74, [%r226+24];
	ld.shared.u16 	%rs76, [%r226+32];
	ld.shared.u16 	%rs78, [%r226+40];
	ld.shared.u16 	%rs80, [%r226+48];
	ld.shared.u16 	%rs82, [%r226+56];
	// begin inline asm
	mov.u16 %rs67, 0x0;
	@%p34 atom.global.gpu.acq_rel.add.noftz.f16 %rs67, [ %rd32 + 0 ], %rs68;
	// end inline asm
	// begin inline asm
	mov.u16 %rs69, 0x0;
	@%p35 atom.global.gpu.acq_rel.add.noftz.f16 %rs69, [ %rd33 + 0 ], %rs70;
	// end inline asm
	// begin inline asm
	mov.u16 %rs71, 0x0;
	@%p36 atom.global.gpu.acq_rel.add.noftz.f16 %rs71, [ %rd34 + 0 ], %rs72;
	// end inline asm
	// begin inline asm
	mov.u16 %rs73, 0x0;
	@%p37 atom.global.gpu.acq_rel.add.noftz.f16 %rs73, [ %rd35 + 0 ], %rs74;
	// end inline asm
	// begin inline asm
	mov.u16 %rs75, 0x0;
	@%p38 atom.global.gpu.acq_rel.add.noftz.f16 %rs75, [ %rd36 + 0 ], %rs76;
	// end inline asm
	// begin inline asm
	mov.u16 %rs77, 0x0;
	@%p39 atom.global.gpu.acq_rel.add.noftz.f16 %rs77, [ %rd37 + 0 ], %rs78;
	// end inline asm
	// begin inline asm
	mov.u16 %rs79, 0x0;
	@%p40 atom.global.gpu.acq_rel.add.noftz.f16 %rs79, [ %rd38 + 0 ], %rs80;
	// end inline asm
	// begin inline asm
	mov.u16 %rs81, 0x0;
	@%p41 atom.global.gpu.acq_rel.add.noftz.f16 %rs81, [ %rd39 + 0 ], %rs82;
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 150                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x8f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
