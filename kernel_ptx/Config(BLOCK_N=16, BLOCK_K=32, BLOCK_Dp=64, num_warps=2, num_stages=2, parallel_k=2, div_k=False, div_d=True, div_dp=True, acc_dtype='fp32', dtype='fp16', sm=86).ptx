//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<88>;
	.reg .b16 	%rs<243>;
	.reg .b32 	%r<442>;
	.reg .b64 	%rd<118>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r45, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r43, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd40, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r46, %ctaid.x;
	.loc	1 50 36                         // implicit_gemm_kernel.py:50:36
	shr.u32 	%r47, %r46, 31;
	add.s32 	%r48, %r46, %r47;
	and.b32  	%r49, %r48, -2;
	sub.s32 	%r439, %r46, %r49;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r50, %r43, 15;
$L__tmp2:
	.loc	1 49 35                         // implicit_gemm_kernel.py:49:35
	shr.s32 	%r51, %r48, 1;
	shr.s32 	%r53, %r50, 31;
	shr.u32 	%r54, %r53, 28;
	add.s32 	%r55, %r50, %r54;
	shr.s32 	%r56, %r55, 4;
	ld.param.u32 	%r57, [implicit_conv3d_kernel_param_8];
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r2, %r51, %r56;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r58, %r2, %r56;
	sub.s32 	%r59, %r51, %r58;
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r60, %r57, %r57;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r3, %r60, %r57;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r4, %tid.x;
	bfe.u32 	%r5, %r4, 2, 3;
	and.b32  	%r6, %r4, 32;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r10, %r59, 4;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.lt.s32 	%p4, %r439, %r3;
	mov.u32 	%r438, global_smem;
	@%p4 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph34
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r44, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r42, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd39, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd38, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd41, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	shr.u32 	%r7, %r6, 2;
	or.b32  	%r8, %r5, %r7;
	and.b32  	%r9, %r4, 15;
	or.b32  	%r11, %r10, %r8;
	or.b32  	%r12, %r10, %r9;
	mul.lo.s32 	%r61, %r11, %r3;
	mul.lo.s32 	%r62, %r12, %r3;
	mul.wide.s32 	%rd42, %r61, 4;
	add.s64 	%rd1, %rd41, %rd42;
	mul.wide.s32 	%rd43, %r62, 4;
	add.s64 	%rd2, %rd41, %rd43;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r63, %r4, 4;
	and.b32  	%r64, %r4, 2;
	add.s32 	%r14, %r44, 31;
	shr.s32 	%r65, %r14, 31;
	shr.u32 	%r66, %r65, 27;
	add.s32 	%r67, %r14, %r66;
	shr.s32 	%r68, %r67, 5;
	shl.b32 	%r69, %r4, 3;
	and.b32  	%r70, %r69, 8;
	shl.b32 	%r71, %r64, 3;
	or.b32  	%r15, %r70, %r71;
	bfe.u32 	%r16, %r4, 3, 3;
	or.b32  	%r17, %r16, 8;
	or.b32  	%r18, %r16, 16;
	or.b32  	%r19, %r16, 24;
	shl.b32 	%r72, %r63, 3;
	or.b32  	%r73, %r15, %r72;
	shl.b32 	%r441, %r2, 6;
	mul.lo.s32 	%r21, %r3, %r44;
	or.b32  	%r22, %r441, %r73;
	setp.lt.s32 	%p5, %r22, %r45;
	setp.gt.s32 	%p6, %r14, 31;
	setp.lt.s32 	%p7, %r15, %r44;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p1, %p7, %p6;
	and.b32  	%r74, %r4, 24;
	xor.b32  	%r75, %r15, %r74;
	shl.b32 	%r76, %r75, 1;
	shl.b32 	%r77, %r8, 6;
	or.b32  	%r78, %r77, %r76;
	add.s32 	%r80, %r438, %r78;
	add.s32 	%r141, %r80, 4096;
	and.b32  	%r81, %r4, 56;
	xor.b32  	%r82, %r73, %r81;
	shl.b32 	%r83, %r82, 1;
	add.s32 	%r84, %r438, %r83;
	shl.b32 	%r85, %r16, 7;
	add.s32 	%r143, %r84, %r85;
	add.s32 	%r145, %r143, 1024;
	add.s32 	%r147, %r143, 2048;
	add.s32 	%r149, %r143, 3072;
	add.s32 	%r86, %r68, -1;
	shl.b32 	%r87, %r64, 2;
	shl.b32 	%r88, %r63, 2;
	or.b32  	%r89, %r87, %r88;
	shr.u32 	%r90, %r4, 1;
	and.b32  	%r91, %r90, 8;
	xor.b32  	%r92, %r89, %r91;
	shl.b32 	%r93, %r9, 5;
	or.b32  	%r28, %r92, %r93;
	or.b32  	%r94, %r87, 16;
	or.b32  	%r95, %r91, %r88;
	xor.b32  	%r96, %r95, %r94;
	or.b32  	%r29, %r96, %r93;
	xor.b32  	%r97, %r73, %r7;
	shl.b32 	%r98, %r4, 6;
	and.b32  	%r99, %r98, 1984;
	or.b32  	%r30, %r97, %r99;
	or.b32  	%r100, %r70, 16;
	xor.b32  	%r101, %r100, %r71;
	or.b32  	%r102, %r101, %r72;
	xor.b32  	%r103, %r102, %r7;
	or.b32  	%r31, %r103, %r99;
	or.b32  	%r34, %r15, 32;
	or.b32  	%r104, %r7, %r72;
	xor.b32  	%r105, %r104, %r34;
	or.b32  	%r32, %r105, %r99;
	or.b32  	%r106, %r70, 48;
	or.b32  	%r107, %r72, %r71;
	or.b32  	%r108, %r107, %r7;
	xor.b32  	%r109, %r108, %r106;
	or.b32  	%r33, %r109, %r99;
	cvt.s64.s32 	%rd3, %r86;
	cvt.s64.s32 	%rd4, %r44;
	cvt.u64.u32 	%rd5, %r68;
	and.pred  	%p2, %p5, %p6;
	cvt.u64.u32 	%rd6, %r15;
	mad.lo.s32 	%r110, %r439, %r44, %r16;
	cvt.u64.u32 	%rd111, %r110;
	shl.b32 	%r111, %r44, 1;
	cvt.u64.u32 	%rd8, %r111;
	add.s32 	%r112, %r110, 56;
	mad.lo.s32 	%r113, %r45, %r112, %r441;
	add.s32 	%r114, %r113, %r72;
	cvt.u64.u32 	%rd110, %r114;
	mul.lo.s32 	%r115, %r45, %r44;
	shl.b32 	%r116, %r115, 1;
	cvt.u64.u32 	%rd10, %r116;
	shl.b32 	%r117, %r45, 5;
	cvt.u64.u32 	%rd11, %r117;
	add.s32 	%r118, %r110, 48;
	mad.lo.s32 	%r119, %r45, %r118, %r441;
	add.s32 	%r120, %r119, %r72;
	cvt.u64.u32 	%rd109, %r120;
	add.s32 	%r121, %r110, 40;
	mad.lo.s32 	%r122, %r45, %r121, %r441;
	add.s32 	%r123, %r122, %r72;
	cvt.u64.u32 	%rd108, %r123;
	add.s32 	%r124, %r110, 32;
	mad.lo.s32 	%r125, %r45, %r124, %r441;
	add.s32 	%r126, %r125, %r72;
	cvt.u64.u32 	%rd107, %r126;
	mov.b16 	%rs195, 0x0000;
	setp.lt.s32 	%p9, %r12, %r43;
	shl.b32 	%r290, %r28, 1;
	shl.b32 	%r291, %r29, 1;
	shl.b32 	%r294, %r30, 1;
	shl.b32 	%r295, %r31, 1;
	shl.b32 	%r296, %r32, 1;
	shl.b32 	%r297, %r33, 1;
	mov.u16 	%rs196, %rs195;
	mov.u16 	%rs197, %rs195;
	mov.u16 	%rs198, %rs195;
	mov.u16 	%rs199, %rs195;
	mov.u16 	%rs200, %rs195;
	mov.u16 	%rs201, %rs195;
	mov.u16 	%rs202, %rs195;
	mov.u16 	%rs203, %rs195;
	mov.u16 	%rs204, %rs195;
	mov.u16 	%rs205, %rs195;
	mov.u16 	%rs206, %rs195;
	mov.u16 	%rs207, %rs195;
	mov.u16 	%rs208, %rs195;
	mov.u16 	%rs209, %rs195;
	mov.u16 	%rs210, %rs195;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s32 	%r439, %r439, 2;
	add.s64 	%rd111, %rd111, %rd8;
	add.s64 	%rd110, %rd110, %rd10;
	add.s64 	%rd109, %rd109, %rd10;
	add.s64 	%rd108, %rd108, %rd10;
	add.s64 	%rd107, %rd107, %rd10;
	setp.lt.s32 	%p38, %r439, %r3;
	@%p38 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p8, %r11, %r43;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	mul.wide.s32 	%rd46, %r439, 4;
	add.s64 	%rd44, %rd1, %rd46;
	add.s64 	%rd45, %rd2, %rd46;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r127, 0xffffffffffffffff;
	@%p8 ld.global.b32 { %r127 }, [ %rd44 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r128, 0xffffffffffffffff;
	@%p9 ld.global.b32 { %r128 }, [ %rd45 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p11, %r128, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p13, %r128, %r42;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p14, %p11, %p13;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r129, 1, 0, %p14;
	shfl.sync.bfly.b32	%r130, %r129, 8, 31, -1;
	and.b32  	%r131, %r130, 1;
	setp.eq.b32 	%p15, %r131, 1;
$L__tmp3:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p16, %p14, %p15;
$L__tmp4:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r132, 1, 0, %p16;
	shfl.sync.bfly.b32	%r133, %r132, 4, 31, -1;
	and.b32  	%r134, %r133, 1;
	setp.eq.b32 	%p17, %r134, 1;
$L__tmp5:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p18, %p16, %p17;
$L__tmp6:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r135, 1, 0, %p18;
	shfl.sync.bfly.b32	%r136, %r135, 2, 31, -1;
	and.b32  	%r137, %r136, 1;
	setp.eq.b32 	%p19, %r137, 1;
$L__tmp7:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p20, %p18, %p19;
$L__tmp8:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r138, 1, 0, %p20;
	shfl.sync.bfly.b32	%r139, %r138, 1, 31, -1;
	and.b32  	%r140, %r139, 1;
	setp.eq.b32 	%p21, %r140, 1;
$L__tmp9:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p22, %p20, %p21;
$L__tmp10:
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p23, %p22;
	@%p23 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.gt.s32 	%p10, %r127, -1;
	setp.lt.s32 	%p12, %r127, %r42;
	and.pred  	%p3, %p10, %p12;
	setp.lt.s32 	%p24, %r14, 32;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	mul.lo.s32 	%r151, %r439, %r44;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r37, %r127, %r44;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r152, %r37, %r15;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd52, %r152, 2;
	add.s64 	%rd47, %rd38, %rd52;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s32 	%r153, %r151, %r16;
	add.s32 	%r154, %r151, %r17;
	add.s32 	%r155, %r151, %r18;
	add.s32 	%r156, %r151, %r19;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r157, %r153, %r45, %r22;
	mad.lo.s32 	%r158, %r154, %r45, %r22;
	mad.lo.s32 	%r159, %r155, %r45, %r22;
	mad.lo.s32 	%r160, %r156, %r45, %r22;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd53, %r157, 2;
	add.s64 	%rd48, %rd39, %rd53;
	mul.wide.s32 	%rd54, %r158, 2;
	add.s64 	%rd49, %rd39, %rd54;
	mul.wide.s32 	%rd55, %r159, 2;
	add.s64 	%rd50, %rd39, %rd55;
	mul.wide.s32 	%rd56, %r160, 2;
	add.s64 	%rd51, %rd39, %rd56;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p25, %r153, %r21;
	setp.lt.s32 	%p26, %r154, %r21;
	setp.lt.s32 	%p27, %r155, %r21;
	setp.lt.s32 	%p28, %r156, %r21;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	selp.b32 	%r161, 16, 0, %p1;
	selp.b32 	%r142, %r161, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r141 + 0 ], [ %rd47 + 0 ], 0x10, %r142;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r162, 16, 0, %p2;
	selp.b32 	%r144, %r162, 0, %p25;
	// begin inline asm
	cp.async.cg.shared.global [ %r143 + 0 ], [ %rd48 + 0 ], 0x10, %r144;
	// end inline asm
	selp.b32 	%r146, %r162, 0, %p26;
	// begin inline asm
	cp.async.cg.shared.global [ %r145 + 0 ], [ %rd49 + 0 ], 0x10, %r146;
	// end inline asm
	selp.b32 	%r148, %r162, 0, %p27;
	// begin inline asm
	cp.async.cg.shared.global [ %r147 + 0 ], [ %rd50 + 0 ], 0x10, %r148;
	// end inline asm
	selp.b32 	%r150, %r162, 0, %p28;
	// begin inline asm
	cp.async.cg.shared.global [ %r149 + 0 ], [ %rd51 + 0 ], 0x10, %r150;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p24 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r164, %r34, %r37;
	cvt.u64.u32 	%rd20, %r164;
	mov.b32 	%r440, -1;
	mov.b64 	%rd116, 0;
	mov.u64 	%rd112, %rd107;
	mov.u64 	%rd113, %rd108;
	mov.u64 	%rd114, %rd109;
	mov.u64 	%rd115, %rd110;
	mov.u64 	%rd117, %rd116;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p30, %rd117, %rd3;
	add.s32 	%r285, %r440, 1;
	setp.gt.u32 	%p31, %r440, 2147483646;
	selp.b32 	%r440, %r285, 0, %p31;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r286, %r440, 10;
	add.s32 	%r288, %r438, %r286;
	add.s32 	%r289, %r288, 4096;
	add.s32 	%r169, %r289, %r290;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r199, %r200, %r201, %r202}, [%r169];
	// end inline asm
	add.s32 	%r174, %r289, %r291;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r239, %r240, %r241, %r242}, [%r174];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	shl.b32 	%r292, %r440, 12;
	add.s32 	%r293, %r438, %r292;
	add.s32 	%r179, %r293, %r294;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r175, %r176, %r177, %r178}, [%r179];
	// end inline asm
	add.s32 	%r184, %r293, %r295;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r180, %r181, %r182, %r183}, [%r184];
	// end inline asm
	add.s32 	%r189, %r293, %r296;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r185, %r186, %r187, %r188}, [%r189];
	// end inline asm
	add.s32 	%r194, %r293, %r297;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r190, %r191, %r192, %r193}, [%r194];
	// end inline asm
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	mov.b32 	%r235, {%rs195, %rs196};
	mov.b32 	%r236, {%rs197, %rs198};
	mov.b32 	%r245, {%rs199, %rs200};
	mov.b32 	%r246, {%rs201, %rs202};
	mov.b32 	%r255, {%rs203, %rs204};
	mov.b32 	%r256, {%rs205, %rs206};
	mov.b32 	%r265, {%rs207, %rs208};
	mov.b32 	%r266, {%rs209, %rs210};
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r235, %r236 }, { %r199, %r200, %r201, %r202 }, { %r175, %r176 }, { %r235, %r236 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r245, %r246 }, { %r199, %r200, %r201, %r202 }, { %r180, %r181 }, { %r245, %r246 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r255, %r256 }, { %r199, %r200, %r201, %r202 }, { %r185, %r186 }, { %r255, %r256 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r265, %r266 }, { %r199, %r200, %r201, %r202 }, { %r190, %r191 }, { %r265, %r266 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r235, %r236 }, { %r239, %r240, %r241, %r242 }, { %r177, %r178 }, { %r235, %r236 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r245, %r246 }, { %r239, %r240, %r241, %r242 }, { %r182, %r183 }, { %r245, %r246 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r255, %r256 }, { %r239, %r240, %r241, %r242 }, { %r187, %r188 }, { %r255, %r256 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r265, %r266 }, { %r239, %r240, %r241, %r242 }, { %r192, %r193 }, { %r265, %r266 };
	// end inline asm
	mov.b32 	{%rs195, %rs196}, %r235;
	mov.b32 	{%rs197, %rs198}, %r236;
	mov.b32 	{%rs199, %rs200}, %r245;
	mov.b32 	{%rs201, %rs202}, %r246;
	mov.b32 	{%rs203, %rs204}, %r255;
	mov.b32 	{%rs205, %rs206}, %r256;
	mov.b32 	{%rs207, %rs208}, %r265;
	mov.b32 	{%rs209, %rs210}, %r266;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd117, %rd117, 1;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd63, %rd20, %rd116;
	cvt.u32.u64 	%r298, %rd63;
	mul.wide.s32 	%rd64, %r298, 2;
	add.s64 	%rd58, %rd38, %rd64;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd28, %rd116, 32;
	.loc	1 70 112                        // implicit_gemm_kernel.py:70:112
	add.s64 	%rd65, %rd28, %rd6;
	setp.lt.s64 	%p32, %rd65, %rd4;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s64 	%rd66, %rd111, %rd116;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	add.s64 	%rd67, %rd6, %rd112;
	add.s64 	%rd68, %rd6, %rd113;
	add.s64 	%rd69, %rd6, %rd114;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s64 	%rd70, %rd6, %rd115;
	cvt.u32.u64 	%r299, %rd67;
	mul.wide.s32 	%rd71, %r299, 2;
	add.s64 	%rd59, %rd39, %rd71;
	cvt.u32.u64 	%r300, %rd68;
	mul.wide.s32 	%rd72, %r300, 2;
	add.s64 	%rd60, %rd39, %rd72;
	cvt.u32.u64 	%r301, %rd69;
	mul.wide.s32 	%rd73, %r301, 2;
	add.s64 	%rd61, %rd39, %rd73;
	cvt.u32.u64 	%r302, %rd70;
	mul.wide.s32 	%rd74, %r302, 2;
	add.s64 	%rd62, %rd39, %rd74;
	cvt.u32.u64 	%r303, %rd66;
	add.s32 	%r304, %r303, 32;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p33, %r304, %r21;
	add.s32 	%r305, %r303, 40;
	setp.lt.s32 	%p34, %r305, %r21;
	add.s32 	%r306, %r303, 48;
	setp.lt.s32 	%p35, %r306, %r21;
	add.s32 	%r307, %r303, 56;
	setp.lt.s32 	%p36, %r307, %r21;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r308, 16, 0, %p32;
	selp.b32 	%r309, %r308, 0, %p3;
	selp.b32 	%r276, %r309, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r141 + 0 ], [ %rd58 + 0 ], 0x10, %r276;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r310, 16, 0, %p33;
	selp.b32 	%r311, %r310, 0, %p5;
	selp.b32 	%r278, %r311, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r143 + 0 ], [ %rd59 + 0 ], 0x10, %r278;
	// end inline asm
	selp.b32 	%r312, 16, 0, %p34;
	selp.b32 	%r313, %r312, 0, %p5;
	selp.b32 	%r280, %r313, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r145 + 0 ], [ %rd60 + 0 ], 0x10, %r280;
	// end inline asm
	selp.b32 	%r314, 16, 0, %p35;
	selp.b32 	%r315, %r314, 0, %p5;
	selp.b32 	%r282, %r315, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r147 + 0 ], [ %rd61 + 0 ], 0x10, %r282;
	// end inline asm
	selp.b32 	%r316, 16, 0, %p36;
	selp.b32 	%r317, %r316, 0, %p5;
	selp.b32 	%r284, %r317, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r149 + 0 ], [ %rd62 + 0 ], 0x10, %r284;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd115, %rd115, %rd11;
	add.s64 	%rd114, %rd114, %rd11;
	add.s64 	%rd113, %rd113, %rd11;
	add.s64 	%rd112, %rd112, %rd11;
	setp.ne.s64 	%p37, %rd5, %rd117;
	mov.u64 	%rd116, %rd28;
	@%p37 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge35_crit_edge
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r441, %r2, 6;
	mov.b16 	%rs195, 0;
	mov.u16 	%rs196, %rs195;
	mov.u16 	%rs197, %rs195;
	mov.u16 	%rs198, %rs195;
	mov.u16 	%rs199, %rs195;
	mov.u16 	%rs200, %rs195;
	mov.u16 	%rs201, %rs195;
	mov.u16 	%rs202, %rs195;
	mov.u16 	%rs203, %rs195;
	mov.u16 	%rs204, %rs195;
	mov.u16 	%rs205, %rs195;
	mov.u16 	%rs206, %rs195;
	mov.u16 	%rs207, %rs195;
	mov.u16 	%rs208, %rs195;
	mov.u16 	%rs209, %rs195;
	mov.u16 	%rs210, %rs195;
$L__BB0_9:                              // %._crit_edge35
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r334, %r10, 1;
	or.b32  	%r335, %r10, 2;
	or.b32  	%r336, %r10, 3;
	or.b32  	%r337, %r10, 4;
	or.b32  	%r338, %r10, 5;
	or.b32  	%r339, %r10, 6;
	or.b32  	%r340, %r10, 7;
	or.b32  	%r341, %r10, 8;
	or.b32  	%r342, %r10, 9;
	or.b32  	%r343, %r10, 10;
	or.b32  	%r344, %r10, 11;
	or.b32  	%r345, %r10, 12;
	or.b32  	%r346, %r10, 13;
	or.b32  	%r347, %r10, 14;
	or.b32  	%r348, %r10, 15;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r349, %r10, %r45;
	add.s32 	%r350, %r349, %r45;
	add.s32 	%r351, %r350, %r45;
	add.s32 	%r352, %r351, %r45;
	add.s32 	%r353, %r352, %r45;
	add.s32 	%r354, %r353, %r45;
	add.s32 	%r355, %r354, %r45;
	add.s32 	%r356, %r355, %r45;
	add.s32 	%r357, %r356, %r45;
	add.s32 	%r358, %r357, %r45;
	add.s32 	%r359, %r358, %r45;
	add.s32 	%r360, %r359, %r45;
	add.s32 	%r361, %r360, %r45;
	add.s32 	%r362, %r361, %r45;
	add.s32 	%r363, %r362, %r45;
	add.s32 	%r364, %r363, %r45;
	.loc	1 87 33                         // implicit_gemm_kernel.py:87:33
	and.b32  	%r365, %r4, 63;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r366, %r441, %r365;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r367, %r366, %r349;
	add.s32 	%r368, %r366, %r350;
	add.s32 	%r369, %r366, %r351;
	add.s32 	%r370, %r366, %r352;
	add.s32 	%r371, %r366, %r353;
	add.s32 	%r372, %r366, %r354;
	add.s32 	%r373, %r366, %r355;
	add.s32 	%r374, %r366, %r356;
	add.s32 	%r375, %r366, %r357;
	add.s32 	%r376, %r366, %r358;
	add.s32 	%r377, %r366, %r359;
	add.s32 	%r378, %r366, %r360;
	add.s32 	%r379, %r366, %r361;
	add.s32 	%r380, %r366, %r362;
	add.s32 	%r381, %r366, %r363;
	add.s32 	%r382, %r366, %r364;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd91, %r367, 2;
	add.s64 	%rd75, %rd40, %rd91;
	mul.wide.s32 	%rd92, %r368, 2;
	add.s64 	%rd76, %rd40, %rd92;
	mul.wide.s32 	%rd93, %r369, 2;
	add.s64 	%rd77, %rd40, %rd93;
	mul.wide.s32 	%rd94, %r370, 2;
	add.s64 	%rd78, %rd40, %rd94;
	mul.wide.s32 	%rd95, %r371, 2;
	add.s64 	%rd79, %rd40, %rd95;
	mul.wide.s32 	%rd96, %r372, 2;
	add.s64 	%rd80, %rd40, %rd96;
	mul.wide.s32 	%rd97, %r373, 2;
	add.s64 	%rd81, %rd40, %rd97;
	mul.wide.s32 	%rd98, %r374, 2;
	add.s64 	%rd82, %rd40, %rd98;
	mul.wide.s32 	%rd99, %r375, 2;
	add.s64 	%rd83, %rd40, %rd99;
	mul.wide.s32 	%rd100, %r376, 2;
	add.s64 	%rd84, %rd40, %rd100;
	mul.wide.s32 	%rd101, %r377, 2;
	add.s64 	%rd85, %rd40, %rd101;
	mul.wide.s32 	%rd102, %r378, 2;
	add.s64 	%rd86, %rd40, %rd102;
	mul.wide.s32 	%rd103, %r379, 2;
	add.s64 	%rd87, %rd40, %rd103;
	mul.wide.s32 	%rd104, %r380, 2;
	add.s64 	%rd88, %rd40, %rd104;
	mul.wide.s32 	%rd105, %r381, 2;
	add.s64 	%rd89, %rd40, %rd105;
	mul.wide.s32 	%rd106, %r382, 2;
	add.s64 	%rd90, %rd40, %rd106;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p71, %r10, %r43;
	setp.lt.s32 	%p72, %r334, %r43;
	setp.lt.s32 	%p73, %r335, %r43;
	setp.lt.s32 	%p74, %r336, %r43;
	setp.lt.s32 	%p75, %r337, %r43;
	setp.lt.s32 	%p76, %r338, %r43;
	setp.lt.s32 	%p77, %r339, %r43;
	setp.lt.s32 	%p78, %r340, %r43;
	setp.lt.s32 	%p79, %r341, %r43;
	setp.lt.s32 	%p80, %r342, %r43;
	setp.lt.s32 	%p81, %r343, %r43;
	setp.lt.s32 	%p82, %r344, %r43;
	setp.lt.s32 	%p83, %r345, %r43;
	setp.lt.s32 	%p84, %r346, %r43;
	setp.lt.s32 	%p85, %r347, %r43;
	setp.lt.s32 	%p86, %r348, %r43;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p87, %r366, %r45;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p55, %p71, %p87;
	and.pred  	%p56, %p72, %p87;
	and.pred  	%p57, %p73, %p87;
	and.pred  	%p58, %p74, %p87;
	and.pred  	%p59, %p75, %p87;
	and.pred  	%p60, %p76, %p87;
	and.pred  	%p61, %p77, %p87;
	and.pred  	%p62, %p78, %p87;
	and.pred  	%p63, %p79, %p87;
	and.pred  	%p64, %p80, %p87;
	and.pred  	%p65, %p81, %p87;
	and.pred  	%p66, %p82, %p87;
	and.pred  	%p67, %p83, %p87;
	and.pred  	%p68, %p84, %p87;
	and.pred  	%p69, %p85, %p87;
	and.pred  	%p70, %p86, %p87;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shl.b32 	%r383, %r4, 4;
	and.b32  	%r384, %r383, 48;
	shl.b32 	%r385, %r6, 1;
	or.b32  	%r386, %r384, %r385;
	or.b32  	%r387, %r5, %r386;
	shl.b32 	%r388, %r386, 1;
	add.s32 	%r390, %r438, %r388;
	shl.b32 	%r391, %r387, 1;
	add.s32 	%r318, %r390, %r391;
	mov.pred 	%p39, -1;
	// begin inline asm
	@%p39 st.shared.b16 [ %r318 + 0 ], %rs195;
	// end inline asm
	or.b32  	%r392, %r386, 8;
	and.b32  	%r393, %r392, 120;
	shl.b32 	%r394, %r393, 1;
	add.s32 	%r395, %r438, %r394;
	add.s32 	%r396, %r395, %r391;
	add.s32 	%r319, %r396, 16;
	// begin inline asm
	@%p39 st.shared.b16 [ %r319 + 0 ], %rs196;
	// end inline asm
	or.b32  	%r397, %r386, 128;
	and.b32  	%r398, %r397, 240;
	shl.b32 	%r399, %r398, 1;
	add.s32 	%r400, %r438, %r399;
	add.s32 	%r401, %r400, %r391;
	add.s32 	%r320, %r401, 256;
	// begin inline asm
	@%p39 st.shared.b16 [ %r320 + 0 ], %rs199;
	// end inline asm
	or.b32  	%r402, %r386, 136;
	and.b32  	%r403, %r402, 248;
	shl.b32 	%r404, %r403, 1;
	add.s32 	%r405, %r438, %r404;
	add.s32 	%r406, %r405, %r391;
	add.s32 	%r321, %r406, 272;
	// begin inline asm
	@%p39 st.shared.b16 [ %r321 + 0 ], %rs200;
	// end inline asm
	or.b32  	%r407, %r386, 256;
	and.b32  	%r408, %r407, 368;
	shl.b32 	%r409, %r408, 1;
	add.s32 	%r410, %r438, %r409;
	add.s32 	%r411, %r410, %r391;
	add.s32 	%r322, %r411, 512;
	// begin inline asm
	@%p39 st.shared.b16 [ %r322 + 0 ], %rs203;
	// end inline asm
	or.b32  	%r412, %r386, 264;
	and.b32  	%r413, %r412, 376;
	shl.b32 	%r414, %r413, 1;
	add.s32 	%r415, %r438, %r414;
	add.s32 	%r416, %r415, %r391;
	add.s32 	%r323, %r416, 528;
	// begin inline asm
	@%p39 st.shared.b16 [ %r323 + 0 ], %rs204;
	// end inline asm
	or.b32  	%r417, %r386, 384;
	and.b32  	%r418, %r417, 496;
	shl.b32 	%r419, %r418, 1;
	add.s32 	%r420, %r438, %r419;
	add.s32 	%r421, %r420, %r391;
	add.s32 	%r324, %r421, 768;
	// begin inline asm
	@%p39 st.shared.b16 [ %r324 + 0 ], %rs207;
	// end inline asm
	or.b32  	%r422, %r386, 392;
	and.b32  	%r423, %r422, 504;
	shl.b32 	%r424, %r423, 1;
	add.s32 	%r425, %r438, %r424;
	add.s32 	%r426, %r425, %r391;
	add.s32 	%r325, %r426, 784;
	// begin inline asm
	@%p39 st.shared.b16 [ %r325 + 0 ], %rs208;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r427, %r4, 5;
	and.b32  	%r428, %r427, 2016;
	add.s32 	%r429, %r438, %r428;
	ld.shared.v4.b32 	{%r430, %r431, %r432, %r433}, [%r429];
	mov.b32 	{%rs144, %rs146}, %r433;
	mov.b32 	{%rs140, %rs142}, %r432;
	mov.b32 	{%rs136, %rs138}, %r431;
	mov.b32 	{%rs132, %rs134}, %r430;
	bar.sync 	0;
	// begin inline asm
	@%p39 st.shared.b16 [ %r318 + 0 ], %rs197;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r319 + 0 ], %rs198;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r320 + 0 ], %rs201;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r321 + 0 ], %rs202;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r322 + 0 ], %rs205;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r323 + 0 ], %rs206;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r324 + 0 ], %rs209;
	// end inline asm
	// begin inline asm
	@%p39 st.shared.b16 [ %r325 + 0 ], %rs210;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.b32 	{%r434, %r435, %r436, %r437}, [%r429];
	mov.b32 	{%rs160, %rs162}, %r437;
	mov.b32 	{%rs156, %rs158}, %r436;
	mov.b32 	{%rs152, %rs154}, %r435;
	mov.b32 	{%rs148, %rs150}, %r434;
	// begin inline asm
	mov.u16 %rs131, 0x0;
	@%p55 atom.global.gpu.acq_rel.add.noftz.f16 %rs131, [ %rd75 + 0 ], %rs132;
	// end inline asm
	// begin inline asm
	mov.u16 %rs133, 0x0;
	@%p56 atom.global.gpu.acq_rel.add.noftz.f16 %rs133, [ %rd76 + 0 ], %rs134;
	// end inline asm
	// begin inline asm
	mov.u16 %rs135, 0x0;
	@%p57 atom.global.gpu.acq_rel.add.noftz.f16 %rs135, [ %rd77 + 0 ], %rs136;
	// end inline asm
	// begin inline asm
	mov.u16 %rs137, 0x0;
	@%p58 atom.global.gpu.acq_rel.add.noftz.f16 %rs137, [ %rd78 + 0 ], %rs138;
	// end inline asm
	// begin inline asm
	mov.u16 %rs139, 0x0;
	@%p59 atom.global.gpu.acq_rel.add.noftz.f16 %rs139, [ %rd79 + 0 ], %rs140;
	// end inline asm
	// begin inline asm
	mov.u16 %rs141, 0x0;
	@%p60 atom.global.gpu.acq_rel.add.noftz.f16 %rs141, [ %rd80 + 0 ], %rs142;
	// end inline asm
	// begin inline asm
	mov.u16 %rs143, 0x0;
	@%p61 atom.global.gpu.acq_rel.add.noftz.f16 %rs143, [ %rd81 + 0 ], %rs144;
	// end inline asm
	// begin inline asm
	mov.u16 %rs145, 0x0;
	@%p62 atom.global.gpu.acq_rel.add.noftz.f16 %rs145, [ %rd82 + 0 ], %rs146;
	// end inline asm
	// begin inline asm
	mov.u16 %rs147, 0x0;
	@%p63 atom.global.gpu.acq_rel.add.noftz.f16 %rs147, [ %rd83 + 0 ], %rs148;
	// end inline asm
	// begin inline asm
	mov.u16 %rs149, 0x0;
	@%p64 atom.global.gpu.acq_rel.add.noftz.f16 %rs149, [ %rd84 + 0 ], %rs150;
	// end inline asm
	// begin inline asm
	mov.u16 %rs151, 0x0;
	@%p65 atom.global.gpu.acq_rel.add.noftz.f16 %rs151, [ %rd85 + 0 ], %rs152;
	// end inline asm
	// begin inline asm
	mov.u16 %rs153, 0x0;
	@%p66 atom.global.gpu.acq_rel.add.noftz.f16 %rs153, [ %rd86 + 0 ], %rs154;
	// end inline asm
	// begin inline asm
	mov.u16 %rs155, 0x0;
	@%p67 atom.global.gpu.acq_rel.add.noftz.f16 %rs155, [ %rd87 + 0 ], %rs156;
	// end inline asm
	// begin inline asm
	mov.u16 %rs157, 0x0;
	@%p68 atom.global.gpu.acq_rel.add.noftz.f16 %rs157, [ %rd88 + 0 ], %rs158;
	// end inline asm
	// begin inline asm
	mov.u16 %rs159, 0x0;
	@%p69 atom.global.gpu.acq_rel.add.noftz.f16 %rs159, [ %rd89 + 0 ], %rs160;
	// end inline asm
	// begin inline asm
	mov.u16 %rs161, 0x0;
	@%p70 atom.global.gpu.acq_rel.add.noftz.f16 %rs161, [ %rd90 + 0 ], %rs162;
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 174                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x98:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
