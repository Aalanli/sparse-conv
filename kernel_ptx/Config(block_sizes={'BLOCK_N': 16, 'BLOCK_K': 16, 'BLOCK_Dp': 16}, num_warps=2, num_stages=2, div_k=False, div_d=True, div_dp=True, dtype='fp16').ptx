//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_89
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<45>;
	.reg .b16 	%rs<59>;
	.reg .b32 	%r<182>;
	.reg .b64 	%rd<52>;
	.loc	1 32 0                          // triton_spconv.py:32:0
$L__func_begin0:
	.loc	1 32 0                          // triton_spconv.py:32:0

// %bb.0:
	ld.param.u32 	%r42, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r40, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd22, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 47 24                         // triton_spconv.py:47:24
	mov.u32 	%r43, %ctaid.x;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r44, %r40, 15;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r45, %r44, 31;
	shr.u32 	%r46, %r45, 28;
	add.s32 	%r47, %r44, %r46;
	shr.s32 	%r48, %r47, 4;
$L__tmp2:
	.loc	1 51 20                         // triton_spconv.py:51:20
	div.s32 	%r1, %r43, %r48;
	.loc	1 50 18                         // triton_spconv.py:50:18
	mul.lo.s32 	%r50, %r1, %r48;
	sub.s32 	%r51, %r43, %r50;
	ld.param.u32 	%r52, [implicit_conv3d_kernel_param_8];
	.loc	1 53 19                         // triton_spconv.py:53:19
	mul.lo.s32 	%r53, %r52, %r52;
	.loc	1 53 23                         // triton_spconv.py:53:23
	mul.lo.s32 	%r2, %r53, %r52;
	.loc	1 56 38                         // triton_spconv.py:56:38
	mov.u32 	%r3, %tid.x;
	bfe.u32 	%r4, %r3, 2, 3;
	and.b32  	%r5, %r3, 32;
	and.b32  	%r8, %r3, 15;
	.loc	1 56 57                         // triton_spconv.py:56:57
	shl.b32 	%r9, %r51, 4;
	.loc	1 58 19                         // triton_spconv.py:58:19
	setp.gt.s32 	%p3, %r2, 0;
	mov.u32 	%r175, global_smem;
	@%p3 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph15
	.loc	1 0 19                          // triton_spconv.py:0:19
	ld.param.u32 	%r41, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r39, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd21, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd20, [implicit_conv3d_kernel_param_1];
	ld.param.u64 	%rd19, [implicit_conv3d_kernel_param_0];
	.loc	1 56 0                          // triton_spconv.py:56:0
	shr.u32 	%r6, %r5, 2;
	or.b32  	%r7, %r4, %r6;
	or.b32  	%r10, %r9, %r7;
	or.b32  	%r11, %r9, %r8;
	.loc	1 56 68                         // triton_spconv.py:56:68
	mul.lo.s32 	%r54, %r11, %r2;
	.loc	1 56 24                         // triton_spconv.py:56:24
	mul.wide.s32 	%rd24, %r54, 4;
	add.s64 	%rd49, %rd20, %rd24;
	.loc	1 56 68                         // triton_spconv.py:56:68
	mul.lo.s32 	%r55, %r10, %r2;
	.loc	1 56 24                         // triton_spconv.py:56:24
	mul.wide.s32 	%rd25, %r55, 4;
	add.s64 	%rd48, %rd20, %rd25;
	add.s32 	%r13, %r41, 15;
	shr.s32 	%r56, %r13, 31;
	shr.u32 	%r57, %r56, 28;
	add.s32 	%r58, %r13, %r57;
	shr.s32 	%r59, %r58, 4;
	shl.b32 	%r60, %r3, 2;
	and.b32  	%r14, %r60, 12;
	shl.b32 	%r181, %r1, 4;
	mul.lo.s32 	%r16, %r2, %r41;
	or.b32  	%r17, %r181, %r14;
	setp.lt.s32 	%p4, %r17, %r42;
	setp.gt.s32 	%p5, %r13, 15;
	setp.lt.s32 	%p6, %r14, %r41;
	.loc	1 58 19                         // triton_spconv.py:58:19
	and.pred  	%p1, %p6, %p5;
	shr.u32 	%r61, %r3, 1;
	and.b32  	%r62, %r61, 8;
	xor.b32  	%r63, %r14, %r62;
	shl.b32 	%r64, %r63, 1;
	shl.b32 	%r65, %r7, 5;
	or.b32  	%r66, %r65, %r64;
	add.s32 	%r95, %r175, %r66;
	add.s32 	%r68, %r175, 512;
	add.s32 	%r97, %r68, %r66;
	add.s32 	%r69, %r59, -1;
	shl.b32 	%r70, %r3, 1;
	and.b32  	%r71, %r70, 8;
	xor.b32  	%r72, %r71, %r62;
	shl.b32 	%r73, %r8, 4;
	or.b32  	%r74, %r72, %r73;
	shl.b32 	%r75, %r74, 1;
	add.s32 	%r20, %r175, %r75;
	xor.b32  	%r76, %r71, %r6;
	or.b32  	%r77, %r76, %r73;
	shl.b32 	%r78, %r77, 1;
	add.s32 	%r21, %r68, %r78;
	cvt.s64.s32 	%rd3, %r69;
	cvt.u64.u32 	%rd26, %r14;
	cvt.s64.s32 	%rd4, %r41;
	cvt.u64.u32 	%rd5, %r2;
	cvt.u64.u32 	%rd6, %r59;
	and.pred  	%p2, %p4, %p5;
	or.b64  	%rd7, %rd26, 16;
	add.s32 	%r79, %r6, %r4;
	add.s32 	%r177, %r79, 16;
	mad.lo.s32 	%r80, %r42, %r177, %r181;
	add.s32 	%r176, %r80, %r14;
	mul.lo.s32 	%r24, %r42, %r41;
	shl.b32 	%r25, %r42, 4;
	mov.b16 	%rs47, 0x0000;
	mov.b64 	%rd47, 0;
	setp.lt.s32 	%p8, %r11, %r40;
	mov.u16 	%rs48, %rs47;
	mov.u16 	%rs49, %rs47;
	mov.u16 	%rs50, %rs47;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 63 28                         // triton_spconv.py:63:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 82 19                         // triton_spconv.py:82:19
	add.s64 	%rd48, %rd48, 4;
	add.s64 	%rd49, %rd49, 4;
	.loc	1 58 19                         // triton_spconv.py:58:19
	add.s64 	%rd47, %rd47, 1;
	add.s32 	%r177, %r177, %r41;
	add.s32 	%r176, %r176, %r24;
	setp.ne.s64 	%p31, %rd47, %rd5;
	@%p31 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 60 81                         // triton_spconv.py:60:81
	setp.lt.s32 	%p7, %r10, %r40;
	.loc	1 60 23                         // triton_spconv.py:60:23
	// begin inline asm
	mov.u32 %r81, 0xffffffffffffffff;
	@%p7 ld.global.b32 { %r81 }, [ %rd48 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r82, 0xffffffffffffffff;
	@%p8 ld.global.b32 { %r82 }, [ %rd49 + 0 ];
	// end inline asm
	.loc	1 62 27                         // triton_spconv.py:62:27
	setp.gt.s32 	%p9, %r82, -1;
	.loc	1 62 43                         // triton_spconv.py:62:43
	setp.lt.s32 	%p10, %r82, %r39;
	.loc	1 62 36                         // triton_spconv.py:62:36
	and.pred  	%p11, %p9, %p10;
	.loc	1 62 50                         // triton_spconv.py:62:50
	selp.u32 	%r83, 1, 0, %p11;
	shfl.sync.bfly.b32	%r84, %r83, 8, 31, -1;
	and.b32  	%r85, %r84, 1;
	setp.eq.b32 	%p12, %r85, 1;
$L__tmp3:
	.loc	1 13 15                         // triton_spconv.py:13:15
	or.pred  	%p13, %p11, %p12;
$L__tmp4:
	.loc	1 62 50                         // triton_spconv.py:62:50
	selp.u32 	%r86, 1, 0, %p13;
	shfl.sync.bfly.b32	%r87, %r86, 4, 31, -1;
	and.b32  	%r88, %r87, 1;
	setp.eq.b32 	%p14, %r88, 1;
$L__tmp5:
	.loc	1 13 15                         // triton_spconv.py:13:15
	or.pred  	%p15, %p13, %p14;
$L__tmp6:
	.loc	1 62 50                         // triton_spconv.py:62:50
	selp.u32 	%r89, 1, 0, %p15;
	shfl.sync.bfly.b32	%r90, %r89, 2, 31, -1;
	and.b32  	%r91, %r90, 1;
	setp.eq.b32 	%p16, %r91, 1;
$L__tmp7:
	.loc	1 13 15                         // triton_spconv.py:13:15
	or.pred  	%p17, %p15, %p16;
$L__tmp8:
	.loc	1 62 50                         // triton_spconv.py:62:50
	selp.u32 	%r92, 1, 0, %p17;
	shfl.sync.bfly.b32	%r93, %r92, 1, 31, -1;
	and.b32  	%r94, %r93, 1;
	setp.eq.b32 	%p18, %r94, 1;
$L__tmp9:
	.loc	1 13 15                         // triton_spconv.py:13:15
	or.pred  	%p19, %p17, %p18;
$L__tmp10:
	.loc	1 62 11                         // triton_spconv.py:62:11
	not.pred 	%p20, %p19;
	@%p20 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // triton_spconv.py:0:11
	setp.lt.s32 	%p21, %r13, 16;
	.loc	1 64 31                         // triton_spconv.py:64:31
	cvt.u32.u64 	%r99, %rd47;
	.loc	1 66 52                         // triton_spconv.py:66:52
	mul.lo.s32 	%r29, %r81, %r41;
	.loc	1 66 56                         // triton_spconv.py:66:56
	add.s32 	%r100, %r29, %r14;
	.loc	1 67 43                         // triton_spconv.py:67:43
	setp.ne.s32 	%p22, %r81, -1;
	.loc	1 66 36                         // triton_spconv.py:66:36
	mul.wide.s32 	%rd31, %r100, 2;
	add.s64 	%rd29, %rd19, %rd31;
	.loc	1 70 54                         // triton_spconv.py:70:54
	mad.lo.s32 	%r101, %r41, %r99, %r7;
	.loc	1 72 22                         // triton_spconv.py:72:22
	mad.lo.s32 	%r102, %r101, %r42, %r17;
	.loc	1 70 20                         // triton_spconv.py:70:20
	mul.wide.s32 	%rd32, %r102, 2;
	add.s64 	%rd30, %rd21, %rd32;
	.loc	1 74 72                         // triton_spconv.py:74:72
	setp.lt.s32 	%p23, %r101, %r16;
	.loc	1 78 39                         // triton_spconv.py:78:39
	selp.b32 	%r103, 8, 0, %p1;
	selp.b32 	%r96, %r103, 0, %p22;
	// begin inline asm
	cp.async.ca.shared.global [ %r95 + 0 ], [ %rd29 + 0 ], 0x8, %r96;
	// end inline asm
	cp.async.commit_group;
	.loc	1 79 36                         // triton_spconv.py:79:36
	selp.b32 	%r104, 8, 0, %p2;
	selp.b32 	%r98, %r104, 0, %p23;
	// begin inline asm
	cp.async.ca.shared.global [ %r97 + 0 ], [ %rd30 + 0 ], 0x8, %r98;
	// end inline asm
	cp.async.commit_group;
	.loc	1 63 28                         // triton_spconv.py:63:28
	@%p21 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	cvt.u64.u32 	%rd11, %r29;
	mov.b32 	%r180, -1;
	mov.b64 	%rd51, 0;
	mov.u32 	%r178, %r176;
	mov.u32 	%r179, %r177;
	mov.u64 	%rd50, %rd7;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p26, %rd51, %rd3;
	add.s32 	%r128, %r180, 1;
	setp.gt.u32 	%p27, %r180, 2147483646;
	selp.b32 	%r180, %r128, 0, %p27;
	.loc	1 78 39                         // triton_spconv.py:78:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r129, %r180, 9;
	add.s32 	%r110, %r20, %r129;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r106, %r107, %r108, %r109}, [%r110];
	// end inline asm
	.loc	1 79 36                         // triton_spconv.py:79:36
	add.s32 	%r113, %r21, %r129;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.trans.shared.b16 {%r111, %r112}, [%r113];
	// end inline asm
	.loc	1 81 37                         // triton_spconv.py:81:37
	mov.b32 	%r114, {%rs47, %rs48};
	mov.b32 	%r115, {%rs49, %rs50};
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r114, %r115 }, { %r106, %r107, %r108, %r109 }, { %r111, %r112 }, { %r114, %r115 };
	// end inline asm
	mov.b32 	{%rs47, %rs48}, %r114;
	mov.b32 	{%rs49, %rs50}, %r115;
	.loc	1 63 28                         // triton_spconv.py:63:28
	add.s64 	%rd51, %rd51, 1;
	.loc	1 66 36                         // triton_spconv.py:66:36
	add.s64 	%rd36, %rd11, %rd50;
	cvt.u32.u64 	%r130, %rd36;
	mul.wide.s32 	%rd37, %r130, 2;
	add.s64 	%rd34, %rd19, %rd37;
	.loc	1 67 98                         // triton_spconv.py:67:98
	setp.lt.s64 	%p28, %rd50, %rd4;
	.loc	1 70 20                         // triton_spconv.py:70:20
	mul.wide.s32 	%rd38, %r178, 2;
	add.s64 	%rd35, %rd21, %rd38;
	.loc	1 74 72                         // triton_spconv.py:74:72
	setp.lt.s32 	%p29, %r179, %r16;
	.loc	1 78 39                         // triton_spconv.py:78:39
	bar.sync 	0;
	selp.b32 	%r131, 8, 0, %p28;
	selp.b32 	%r132, %r131, 0, %p22;
	selp.b32 	%r125, %r132, 0, %p26;
	// begin inline asm
	cp.async.ca.shared.global [ %r95 + 0 ], [ %rd34 + 0 ], 0x8, %r125;
	// end inline asm
	cp.async.commit_group;
	.loc	1 79 36                         // triton_spconv.py:79:36
	selp.b32 	%r133, 8, 0, %p29;
	selp.b32 	%r134, %r133, 0, %p4;
	selp.b32 	%r127, %r134, 0, %p26;
	// begin inline asm
	cp.async.ca.shared.global [ %r97 + 0 ], [ %rd35 + 0 ], 0x8, %r127;
	// end inline asm
	cp.async.commit_group;
	.loc	1 63 28                         // triton_spconv.py:63:28
	add.s64 	%rd50, %rd50, 16;
	add.s32 	%r179, %r179, 16;
	add.s32 	%r178, %r178, %r25;
	setp.ne.s64 	%p30, %rd6, %rd51;
	@%p30 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge16_crit_edge
	.loc	1 86 19                         // triton_spconv.py:86:19
	shl.b32 	%r181, %r1, 4;
	mov.b16 	%rs47, 0;
	mov.u16 	%rs48, %rs47;
	mov.u16 	%rs49, %rs47;
	mov.u16 	%rs50, %rs47;
$L__BB0_9:                              // %._crit_edge16
	.loc	1 84 31                         // triton_spconv.py:84:31
	bfe.u32 	%r139, %r3, 4, 2;
	.loc	1 84 42                         // triton_spconv.py:84:42
	or.b32  	%r140, %r139, %r9;
	or.b32  	%r141, %r140, 4;
	or.b32  	%r142, %r140, 8;
	or.b32  	%r143, %r140, 12;
	.loc	1 84 61                         // triton_spconv.py:84:61
	mul.lo.s32 	%r144, %r140, %r42;
	shl.b32 	%r145, %r42, 2;
	add.s32 	%r146, %r144, %r145;
	add.s32 	%r147, %r146, %r145;
	add.s32 	%r148, %r147, %r145;
	.loc	1 85 10                         // triton_spconv.py:85:10
	or.b32  	%r149, %r181, %r8;
	.loc	1 86 10                         // triton_spconv.py:86:10
	add.s32 	%r150, %r149, %r144;
	add.s32 	%r151, %r149, %r146;
	add.s32 	%r152, %r149, %r147;
	add.s32 	%r153, %r149, %r148;
	.loc	1 84 8                          // triton_spconv.py:84:8
	mul.wide.s32 	%rd43, %r150, 2;
	add.s64 	%rd39, %rd22, %rd43;
	mul.wide.s32 	%rd44, %r151, 2;
	add.s64 	%rd40, %rd22, %rd44;
	mul.wide.s32 	%rd45, %r152, 2;
	add.s64 	%rd41, %rd22, %rd45;
	mul.wide.s32 	%rd46, %r153, 2;
	add.s64 	%rd42, %rd22, %rd46;
	.loc	1 88 67                         // triton_spconv.py:88:67
	setp.lt.s32 	%p40, %r140, %r40;
	setp.lt.s32 	%p41, %r141, %r40;
	setp.lt.s32 	%p42, %r142, %r40;
	setp.lt.s32 	%p43, %r143, %r40;
	.loc	1 89 62                         // triton_spconv.py:89:62
	setp.lt.s32 	%p44, %r149, %r42;
	.loc	1 89 8                          // triton_spconv.py:89:8
	and.pred  	%p36, %p40, %p44;
	and.pred  	%p37, %p41, %p44;
	and.pred  	%p38, %p42, %p44;
	and.pred  	%p39, %p43, %p44;
	.loc	1 92 56                         // triton_spconv.py:92:56
	shl.b32 	%r154, %r3, 4;
	and.b32  	%r155, %r154, 48;
	shl.b32 	%r156, %r5, 1;
	or.b32  	%r157, %r155, %r156;
	or.b32  	%r158, %r4, %r157;
	shl.b32 	%r159, %r3, 3;
	and.b32  	%r160, %r159, 120;
	or.b32  	%r161, %r139, %r160;
	shr.u32 	%r162, %r157, 3;
	add.s32 	%r163, %r158, %r162;
	shl.b32 	%r164, %r163, 1;
	add.s32 	%r135, %r175, %r164;
	mov.pred 	%p32, -1;
	// begin inline asm
	@%p32 st.shared.b16 [ %r135 + 0 ], %rs47;
	// end inline asm
	or.b32  	%r166, %r157, 8;
	shr.u32 	%r167, %r166, 3;
	add.s32 	%r168, %r167, %r158;
	shl.b32 	%r169, %r168, 1;
	add.s32 	%r170, %r175, %r169;
	add.s32 	%r136, %r170, 16;
	// begin inline asm
	@%p32 st.shared.b16 [ %r136 + 0 ], %rs48;
	// end inline asm
	bar.sync 	0;
	bfe.u32 	%r171, %r159, 3, 4;
	add.s32 	%r172, %r161, %r171;
	shl.b32 	%r173, %r172, 1;
	add.s32 	%r174, %r175, %r173;
	ld.shared.u16 	%rs35, [%r174];
	ld.shared.u16 	%rs36, [%r174+8];
	bar.sync 	0;
	// begin inline asm
	@%p32 st.shared.b16 [ %r135 + 0 ], %rs49;
	// end inline asm
	// begin inline asm
	@%p32 st.shared.b16 [ %r136 + 0 ], %rs50;
	// end inline asm
	bar.sync 	0;
	ld.shared.u16 	%rs37, [%r174];
	ld.shared.u16 	%rs38, [%r174+8];
	// begin inline asm
	@%p36 st.global.b16 [ %rd39 + 0 ], { %rs35 };
	// end inline asm
	// begin inline asm
	@%p37 st.global.b16 [ %rd40 + 0 ], { %rs36 };
	// end inline asm
	// begin inline asm
	@%p38 st.global.b16 [ %rd41 + 0 ], { %rs37 };
	// end inline asm
	// begin inline asm
	@%p39 st.global.b16 [ %rd42 + 0 ], { %rs38 };
	// end inline asm
	.loc	1 92 4                          // triton_spconv.py:92:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/waabi-user/sparse-conv/triton_spconv.py"
	.file	2 "/home/waabi-user/.local/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 163                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x9c DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 115
.b8 112
.b8 99
.b8 111
.b8 110
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 119
.b8 97
.b8 97
.b8 98
.b8 105
.b8 45
.b8 117
.b8 115
.b8 101
.b8 114
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x47:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x60:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 71                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x75:0x18 DW_TAG_inlined_subroutine
.b32 71                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x8d:0x18 DW_TAG_inlined_subroutine
.b32 71                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 62                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
