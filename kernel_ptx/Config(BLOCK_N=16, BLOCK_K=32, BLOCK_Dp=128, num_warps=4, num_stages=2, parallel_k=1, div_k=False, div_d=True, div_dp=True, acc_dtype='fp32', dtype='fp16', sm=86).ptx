//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<87>;
	.reg .b16 	%rs<227>;
	.reg .b32 	%r<481>;
	.reg .b64 	%rd<90>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r67, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r65, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd21, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r68, %ctaid.x;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r69, %r65, 15;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r70, %r69, 31;
	shr.u32 	%r71, %r70, 28;
	add.s32 	%r72, %r69, %r71;
	shr.s32 	%r73, %r72, 4;
$L__tmp2:
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r1, %r68, %r73;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r75, %r1, %r73;
	sub.s32 	%r76, %r68, %r75;
	ld.param.u32 	%r77, [implicit_conv3d_kernel_param_8];
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r78, %r77, %r77;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r2, %r78, %r77;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r3, %tid.x;
	and.b32  	%r4, %r3, 16;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r7, %r76, 4;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.gt.s32 	%p3, %r2, 0;
	mov.u32 	%r469, global_smem;
	@%p3 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph64
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r66, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r64, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd20, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd19, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd22, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	bfe.u32 	%r5, %r3, 3, 4;
	and.b32  	%r6, %r3, 15;
	or.b32  	%r8, %r7, %r5;
	or.b32  	%r9, %r7, %r6;
	mul.lo.s32 	%r79, %r8, %r2;
	mul.lo.s32 	%r80, %r9, %r2;
	mul.wide.s32 	%rd23, %r79, 4;
	add.s64 	%rd1, %rd22, %rd23;
	mul.wide.s32 	%rd24, %r80, 4;
	add.s64 	%rd2, %rd22, %rd24;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r81, %r3, 4;
	and.b32  	%r82, %r3, 2;
	and.b32  	%r83, %r3, 32;
	add.s32 	%r12, %r66, 31;
	shr.s32 	%r84, %r12, 31;
	shr.u32 	%r85, %r84, 27;
	add.s32 	%r86, %r12, %r85;
	shr.s32 	%r87, %r86, 5;
	shl.b32 	%r88, %r82, 2;
	shl.b32 	%r89, %r3, 2;
	and.b32  	%r90, %r89, 12;
	shl.b32 	%r91, %r81, 2;
	or.b32  	%r13, %r90, %r91;
	shr.u32 	%r92, %r3, 4;
	bfe.u32 	%r14, %r3, 4, 3;
	or.b32  	%r15, %r14, 8;
	or.b32  	%r16, %r14, 16;
	or.b32  	%r17, %r14, 24;
	shl.b32 	%r93, %r3, 3;
	and.b32  	%r18, %r93, 8;
	shl.b32 	%r94, %r82, 3;
	or.b32  	%r95, %r18, %r94;
	shl.b32 	%r96, %r81, 3;
	or.b32  	%r97, %r95, %r96;
	and.b32  	%r98, %r93, 64;
	or.b32  	%r99, %r97, %r98;
	shl.b32 	%r480, %r1, 7;
	mul.lo.s32 	%r20, %r2, %r66;
	or.b32  	%r21, %r480, %r99;
	setp.lt.s32 	%p4, %r21, %r67;
	setp.gt.s32 	%p5, %r12, 31;
	setp.lt.s32 	%p6, %r13, %r66;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p1, %p6, %p5;
	shr.u32 	%r100, %r4, 1;
	shr.u32 	%r101, %r83, 1;
	or.b32  	%r102, %r101, %r100;
	xor.b32  	%r103, %r102, %r13;
	shl.b32 	%r104, %r103, 1;
	shl.b32 	%r105, %r5, 6;
	or.b32  	%r106, %r105, %r104;
	add.s32 	%r108, %r469, %r106;
	add.s32 	%r162, %r108, 8192;
	shr.u32 	%r109, %r3, 1;
	and.b32  	%r110, %r109, 40;
	or.b32  	%r111, %r101, %r110;
	xor.b32  	%r112, %r111, %r99;
	shl.b32 	%r113, %r112, 1;
	add.s32 	%r114, %r469, %r113;
	shl.b32 	%r115, %r14, 8;
	add.s32 	%r164, %r114, %r115;
	add.s32 	%r166, %r164, 2048;
	add.s32 	%r168, %r164, 4096;
	add.s32 	%r170, %r164, 6144;
	add.s32 	%r116, %r87, -1;
	or.b32  	%r117, %r88, %r91;
	xor.b32  	%r118, %r117, %r100;
	shl.b32 	%r119, %r6, 5;
	or.b32  	%r27, %r118, %r119;
	or.b32  	%r120, %r88, 16;
	or.b32  	%r121, %r100, %r91;
	xor.b32  	%r122, %r121, %r120;
	or.b32  	%r28, %r122, %r119;
	shr.u32 	%r123, %r83, 2;
	shr.u32 	%r479, %r3, 2;
	and.b32  	%r124, %r479, 16;
	or.b32  	%r125, %r124, %r123;
	xor.b32  	%r126, %r125, %r97;
	shl.b32 	%r127, %r3, 7;
	and.b32  	%r30, %r127, 3968;
	or.b32  	%r31, %r126, %r30;
	or.b32  	%r128, %r95, 32;
	or.b32  	%r129, %r125, %r96;
	xor.b32  	%r32, %r129, %r128;
	or.b32  	%r130, %r97, 64;
	xor.b32  	%r33, %r125, %r130;
	or.b32  	%r131, %r95, 96;
	xor.b32  	%r34, %r129, %r131;
	cvt.s64.s32 	%rd3, %r116;
	cvt.s64.s32 	%rd4, %r66;
	cvt.u64.u32 	%rd5, %r2;
	cvt.u64.u32 	%rd6, %r87;
	and.pred  	%p2, %p4, %p5;
	cvt.u64.u32 	%rd7, %r13;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	or.b32  	%r35, %r13, 32;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	cvt.u64.u32 	%rd26, %r92;
	and.b64  	%rd86, %rd26, 7;
	cvt.u64.u32 	%rd9, %r66;
	or.b32  	%r132, %r14, 56;
	mad.lo.s32 	%r133, %r67, %r132, %r480;
	add.s32 	%r134, %r133, %r98;
	add.s32 	%r135, %r134, %r96;
	add.s32 	%r473, %r135, %r94;
	mul.lo.s32 	%r37, %r67, %r66;
	shl.b32 	%r38, %r67, 5;
	or.b32  	%r136, %r14, 48;
	mad.lo.s32 	%r137, %r67, %r136, %r480;
	add.s32 	%r138, %r137, %r98;
	add.s32 	%r139, %r138, %r96;
	add.s32 	%r472, %r139, %r94;
	or.b32  	%r140, %r14, 40;
	mad.lo.s32 	%r141, %r67, %r140, %r480;
	add.s32 	%r142, %r141, %r98;
	add.s32 	%r143, %r142, %r96;
	add.s32 	%r471, %r143, %r94;
	or.b32  	%r144, %r14, 32;
	mad.lo.s32 	%r145, %r67, %r144, %r480;
	add.s32 	%r146, %r145, %r98;
	add.s32 	%r147, %r146, %r96;
	add.s32 	%r470, %r147, %r94;
	mov.b16 	%rs179, 0x0000;
	mov.b64 	%rd87, 0;
	setp.lt.s32 	%p8, %r9, %r65;
	shl.b32 	%r312, %r27, 1;
	shl.b32 	%r313, %r28, 1;
	shl.b32 	%r316, %r31, 1;
	shl.b32 	%r317, %r32, 1;
	shl.b32 	%r320, %r33, 1;
	shl.b32 	%r322, %r34, 1;
	mov.u16 	%rs180, %rs179;
	mov.u16 	%rs181, %rs179;
	mov.u16 	%rs182, %rs179;
	mov.u16 	%rs183, %rs179;
	mov.u16 	%rs184, %rs179;
	mov.u16 	%rs185, %rs179;
	mov.u16 	%rs186, %rs179;
	mov.u16 	%rs187, %rs179;
	mov.u16 	%rs188, %rs179;
	mov.u16 	%rs189, %rs179;
	mov.u16 	%rs190, %rs179;
	mov.u16 	%rs191, %rs179;
	mov.u16 	%rs192, %rs179;
	mov.u16 	%rs193, %rs179;
	mov.u16 	%rs194, %rs179;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s64 	%rd87, %rd87, 1;
	add.s64 	%rd86, %rd86, %rd9;
	add.s32 	%r473, %r473, %r37;
	add.s32 	%r472, %r472, %r37;
	add.s32 	%r471, %r471, %r37;
	add.s32 	%r470, %r470, %r37;
	setp.ne.s64 	%p37, %rd87, %rd5;
	@%p37 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p7, %r8, %r65;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	shl.b64 	%rd29, %rd87, 2;
	add.s64 	%rd27, %rd1, %rd29;
	add.s64 	%rd28, %rd2, %rd29;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r148, 0xffffffffffffffff;
	@%p7 ld.global.b32 { %r148 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r149, 0xffffffffffffffff;
	@%p8 ld.global.b32 { %r149 }, [ %rd28 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p9, %r149, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p10, %r149, %r64;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p11, %p9, %p10;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r150, 1, 0, %p11;
	shfl.sync.bfly.b32	%r151, %r150, 8, 31, -1;
	and.b32  	%r152, %r151, 1;
	setp.eq.b32 	%p12, %r152, 1;
$L__tmp3:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p13, %p11, %p12;
$L__tmp4:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r153, 1, 0, %p13;
	shfl.sync.bfly.b32	%r154, %r153, 4, 31, -1;
	and.b32  	%r155, %r154, 1;
	setp.eq.b32 	%p14, %r155, 1;
$L__tmp5:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p15, %p13, %p14;
$L__tmp6:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r156, 1, 0, %p15;
	shfl.sync.bfly.b32	%r157, %r156, 2, 31, -1;
	and.b32  	%r158, %r157, 1;
	setp.eq.b32 	%p16, %r158, 1;
$L__tmp7:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p17, %p15, %p16;
$L__tmp8:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r159, 1, 0, %p17;
	shfl.sync.bfly.b32	%r160, %r159, 1, 31, -1;
	and.b32  	%r161, %r160, 1;
	setp.eq.b32 	%p18, %r161, 1;
$L__tmp9:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p19, %p17, %p18;
$L__tmp10:
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p20, %p19;
	@%p20 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.lt.s32 	%p21, %r12, 32;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	cvt.u32.u64 	%r172, %rd87;
	mul.lo.s32 	%r173, %r66, %r172;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r47, %r148, %r66;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r174, %r47, %r13;
	.loc	1 70 43                         // implicit_gemm_kernel.py:70:43
	setp.ne.s32 	%p22, %r148, -1;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd35, %r174, 2;
	add.s64 	%rd30, %rd19, %rd35;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s32 	%r175, %r173, %r14;
	add.s32 	%r176, %r173, %r15;
	add.s32 	%r177, %r173, %r16;
	add.s32 	%r178, %r173, %r17;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r179, %r175, %r67, %r21;
	mad.lo.s32 	%r180, %r176, %r67, %r21;
	mad.lo.s32 	%r181, %r177, %r67, %r21;
	mad.lo.s32 	%r182, %r178, %r67, %r21;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd36, %r179, 2;
	add.s64 	%rd31, %rd20, %rd36;
	mul.wide.s32 	%rd37, %r180, 2;
	add.s64 	%rd32, %rd20, %rd37;
	mul.wide.s32 	%rd38, %r181, 2;
	add.s64 	%rd33, %rd20, %rd38;
	mul.wide.s32 	%rd39, %r182, 2;
	add.s64 	%rd34, %rd20, %rd39;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p23, %r175, %r20;
	setp.lt.s32 	%p24, %r176, %r20;
	setp.lt.s32 	%p25, %r177, %r20;
	setp.lt.s32 	%p26, %r178, %r20;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	selp.b32 	%r183, 8, 0, %p1;
	selp.b32 	%r163, %r183, 0, %p22;
	// begin inline asm
	cp.async.ca.shared.global [ %r162 + 0 ], [ %rd30 + 0 ], 0x8, %r163;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r184, 16, 0, %p2;
	selp.b32 	%r165, %r184, 0, %p23;
	// begin inline asm
	cp.async.cg.shared.global [ %r164 + 0 ], [ %rd31 + 0 ], 0x10, %r165;
	// end inline asm
	selp.b32 	%r167, %r184, 0, %p24;
	// begin inline asm
	cp.async.cg.shared.global [ %r166 + 0 ], [ %rd32 + 0 ], 0x10, %r167;
	// end inline asm
	selp.b32 	%r169, %r184, 0, %p25;
	// begin inline asm
	cp.async.cg.shared.global [ %r168 + 0 ], [ %rd33 + 0 ], 0x10, %r169;
	// end inline asm
	selp.b32 	%r171, %r184, 0, %p26;
	// begin inline asm
	cp.async.cg.shared.global [ %r170 + 0 ], [ %rd34 + 0 ], 0x10, %r171;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p21 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r186, %r35, %r47;
	cvt.u64.u32 	%rd12, %r186;
	mov.b32 	%r478, -1;
	mov.b64 	%rd88, 0;
	mov.u32 	%r474, %r470;
	mov.u32 	%r475, %r471;
	mov.u32 	%r476, %r472;
	mov.u32 	%r477, %r473;
	mov.u64 	%rd89, %rd88;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p29, %rd89, %rd3;
	add.s32 	%r307, %r478, 1;
	setp.gt.u32 	%p30, %r478, 2147483646;
	selp.b32 	%r478, %r307, 0, %p30;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r308, %r478, 10;
	add.s32 	%r310, %r469, %r308;
	add.s32 	%r311, %r310, 8192;
	add.s32 	%r191, %r311, %r312;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r221, %r222, %r223, %r224}, [%r191];
	// end inline asm
	add.s32 	%r196, %r311, %r313;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r261, %r262, %r263, %r264}, [%r196];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	shl.b32 	%r314, %r478, 13;
	add.s32 	%r315, %r469, %r314;
	add.s32 	%r201, %r315, %r316;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r197, %r198, %r199, %r200}, [%r201];
	// end inline asm
	add.s32 	%r318, %r315, %r317;
	shl.b32 	%r319, %r30, 1;
	add.s32 	%r206, %r318, %r319;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r202, %r203, %r204, %r205}, [%r206];
	// end inline asm
	add.s32 	%r321, %r315, %r320;
	add.s32 	%r211, %r321, %r319;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r207, %r208, %r209, %r210}, [%r211];
	// end inline asm
	add.s32 	%r323, %r315, %r322;
	add.s32 	%r216, %r323, %r319;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r212, %r213, %r214, %r215}, [%r216];
	// end inline asm
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	mov.b32 	%r257, {%rs179, %rs180};
	mov.b32 	%r258, {%rs181, %rs182};
	mov.b32 	%r267, {%rs183, %rs184};
	mov.b32 	%r268, {%rs185, %rs186};
	mov.b32 	%r277, {%rs187, %rs188};
	mov.b32 	%r278, {%rs189, %rs190};
	mov.b32 	%r287, {%rs191, %rs192};
	mov.b32 	%r288, {%rs193, %rs194};
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r257, %r258 }, { %r221, %r222, %r223, %r224 }, { %r197, %r198 }, { %r257, %r258 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r267, %r268 }, { %r221, %r222, %r223, %r224 }, { %r202, %r203 }, { %r267, %r268 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r277, %r278 }, { %r221, %r222, %r223, %r224 }, { %r207, %r208 }, { %r277, %r278 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r287, %r288 }, { %r221, %r222, %r223, %r224 }, { %r212, %r213 }, { %r287, %r288 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r257, %r258 }, { %r261, %r262, %r263, %r264 }, { %r199, %r200 }, { %r257, %r258 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r267, %r268 }, { %r261, %r262, %r263, %r264 }, { %r204, %r205 }, { %r267, %r268 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r277, %r278 }, { %r261, %r262, %r263, %r264 }, { %r209, %r210 }, { %r277, %r278 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r287, %r288 }, { %r261, %r262, %r263, %r264 }, { %r214, %r215 }, { %r287, %r288 };
	// end inline asm
	mov.b32 	{%rs179, %rs180}, %r257;
	mov.b32 	{%rs181, %rs182}, %r258;
	mov.b32 	{%rs183, %rs184}, %r267;
	mov.b32 	{%rs185, %rs186}, %r268;
	mov.b32 	{%rs187, %rs188}, %r277;
	mov.b32 	{%rs189, %rs190}, %r278;
	mov.b32 	{%rs191, %rs192}, %r287;
	mov.b32 	{%rs193, %rs194}, %r288;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd89, %rd89, 1;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd46, %rd12, %rd88;
	cvt.u32.u64 	%r324, %rd46;
	mul.wide.s32 	%rd47, %r324, 2;
	add.s64 	%rd41, %rd19, %rd47;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd16, %rd88, 32;
	.loc	1 70 98                         // implicit_gemm_kernel.py:70:98
	add.s64 	%rd48, %rd16, %rd7;
	setp.lt.s64 	%p31, %rd48, %rd4;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s64 	%rd49, %rd86, %rd88;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	add.s32 	%r325, %r18, %r474;
	add.s32 	%r326, %r18, %r475;
	add.s32 	%r327, %r18, %r476;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s32 	%r328, %r18, %r477;
	mul.wide.s32 	%rd50, %r325, 2;
	add.s64 	%rd42, %rd20, %rd50;
	mul.wide.s32 	%rd51, %r326, 2;
	add.s64 	%rd43, %rd20, %rd51;
	mul.wide.s32 	%rd52, %r327, 2;
	add.s64 	%rd44, %rd20, %rd52;
	mul.wide.s32 	%rd53, %r328, 2;
	add.s64 	%rd45, %rd20, %rd53;
	cvt.u32.u64 	%r329, %rd49;
	add.s32 	%r330, %r329, 32;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p32, %r330, %r20;
	add.s32 	%r331, %r329, 40;
	setp.lt.s32 	%p33, %r331, %r20;
	add.s32 	%r332, %r329, 48;
	setp.lt.s32 	%p34, %r332, %r20;
	add.s32 	%r333, %r329, 56;
	setp.lt.s32 	%p35, %r333, %r20;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r334, 8, 0, %p31;
	selp.b32 	%r335, %r334, 0, %p22;
	selp.b32 	%r298, %r335, 0, %p29;
	// begin inline asm
	cp.async.ca.shared.global [ %r162 + 0 ], [ %rd41 + 0 ], 0x8, %r298;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r336, 16, 0, %p32;
	selp.b32 	%r337, %r336, 0, %p4;
	selp.b32 	%r300, %r337, 0, %p29;
	// begin inline asm
	cp.async.cg.shared.global [ %r164 + 0 ], [ %rd42 + 0 ], 0x10, %r300;
	// end inline asm
	selp.b32 	%r338, 16, 0, %p33;
	selp.b32 	%r339, %r338, 0, %p4;
	selp.b32 	%r302, %r339, 0, %p29;
	// begin inline asm
	cp.async.cg.shared.global [ %r166 + 0 ], [ %rd43 + 0 ], 0x10, %r302;
	// end inline asm
	selp.b32 	%r340, 16, 0, %p34;
	selp.b32 	%r341, %r340, 0, %p4;
	selp.b32 	%r304, %r341, 0, %p29;
	// begin inline asm
	cp.async.cg.shared.global [ %r168 + 0 ], [ %rd44 + 0 ], 0x10, %r304;
	// end inline asm
	selp.b32 	%r342, 16, 0, %p35;
	selp.b32 	%r343, %r342, 0, %p4;
	selp.b32 	%r306, %r343, 0, %p29;
	// begin inline asm
	cp.async.cg.shared.global [ %r170 + 0 ], [ %rd45 + 0 ], 0x10, %r306;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s32 	%r477, %r477, %r38;
	add.s32 	%r476, %r476, %r38;
	add.s32 	%r475, %r475, %r38;
	add.s32 	%r474, %r474, %r38;
	setp.ne.s64 	%p36, %rd6, %rd89;
	mov.u64 	%rd88, %rd16;
	@%p36 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge65_crit_edge
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r480, %r1, 7;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	shr.u32 	%r479, %r3, 2;
	mov.b16 	%rs179, 0;
	mov.u16 	%rs180, %rs179;
	mov.u16 	%rs181, %rs179;
	mov.u16 	%rs182, %rs179;
	mov.u16 	%rs183, %rs179;
	mov.u16 	%rs184, %rs179;
	mov.u16 	%rs185, %rs179;
	mov.u16 	%rs186, %rs179;
	mov.u16 	%rs187, %rs179;
	mov.u16 	%rs188, %rs179;
	mov.u16 	%rs189, %rs179;
	mov.u16 	%rs190, %rs179;
	mov.u16 	%rs191, %rs179;
	mov.u16 	%rs192, %rs179;
	mov.u16 	%rs193, %rs179;
	mov.u16 	%rs194, %rs179;
$L__BB0_9:                              // %._crit_edge65
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r360, %r7, 1;
	or.b32  	%r361, %r7, 2;
	or.b32  	%r362, %r7, 3;
	or.b32  	%r363, %r7, 4;
	or.b32  	%r364, %r7, 5;
	or.b32  	%r365, %r7, 6;
	or.b32  	%r366, %r7, 7;
	or.b32  	%r367, %r7, 8;
	or.b32  	%r368, %r7, 9;
	or.b32  	%r369, %r7, 10;
	or.b32  	%r370, %r7, 11;
	or.b32  	%r371, %r7, 12;
	or.b32  	%r372, %r7, 13;
	or.b32  	%r373, %r7, 14;
	or.b32  	%r374, %r7, 15;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r375, %r7, %r67;
	add.s32 	%r376, %r375, %r67;
	add.s32 	%r377, %r376, %r67;
	add.s32 	%r378, %r377, %r67;
	add.s32 	%r379, %r378, %r67;
	add.s32 	%r380, %r379, %r67;
	add.s32 	%r381, %r380, %r67;
	add.s32 	%r382, %r381, %r67;
	add.s32 	%r383, %r382, %r67;
	add.s32 	%r384, %r383, %r67;
	add.s32 	%r385, %r384, %r67;
	add.s32 	%r386, %r385, %r67;
	add.s32 	%r387, %r386, %r67;
	add.s32 	%r388, %r387, %r67;
	add.s32 	%r389, %r388, %r67;
	add.s32 	%r390, %r389, %r67;
	.loc	1 87 33                         // implicit_gemm_kernel.py:87:33
	and.b32  	%r391, %r3, 127;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r392, %r480, %r391;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r393, %r392, %r375;
	add.s32 	%r394, %r392, %r376;
	add.s32 	%r395, %r392, %r377;
	add.s32 	%r396, %r392, %r378;
	add.s32 	%r397, %r392, %r379;
	add.s32 	%r398, %r392, %r380;
	add.s32 	%r399, %r392, %r381;
	add.s32 	%r400, %r392, %r382;
	add.s32 	%r401, %r392, %r383;
	add.s32 	%r402, %r392, %r384;
	add.s32 	%r403, %r392, %r385;
	add.s32 	%r404, %r392, %r386;
	add.s32 	%r405, %r392, %r387;
	add.s32 	%r406, %r392, %r388;
	add.s32 	%r407, %r392, %r389;
	add.s32 	%r408, %r392, %r390;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd70, %r393, 2;
	add.s64 	%rd54, %rd21, %rd70;
	mul.wide.s32 	%rd71, %r394, 2;
	add.s64 	%rd55, %rd21, %rd71;
	mul.wide.s32 	%rd72, %r395, 2;
	add.s64 	%rd56, %rd21, %rd72;
	mul.wide.s32 	%rd73, %r396, 2;
	add.s64 	%rd57, %rd21, %rd73;
	mul.wide.s32 	%rd74, %r397, 2;
	add.s64 	%rd58, %rd21, %rd74;
	mul.wide.s32 	%rd75, %r398, 2;
	add.s64 	%rd59, %rd21, %rd75;
	mul.wide.s32 	%rd76, %r399, 2;
	add.s64 	%rd60, %rd21, %rd76;
	mul.wide.s32 	%rd77, %r400, 2;
	add.s64 	%rd61, %rd21, %rd77;
	mul.wide.s32 	%rd78, %r401, 2;
	add.s64 	%rd62, %rd21, %rd78;
	mul.wide.s32 	%rd79, %r402, 2;
	add.s64 	%rd63, %rd21, %rd79;
	mul.wide.s32 	%rd80, %r403, 2;
	add.s64 	%rd64, %rd21, %rd80;
	mul.wide.s32 	%rd81, %r404, 2;
	add.s64 	%rd65, %rd21, %rd81;
	mul.wide.s32 	%rd82, %r405, 2;
	add.s64 	%rd66, %rd21, %rd82;
	mul.wide.s32 	%rd83, %r406, 2;
	add.s64 	%rd67, %rd21, %rd83;
	mul.wide.s32 	%rd84, %r407, 2;
	add.s64 	%rd68, %rd21, %rd84;
	mul.wide.s32 	%rd85, %r408, 2;
	add.s64 	%rd69, %rd21, %rd85;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p70, %r7, %r65;
	setp.lt.s32 	%p71, %r360, %r65;
	setp.lt.s32 	%p72, %r361, %r65;
	setp.lt.s32 	%p73, %r362, %r65;
	setp.lt.s32 	%p74, %r363, %r65;
	setp.lt.s32 	%p75, %r364, %r65;
	setp.lt.s32 	%p76, %r365, %r65;
	setp.lt.s32 	%p77, %r366, %r65;
	setp.lt.s32 	%p78, %r367, %r65;
	setp.lt.s32 	%p79, %r368, %r65;
	setp.lt.s32 	%p80, %r369, %r65;
	setp.lt.s32 	%p81, %r370, %r65;
	setp.lt.s32 	%p82, %r371, %r65;
	setp.lt.s32 	%p83, %r372, %r65;
	setp.lt.s32 	%p84, %r373, %r65;
	setp.lt.s32 	%p85, %r374, %r65;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p86, %r392, %r67;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p54, %p70, %p86;
	and.pred  	%p55, %p71, %p86;
	and.pred  	%p56, %p72, %p86;
	and.pred  	%p57, %p73, %p86;
	and.pred  	%p58, %p74, %p86;
	and.pred  	%p59, %p75, %p86;
	and.pred  	%p60, %p76, %p86;
	and.pred  	%p61, %p77, %p86;
	and.pred  	%p62, %p78, %p86;
	and.pred  	%p63, %p79, %p86;
	and.pred  	%p64, %p80, %p86;
	and.pred  	%p65, %p81, %p86;
	and.pred  	%p66, %p82, %p86;
	and.pred  	%p67, %p83, %p86;
	and.pred  	%p68, %p84, %p86;
	and.pred  	%p69, %p85, %p86;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	shl.b32 	%r409, %r3, 4;
	and.b32  	%r410, %r409, 48;
	and.b32  	%r411, %r479, 3;
	or.b32  	%r412, %r411, %r410;
	shr.u32 	%r413, %r4, 2;
	or.b32  	%r414, %r412, %r413;
	shl.b32 	%r415, %r3, 1;
	and.b32  	%r416, %r415, 192;
	or.b32  	%r417, %r414, %r416;
	and.b32  	%r418, %r417, 240;
	shl.b32 	%r419, %r418, 1;
	add.s32 	%r421, %r469, %r419;
	shl.b32 	%r422, %r417, 1;
	add.s32 	%r344, %r421, %r422;
	mov.pred 	%p38, -1;
	// begin inline asm
	@%p38 st.shared.b16 [ %r344 + 0 ], %rs179;
	// end inline asm
	or.b32  	%r423, %r417, 8;
	and.b32  	%r424, %r423, 248;
	shl.b32 	%r425, %r424, 1;
	add.s32 	%r426, %r469, %r425;
	add.s32 	%r427, %r426, %r422;
	add.s32 	%r345, %r427, 16;
	// begin inline asm
	@%p38 st.shared.b16 [ %r345 + 0 ], %rs180;
	// end inline asm
	or.b32  	%r428, %r417, 256;
	and.b32  	%r429, %r428, 496;
	shl.b32 	%r430, %r429, 1;
	add.s32 	%r431, %r469, %r430;
	add.s32 	%r432, %r431, %r422;
	add.s32 	%r346, %r432, 512;
	// begin inline asm
	@%p38 st.shared.b16 [ %r346 + 0 ], %rs183;
	// end inline asm
	or.b32  	%r433, %r417, 264;
	and.b32  	%r434, %r433, 504;
	shl.b32 	%r435, %r434, 1;
	add.s32 	%r436, %r469, %r435;
	add.s32 	%r437, %r436, %r422;
	add.s32 	%r347, %r437, 528;
	// begin inline asm
	@%p38 st.shared.b16 [ %r347 + 0 ], %rs184;
	// end inline asm
	or.b32  	%r438, %r417, 512;
	and.b32  	%r439, %r438, 752;
	shl.b32 	%r440, %r439, 1;
	add.s32 	%r441, %r469, %r440;
	add.s32 	%r442, %r441, %r422;
	add.s32 	%r348, %r442, 1024;
	// begin inline asm
	@%p38 st.shared.b16 [ %r348 + 0 ], %rs187;
	// end inline asm
	or.b32  	%r443, %r417, 520;
	and.b32  	%r444, %r443, 760;
	shl.b32 	%r445, %r444, 1;
	add.s32 	%r446, %r469, %r445;
	add.s32 	%r447, %r446, %r422;
	add.s32 	%r349, %r447, 1040;
	// begin inline asm
	@%p38 st.shared.b16 [ %r349 + 0 ], %rs188;
	// end inline asm
	or.b32  	%r448, %r417, 768;
	and.b32  	%r449, %r448, 1008;
	shl.b32 	%r450, %r449, 1;
	add.s32 	%r451, %r469, %r450;
	add.s32 	%r452, %r451, %r422;
	add.s32 	%r350, %r452, 1536;
	// begin inline asm
	@%p38 st.shared.b16 [ %r350 + 0 ], %rs191;
	// end inline asm
	or.b32  	%r453, %r417, 776;
	and.b32  	%r454, %r453, 1016;
	shl.b32 	%r455, %r454, 1;
	add.s32 	%r456, %r469, %r455;
	add.s32 	%r457, %r456, %r422;
	add.s32 	%r351, %r457, 1552;
	// begin inline asm
	@%p38 st.shared.b16 [ %r351 + 0 ], %rs192;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r458, %r3, 5;
	and.b32  	%r459, %r458, 4064;
	add.s32 	%r460, %r469, %r459;
	ld.shared.v4.b32 	{%r461, %r462, %r463, %r464}, [%r460];
	mov.b32 	{%rs137, %rs138}, %r464;
	mov.b32 	{%rs135, %rs136}, %r463;
	mov.b32 	{%rs133, %rs134}, %r462;
	mov.b32 	{%rs131, %rs132}, %r461;
	bar.sync 	0;
	// begin inline asm
	@%p38 st.shared.b16 [ %r344 + 0 ], %rs181;
	// end inline asm
	// begin inline asm
	@%p38 st.shared.b16 [ %r345 + 0 ], %rs182;
	// end inline asm
	// begin inline asm
	@%p38 st.shared.b16 [ %r346 + 0 ], %rs185;
	// end inline asm
	// begin inline asm
	@%p38 st.shared.b16 [ %r347 + 0 ], %rs186;
	// end inline asm
	// begin inline asm
	@%p38 st.shared.b16 [ %r348 + 0 ], %rs189;
	// end inline asm
	// begin inline asm
	@%p38 st.shared.b16 [ %r349 + 0 ], %rs190;
	// end inline asm
	// begin inline asm
	@%p38 st.shared.b16 [ %r350 + 0 ], %rs193;
	// end inline asm
	// begin inline asm
	@%p38 st.shared.b16 [ %r351 + 0 ], %rs194;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.b32 	{%r465, %r466, %r467, %r468}, [%r460];
	mov.b32 	{%rs145, %rs146}, %r468;
	mov.b32 	{%rs143, %rs144}, %r467;
	mov.b32 	{%rs141, %rs142}, %r466;
	mov.b32 	{%rs139, %rs140}, %r465;
	// begin inline asm
	@%p54 st.global.b16 [ %rd54 + 0 ], { %rs131 };
	// end inline asm
	// begin inline asm
	@%p55 st.global.b16 [ %rd55 + 0 ], { %rs132 };
	// end inline asm
	// begin inline asm
	@%p56 st.global.b16 [ %rd56 + 0 ], { %rs133 };
	// end inline asm
	// begin inline asm
	@%p57 st.global.b16 [ %rd57 + 0 ], { %rs134 };
	// end inline asm
	// begin inline asm
	@%p58 st.global.b16 [ %rd58 + 0 ], { %rs135 };
	// end inline asm
	// begin inline asm
	@%p59 st.global.b16 [ %rd59 + 0 ], { %rs136 };
	// end inline asm
	// begin inline asm
	@%p60 st.global.b16 [ %rd60 + 0 ], { %rs137 };
	// end inline asm
	// begin inline asm
	@%p61 st.global.b16 [ %rd61 + 0 ], { %rs138 };
	// end inline asm
	// begin inline asm
	@%p62 st.global.b16 [ %rd62 + 0 ], { %rs139 };
	// end inline asm
	// begin inline asm
	@%p63 st.global.b16 [ %rd63 + 0 ], { %rs140 };
	// end inline asm
	// begin inline asm
	@%p64 st.global.b16 [ %rd64 + 0 ], { %rs141 };
	// end inline asm
	// begin inline asm
	@%p65 st.global.b16 [ %rd65 + 0 ], { %rs142 };
	// end inline asm
	// begin inline asm
	@%p66 st.global.b16 [ %rd66 + 0 ], { %rs143 };
	// end inline asm
	// begin inline asm
	@%p67 st.global.b16 [ %rd67 + 0 ], { %rs144 };
	// end inline asm
	// begin inline asm
	@%p68 st.global.b16 [ %rd68 + 0 ], { %rs145 };
	// end inline asm
	// begin inline asm
	@%p69 st.global.b16 [ %rd69 + 0 ], { %rs146 };
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 174                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x98:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
