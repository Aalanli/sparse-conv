//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<65>;
	.reg .b32 	%r<428>;
	.reg .f32 	%f<138>;
	.reg .b64 	%rd<88>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r90, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r88, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd24, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r91, %ctaid.x;
	.loc	1 50 36                         // implicit_gemm_kernel.py:50:36
	shr.u32 	%r92, %r91, 31;
	add.s32 	%r93, %r91, %r92;
	and.b32  	%r94, %r93, -2;
	sub.s32 	%r413, %r91, %r94;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r95, %r88, 31;
$L__tmp2:
	.loc	1 49 35                         // implicit_gemm_kernel.py:49:35
	shr.s32 	%r96, %r93, 1;
	shr.s32 	%r98, %r95, 31;
	shr.u32 	%r99, %r98, 27;
	add.s32 	%r100, %r95, %r99;
	shr.s32 	%r101, %r100, 5;
	ld.param.u32 	%r102, [implicit_conv3d_kernel_param_8];
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r2, %r96, %r101;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r103, %r2, %r101;
	sub.s32 	%r104, %r96, %r103;
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r105, %r102, %r102;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r3, %r105, %r102;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r4, %tid.x;
	and.b32  	%r5, %r4, 16;
	and.b32  	%r6, %r4, 32;
	and.b32  	%r8, %r4, 15;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r9, %r104, 5;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.lt.s32 	%p7, %r413, %r3;
	mov.u32 	%r410, global_smem;
	@%p7 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph19
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r89, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r87, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd23, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd22, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd25, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	bfe.u32 	%r7, %r4, 3, 3;
	and.b32  	%r106, %r4, 31;
	or.b32  	%r10, %r9, %r7;
	or.b32  	%r11, %r10, 8;
	or.b32  	%r12, %r10, 16;
	or.b32  	%r13, %r10, 24;
	or.b32  	%r14, %r9, %r106;
	mul.lo.s32 	%r107, %r10, %r3;
	shl.b32 	%r108, %r3, 3;
	add.s32 	%r109, %r107, %r108;
	add.s32 	%r110, %r109, %r108;
	add.s32 	%r111, %r110, %r108;
	mul.lo.s32 	%r112, %r14, %r3;
	mul.wide.s32 	%rd26, %r107, 4;
	add.s64 	%rd1, %rd25, %rd26;
	mul.wide.s32 	%rd27, %r109, 4;
	add.s64 	%rd2, %rd25, %rd27;
	mul.wide.s32 	%rd28, %r110, 4;
	add.s64 	%rd3, %rd25, %rd28;
	mul.wide.s32 	%rd29, %r111, 4;
	add.s64 	%rd4, %rd25, %rd29;
	mul.wide.s32 	%rd30, %r112, 4;
	add.s64 	%rd5, %rd25, %rd30;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r114, %r4, 8;
	add.s32 	%r19, %r89, 31;
	shr.s32 	%r115, %r19, 31;
	shr.u32 	%r116, %r115, 27;
	add.s32 	%r117, %r19, %r116;
	shr.s32 	%r118, %r117, 5;
	shl.b32 	%r119, %r4, 2;
	and.b32  	%r120, %r119, 4;
	and.b32  	%r121, %r119, 8;
	and.b32  	%r122, %r119, 12;
	and.b32  	%r123, %r119, 16;
	and.b32  	%r20, %r119, 28;
	shr.u32 	%r417, %r5, 2;
	shr.u32 	%r124, %r4, 2;
	and.b32  	%r125, %r124, 11;
	or.b32  	%r22, %r125, %r417;
	or.b32  	%r23, %r22, 16;
	shl.b32 	%r419, %r2, 4;
	mul.lo.s32 	%r25, %r3, %r89;
	or.b32  	%r26, %r419, %r122;
	setp.lt.s32 	%p8, %r26, %r90;
	setp.gt.s32 	%p9, %r19, 31;
	setp.lt.s32 	%p10, %r20, %r89;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p1, %p10, %p9;
	shr.u32 	%r126, %r4, 1;
	and.b32  	%r127, %r126, 12;
	shr.u32 	%r416, %r6, 1;
	or.b32  	%r128, %r416, %r127;
	xor.b32  	%r129, %r128, %r20;
	shl.b32 	%r130, %r129, 2;
	shl.b32 	%r131, %r7, 7;
	or.b32  	%r132, %r131, %r130;
	add.s32 	%r172, %r410, %r132;
	add.s32 	%r174, %r172, 1024;
	add.s32 	%r176, %r172, 2048;
	add.s32 	%r178, %r172, 3072;
	xor.b32  	%r134, %r122, %r114;
	shl.b32 	%r135, %r134, 2;
	shl.b32 	%r136, %r22, 6;
	or.b32  	%r137, %r136, %r135;
	add.s32 	%r138, %r410, %r137;
	add.s32 	%r180, %r138, 4096;
	add.s32 	%r182, %r138, 5120;
	add.s32 	%r139, %r118, -1;
	xor.b32  	%r140, %r20, %r417;
	or.b32  	%r141, %r416, %r8;
	shl.b32 	%r142, %r141, 5;
	or.b32  	%r34, %r140, %r142;
	or.b32  	%r143, %r120, 8;
	xor.b32  	%r144, %r143, %r121;
	or.b32  	%r145, %r144, %r123;
	xor.b32  	%r146, %r145, %r417;
	or.b32  	%r35, %r146, %r142;
	or.b32  	%r147, %r122, 16;
	or.b32  	%r148, %r417, %r123;
	xor.b32  	%r149, %r148, %r147;
	or.b32  	%r36, %r149, %r142;
	or.b32  	%r150, %r120, 24;
	or.b32  	%r151, %r148, %r121;
	xor.b32  	%r152, %r151, %r150;
	or.b32  	%r37, %r152, %r142;
	bfe.u32 	%r418, %r4, 2, 2;
	or.b32  	%r153, %r417, %r418;
	or.b32  	%r39, %r153, %r121;
	shl.b32 	%r154, %r4, 4;
	and.b32  	%r40, %r154, 48;
	or.b32  	%r41, %r39, %r40;
	xor.b32  	%r42, %r39, 8;
	or.b32  	%r43, %r42, %r40;
	cvt.s64.s32 	%rd6, %r139;
	cvt.u64.u32 	%rd31, %r20;
	cvt.s64.s32 	%rd7, %r89;
	cvt.u64.u32 	%rd8, %r118;
	and.pred  	%p2, %p8, %p9;
	or.b64  	%rd9, %rd31, 32;
	mad.lo.s32 	%r155, %r413, %r89, %r125;
	add.s32 	%r156, %r155, %r417;
	cvt.u64.u32 	%rd85, %r156;
	shl.b32 	%r157, %r89, 1;
	cvt.u64.u32 	%rd11, %r157;
	add.s32 	%r158, %r156, 48;
	mad.lo.s32 	%r159, %r90, %r158, %r419;
	add.s32 	%r412, %r159, %r122;
	mul.lo.s32 	%r160, %r90, %r89;
	shl.b32 	%r45, %r160, 1;
	shl.b32 	%r46, %r90, 5;
	add.s32 	%r161, %r156, 32;
	mad.lo.s32 	%r162, %r90, %r161, %r419;
	add.s32 	%r411, %r162, %r122;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	or.b32  	%r48, %r20, 32;
	mov.f32 	%f114, 0f00000000;
	setp.lt.s32 	%p15, %r14, %r88;
	shl.b32 	%r285, %r34, 2;
	shl.b32 	%r286, %r35, 2;
	shl.b32 	%r287, %r36, 2;
	shl.b32 	%r288, %r37, 2;
	shl.b32 	%r292, %r41, 2;
	shl.b32 	%r297, %r43, 2;
	mov.f32 	%f115, %f114;
	mov.f32 	%f116, %f114;
	mov.f32 	%f117, %f114;
	mov.f32 	%f118, %f114;
	mov.f32 	%f119, %f114;
	mov.f32 	%f120, %f114;
	mov.f32 	%f121, %f114;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s32 	%r413, %r413, 2;
	add.s64 	%rd85, %rd85, %rd11;
	add.s32 	%r412, %r412, %r45;
	add.s32 	%r411, %r411, %r45;
	setp.lt.s32 	%p39, %r413, %r3;
	@%p39 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p14, %r13, %r88;
	setp.lt.s32 	%p13, %r12, %r88;
	setp.lt.s32 	%p12, %r11, %r88;
	setp.lt.s32 	%p11, %r10, %r88;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	mul.wide.s32 	%rd37, %r413, 4;
	add.s64 	%rd32, %rd1, %rd37;
	add.s64 	%rd33, %rd2, %rd37;
	add.s64 	%rd34, %rd3, %rd37;
	add.s64 	%rd35, %rd4, %rd37;
	add.s64 	%rd36, %rd5, %rd37;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r163, 0xffffffffffffffff;
	@%p11 ld.global.b32 { %r163 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r164, 0xffffffffffffffff;
	@%p12 ld.global.b32 { %r164 }, [ %rd33 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r165, 0xffffffffffffffff;
	@%p13 ld.global.b32 { %r165 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r166, 0xffffffffffffffff;
	@%p14 ld.global.b32 { %r166 }, [ %rd35 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r167, 0xffffffffffffffff;
	@%p15 ld.global.b32 { %r167 }, [ %rd36 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p20, %r167, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p25, %r167, %r87;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p26, %p20, %p25;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r168, 1, 0, %p26;
	mov.b32 	%r169, -1;
	redux.sync.or.b32 %r170, %r168, %r169;
	and.b32  	%r171, %r170, 1;
	setp.eq.b32 	%p27, %r171, 1;
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p28, %p27;
	@%p28 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.gt.s32 	%p16, %r163, -1;
	setp.gt.s32 	%p17, %r164, -1;
	setp.gt.s32 	%p18, %r165, -1;
	setp.gt.s32 	%p19, %r166, -1;
	setp.lt.s32 	%p21, %r163, %r87;
	setp.lt.s32 	%p22, %r164, %r87;
	setp.lt.s32 	%p23, %r165, %r87;
	setp.lt.s32 	%p24, %r166, %r87;
	and.pred  	%p3, %p16, %p21;
	and.pred  	%p4, %p17, %p22;
	and.pred  	%p5, %p18, %p23;
	and.pred  	%p6, %p19, %p24;
	setp.lt.s32 	%p29, %r19, 32;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	mul.lo.s32 	%r184, %r413, %r89;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r56, %r163, %r89;
	mul.lo.s32 	%r57, %r164, %r89;
	mul.lo.s32 	%r58, %r165, %r89;
	mul.lo.s32 	%r59, %r166, %r89;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r185, %r56, %r20;
	add.s32 	%r186, %r57, %r20;
	add.s32 	%r187, %r58, %r20;
	add.s32 	%r188, %r59, %r20;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd44, %r185, 4;
	add.s64 	%rd38, %rd22, %rd44;
	mul.wide.s32 	%rd45, %r186, 4;
	add.s64 	%rd39, %rd22, %rd45;
	mul.wide.s32 	%rd46, %r187, 4;
	add.s64 	%rd40, %rd22, %rd46;
	mul.wide.s32 	%rd47, %r188, 4;
	add.s64 	%rd41, %rd22, %rd47;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s32 	%r189, %r184, %r22;
	add.s32 	%r190, %r184, %r23;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r191, %r189, %r90, %r26;
	mad.lo.s32 	%r192, %r190, %r90, %r26;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd48, %r191, 4;
	add.s64 	%rd42, %rd23, %rd48;
	mul.wide.s32 	%rd49, %r192, 4;
	add.s64 	%rd43, %rd23, %rd49;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p30, %r189, %r25;
	setp.lt.s32 	%p31, %r190, %r25;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	selp.b32 	%r193, 16, 0, %p1;
	selp.b32 	%r173, %r193, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r172 + 0 ], [ %rd38 + 0 ], 0x10, %r173;
	// end inline asm
	selp.b32 	%r175, %r193, 0, %p4;
	// begin inline asm
	cp.async.cg.shared.global [ %r174 + 0 ], [ %rd39 + 0 ], 0x10, %r175;
	// end inline asm
	selp.b32 	%r177, %r193, 0, %p5;
	// begin inline asm
	cp.async.cg.shared.global [ %r176 + 0 ], [ %rd40 + 0 ], 0x10, %r177;
	// end inline asm
	selp.b32 	%r179, %r193, 0, %p6;
	// begin inline asm
	cp.async.cg.shared.global [ %r178 + 0 ], [ %rd41 + 0 ], 0x10, %r179;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r194, 16, 0, %p2;
	selp.b32 	%r181, %r194, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r180 + 0 ], [ %rd42 + 0 ], 0x10, %r181;
	// end inline asm
	selp.b32 	%r183, %r194, 0, %p31;
	// begin inline asm
	cp.async.cg.shared.global [ %r182 + 0 ], [ %rd43 + 0 ], 0x10, %r183;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p29 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r197, %r48, %r59;
	cvt.u64.u32 	%rd13, %r197;
	add.s32 	%r198, %r48, %r58;
	cvt.u64.u32 	%rd14, %r198;
	add.s32 	%r199, %r48, %r57;
	cvt.u64.u32 	%rd15, %r199;
	add.s32 	%r200, %r48, %r56;
	cvt.u64.u32 	%rd16, %r200;
	mov.b32 	%r415, -1;
	mov.b64 	%rd86, 0;
	mov.b32 	%r414, 0;
	mov.u64 	%rd87, %rd86;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p33, %rd87, %rd6;
	add.s32 	%r281, %r415, 1;
	setp.gt.u32 	%p34, %r415, 2147483646;
	selp.b32 	%r415, %r281, 0, %p34;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r282, %r415, 12;
	add.s32 	%r284, %r410, %r282;
	add.s32 	%r205, %r284, %r285;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r221, %r222, %r223, %r224}, [%r205];
	// end inline asm
	add.s32 	%r210, %r284, %r286;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r233, %r234, %r235, %r236}, [%r210];
	// end inline asm
	add.s32 	%r215, %r284, %r287;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r245, %r246, %r247, %r248}, [%r215];
	// end inline asm
	add.s32 	%r220, %r284, %r288;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r257, %r258, %r259, %r260}, [%r220];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	shl.b32 	%r289, %r415, 11;
	add.s32 	%r290, %r410, %r289;
	add.s32 	%r291, %r290, 4096;
	add.s32 	%r293, %r291, %r292;
	ld.shared.u32 	%r225, [%r293];
	add.s32 	%r294, %r39, %r40;
	shl.b32 	%r295, %r294, 2;
	add.s32 	%r296, %r291, %r295;
	ld.shared.u32 	%r226, [%r296+256];
	ld.shared.u32 	%r237, [%r296+512];
	ld.shared.u32 	%r238, [%r296+768];
	ld.shared.u32 	%r249, [%r296+1024];
	ld.shared.u32 	%r250, [%r296+1280];
	ld.shared.u32 	%r261, [%r296+1536];
	ld.shared.u32 	%r262, [%r296+1792];
	add.s32 	%r298, %r291, %r297;
	ld.shared.u32 	%r231, [%r298];
	add.s32 	%r299, %r42, %r40;
	shl.b32 	%r300, %r299, 2;
	add.s32 	%r301, %r291, %r300;
	ld.shared.u32 	%r232, [%r301+256];
	ld.shared.u32 	%r243, [%r301+512];
	ld.shared.u32 	%r244, [%r301+768];
	ld.shared.u32 	%r255, [%r301+1024];
	ld.shared.u32 	%r256, [%r301+1280];
	ld.shared.u32 	%r267, [%r301+1536];
	ld.shared.u32 	%r268, [%r301+1792];
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f114, %f115, %f116, %f117 }, { %r221, %r222, %r223, %r224 }, { %r225, %r226 }, { %f114, %f115, %f116, %f117 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f118, %f119, %f120, %f121 }, { %r221, %r222, %r223, %r224 }, { %r231, %r232 }, { %f118, %f119, %f120, %f121 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f114, %f115, %f116, %f117 }, { %r233, %r234, %r235, %r236 }, { %r237, %r238 }, { %f114, %f115, %f116, %f117 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f118, %f119, %f120, %f121 }, { %r233, %r234, %r235, %r236 }, { %r243, %r244 }, { %f118, %f119, %f120, %f121 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f114, %f115, %f116, %f117 }, { %r245, %r246, %r247, %r248 }, { %r249, %r250 }, { %f114, %f115, %f116, %f117 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f118, %f119, %f120, %f121 }, { %r245, %r246, %r247, %r248 }, { %r255, %r256 }, { %f118, %f119, %f120, %f121 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f114, %f115, %f116, %f117 }, { %r257, %r258, %r259, %r260 }, { %r261, %r262 }, { %f114, %f115, %f116, %f117 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f118, %f119, %f120, %f121 }, { %r257, %r258, %r259, %r260 }, { %r267, %r268 }, { %f118, %f119, %f120, %f121 };
	// end inline asm
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd87, %rd87, 1;
	.loc	1 69 89                         // implicit_gemm_kernel.py:69:89
	add.s64 	%rd57, %rd16, %rd86;
	add.s64 	%rd58, %rd15, %rd86;
	add.s64 	%rd59, %rd14, %rd86;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd60, %rd13, %rd86;
	cvt.u32.u64 	%r302, %rd57;
	mul.wide.s32 	%rd61, %r302, 4;
	add.s64 	%rd51, %rd22, %rd61;
	cvt.u32.u64 	%r303, %rd58;
	mul.wide.s32 	%rd62, %r303, 4;
	add.s64 	%rd52, %rd22, %rd62;
	cvt.u32.u64 	%r304, %rd59;
	mul.wide.s32 	%rd63, %r304, 4;
	add.s64 	%rd53, %rd22, %rd63;
	cvt.u32.u64 	%r305, %rd60;
	mul.wide.s32 	%rd64, %r305, 4;
	add.s64 	%rd54, %rd22, %rd64;
	.loc	1 70 112                        // implicit_gemm_kernel.py:70:112
	add.s64 	%rd65, %rd9, %rd86;
	setp.lt.s64 	%p35, %rd65, %rd7;
	add.s64 	%rd66, %rd85, %rd86;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	add.s32 	%r306, %r411, %r414;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s32 	%r307, %r412, %r414;
	mul.wide.s32 	%rd67, %r306, 4;
	add.s64 	%rd55, %rd23, %rd67;
	mul.wide.s32 	%rd68, %r307, 4;
	add.s64 	%rd56, %rd23, %rd68;
	cvt.u32.u64 	%r308, %rd66;
	add.s32 	%r309, %r308, 32;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p36, %r309, %r25;
	add.s32 	%r310, %r308, 48;
	setp.lt.s32 	%p37, %r310, %r25;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r311, 16, 0, %p35;
	selp.b32 	%r312, %r311, 0, %p3;
	selp.b32 	%r270, %r312, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r172 + 0 ], [ %rd51 + 0 ], 0x10, %r270;
	// end inline asm
	selp.b32 	%r313, %r311, 0, %p4;
	selp.b32 	%r272, %r313, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r174 + 0 ], [ %rd52 + 0 ], 0x10, %r272;
	// end inline asm
	selp.b32 	%r314, %r311, 0, %p5;
	selp.b32 	%r274, %r314, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r176 + 0 ], [ %rd53 + 0 ], 0x10, %r274;
	// end inline asm
	selp.b32 	%r315, %r311, 0, %p6;
	selp.b32 	%r276, %r315, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r178 + 0 ], [ %rd54 + 0 ], 0x10, %r276;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r316, 16, 0, %p36;
	selp.b32 	%r317, %r316, 0, %p8;
	selp.b32 	%r278, %r317, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r180 + 0 ], [ %rd55 + 0 ], 0x10, %r278;
	// end inline asm
	selp.b32 	%r318, 16, 0, %p37;
	selp.b32 	%r319, %r318, 0, %p8;
	selp.b32 	%r280, %r319, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r182 + 0 ], [ %rd56 + 0 ], 0x10, %r280;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd86, %rd86, 32;
	add.s32 	%r414, %r414, %r46;
	setp.ne.s64 	%p38, %rd8, %rd87;
	@%p38 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge20_crit_edge
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r419, %r2, 4;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	bfe.u32 	%r418, %r4, 2, 2;
	shr.u32 	%r417, %r5, 2;
	shr.u32 	%r416, %r6, 1;
	mov.b32 	%r420, 0;
	mov.u32 	%r421, %r420;
	mov.u32 	%r422, %r420;
	mov.u32 	%r423, %r420;
	mov.u32 	%r424, %r420;
	mov.u32 	%r425, %r420;
	mov.u32 	%r426, %r420;
	mov.u32 	%r427, %r420;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %._crit_edge20.loopexit
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	mov.b32 	%r420, %f114;
	mov.b32 	%r421, %f115;
	mov.b32 	%r422, %f116;
	mov.b32 	%r423, %f117;
	mov.b32 	%r424, %f118;
	mov.b32 	%r425, %f119;
	mov.b32 	%r426, %f120;
	mov.b32 	%r427, %f121;
$L__BB0_10:                             // %._crit_edge20
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	bfe.u32 	%r352, %r4, 4, 2;
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r353, %r352, %r9;
	or.b32  	%r354, %r353, 4;
	or.b32  	%r355, %r353, 8;
	or.b32  	%r356, %r353, 12;
	or.b32  	%r357, %r353, 16;
	or.b32  	%r358, %r353, 20;
	or.b32  	%r359, %r353, 24;
	or.b32  	%r360, %r353, 28;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r361, %r353, %r90;
	shl.b32 	%r362, %r90, 2;
	add.s32 	%r363, %r361, %r362;
	add.s32 	%r364, %r363, %r362;
	add.s32 	%r365, %r364, %r362;
	add.s32 	%r366, %r365, %r362;
	add.s32 	%r367, %r366, %r362;
	add.s32 	%r368, %r367, %r362;
	add.s32 	%r369, %r368, %r362;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r370, %r419, %r8;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r371, %r370, %r361;
	add.s32 	%r372, %r370, %r363;
	add.s32 	%r373, %r370, %r364;
	add.s32 	%r374, %r370, %r365;
	add.s32 	%r375, %r370, %r366;
	add.s32 	%r376, %r370, %r367;
	add.s32 	%r377, %r370, %r368;
	add.s32 	%r378, %r370, %r369;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd77, %r371, 4;
	add.s64 	%rd69, %rd24, %rd77;
	mul.wide.s32 	%rd78, %r372, 4;
	add.s64 	%rd70, %rd24, %rd78;
	mul.wide.s32 	%rd79, %r373, 4;
	add.s64 	%rd71, %rd24, %rd79;
	mul.wide.s32 	%rd80, %r374, 4;
	add.s64 	%rd72, %rd24, %rd80;
	mul.wide.s32 	%rd81, %r375, 4;
	add.s64 	%rd73, %rd24, %rd81;
	mul.wide.s32 	%rd82, %r376, 4;
	add.s64 	%rd74, %rd24, %rd82;
	mul.wide.s32 	%rd83, %r377, 4;
	add.s64 	%rd75, %rd24, %rd83;
	mul.wide.s32 	%rd84, %r378, 4;
	add.s64 	%rd76, %rd24, %rd84;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p56, %r353, %r88;
	setp.lt.s32 	%p57, %r354, %r88;
	setp.lt.s32 	%p58, %r355, %r88;
	setp.lt.s32 	%p59, %r356, %r88;
	setp.lt.s32 	%p60, %r357, %r88;
	setp.lt.s32 	%p61, %r358, %r88;
	setp.lt.s32 	%p62, %r359, %r88;
	setp.lt.s32 	%p63, %r360, %r88;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p64, %r370, %r90;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p48, %p56, %p64;
	and.pred  	%p49, %p57, %p64;
	and.pred  	%p50, %p58, %p64;
	and.pred  	%p51, %p59, %p64;
	and.pred  	%p52, %p60, %p64;
	and.pred  	%p53, %p61, %p64;
	and.pred  	%p54, %p62, %p64;
	and.pred  	%p55, %p63, %p64;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shl.b32 	%r379, %r4, 6;
	and.b32  	%r380, %r379, 192;
	or.b32  	%r381, %r417, %r416;
	or.b32  	%r382, %r381, %r418;
	or.b32  	%r383, %r382, %r380;
	shl.b32 	%r384, %r4, 5;
	and.b32  	%r385, %r384, 480;
	or.b32  	%r386, %r352, %r385;
	shr.u32 	%r387, %r380, 3;
	add.s32 	%r389, %r410, %r387;
	shl.b32 	%r390, %r383, 2;
	add.s32 	%r320, %r389, %r390;
	mov.pred 	%p40, -1;
	// begin inline asm
	@%p40 st.shared.b32 [ %r320 + 0 ], %r420;
	// end inline asm
	or.b32  	%r391, %r383, 32;
	shr.u32 	%r392, %r391, 3;
	and.b32  	%r393, %r392, 28;
	add.s32 	%r394, %r410, %r393;
	add.s32 	%r395, %r394, %r390;
	add.s32 	%r322, %r395, 128;
	// begin inline asm
	@%p40 st.shared.b32 [ %r322 + 0 ], %r421;
	// end inline asm
	add.s32 	%r324, %r320, 32;
	// begin inline asm
	@%p40 st.shared.b32 [ %r324 + 0 ], %r422;
	// end inline asm
	add.s32 	%r326, %r395, 160;
	// begin inline asm
	@%p40 st.shared.b32 [ %r326 + 0 ], %r423;
	// end inline asm
	or.b32  	%r396, %r383, 256;
	shr.u32 	%r397, %r396, 3;
	and.b32  	%r398, %r397, 56;
	add.s32 	%r399, %r410, %r398;
	add.s32 	%r400, %r399, %r390;
	add.s32 	%r328, %r400, 1024;
	// begin inline asm
	@%p40 st.shared.b32 [ %r328 + 0 ], %r424;
	// end inline asm
	or.b32  	%r401, %r383, 288;
	shr.u32 	%r402, %r401, 3;
	and.b32  	%r403, %r402, 60;
	add.s32 	%r404, %r410, %r403;
	add.s32 	%r405, %r404, %r390;
	add.s32 	%r330, %r405, 1152;
	// begin inline asm
	@%p40 st.shared.b32 [ %r330 + 0 ], %r425;
	// end inline asm
	add.s32 	%r332, %r400, 1056;
	// begin inline asm
	@%p40 st.shared.b32 [ %r332 + 0 ], %r426;
	// end inline asm
	add.s32 	%r334, %r405, 1184;
	// begin inline asm
	@%p40 st.shared.b32 [ %r334 + 0 ], %r427;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r406, %r385, 3;
	add.s32 	%r407, %r410, %r406;
	shl.b32 	%r408, %r386, 2;
	add.s32 	%r409, %r407, %r408;
	ld.shared.u32 	%r337, [%r409];
	ld.shared.u32 	%r339, [%r409+16];
	ld.shared.u32 	%r341, [%r409+32];
	ld.shared.u32 	%r343, [%r409+48];
	ld.shared.u32 	%r345, [%r409+64];
	ld.shared.u32 	%r347, [%r409+80];
	ld.shared.u32 	%r349, [%r409+96];
	ld.shared.u32 	%r351, [%r409+112];
	// begin inline asm
	mov.u32 %r336, 0x0;
	@%p48 atom.global.gpu.acq_rel.add.f32 %r336, [ %rd69 + 0 ], %r337;
	// end inline asm
	// begin inline asm
	mov.u32 %r338, 0x0;
	@%p49 atom.global.gpu.acq_rel.add.f32 %r338, [ %rd70 + 0 ], %r339;
	// end inline asm
	// begin inline asm
	mov.u32 %r340, 0x0;
	@%p50 atom.global.gpu.acq_rel.add.f32 %r340, [ %rd71 + 0 ], %r341;
	// end inline asm
	// begin inline asm
	mov.u32 %r342, 0x0;
	@%p51 atom.global.gpu.acq_rel.add.f32 %r342, [ %rd72 + 0 ], %r343;
	// end inline asm
	// begin inline asm
	mov.u32 %r344, 0x0;
	@%p52 atom.global.gpu.acq_rel.add.f32 %r344, [ %rd73 + 0 ], %r345;
	// end inline asm
	// begin inline asm
	mov.u32 %r346, 0x0;
	@%p53 atom.global.gpu.acq_rel.add.f32 %r346, [ %rd74 + 0 ], %r347;
	// end inline asm
	// begin inline asm
	mov.u32 %r348, 0x0;
	@%p54 atom.global.gpu.acq_rel.add.f32 %r348, [ %rd75 + 0 ], %r349;
	// end inline asm
	// begin inline asm
	mov.u32 %r350, 0x0;
	@%p55 atom.global.gpu.acq_rel.add.f32 %r350, [ %rd76 + 0 ], %r351;
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 150                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x8f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
