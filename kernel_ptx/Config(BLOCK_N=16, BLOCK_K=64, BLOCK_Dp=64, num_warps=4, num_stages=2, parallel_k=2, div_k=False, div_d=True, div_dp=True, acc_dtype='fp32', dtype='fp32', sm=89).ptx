//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_89
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<74>;
	.reg .b32 	%r<564>;
	.reg .f32 	%f<202>;
	.reg .b64 	%rd<160>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r84, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r82, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd63, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r85, %ctaid.x;
	.loc	1 50 36                         // implicit_gemm_kernel.py:50:36
	shr.u32 	%r86, %r85, 31;
	add.s32 	%r87, %r85, %r86;
	and.b32  	%r88, %r87, -2;
	sub.s32 	%r550, %r85, %r88;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r89, %r82, 15;
$L__tmp2:
	.loc	1 49 35                         // implicit_gemm_kernel.py:49:35
	shr.s32 	%r90, %r87, 1;
	shr.s32 	%r92, %r89, 31;
	shr.u32 	%r93, %r92, 28;
	add.s32 	%r94, %r89, %r93;
	shr.s32 	%r95, %r94, 4;
	ld.param.u32 	%r96, [implicit_conv3d_kernel_param_8];
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r2, %r90, %r95;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r97, %r2, %r95;
	sub.s32 	%r98, %r90, %r97;
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r99, %r96, %r96;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r3, %r99, %r96;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r4, %tid.x;
	and.b32  	%r5, %r4, 16;
	and.b32  	%r6, %r4, 64;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r10, %r98, 4;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.lt.s32 	%p3, %r550, %r3;
	mov.u32 	%r549, global_smem;
	@%p3 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph14
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r83, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r81, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd62, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd61, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd64, [implicit_conv3d_kernel_param_1];
	bfe.u32 	%r7, %r4, 4, 3;
	or.b32  	%r8, %r7, 8;
	and.b32  	%r9, %r4, 15;
	or.b32  	%r11, %r10, %r7;
	or.b32  	%r12, %r10, %r8;
	or.b32  	%r13, %r10, %r9;
	mul.lo.s32 	%r100, %r11, %r3;
	mul.lo.s32 	%r101, %r12, %r3;
	mul.lo.s32 	%r102, %r13, %r3;
	mul.wide.s32 	%rd65, %r100, 4;
	add.s64 	%rd1, %rd64, %rd65;
	mul.wide.s32 	%rd66, %r101, 4;
	add.s64 	%rd2, %rd64, %rd66;
	mul.wide.s32 	%rd67, %r102, 4;
	add.s64 	%rd3, %rd64, %rd67;
	add.s32 	%r18, %r83, 63;
	shr.s32 	%r104, %r18, 31;
	shr.u32 	%r105, %r104, 26;
	add.s32 	%r106, %r18, %r105;
	shr.s32 	%r107, %r106, 6;
	shl.b32 	%r108, %r4, 2;
	and.b32  	%r109, %r108, 4;
	and.b32  	%r110, %r108, 8;
	and.b32  	%r111, %r108, 12;
	and.b32  	%r112, %r108, 16;
	and.b32  	%r113, %r108, 28;
	and.b32  	%r114, %r108, 60;
	or.b32  	%r19, %r7, 16;
	or.b32  	%r20, %r7, 24;
	or.b32  	%r21, %r7, 32;
	or.b32  	%r22, %r7, 40;
	or.b32  	%r23, %r7, 48;
	or.b32  	%r24, %r7, 56;
	shl.b32 	%r555, %r2, 6;
	mul.lo.s32 	%r26, %r3, %r83;
	or.b32  	%r27, %r555, %r114;
	setp.lt.s32 	%p4, %r27, %r84;
	setp.gt.s32 	%p5, %r18, 63;
	setp.lt.s32 	%p6, %r114, %r83;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p1, %p6, %p5;
	shr.u32 	%r553, %r5, 2;
	shr.u32 	%r115, %r4, 2;
	and.b32  	%r116, %r115, 8;
	shr.u32 	%r117, %r6, 2;
	or.b32  	%r118, %r117, %r116;
	or.b32  	%r119, %r118, %r553;
	xor.b32  	%r120, %r119, %r114;
	shl.b32 	%r121, %r120, 2;
	add.s32 	%r123, %r549, %r121;
	shl.b32 	%r124, %r7, 8;
	add.s32 	%r125, %r123, %r124;
	add.s32 	%r195, %r125, 16384;
	add.s32 	%r197, %r125, 18432;
	shr.u32 	%r126, %r4, 1;
	and.b32  	%r127, %r126, 24;
	xor.b32  	%r128, %r114, %r127;
	shl.b32 	%r129, %r128, 2;
	or.b32  	%r130, %r124, %r129;
	add.s32 	%r199, %r549, %r130;
	add.s32 	%r201, %r199, 2048;
	add.s32 	%r203, %r199, 4096;
	add.s32 	%r205, %r199, 6144;
	add.s32 	%r207, %r199, 8192;
	add.s32 	%r209, %r199, 10240;
	add.s32 	%r211, %r199, 12288;
	add.s32 	%r213, %r199, 14336;
	add.s32 	%r131, %r107, -1;
	xor.b32  	%r132, %r113, %r553;
	shl.b32 	%r133, %r9, 6;
	or.b32  	%r39, %r132, %r133;
	or.b32  	%r134, %r109, 8;
	xor.b32  	%r135, %r134, %r110;
	or.b32  	%r136, %r135, %r112;
	xor.b32  	%r137, %r136, %r553;
	or.b32  	%r40, %r137, %r133;
	or.b32  	%r138, %r111, 16;
	or.b32  	%r139, %r553, %r112;
	xor.b32  	%r140, %r139, %r138;
	or.b32  	%r41, %r140, %r133;
	or.b32  	%r141, %r109, 24;
	or.b32  	%r142, %r139, %r110;
	xor.b32  	%r143, %r142, %r141;
	or.b32  	%r42, %r143, %r133;
	or.b32  	%r144, %r113, 32;
	xor.b32  	%r145, %r144, %r553;
	or.b32  	%r43, %r145, %r133;
	or.b32  	%r146, %r109, 40;
	xor.b32  	%r147, %r146, %r110;
	or.b32  	%r148, %r147, %r112;
	xor.b32  	%r149, %r148, %r553;
	or.b32  	%r44, %r149, %r133;
	or.b32  	%r150, %r111, 48;
	xor.b32  	%r151, %r139, %r150;
	or.b32  	%r45, %r151, %r133;
	or.b32  	%r152, %r109, 56;
	xor.b32  	%r153, %r142, %r152;
	or.b32  	%r46, %r153, %r133;
	shl.b32 	%r552, %r4, 3;
	and.b32  	%r154, %r552, 24;
	bfe.u32 	%r554, %r4, 2, 2;
	or.b32  	%r155, %r554, %r154;
	or.b32  	%r156, %r155, %r553;
	xor.b32  	%r49, %r118, %r156;
	shl.b32 	%r157, %r4, 6;
	and.b32  	%r50, %r157, 192;
	or.b32  	%r158, %r156, 32;
	xor.b32  	%r51, %r118, %r158;
	cvt.s64.s32 	%rd4, %r131;
	cvt.u64.u32 	%rd5, %r114;
	cvt.s64.s32 	%rd6, %r83;
	cvt.u64.u32 	%rd7, %r107;
	and.pred  	%p2, %p4, %p5;
	or.b64  	%rd8, %rd5, 64;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	or.b32  	%r52, %r114, 64;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	mad.lo.s32 	%r159, %r550, %r83, %r7;
	cvt.u64.u32 	%rd149, %r159;
	shl.b32 	%r160, %r83, 1;
	cvt.u64.u32 	%rd10, %r160;
	add.s32 	%r161, %r159, 120;
	mad.lo.s32 	%r162, %r84, %r161, %r555;
	cvt.u64.u32 	%rd148, %r162;
	mul.lo.s32 	%r163, %r84, %r83;
	shl.b32 	%r164, %r163, 1;
	cvt.u64.u32 	%rd12, %r164;
	shl.b32 	%r165, %r84, 6;
	cvt.u64.u32 	%rd13, %r165;
	add.s32 	%r166, %r159, 112;
	mad.lo.s32 	%r167, %r84, %r166, %r555;
	cvt.u64.u32 	%rd147, %r167;
	add.s32 	%r168, %r159, 104;
	mad.lo.s32 	%r169, %r84, %r168, %r555;
	cvt.u64.u32 	%rd146, %r169;
	add.s32 	%r170, %r159, 96;
	mad.lo.s32 	%r171, %r84, %r170, %r555;
	cvt.u64.u32 	%rd145, %r171;
	add.s32 	%r172, %r159, 88;
	mad.lo.s32 	%r173, %r84, %r172, %r555;
	cvt.u64.u32 	%rd144, %r173;
	add.s32 	%r174, %r159, 80;
	mad.lo.s32 	%r175, %r84, %r174, %r555;
	cvt.u64.u32 	%rd143, %r175;
	add.s32 	%r176, %r159, 72;
	mad.lo.s32 	%r177, %r84, %r176, %r555;
	cvt.u64.u32 	%rd142, %r177;
	add.s32 	%r178, %r159, 64;
	mad.lo.s32 	%r179, %r84, %r178, %r555;
	cvt.u64.u32 	%rd141, %r179;
	mov.f32 	%f178, 0f00000000;
	setp.lt.s32 	%p9, %r13, %r82;
	shl.b32 	%r401, %r39, 2;
	shl.b32 	%r402, %r40, 2;
	shl.b32 	%r403, %r41, 2;
	shl.b32 	%r404, %r42, 2;
	shl.b32 	%r405, %r43, 2;
	shl.b32 	%r406, %r44, 2;
	shl.b32 	%r407, %r45, 2;
	shl.b32 	%r408, %r46, 2;
	shl.b32 	%r411, %r49, 2;
	shl.b32 	%r413, %r50, 2;
	shl.b32 	%r415, %r51, 2;
	mov.f32 	%f179, %f178;
	mov.f32 	%f180, %f178;
	mov.f32 	%f181, %f178;
	mov.f32 	%f182, %f178;
	mov.f32 	%f183, %f178;
	mov.f32 	%f184, %f178;
	mov.f32 	%f185, %f178;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s32 	%r550, %r550, 2;
	add.s64 	%rd149, %rd149, %rd10;
	add.s64 	%rd148, %rd148, %rd12;
	add.s64 	%rd147, %rd147, %rd12;
	add.s64 	%rd146, %rd146, %rd12;
	add.s64 	%rd145, %rd145, %rd12;
	add.s64 	%rd144, %rd144, %rd12;
	add.s64 	%rd143, %rd143, %rd12;
	add.s64 	%rd142, %rd142, %rd12;
	add.s64 	%rd141, %rd141, %rd12;
	setp.lt.s32 	%p48, %r550, %r3;
	@%p48 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p8, %r12, %r82;
	setp.lt.s32 	%p7, %r11, %r82;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	mul.wide.s32 	%rd71, %r550, 4;
	add.s64 	%rd68, %rd1, %rd71;
	add.s64 	%rd69, %rd2, %rd71;
	add.s64 	%rd70, %rd3, %rd71;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r180, 0xffffffffffffffff;
	@%p7 ld.global.b32 { %r180 }, [ %rd68 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r181, 0xffffffffffffffff;
	@%p8 ld.global.b32 { %r181 }, [ %rd69 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r182, 0xffffffffffffffff;
	@%p9 ld.global.b32 { %r182 }, [ %rd70 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p10, %r182, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p11, %r182, %r81;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p12, %p10, %p11;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r183, 1, 0, %p12;
	shfl.sync.bfly.b32	%r184, %r183, 8, 31, -1;
	and.b32  	%r185, %r184, 1;
	setp.eq.b32 	%p13, %r185, 1;
$L__tmp3:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p14, %p12, %p13;
$L__tmp4:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r186, 1, 0, %p14;
	shfl.sync.bfly.b32	%r187, %r186, 4, 31, -1;
	and.b32  	%r188, %r187, 1;
	setp.eq.b32 	%p15, %r188, 1;
$L__tmp5:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p16, %p14, %p15;
$L__tmp6:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r189, 1, 0, %p16;
	shfl.sync.bfly.b32	%r190, %r189, 2, 31, -1;
	and.b32  	%r191, %r190, 1;
	setp.eq.b32 	%p17, %r191, 1;
$L__tmp7:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p18, %p16, %p17;
$L__tmp8:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r192, 1, 0, %p18;
	shfl.sync.bfly.b32	%r193, %r192, 1, 31, -1;
	and.b32  	%r194, %r193, 1;
	setp.eq.b32 	%p19, %r194, 1;
$L__tmp9:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p20, %p18, %p19;
$L__tmp10:
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p21, %p20;
	@%p21 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	cvt.u32.u64 	%r215, %rd5;
	setp.lt.s32 	%p22, %r18, 64;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	mul.lo.s32 	%r216, %r550, %r83;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r56, %r180, %r83;
	mul.lo.s32 	%r57, %r181, %r83;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r217, %r56, %r215;
	add.s32 	%r218, %r57, %r215;
	.loc	1 70 43                         // implicit_gemm_kernel.py:70:43
	setp.ne.s32 	%p23, %r180, -1;
	setp.ne.s32 	%p24, %r181, -1;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd82, %r217, 4;
	add.s64 	%rd72, %rd61, %rd82;
	mul.wide.s32 	%rd83, %r218, 4;
	add.s64 	%rd73, %rd61, %rd83;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s32 	%r219, %r216, %r7;
	add.s32 	%r220, %r216, %r8;
	add.s32 	%r221, %r216, %r19;
	add.s32 	%r222, %r216, %r20;
	add.s32 	%r223, %r216, %r21;
	add.s32 	%r224, %r216, %r22;
	add.s32 	%r225, %r216, %r23;
	add.s32 	%r226, %r216, %r24;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r227, %r219, %r84, %r27;
	mad.lo.s32 	%r228, %r220, %r84, %r27;
	mad.lo.s32 	%r229, %r221, %r84, %r27;
	mad.lo.s32 	%r230, %r222, %r84, %r27;
	mad.lo.s32 	%r231, %r223, %r84, %r27;
	mad.lo.s32 	%r232, %r224, %r84, %r27;
	mad.lo.s32 	%r233, %r225, %r84, %r27;
	mad.lo.s32 	%r234, %r226, %r84, %r27;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd84, %r227, 4;
	add.s64 	%rd74, %rd62, %rd84;
	mul.wide.s32 	%rd85, %r228, 4;
	add.s64 	%rd75, %rd62, %rd85;
	mul.wide.s32 	%rd86, %r229, 4;
	add.s64 	%rd76, %rd62, %rd86;
	mul.wide.s32 	%rd87, %r230, 4;
	add.s64 	%rd77, %rd62, %rd87;
	mul.wide.s32 	%rd88, %r231, 4;
	add.s64 	%rd78, %rd62, %rd88;
	mul.wide.s32 	%rd89, %r232, 4;
	add.s64 	%rd79, %rd62, %rd89;
	mul.wide.s32 	%rd90, %r233, 4;
	add.s64 	%rd80, %rd62, %rd90;
	mul.wide.s32 	%rd91, %r234, 4;
	add.s64 	%rd81, %rd62, %rd91;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p25, %r219, %r26;
	setp.lt.s32 	%p26, %r220, %r26;
	setp.lt.s32 	%p27, %r221, %r26;
	setp.lt.s32 	%p28, %r222, %r26;
	setp.lt.s32 	%p29, %r223, %r26;
	setp.lt.s32 	%p30, %r224, %r26;
	setp.lt.s32 	%p31, %r225, %r26;
	setp.lt.s32 	%p32, %r226, %r26;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	selp.b32 	%r235, 16, 0, %p1;
	selp.b32 	%r196, %r235, 0, %p23;
	// begin inline asm
	cp.async.cg.shared.global [ %r195 + 0 ], [ %rd72 + 0 ], 0x10, %r196;
	// end inline asm
	selp.b32 	%r198, %r235, 0, %p24;
	// begin inline asm
	cp.async.cg.shared.global [ %r197 + 0 ], [ %rd73 + 0 ], 0x10, %r198;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r236, 16, 0, %p2;
	selp.b32 	%r200, %r236, 0, %p25;
	// begin inline asm
	cp.async.cg.shared.global [ %r199 + 0 ], [ %rd74 + 0 ], 0x10, %r200;
	// end inline asm
	selp.b32 	%r202, %r236, 0, %p26;
	// begin inline asm
	cp.async.cg.shared.global [ %r201 + 0 ], [ %rd75 + 0 ], 0x10, %r202;
	// end inline asm
	selp.b32 	%r204, %r236, 0, %p27;
	// begin inline asm
	cp.async.cg.shared.global [ %r203 + 0 ], [ %rd76 + 0 ], 0x10, %r204;
	// end inline asm
	selp.b32 	%r206, %r236, 0, %p28;
	// begin inline asm
	cp.async.cg.shared.global [ %r205 + 0 ], [ %rd77 + 0 ], 0x10, %r206;
	// end inline asm
	selp.b32 	%r208, %r236, 0, %p29;
	// begin inline asm
	cp.async.cg.shared.global [ %r207 + 0 ], [ %rd78 + 0 ], 0x10, %r208;
	// end inline asm
	selp.b32 	%r210, %r236, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r209 + 0 ], [ %rd79 + 0 ], 0x10, %r210;
	// end inline asm
	selp.b32 	%r212, %r236, 0, %p31;
	// begin inline asm
	cp.async.cg.shared.global [ %r211 + 0 ], [ %rd80 + 0 ], 0x10, %r212;
	// end inline asm
	selp.b32 	%r214, %r236, 0, %p32;
	// begin inline asm
	cp.async.cg.shared.global [ %r213 + 0 ], [ %rd81 + 0 ], 0x10, %r214;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p22 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r238, %r52, %r57;
	cvt.u64.u32 	%rd30, %r238;
	add.s32 	%r239, %r52, %r56;
	cvt.u64.u32 	%rd31, %r239;
	mov.b32 	%r551, -1;
	mov.b64 	%rd158, 0;
	mov.u64 	%rd150, %rd141;
	mov.u64 	%rd151, %rd142;
	mov.u64 	%rd152, %rd143;
	mov.u64 	%rd153, %rd144;
	mov.u64 	%rd154, %rd145;
	mov.u64 	%rd155, %rd146;
	mov.u64 	%rd156, %rd147;
	mov.u64 	%rd157, %rd148;
	mov.u64 	%rd159, %rd158;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p36, %rd159, %rd4;
	add.s32 	%r396, %r551, 1;
	setp.gt.u32 	%p37, %r551, 2147483646;
	selp.b32 	%r551, %r396, 0, %p37;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r397, %r551, 12;
	add.s32 	%r399, %r549, %r397;
	add.s32 	%r400, %r399, 16384;
	add.s32 	%r244, %r400, %r401;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r280, %r281, %r282, %r283}, [%r244];
	// end inline asm
	add.s32 	%r249, %r400, %r402;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r292, %r293, %r294, %r295}, [%r249];
	// end inline asm
	add.s32 	%r254, %r400, %r403;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r304, %r305, %r306, %r307}, [%r254];
	// end inline asm
	add.s32 	%r259, %r400, %r404;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r316, %r317, %r318, %r319}, [%r259];
	// end inline asm
	add.s32 	%r264, %r400, %r405;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r328, %r329, %r330, %r331}, [%r264];
	// end inline asm
	add.s32 	%r269, %r400, %r406;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r340, %r341, %r342, %r343}, [%r269];
	// end inline asm
	add.s32 	%r274, %r400, %r407;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r352, %r353, %r354, %r355}, [%r274];
	// end inline asm
	add.s32 	%r279, %r400, %r408;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r364, %r365, %r366, %r367}, [%r279];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	shl.b32 	%r409, %r551, 14;
	add.s32 	%r410, %r549, %r409;
	add.s32 	%r412, %r410, %r411;
	add.s32 	%r414, %r412, %r413;
	ld.shared.u32 	%r284, [%r414];
	ld.shared.u32 	%r285, [%r414+1024];
	ld.shared.u32 	%r296, [%r414+2048];
	ld.shared.u32 	%r297, [%r414+3072];
	ld.shared.u32 	%r308, [%r414+4096];
	ld.shared.u32 	%r309, [%r414+5120];
	ld.shared.u32 	%r320, [%r414+6144];
	ld.shared.u32 	%r321, [%r414+7168];
	ld.shared.u32 	%r332, [%r414+8192];
	ld.shared.u32 	%r333, [%r414+9216];
	ld.shared.u32 	%r344, [%r414+10240];
	ld.shared.u32 	%r345, [%r414+11264];
	ld.shared.u32 	%r356, [%r414+12288];
	ld.shared.u32 	%r357, [%r414+13312];
	ld.shared.u32 	%r368, [%r414+14336];
	ld.shared.u32 	%r369, [%r414+15360];
	add.s32 	%r416, %r410, %r415;
	add.s32 	%r417, %r416, %r413;
	ld.shared.u32 	%r290, [%r417];
	ld.shared.u32 	%r291, [%r417+1024];
	ld.shared.u32 	%r302, [%r417+2048];
	ld.shared.u32 	%r303, [%r417+3072];
	ld.shared.u32 	%r314, [%r417+4096];
	ld.shared.u32 	%r315, [%r417+5120];
	ld.shared.u32 	%r326, [%r417+6144];
	ld.shared.u32 	%r327, [%r417+7168];
	ld.shared.u32 	%r338, [%r417+8192];
	ld.shared.u32 	%r339, [%r417+9216];
	ld.shared.u32 	%r350, [%r417+10240];
	ld.shared.u32 	%r351, [%r417+11264];
	ld.shared.u32 	%r362, [%r417+12288];
	ld.shared.u32 	%r363, [%r417+13312];
	ld.shared.u32 	%r374, [%r417+14336];
	ld.shared.u32 	%r375, [%r417+15360];
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r280, %r281, %r282, %r283 }, { %r284, %r285 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r280, %r281, %r282, %r283 }, { %r290, %r291 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r292, %r293, %r294, %r295 }, { %r296, %r297 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r292, %r293, %r294, %r295 }, { %r302, %r303 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r304, %r305, %r306, %r307 }, { %r308, %r309 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r304, %r305, %r306, %r307 }, { %r314, %r315 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r316, %r317, %r318, %r319 }, { %r320, %r321 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r316, %r317, %r318, %r319 }, { %r326, %r327 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r328, %r329, %r330, %r331 }, { %r332, %r333 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r328, %r329, %r330, %r331 }, { %r338, %r339 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r340, %r341, %r342, %r343 }, { %r344, %r345 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r340, %r341, %r342, %r343 }, { %r350, %r351 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r352, %r353, %r354, %r355 }, { %r356, %r357 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r352, %r353, %r354, %r355 }, { %r362, %r363 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r364, %r365, %r366, %r367 }, { %r368, %r369 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r364, %r365, %r366, %r367 }, { %r374, %r375 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd159, %rd159, 1;
	.loc	1 69 89                         // implicit_gemm_kernel.py:69:89
	add.s64 	%rd103, %rd31, %rd158;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd104, %rd30, %rd158;
	cvt.u32.u64 	%r418, %rd103;
	mul.wide.s32 	%rd105, %r418, 4;
	add.s64 	%rd93, %rd61, %rd105;
	cvt.u32.u64 	%r419, %rd104;
	mul.wide.s32 	%rd106, %r419, 4;
	add.s64 	%rd94, %rd61, %rd106;
	.loc	1 70 98                         // implicit_gemm_kernel.py:70:98
	add.s64 	%rd107, %rd8, %rd158;
	setp.lt.s64 	%p38, %rd107, %rd6;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s64 	%rd108, %rd149, %rd158;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	add.s64 	%rd109, %rd5, %rd150;
	add.s64 	%rd110, %rd5, %rd151;
	add.s64 	%rd111, %rd5, %rd152;
	add.s64 	%rd112, %rd5, %rd153;
	add.s64 	%rd113, %rd5, %rd154;
	add.s64 	%rd114, %rd5, %rd155;
	add.s64 	%rd115, %rd5, %rd156;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s64 	%rd116, %rd5, %rd157;
	cvt.u32.u64 	%r420, %rd109;
	mul.wide.s32 	%rd117, %r420, 4;
	add.s64 	%rd95, %rd62, %rd117;
	cvt.u32.u64 	%r421, %rd110;
	mul.wide.s32 	%rd118, %r421, 4;
	add.s64 	%rd96, %rd62, %rd118;
	cvt.u32.u64 	%r422, %rd111;
	mul.wide.s32 	%rd119, %r422, 4;
	add.s64 	%rd97, %rd62, %rd119;
	cvt.u32.u64 	%r423, %rd112;
	mul.wide.s32 	%rd120, %r423, 4;
	add.s64 	%rd98, %rd62, %rd120;
	cvt.u32.u64 	%r424, %rd113;
	mul.wide.s32 	%rd121, %r424, 4;
	add.s64 	%rd99, %rd62, %rd121;
	cvt.u32.u64 	%r425, %rd114;
	mul.wide.s32 	%rd122, %r425, 4;
	add.s64 	%rd100, %rd62, %rd122;
	cvt.u32.u64 	%r426, %rd115;
	mul.wide.s32 	%rd123, %r426, 4;
	add.s64 	%rd101, %rd62, %rd123;
	cvt.u32.u64 	%r427, %rd116;
	mul.wide.s32 	%rd124, %r427, 4;
	add.s64 	%rd102, %rd62, %rd124;
	cvt.u32.u64 	%r428, %rd108;
	add.s32 	%r429, %r428, 64;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p39, %r429, %r26;
	add.s32 	%r430, %r428, 72;
	setp.lt.s32 	%p40, %r430, %r26;
	add.s32 	%r431, %r428, 80;
	setp.lt.s32 	%p41, %r431, %r26;
	add.s32 	%r432, %r428, 88;
	setp.lt.s32 	%p42, %r432, %r26;
	add.s32 	%r433, %r428, 96;
	setp.lt.s32 	%p43, %r433, %r26;
	add.s32 	%r434, %r428, 104;
	setp.lt.s32 	%p44, %r434, %r26;
	add.s32 	%r435, %r428, 112;
	setp.lt.s32 	%p45, %r435, %r26;
	add.s32 	%r436, %r428, 120;
	setp.lt.s32 	%p46, %r436, %r26;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r437, 16, 0, %p38;
	selp.b32 	%r438, %r437, 0, %p23;
	selp.b32 	%r377, %r438, 0, %p36;
	// begin inline asm
	cp.async.cg.shared.global [ %r195 + 0 ], [ %rd93 + 0 ], 0x10, %r377;
	// end inline asm
	selp.b32 	%r439, %r437, 0, %p24;
	selp.b32 	%r379, %r439, 0, %p36;
	// begin inline asm
	cp.async.cg.shared.global [ %r197 + 0 ], [ %rd94 + 0 ], 0x10, %r379;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r440, 16, 0, %p39;
	selp.b32 	%r441, %r440, 0, %p4;
	selp.b32 	%r381, %r441, 0, %p36;
	// begin inline asm
	cp.async.cg.shared.global [ %r199 + 0 ], [ %rd95 + 0 ], 0x10, %r381;
	// end inline asm
	selp.b32 	%r442, 16, 0, %p40;
	selp.b32 	%r443, %r442, 0, %p4;
	selp.b32 	%r383, %r443, 0, %p36;
	// begin inline asm
	cp.async.cg.shared.global [ %r201 + 0 ], [ %rd96 + 0 ], 0x10, %r383;
	// end inline asm
	selp.b32 	%r444, 16, 0, %p41;
	selp.b32 	%r445, %r444, 0, %p4;
	selp.b32 	%r385, %r445, 0, %p36;
	// begin inline asm
	cp.async.cg.shared.global [ %r203 + 0 ], [ %rd97 + 0 ], 0x10, %r385;
	// end inline asm
	selp.b32 	%r446, 16, 0, %p42;
	selp.b32 	%r447, %r446, 0, %p4;
	selp.b32 	%r387, %r447, 0, %p36;
	// begin inline asm
	cp.async.cg.shared.global [ %r205 + 0 ], [ %rd98 + 0 ], 0x10, %r387;
	// end inline asm
	selp.b32 	%r448, 16, 0, %p43;
	selp.b32 	%r449, %r448, 0, %p4;
	selp.b32 	%r389, %r449, 0, %p36;
	// begin inline asm
	cp.async.cg.shared.global [ %r207 + 0 ], [ %rd99 + 0 ], 0x10, %r389;
	// end inline asm
	selp.b32 	%r450, 16, 0, %p44;
	selp.b32 	%r451, %r450, 0, %p4;
	selp.b32 	%r391, %r451, 0, %p36;
	// begin inline asm
	cp.async.cg.shared.global [ %r209 + 0 ], [ %rd100 + 0 ], 0x10, %r391;
	// end inline asm
	selp.b32 	%r452, 16, 0, %p45;
	selp.b32 	%r453, %r452, 0, %p4;
	selp.b32 	%r393, %r453, 0, %p36;
	// begin inline asm
	cp.async.cg.shared.global [ %r211 + 0 ], [ %rd101 + 0 ], 0x10, %r393;
	// end inline asm
	selp.b32 	%r454, 16, 0, %p46;
	selp.b32 	%r455, %r454, 0, %p4;
	selp.b32 	%r395, %r455, 0, %p36;
	// begin inline asm
	cp.async.cg.shared.global [ %r213 + 0 ], [ %rd102 + 0 ], 0x10, %r395;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd158, %rd158, 64;
	add.s64 	%rd157, %rd157, %rd13;
	add.s64 	%rd156, %rd156, %rd13;
	add.s64 	%rd155, %rd155, %rd13;
	add.s64 	%rd154, %rd154, %rd13;
	add.s64 	%rd153, %rd153, %rd13;
	add.s64 	%rd152, %rd152, %rd13;
	add.s64 	%rd151, %rd151, %rd13;
	add.s64 	%rd150, %rd150, %rd13;
	setp.ne.s64 	%p47, %rd7, %rd159;
	@%p47 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge15_crit_edge
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r555, %r2, 6;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	bfe.u32 	%r554, %r4, 2, 2;
	shr.u32 	%r553, %r5, 2;
	shl.b32 	%r552, %r4, 3;
	mov.b32 	%r556, 0;
	mov.u32 	%r557, %r556;
	mov.u32 	%r558, %r556;
	mov.u32 	%r559, %r556;
	mov.u32 	%r560, %r556;
	mov.u32 	%r561, %r556;
	mov.u32 	%r562, %r556;
	mov.u32 	%r563, %r556;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %._crit_edge15.loopexit
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	mov.b32 	%r556, %f178;
	mov.b32 	%r557, %f179;
	mov.b32 	%r560, %f182;
	mov.b32 	%r561, %f183;
	mov.b32 	%r558, %f180;
	mov.b32 	%r559, %f181;
	mov.b32 	%r562, %f184;
	mov.b32 	%r563, %f185;
$L__BB0_10:                             // %._crit_edge15
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	shr.u32 	%r488, %r6, 6;
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r489, %r10, %r488;
	or.b32  	%r490, %r489, 2;
	or.b32  	%r491, %r489, 4;
	or.b32  	%r492, %r489, 6;
	or.b32  	%r493, %r489, 8;
	or.b32  	%r494, %r489, 10;
	or.b32  	%r495, %r489, 12;
	or.b32  	%r496, %r489, 14;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r497, %r489, %r84;
	shl.b32 	%r498, %r84, 1;
	add.s32 	%r499, %r497, %r498;
	add.s32 	%r500, %r499, %r498;
	add.s32 	%r501, %r500, %r498;
	add.s32 	%r502, %r501, %r498;
	add.s32 	%r503, %r502, %r498;
	add.s32 	%r504, %r503, %r498;
	add.s32 	%r505, %r504, %r498;
	.loc	1 87 33                         // implicit_gemm_kernel.py:87:33
	and.b32  	%r506, %r4, 63;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r507, %r555, %r506;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r508, %r507, %r497;
	add.s32 	%r509, %r507, %r499;
	add.s32 	%r510, %r507, %r500;
	add.s32 	%r511, %r507, %r501;
	add.s32 	%r512, %r507, %r502;
	add.s32 	%r513, %r507, %r503;
	add.s32 	%r514, %r507, %r504;
	add.s32 	%r515, %r507, %r505;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd133, %r508, 4;
	add.s64 	%rd125, %rd63, %rd133;
	mul.wide.s32 	%rd134, %r509, 4;
	add.s64 	%rd126, %rd63, %rd134;
	mul.wide.s32 	%rd135, %r510, 4;
	add.s64 	%rd127, %rd63, %rd135;
	mul.wide.s32 	%rd136, %r511, 4;
	add.s64 	%rd128, %rd63, %rd136;
	mul.wide.s32 	%rd137, %r512, 4;
	add.s64 	%rd129, %rd63, %rd137;
	mul.wide.s32 	%rd138, %r513, 4;
	add.s64 	%rd130, %rd63, %rd138;
	mul.wide.s32 	%rd139, %r514, 4;
	add.s64 	%rd131, %rd63, %rd139;
	mul.wide.s32 	%rd140, %r515, 4;
	add.s64 	%rd132, %rd63, %rd140;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p65, %r489, %r82;
	setp.lt.s32 	%p66, %r490, %r82;
	setp.lt.s32 	%p67, %r491, %r82;
	setp.lt.s32 	%p68, %r492, %r82;
	setp.lt.s32 	%p69, %r493, %r82;
	setp.lt.s32 	%p70, %r494, %r82;
	setp.lt.s32 	%p71, %r495, %r82;
	setp.lt.s32 	%p72, %r496, %r82;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p73, %r507, %r84;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p57, %p65, %p73;
	and.pred  	%p58, %p66, %p73;
	and.pred  	%p59, %p67, %p73;
	and.pred  	%p60, %p68, %p73;
	and.pred  	%p61, %p69, %p73;
	and.pred  	%p62, %p70, %p73;
	and.pred  	%p63, %p71, %p73;
	and.pred  	%p64, %p72, %p73;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shl.b32 	%r516, %r4, 4;
	and.b32  	%r517, %r516, 48;
	or.b32  	%r518, %r554, %r517;
	or.b32  	%r519, %r518, %r553;
	shl.b32 	%r520, %r4, 1;
	and.b32  	%r521, %r520, 192;
	or.b32  	%r522, %r519, %r521;
	and.b32  	%r523, %r552, 504;
	or.b32  	%r524, %r523, %r488;
	shr.u32 	%r525, %r522, 1;
	and.b32  	%r526, %r525, 120;
	add.s32 	%r528, %r549, %r526;
	shl.b32 	%r529, %r522, 2;
	add.s32 	%r456, %r528, %r529;
	mov.pred 	%p49, -1;
	// begin inline asm
	@%p49 st.shared.b32 [ %r456 + 0 ], %r556;
	// end inline asm
	or.b32  	%r530, %r522, 8;
	shr.u32 	%r531, %r530, 1;
	and.b32  	%r532, %r531, 124;
	add.s32 	%r533, %r549, %r532;
	add.s32 	%r534, %r533, %r529;
	add.s32 	%r458, %r534, 32;
	// begin inline asm
	@%p49 st.shared.b32 [ %r458 + 0 ], %r557;
	// end inline asm
	or.b32  	%r535, %r522, 256;
	shr.u32 	%r536, %r535, 1;
	and.b32  	%r537, %r536, 248;
	add.s32 	%r538, %r549, %r537;
	add.s32 	%r539, %r538, %r529;
	add.s32 	%r460, %r539, 1024;
	// begin inline asm
	@%p49 st.shared.b32 [ %r460 + 0 ], %r560;
	// end inline asm
	or.b32  	%r540, %r522, 264;
	shr.u32 	%r541, %r540, 1;
	and.b32  	%r542, %r541, 252;
	add.s32 	%r543, %r549, %r542;
	add.s32 	%r544, %r543, %r529;
	add.s32 	%r462, %r544, 1056;
	// begin inline asm
	@%p49 st.shared.b32 [ %r462 + 0 ], %r561;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r545, %r523, 1;
	add.s32 	%r546, %r549, %r545;
	shl.b32 	%r547, %r524, 2;
	add.s32 	%r548, %r546, %r547;
	ld.shared.u32 	%r473, [%r548];
	ld.shared.u32 	%r475, [%r548+8];
	ld.shared.u32 	%r477, [%r548+16];
	ld.shared.u32 	%r479, [%r548+24];
	bar.sync 	0;
	// begin inline asm
	@%p49 st.shared.b32 [ %r456 + 0 ], %r558;
	// end inline asm
	// begin inline asm
	@%p49 st.shared.b32 [ %r458 + 0 ], %r559;
	// end inline asm
	// begin inline asm
	@%p49 st.shared.b32 [ %r460 + 0 ], %r562;
	// end inline asm
	// begin inline asm
	@%p49 st.shared.b32 [ %r462 + 0 ], %r563;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r481, [%r548];
	ld.shared.u32 	%r483, [%r548+8];
	ld.shared.u32 	%r485, [%r548+16];
	ld.shared.u32 	%r487, [%r548+24];
	// begin inline asm
	mov.u32 %r472, 0x0;
	@%p57 atom.global.gpu.acq_rel.add.f32 %r472, [ %rd125 + 0 ], %r473;
	// end inline asm
	// begin inline asm
	mov.u32 %r474, 0x0;
	@%p58 atom.global.gpu.acq_rel.add.f32 %r474, [ %rd126 + 0 ], %r475;
	// end inline asm
	// begin inline asm
	mov.u32 %r476, 0x0;
	@%p59 atom.global.gpu.acq_rel.add.f32 %r476, [ %rd127 + 0 ], %r477;
	// end inline asm
	// begin inline asm
	mov.u32 %r478, 0x0;
	@%p60 atom.global.gpu.acq_rel.add.f32 %r478, [ %rd128 + 0 ], %r479;
	// end inline asm
	// begin inline asm
	mov.u32 %r480, 0x0;
	@%p61 atom.global.gpu.acq_rel.add.f32 %r480, [ %rd129 + 0 ], %r481;
	// end inline asm
	// begin inline asm
	mov.u32 %r482, 0x0;
	@%p62 atom.global.gpu.acq_rel.add.f32 %r482, [ %rd130 + 0 ], %r483;
	// end inline asm
	// begin inline asm
	mov.u32 %r484, 0x0;
	@%p63 atom.global.gpu.acq_rel.add.f32 %r484, [ %rd131 + 0 ], %r485;
	// end inline asm
	// begin inline asm
	mov.u32 %r486, 0x0;
	@%p64 atom.global.gpu.acq_rel.add.f32 %r486, [ %rd132 + 0 ], %r487;
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 174                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x98:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
