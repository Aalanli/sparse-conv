//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_89
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<57>;
	.reg .b16 	%rs<71>;
	.reg .b32 	%r<191>;
	.reg .b64 	%rd<104>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r40, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r38, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd45, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r41, %ctaid.x;
	.loc	1 50 36                         // implicit_gemm_kernel.py:50:36
	shr.u32 	%r42, %r41, 31;
	add.s32 	%r43, %r41, %r42;
	and.b32  	%r44, %r43, -2;
	sub.s32 	%r189, %r41, %r44;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r45, %r38, 15;
$L__tmp2:
	.loc	1 49 35                         // implicit_gemm_kernel.py:49:35
	shr.s32 	%r46, %r43, 1;
	shr.s32 	%r48, %r45, 31;
	shr.u32 	%r49, %r48, 28;
	add.s32 	%r50, %r45, %r49;
	shr.s32 	%r51, %r50, 4;
	ld.param.u32 	%r52, [implicit_conv3d_kernel_param_8];
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r2, %r46, %r51;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r53, %r2, %r51;
	sub.s32 	%r54, %r46, %r53;
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r55, %r52, %r52;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r3, %r55, %r52;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r4, %tid.x;
	and.b32  	%r5, %r4, 16;
	bfe.u32 	%r6, %r4, 4, 1;
	and.b32  	%r7, %r4, 32;
	shr.u32 	%r8, %r7, 4;
	or.b32  	%r9, %r6, %r8;
	and.b32  	%r10, %r4, 15;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r56, %r54, 4;
	.loc	1 58 49                         // implicit_gemm_kernel.py:58:49
	or.b32  	%r11, %r56, %r9;
	or.b32  	%r12, %r11, 4;
	or.b32  	%r13, %r11, 8;
	or.b32  	%r14, %r11, 12;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.lt.s32 	%p1, %r189, %r3;
	mov.u32 	%r188, global_smem;
	setp.lt.s32 	%p53, %r14, %r38;
	setp.lt.s32 	%p54, %r13, %r38;
	setp.lt.s32 	%p55, %r12, %r38;
	setp.lt.s32 	%p56, %r11, %r38;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph7
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r39, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r37, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd44, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd43, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd46, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	or.b32  	%r15, %r56, %r10;
	mul.lo.s32 	%r57, %r11, %r3;
	mul.lo.s32 	%r58, %r12, %r3;
	mul.lo.s32 	%r59, %r13, %r3;
	mul.lo.s32 	%r60, %r14, %r3;
	mul.lo.s32 	%r61, %r15, %r3;
	mul.wide.s32 	%rd47, %r57, 4;
	add.s64 	%rd1, %rd46, %rd47;
	mul.wide.s32 	%rd48, %r58, 4;
	add.s64 	%rd2, %rd46, %rd48;
	mul.wide.s32 	%rd49, %r59, 4;
	add.s64 	%rd3, %rd46, %rd49;
	mul.wide.s32 	%rd50, %r60, 4;
	add.s64 	%rd4, %rd46, %rd50;
	mul.wide.s32 	%rd51, %r61, 4;
	add.s64 	%rd5, %rd46, %rd51;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r63, %r4, 8;
	add.s32 	%r17, %r39, 15;
	shr.s32 	%r64, %r17, 31;
	shr.u32 	%r65, %r64, 28;
	add.s32 	%r66, %r17, %r65;
	shr.s32 	%r67, %r66, 4;
	shl.b32 	%r68, %r2, 4;
	mul.lo.s32 	%r18, %r3, %r39;
	or.b32  	%r190, %r68, %r10;
	shl.b32 	%r69, %r9, 4;
	or.b32  	%r70, %r69, %r10;
	shl.b32 	%r71, %r70, 1;
	add.s32 	%r20, %r188, %r71;
	and.b32  	%r73, %r4, 7;
	or.b32  	%r74, %r73, 8;
	xor.b32  	%r75, %r74, %r63;
	or.b32  	%r76, %r69, %r75;
	shl.b32 	%r77, %r76, 1;
	add.s32 	%r21, %r188, %r77;
	add.s32 	%r78, %r188, 512;
	add.s32 	%r22, %r78, %r71;
	add.s32 	%r23, %r78, %r77;
	shl.b32 	%r79, %r4, 1;
	and.b32  	%r80, %r79, 8;
	shr.u32 	%r81, %r5, 1;
	xor.b32  	%r82, %r80, %r81;
	shl.b32 	%r83, %r10, 4;
	or.b32  	%r84, %r82, %r83;
	shl.b32 	%r85, %r84, 1;
	add.s32 	%r128, %r188, %r85;
	shr.u32 	%r86, %r7, 2;
	xor.b32  	%r87, %r80, %r86;
	or.b32  	%r88, %r87, %r83;
	shl.b32 	%r89, %r88, 1;
	add.s32 	%r131, %r78, %r89;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	cvt.u64.u32 	%rd6, %r10;
	cvt.s64.s32 	%rd7, %r39;
	cvt.u64.u32 	%rd8, %r67;
	mad.lo.s32 	%r90, %r189, %r39, %r8;
	add.s32 	%r91, %r90, %r6;
	cvt.u64.u32 	%rd97, %r91;
	shl.b32 	%r92, %r39, 1;
	cvt.u64.u32 	%rd10, %r92;
	add.s32 	%r93, %r91, 12;
	mad.lo.s32 	%r94, %r40, %r93, %r68;
	cvt.u64.u32 	%rd96, %r94;
	mul.lo.s32 	%r95, %r40, %r39;
	shl.b32 	%r96, %r95, 1;
	cvt.u64.u32 	%rd12, %r96;
	shl.b32 	%r97, %r40, 4;
	cvt.u64.u32 	%rd13, %r97;
	add.s32 	%r98, %r91, 8;
	mad.lo.s32 	%r99, %r40, %r98, %r68;
	cvt.u64.u32 	%rd95, %r99;
	add.s32 	%r100, %r91, 4;
	mad.lo.s32 	%r101, %r40, %r100, %r68;
	cvt.u64.u32 	%rd94, %r101;
	mad.lo.s32 	%r102, %r40, %r91, %r68;
	cvt.u64.u32 	%rd93, %r102;
	mov.b16 	%rs63, 0x0000;
	setp.lt.s32 	%p6, %r15, %r38;
	mov.u16 	%rs64, %rs63;
	mov.u16 	%rs65, %rs63;
	mov.u16 	%rs66, %rs63;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %.loopexit
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s32 	%r189, %r189, 2;
	add.s64 	%rd97, %rd97, %rd10;
	add.s64 	%rd96, %rd96, %rd12;
	add.s64 	%rd95, %rd95, %rd12;
	add.s64 	%rd94, %rd94, %rd12;
	add.s64 	%rd93, %rd93, %rd12;
	setp.lt.s32 	%p39, %r189, %r3;
	@%p39 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_8;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	mul.wide.s32 	%rd57, %r189, 4;
	add.s64 	%rd52, %rd1, %rd57;
	add.s64 	%rd53, %rd2, %rd57;
	add.s64 	%rd54, %rd3, %rd57;
	add.s64 	%rd55, %rd4, %rd57;
	add.s64 	%rd56, %rd5, %rd57;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r103, 0xffffffffffffffff;
	@%p56 ld.global.b32 { %r103 }, [ %rd52 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r104, 0xffffffffffffffff;
	@%p55 ld.global.b32 { %r104 }, [ %rd53 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r105, 0xffffffffffffffff;
	@%p54 ld.global.b32 { %r105 }, [ %rd54 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r106, 0xffffffffffffffff;
	@%p53 ld.global.b32 { %r106 }, [ %rd55 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r107, 0xffffffffffffffff;
	@%p6 ld.global.b32 { %r107 }, [ %rd56 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p7, %r107, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p8, %r107, %r37;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p9, %p7, %p8;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r108, 1, 0, %p9;
	shfl.sync.bfly.b32	%r109, %r108, 8, 31, -1;
	and.b32  	%r110, %r109, 1;
	setp.eq.b32 	%p10, %r110, 1;
$L__tmp3:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p11, %p9, %p10;
$L__tmp4:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r111, 1, 0, %p11;
	shfl.sync.bfly.b32	%r112, %r111, 4, 31, -1;
	and.b32  	%r113, %r112, 1;
	setp.eq.b32 	%p12, %r113, 1;
$L__tmp5:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p13, %p11, %p12;
$L__tmp6:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r114, 1, 0, %p13;
	shfl.sync.bfly.b32	%r115, %r114, 2, 31, -1;
	and.b32  	%r116, %r115, 1;
	setp.eq.b32 	%p14, %r116, 1;
$L__tmp7:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p15, %p13, %p14;
$L__tmp8:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r117, 1, 0, %p15;
	shfl.sync.bfly.b32	%r118, %r117, 1, 31, -1;
	and.b32  	%r119, %r118, 1;
	setp.eq.b32 	%p16, %r119, 1;
$L__tmp9:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p17, %p15, %p16;
$L__tmp10:
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p18, %p17;
	@%p18 bra 	$L__BB0_7;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.lt.s32 	%p19, %r17, 16;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p19 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 0                           // implicit_gemm_kernel.py:0:0
	mul.lo.s32 	%r31, %r103, %r39;
	mul.lo.s32 	%r32, %r104, %r39;
	mul.lo.s32 	%r33, %r105, %r39;
	mul.lo.s32 	%r34, %r106, %r39;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s32 	%r120, %r10, %r34;
	cvt.u64.u32 	%rd22, %r120;
	add.s32 	%r121, %r10, %r33;
	cvt.u64.u32 	%rd23, %r121;
	add.s32 	%r122, %r10, %r32;
	cvt.u64.u32 	%rd24, %r122;
	add.s32 	%r123, %r10, %r31;
	cvt.u64.u32 	%rd25, %r123;
	mov.b64 	%rd102, 0;
	mov.u64 	%rd98, %rd93;
	mov.u64 	%rd99, %rd94;
	mov.u64 	%rd100, %rd95;
	mov.u64 	%rd101, %rd96;
	mov.u64 	%rd103, %rd8;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.loc	1 70 43                         // implicit_gemm_kernel.py:70:43
	setp.ne.s32 	%p28, %r106, -1;
	setp.ne.s32 	%p29, %r105, -1;
	setp.ne.s32 	%p30, %r104, -1;
	setp.ne.s32 	%p31, %r103, -1;
	setp.lt.s32 	%p32, %r190, %r40;
	.loc	1 69 89                         // implicit_gemm_kernel.py:69:89
	add.s64 	%rd67, %rd25, %rd102;
	add.s64 	%rd68, %rd24, %rd102;
	add.s64 	%rd69, %rd23, %rd102;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd70, %rd22, %rd102;
	cvt.u32.u64 	%r142, %rd67;
	mul.wide.s32 	%rd71, %r142, 2;
	add.s64 	%rd59, %rd43, %rd71;
	cvt.u32.u64 	%r143, %rd68;
	mul.wide.s32 	%rd72, %r143, 2;
	add.s64 	%rd60, %rd43, %rd72;
	cvt.u32.u64 	%r144, %rd69;
	mul.wide.s32 	%rd73, %r144, 2;
	add.s64 	%rd61, %rd43, %rd73;
	cvt.u32.u64 	%r145, %rd70;
	mul.wide.s32 	%rd74, %r145, 2;
	add.s64 	%rd62, %rd43, %rd74;
	.loc	1 70 98                         // implicit_gemm_kernel.py:70:98
	add.s64 	%rd75, %rd6, %rd102;
	setp.lt.s64 	%p33, %rd75, %rd7;
	.loc	1 70 50                         // implicit_gemm_kernel.py:70:50
	and.pred  	%p20, %p31, %p33;
	and.pred  	%p21, %p30, %p33;
	and.pred  	%p22, %p29, %p33;
	and.pred  	%p23, %p28, %p33;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s64 	%rd76, %rd97, %rd102;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	add.s64 	%rd77, %rd6, %rd98;
	add.s64 	%rd78, %rd6, %rd99;
	add.s64 	%rd79, %rd6, %rd100;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s64 	%rd80, %rd6, %rd101;
	cvt.u32.u64 	%r146, %rd77;
	mul.wide.s32 	%rd81, %r146, 2;
	add.s64 	%rd63, %rd44, %rd81;
	cvt.u32.u64 	%r147, %rd78;
	mul.wide.s32 	%rd82, %r147, 2;
	add.s64 	%rd64, %rd44, %rd82;
	cvt.u32.u64 	%r148, %rd79;
	mul.wide.s32 	%rd83, %r148, 2;
	add.s64 	%rd65, %rd44, %rd83;
	cvt.u32.u64 	%r149, %rd80;
	mul.wide.s32 	%rd84, %r149, 2;
	add.s64 	%rd66, %rd44, %rd84;
	cvt.u32.u64 	%r150, %rd76;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p34, %r150, %r18;
	add.s32 	%r151, %r150, 4;
	setp.lt.s32 	%p35, %r151, %r18;
	add.s32 	%r152, %r150, 8;
	setp.lt.s32 	%p36, %r152, %r18;
	add.s32 	%r153, %r150, 12;
	setp.lt.s32 	%p37, %r153, %r18;
	.loc	1 78 20                         // implicit_gemm_kernel.py:78:20
	and.pred  	%p24, %p32, %p34;
	and.pred  	%p25, %p32, %p35;
	and.pred  	%p26, %p32, %p36;
	and.pred  	%p27, %p32, %p37;
	mov.b16 	%rs28, 0;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	// begin inline asm
	mov.u16 %rs27, %rs28;
	@%p20 ld.global.b16 { %rs27 }, [ %rd59 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs29, %rs28;
	@%p21 ld.global.b16 { %rs29 }, [ %rd60 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs31, %rs28;
	@%p22 ld.global.b16 { %rs31 }, [ %rd61 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs33, %rs28;
	@%p23 ld.global.b16 { %rs33 }, [ %rd62 + 0 ];
	// end inline asm
	bar.sync 	0;
	st.shared.u16 	[%r20], %rs27;
	st.shared.u16 	[%r21+128], %rs29;
	st.shared.u16 	[%r20+256], %rs31;
	st.shared.u16 	[%r21+384], %rs33;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	// begin inline asm
	mov.u16 %rs35, %rs28;
	@%p24 ld.global.b16 { %rs35 }, [ %rd63 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs37, %rs28;
	@%p25 ld.global.b16 { %rs37 }, [ %rd64 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs39, %rs28;
	@%p26 ld.global.b16 { %rs39 }, [ %rd65 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs41, %rs28;
	@%p27 ld.global.b16 { %rs41 }, [ %rd66 + 0 ];
	// end inline asm
	st.shared.u16 	[%r22], %rs35;
	st.shared.u16 	[%r23+128], %rs37;
	st.shared.u16 	[%r22+256], %rs39;
	st.shared.u16 	[%r23+384], %rs41;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r124, %r125, %r126, %r127}, [%r128];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.trans.shared.b16 {%r129, %r130}, [%r131];
	// end inline asm
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	mov.b32 	%r132, {%rs63, %rs64};
	mov.b32 	%r133, {%rs65, %rs66};
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r132, %r133 }, { %r124, %r125, %r126, %r127 }, { %r129, %r130 }, { %r132, %r133 };
	// end inline asm
	mov.b32 	{%rs63, %rs64}, %r132;
	mov.b32 	{%rs65, %rs66}, %r133;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd103, %rd103, -1;
	add.s64 	%rd102, %rd102, 16;
	add.s64 	%rd101, %rd101, %rd13;
	add.s64 	%rd100, %rd100, %rd13;
	add.s64 	%rd99, %rd99, %rd13;
	add.s64 	%rd98, %rd98, %rd13;
	setp.ne.s64 	%p38, %rd103, 0;
	@%p38 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge_crit_edge
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r62, %r2, 4;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r190, %r62, %r10;
	mov.b16 	%rs63, 0;
	mov.u16 	%rs64, %rs63;
	mov.u16 	%rs65, %rs63;
	mov.u16 	%rs66, %rs63;
$L__BB0_8:                              // %._crit_edge
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	mad.lo.s32 	%r158, %r11, %r40, %r190;
	mad.lo.s32 	%r159, %r12, %r40, %r190;
	mad.lo.s32 	%r160, %r13, %r40, %r190;
	mad.lo.s32 	%r161, %r14, %r40, %r190;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd89, %r158, 2;
	add.s64 	%rd85, %rd45, %rd89;
	mul.wide.s32 	%rd90, %r159, 2;
	add.s64 	%rd86, %rd45, %rd90;
	mul.wide.s32 	%rd91, %r160, 2;
	add.s64 	%rd87, %rd45, %rd91;
	mul.wide.s32 	%rd92, %r161, 2;
	add.s64 	%rd88, %rd45, %rd92;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p52, %r190, %r40;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p44, %p56, %p52;
	and.pred  	%p45, %p55, %p52;
	and.pred  	%p46, %p54, %p52;
	and.pred  	%p47, %p53, %p52;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	bar.sync 	0;
	shl.b32 	%r162, %r4, 4;
	and.b32  	%r163, %r162, 48;
	bfe.u32 	%r164, %r4, 2, 2;
	or.b32  	%r165, %r164, %r163;
	shr.u32 	%r166, %r5, 2;
	or.b32  	%r167, %r165, %r166;
	shl.b32 	%r168, %r7, 1;
	or.b32  	%r169, %r167, %r168;
	shl.b32 	%r170, %r4, 3;
	and.b32  	%r171, %r170, 120;
	or.b32  	%r172, %r171, %r6;
	or.b32  	%r173, %r172, %r8;
	shr.u32 	%r174, %r169, 2;
	and.b32  	%r175, %r174, 30;
	add.s32 	%r177, %r188, %r175;
	shl.b32 	%r178, %r169, 1;
	add.s32 	%r154, %r177, %r178;
	mov.pred 	%p40, -1;
	// begin inline asm
	@%p40 st.shared.b16 [ %r154 + 0 ], %rs63;
	// end inline asm
	or.b32  	%r179, %r169, 8;
	shr.u32 	%r180, %r179, 2;
	and.b32  	%r181, %r180, 30;
	add.s32 	%r182, %r188, %r181;
	add.s32 	%r183, %r182, %r178;
	add.s32 	%r155, %r183, 16;
	// begin inline asm
	@%p40 st.shared.b16 [ %r155 + 0 ], %rs64;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r184, %r171, 2;
	add.s32 	%r185, %r188, %r184;
	shl.b32 	%r186, %r173, 1;
	add.s32 	%r187, %r185, %r186;
	ld.shared.u16 	%rs48, [%r187];
	ld.shared.u16 	%rs50, [%r187+8];
	bar.sync 	0;
	// begin inline asm
	@%p40 st.shared.b16 [ %r154 + 0 ], %rs65;
	// end inline asm
	// begin inline asm
	@%p40 st.shared.b16 [ %r155 + 0 ], %rs66;
	// end inline asm
	bar.sync 	0;
	ld.shared.u16 	%rs52, [%r187];
	ld.shared.u16 	%rs54, [%r187+8];
	// begin inline asm
	mov.u16 %rs47, 0x0;
	@%p44 atom.global.gpu.acq_rel.add.noftz.f16 %rs47, [ %rd85 + 0 ], %rs48;
	// end inline asm
	// begin inline asm
	mov.u16 %rs49, 0x0;
	@%p45 atom.global.gpu.acq_rel.add.noftz.f16 %rs49, [ %rd86 + 0 ], %rs50;
	// end inline asm
	// begin inline asm
	mov.u16 %rs51, 0x0;
	@%p46 atom.global.gpu.acq_rel.add.noftz.f16 %rs51, [ %rd87 + 0 ], %rs52;
	// end inline asm
	// begin inline asm
	mov.u16 %rs53, 0x0;
	@%p47 atom.global.gpu.acq_rel.add.noftz.f16 %rs53, [ %rd88 + 0 ], %rs54;
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 174                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x98:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
