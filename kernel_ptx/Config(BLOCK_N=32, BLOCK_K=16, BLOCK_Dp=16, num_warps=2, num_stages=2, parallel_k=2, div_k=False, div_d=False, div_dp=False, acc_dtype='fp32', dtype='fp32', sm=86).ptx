//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<85>;
	.reg .b32 	%r<459>;
	.reg .f32 	%f<106>;
	.reg .b64 	%rd<166>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r97, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r95, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd55, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r98, %ctaid.x;
	.loc	1 50 36                         // implicit_gemm_kernel.py:50:36
	shr.u32 	%r99, %r98, 31;
	add.s32 	%r100, %r98, %r99;
	and.b32  	%r101, %r100, -2;
	sub.s32 	%r445, %r98, %r101;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r102, %r95, 31;
$L__tmp2:
	.loc	1 49 35                         // implicit_gemm_kernel.py:49:35
	shr.s32 	%r103, %r100, 1;
	shr.s32 	%r105, %r102, 31;
	shr.u32 	%r106, %r105, 27;
	add.s32 	%r107, %r102, %r106;
	shr.s32 	%r108, %r107, 5;
	ld.param.u32 	%r109, [implicit_conv3d_kernel_param_8];
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r2, %r103, %r108;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r110, %r2, %r108;
	sub.s32 	%r111, %r103, %r110;
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r112, %r109, %r109;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r3, %r112, %r109;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r4, %tid.x;
	and.b32  	%r5, %r4, 16;
	bfe.u32 	%r6, %r4, 4, 1;
	and.b32  	%r7, %r4, 32;
	shr.u32 	%r8, %r7, 4;
	or.b32  	%r9, %r6, %r8;
	or.b32  	%r10, %r9, 4;
	or.b32  	%r11, %r9, 8;
	or.b32  	%r12, %r9, 12;
	and.b32  	%r13, %r4, 15;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r114, %r111, 5;
	.loc	1 58 49                         // implicit_gemm_kernel.py:58:49
	or.b32  	%r14, %r114, %r9;
	or.b32  	%r15, %r114, %r10;
	or.b32  	%r16, %r114, %r11;
	or.b32  	%r17, %r114, %r12;
	or.b32  	%r18, %r14, 16;
	or.b32  	%r19, %r14, 20;
	or.b32  	%r20, %r14, 24;
	or.b32  	%r21, %r14, 28;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.lt.s32 	%p3, %r445, %r3;
	mov.u32 	%r444, global_smem;
	setp.lt.s32 	%p77, %r21, %r95;
	setp.lt.s32 	%p78, %r20, %r95;
	setp.lt.s32 	%p79, %r19, %r95;
	setp.lt.s32 	%p80, %r18, %r95;
	setp.lt.s32 	%p81, %r17, %r95;
	setp.lt.s32 	%p82, %r16, %r95;
	setp.lt.s32 	%p83, %r15, %r95;
	setp.lt.s32 	%p84, %r14, %r95;
	@%p3 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph11
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r96, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r94, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd54, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd53, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd56, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	and.b32  	%r113, %r4, 31;
	or.b32  	%r22, %r114, %r113;
	mul.lo.s32 	%r115, %r14, %r3;
	mul.lo.s32 	%r116, %r15, %r3;
	mul.lo.s32 	%r117, %r16, %r3;
	mul.lo.s32 	%r118, %r17, %r3;
	shl.b32 	%r119, %r3, 4;
	add.s32 	%r120, %r115, %r119;
	shl.b32 	%r121, %r3, 2;
	add.s32 	%r122, %r120, %r121;
	add.s32 	%r123, %r122, %r121;
	add.s32 	%r124, %r123, %r121;
	mul.lo.s32 	%r125, %r22, %r3;
	mul.wide.s32 	%rd57, %r115, 4;
	add.s64 	%rd1, %rd56, %rd57;
	mul.wide.s32 	%rd58, %r116, 4;
	add.s64 	%rd2, %rd56, %rd58;
	mul.wide.s32 	%rd59, %r117, 4;
	add.s64 	%rd3, %rd56, %rd59;
	mul.wide.s32 	%rd60, %r118, 4;
	add.s64 	%rd4, %rd56, %rd60;
	mul.wide.s32 	%rd61, %r120, 4;
	add.s64 	%rd5, %rd56, %rd61;
	mul.wide.s32 	%rd62, %r122, 4;
	add.s64 	%rd6, %rd56, %rd62;
	mul.wide.s32 	%rd63, %r123, 4;
	add.s64 	%rd7, %rd56, %rd63;
	mul.wide.s32 	%rd64, %r124, 4;
	add.s64 	%rd8, %rd56, %rd64;
	mul.wide.s32 	%rd65, %r125, 4;
	add.s64 	%rd9, %rd56, %rd65;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r128, %r4, 4;
	and.b32  	%r129, %r4, 3;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	or.b32  	%r130, %r128, %r129;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r131, %r4, 8;
	and.b32  	%r132, %r4, 2;
	add.s32 	%r27, %r96, 15;
	shr.s32 	%r133, %r27, 31;
	shr.u32 	%r134, %r133, 28;
	add.s32 	%r135, %r27, %r134;
	shr.s32 	%r136, %r135, 4;
	shl.b32 	%r137, %r2, 4;
	mul.lo.s32 	%r28, %r3, %r96;
	or.b32  	%r450, %r137, %r13;
	setp.lt.s32 	%p4, %r450, %r97;
	setp.gt.s32 	%p5, %r27, 15;
	setp.lt.s32 	%p6, %r13, %r96;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p1, %p6, %p5;
	shr.u32 	%r138, %r7, 3;
	xor.b32  	%r139, %r138, %r13;
	shl.b32 	%r140, %r9, 4;
	or.b32  	%r141, %r140, %r139;
	shl.b32 	%r142, %r141, 2;
	add.s32 	%r196, %r444, %r142;
	or.b32  	%r144, %r130, 8;
	or.b32  	%r145, %r138, %r131;
	xor.b32  	%r146, %r145, %r144;
	or.b32  	%r147, %r146, %r140;
	shl.b32 	%r148, %r147, 2;
	add.s32 	%r149, %r444, %r148;
	add.s32 	%r198, %r149, 256;
	add.s32 	%r200, %r196, 512;
	add.s32 	%r202, %r149, 768;
	add.s32 	%r204, %r196, 1024;
	add.s32 	%r206, %r149, 1280;
	add.s32 	%r208, %r196, 1536;
	add.s32 	%r210, %r149, 1792;
	shr.u32 	%r150, %r7, 2;
	xor.b32  	%r151, %r150, %r13;
	or.b32  	%r152, %r140, %r151;
	shl.b32 	%r153, %r152, 2;
	add.s32 	%r154, %r444, %r153;
	add.s32 	%r212, %r154, 2048;
	add.s32 	%r214, %r154, 2304;
	add.s32 	%r216, %r154, 2560;
	add.s32 	%r218, %r154, 2816;
	add.s32 	%r155, %r136, -1;
	shl.b32 	%r156, %r132, 1;
	shl.b32 	%r157, %r128, 1;
	or.b32  	%r158, %r156, %r157;
	shr.u32 	%r449, %r5, 2;
	xor.b32  	%r159, %r158, %r449;
	shr.u32 	%r448, %r7, 1;
	or.b32  	%r160, %r448, %r13;
	shl.b32 	%r161, %r160, 4;
	or.b32  	%r44, %r159, %r161;
	or.b32  	%r162, %r156, 8;
	or.b32  	%r163, %r449, %r157;
	xor.b32  	%r164, %r163, %r162;
	or.b32  	%r45, %r164, %r161;
	shl.b32 	%r165, %r132, 2;
	or.b32  	%r166, %r128, %r131;
	shr.u32 	%r167, %r166, 2;
	or.b32  	%r168, %r167, %r165;
	or.b32  	%r46, %r168, %r449;
	shl.b32 	%r169, %r4, 4;
	and.b32  	%r47, %r169, 48;
	or.b32  	%r48, %r46, %r47;
	shl.b32 	%r49, %r129, 4;
	xor.b32  	%r50, %r46, 8;
	or.b32  	%r51, %r50, %r47;
	cvt.s64.s32 	%rd10, %r155;
	cvt.u64.u32 	%rd11, %r13;
	cvt.s64.s32 	%rd12, %r96;
	cvt.u64.u32 	%rd13, %r136;
	and.pred  	%p2, %p4, %p5;
	or.b64  	%rd14, %rd11, 16;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	or.b32  	%r52, %r13, 16;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	mad.lo.s32 	%r170, %r445, %r96, %r8;
	add.s32 	%r171, %r170, %r6;
	cvt.u64.u32 	%rd159, %r171;
	shl.b32 	%r172, %r96, 1;
	cvt.u64.u32 	%rd16, %r172;
	add.s32 	%r173, %r171, 28;
	mad.lo.s32 	%r174, %r97, %r173, %r137;
	cvt.u64.u32 	%rd158, %r174;
	mul.lo.s32 	%r175, %r97, %r96;
	shl.b32 	%r176, %r175, 1;
	cvt.u64.u32 	%rd18, %r176;
	shl.b32 	%r447, %r97, 4;
	cvt.u64.u32 	%rd19, %r447;
	add.s32 	%r177, %r171, 24;
	mad.lo.s32 	%r178, %r97, %r177, %r137;
	cvt.u64.u32 	%rd157, %r178;
	add.s32 	%r179, %r171, 20;
	mad.lo.s32 	%r180, %r97, %r179, %r137;
	cvt.u64.u32 	%rd156, %r180;
	add.s32 	%r181, %r171, 16;
	mad.lo.s32 	%r182, %r97, %r181, %r137;
	cvt.u64.u32 	%rd155, %r182;
	mov.f32 	%f82, 0f00000000;
	setp.lt.s32 	%p15, %r22, %r95;
	shl.b32 	%r310, %r44, 2;
	shl.b32 	%r311, %r45, 2;
	shl.b32 	%r315, %r48, 2;
	shl.b32 	%r323, %r51, 2;
	mov.f32 	%f83, %f82;
	mov.f32 	%f84, %f82;
	mov.f32 	%f85, %f82;
	mov.f32 	%f86, %f82;
	mov.f32 	%f87, %f82;
	mov.f32 	%f88, %f82;
	mov.f32 	%f89, %f82;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s32 	%r445, %r445, 2;
	add.s64 	%rd159, %rd159, %rd16;
	add.s64 	%rd158, %rd158, %rd18;
	add.s64 	%rd157, %rd157, %rd18;
	add.s64 	%rd156, %rd156, %rd18;
	add.s64 	%rd155, %rd155, %rd18;
	setp.lt.s32 	%p51, %r445, %r3;
	@%p51 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	mul.wide.s32 	%rd75, %r445, 4;
	add.s64 	%rd66, %rd1, %rd75;
	add.s64 	%rd67, %rd2, %rd75;
	add.s64 	%rd68, %rd3, %rd75;
	add.s64 	%rd69, %rd4, %rd75;
	add.s64 	%rd70, %rd5, %rd75;
	add.s64 	%rd71, %rd6, %rd75;
	add.s64 	%rd72, %rd7, %rd75;
	add.s64 	%rd73, %rd8, %rd75;
	add.s64 	%rd74, %rd9, %rd75;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r183, 0xffffffffffffffff;
	@%p84 ld.global.b32 { %r183 }, [ %rd66 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r184, 0xffffffffffffffff;
	@%p83 ld.global.b32 { %r184 }, [ %rd67 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r185, 0xffffffffffffffff;
	@%p82 ld.global.b32 { %r185 }, [ %rd68 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r186, 0xffffffffffffffff;
	@%p81 ld.global.b32 { %r186 }, [ %rd69 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r187, 0xffffffffffffffff;
	@%p80 ld.global.b32 { %r187 }, [ %rd70 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r188, 0xffffffffffffffff;
	@%p79 ld.global.b32 { %r188 }, [ %rd71 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r189, 0xffffffffffffffff;
	@%p78 ld.global.b32 { %r189 }, [ %rd72 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r190, 0xffffffffffffffff;
	@%p77 ld.global.b32 { %r190 }, [ %rd73 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r191, 0xffffffffffffffff;
	@%p15 ld.global.b32 { %r191 }, [ %rd74 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p16, %r191, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p17, %r191, %r94;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p18, %p16, %p17;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r192, 1, 0, %p18;
	mov.b32 	%r193, -1;
	redux.sync.or.b32 %r194, %r192, %r193;
	and.b32  	%r195, %r194, 1;
	setp.eq.b32 	%p19, %r195, 1;
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p20, %p19;
	@%p20 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.lt.s32 	%p21, %r27, 16;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	mul.lo.s32 	%r220, %r445, %r96;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r63, %r183, %r96;
	mul.lo.s32 	%r64, %r184, %r96;
	mul.lo.s32 	%r65, %r185, %r96;
	mul.lo.s32 	%r66, %r186, %r96;
	mul.lo.s32 	%r67, %r187, %r96;
	mul.lo.s32 	%r68, %r188, %r96;
	mul.lo.s32 	%r69, %r189, %r96;
	mul.lo.s32 	%r70, %r190, %r96;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r221, %r63, %r13;
	add.s32 	%r222, %r64, %r13;
	add.s32 	%r223, %r65, %r13;
	add.s32 	%r224, %r66, %r13;
	add.s32 	%r225, %r67, %r13;
	add.s32 	%r226, %r68, %r13;
	add.s32 	%r227, %r69, %r13;
	add.s32 	%r228, %r70, %r13;
	.loc	1 70 43                         // implicit_gemm_kernel.py:70:43
	setp.ne.s32 	%p22, %r183, -1;
	setp.ne.s32 	%p23, %r184, -1;
	setp.ne.s32 	%p24, %r185, -1;
	setp.ne.s32 	%p25, %r186, -1;
	setp.ne.s32 	%p26, %r187, -1;
	setp.ne.s32 	%p27, %r188, -1;
	setp.ne.s32 	%p28, %r189, -1;
	setp.ne.s32 	%p29, %r190, -1;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd88, %r221, 4;
	add.s64 	%rd76, %rd53, %rd88;
	mul.wide.s32 	%rd89, %r222, 4;
	add.s64 	%rd77, %rd53, %rd89;
	mul.wide.s32 	%rd90, %r223, 4;
	add.s64 	%rd78, %rd53, %rd90;
	mul.wide.s32 	%rd91, %r224, 4;
	add.s64 	%rd79, %rd53, %rd91;
	mul.wide.s32 	%rd92, %r225, 4;
	add.s64 	%rd80, %rd53, %rd92;
	mul.wide.s32 	%rd93, %r226, 4;
	add.s64 	%rd81, %rd53, %rd93;
	mul.wide.s32 	%rd94, %r227, 4;
	add.s64 	%rd82, %rd53, %rd94;
	mul.wide.s32 	%rd95, %r228, 4;
	add.s64 	%rd83, %rd53, %rd95;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s32 	%r229, %r220, %r9;
	add.s32 	%r230, %r220, %r10;
	add.s32 	%r231, %r220, %r11;
	add.s32 	%r232, %r220, %r12;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r233, %r229, %r97, %r450;
	mad.lo.s32 	%r234, %r230, %r97, %r450;
	mad.lo.s32 	%r235, %r231, %r97, %r450;
	mad.lo.s32 	%r236, %r232, %r97, %r450;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd96, %r233, 4;
	add.s64 	%rd84, %rd54, %rd96;
	mul.wide.s32 	%rd97, %r234, 4;
	add.s64 	%rd85, %rd54, %rd97;
	mul.wide.s32 	%rd98, %r235, 4;
	add.s64 	%rd86, %rd54, %rd98;
	mul.wide.s32 	%rd99, %r236, 4;
	add.s64 	%rd87, %rd54, %rd99;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p30, %r229, %r28;
	setp.lt.s32 	%p31, %r230, %r28;
	setp.lt.s32 	%p32, %r231, %r28;
	setp.lt.s32 	%p33, %r232, %r28;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	selp.b32 	%r237, 4, 0, %p1;
	selp.b32 	%r197, %r237, 0, %p22;
	// begin inline asm
	cp.async.ca.shared.global [ %r196 + 0 ], [ %rd76 + 0 ], 0x4, %r197;
	// end inline asm
	selp.b32 	%r199, %r237, 0, %p23;
	// begin inline asm
	cp.async.ca.shared.global [ %r198 + 0 ], [ %rd77 + 0 ], 0x4, %r199;
	// end inline asm
	selp.b32 	%r201, %r237, 0, %p24;
	// begin inline asm
	cp.async.ca.shared.global [ %r200 + 0 ], [ %rd78 + 0 ], 0x4, %r201;
	// end inline asm
	selp.b32 	%r203, %r237, 0, %p25;
	// begin inline asm
	cp.async.ca.shared.global [ %r202 + 0 ], [ %rd79 + 0 ], 0x4, %r203;
	// end inline asm
	selp.b32 	%r205, %r237, 0, %p26;
	// begin inline asm
	cp.async.ca.shared.global [ %r204 + 0 ], [ %rd80 + 0 ], 0x4, %r205;
	// end inline asm
	selp.b32 	%r207, %r237, 0, %p27;
	// begin inline asm
	cp.async.ca.shared.global [ %r206 + 0 ], [ %rd81 + 0 ], 0x4, %r207;
	// end inline asm
	selp.b32 	%r209, %r237, 0, %p28;
	// begin inline asm
	cp.async.ca.shared.global [ %r208 + 0 ], [ %rd82 + 0 ], 0x4, %r209;
	// end inline asm
	selp.b32 	%r211, %r237, 0, %p29;
	// begin inline asm
	cp.async.ca.shared.global [ %r210 + 0 ], [ %rd83 + 0 ], 0x4, %r211;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r238, 4, 0, %p2;
	selp.b32 	%r213, %r238, 0, %p30;
	// begin inline asm
	cp.async.ca.shared.global [ %r212 + 0 ], [ %rd84 + 0 ], 0x4, %r213;
	// end inline asm
	selp.b32 	%r215, %r238, 0, %p31;
	// begin inline asm
	cp.async.ca.shared.global [ %r214 + 0 ], [ %rd85 + 0 ], 0x4, %r215;
	// end inline asm
	selp.b32 	%r217, %r238, 0, %p32;
	// begin inline asm
	cp.async.ca.shared.global [ %r216 + 0 ], [ %rd86 + 0 ], 0x4, %r217;
	// end inline asm
	selp.b32 	%r219, %r238, 0, %p33;
	// begin inline asm
	cp.async.ca.shared.global [ %r218 + 0 ], [ %rd87 + 0 ], 0x4, %r219;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p21 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r240, %r52, %r70;
	cvt.u64.u32 	%rd28, %r240;
	add.s32 	%r241, %r52, %r69;
	cvt.u64.u32 	%rd29, %r241;
	add.s32 	%r242, %r52, %r68;
	cvt.u64.u32 	%rd30, %r242;
	add.s32 	%r243, %r52, %r67;
	cvt.u64.u32 	%rd31, %r243;
	add.s32 	%r244, %r52, %r66;
	cvt.u64.u32 	%rd32, %r244;
	add.s32 	%r245, %r52, %r65;
	cvt.u64.u32 	%rd33, %r245;
	add.s32 	%r246, %r52, %r64;
	cvt.u64.u32 	%rd34, %r246;
	add.s32 	%r247, %r52, %r63;
	cvt.u64.u32 	%rd35, %r247;
	mov.b32 	%r446, -1;
	mov.b64 	%rd164, 0;
	mov.u64 	%rd160, %rd155;
	mov.u64 	%rd161, %rd156;
	mov.u64 	%rd162, %rd157;
	mov.u64 	%rd163, %rd158;
	mov.u64 	%rd165, %rd164;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p43, %rd165, %rd10;
	add.s32 	%r306, %r446, 1;
	setp.gt.u32 	%p44, %r446, 2147483646;
	selp.b32 	%r446, %r306, 0, %p44;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r307, %r446, 11;
	add.s32 	%r309, %r444, %r307;
	add.s32 	%r252, %r309, %r310;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r258, %r259, %r260, %r261}, [%r252];
	// end inline asm
	add.s32 	%r257, %r309, %r311;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r270, %r271, %r272, %r273}, [%r257];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	shl.b32 	%r312, %r446, 10;
	add.s32 	%r313, %r444, %r312;
	add.s32 	%r314, %r313, 2048;
	add.s32 	%r316, %r314, %r315;
	ld.shared.u32 	%r262, [%r316];
	add.s32 	%r317, %r46, %r47;
	shl.b32 	%r318, %r317, 2;
	add.s32 	%r319, %r314, %r318;
	ld.shared.u32 	%r263, [%r319+256];
	add.s32 	%r320, %r46, %r49;
	shl.b32 	%r321, %r320, 2;
	add.s32 	%r322, %r314, %r321;
	ld.shared.u32 	%r274, [%r322+512];
	ld.shared.u32 	%r275, [%r319+768];
	add.s32 	%r324, %r314, %r323;
	ld.shared.u32 	%r268, [%r324];
	add.s32 	%r325, %r50, %r47;
	shl.b32 	%r326, %r325, 2;
	add.s32 	%r327, %r314, %r326;
	ld.shared.u32 	%r269, [%r327+256];
	add.s32 	%r328, %r50, %r49;
	shl.b32 	%r329, %r328, 2;
	add.s32 	%r330, %r314, %r329;
	ld.shared.u32 	%r280, [%r330+512];
	ld.shared.u32 	%r281, [%r327+768];
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f82, %f83, %f84, %f85 }, { %r258, %r259, %r260, %r261 }, { %r262, %r263 }, { %f82, %f83, %f84, %f85 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f86, %f87, %f88, %f89 }, { %r258, %r259, %r260, %r261 }, { %r268, %r269 }, { %f86, %f87, %f88, %f89 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f82, %f83, %f84, %f85 }, { %r270, %r271, %r272, %r273 }, { %r274, %r275 }, { %f82, %f83, %f84, %f85 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f86, %f87, %f88, %f89 }, { %r270, %r271, %r272, %r273 }, { %r280, %r281 }, { %f86, %f87, %f88, %f89 };
	// end inline asm
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd165, %rd165, 1;
	.loc	1 69 89                         // implicit_gemm_kernel.py:69:89
	add.s64 	%rd113, %rd35, %rd164;
	add.s64 	%rd114, %rd34, %rd164;
	add.s64 	%rd115, %rd33, %rd164;
	add.s64 	%rd116, %rd32, %rd164;
	add.s64 	%rd117, %rd31, %rd164;
	add.s64 	%rd118, %rd30, %rd164;
	add.s64 	%rd119, %rd29, %rd164;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd120, %rd28, %rd164;
	cvt.u32.u64 	%r331, %rd113;
	mul.wide.s32 	%rd121, %r331, 4;
	add.s64 	%rd101, %rd53, %rd121;
	cvt.u32.u64 	%r332, %rd114;
	mul.wide.s32 	%rd122, %r332, 4;
	add.s64 	%rd102, %rd53, %rd122;
	cvt.u32.u64 	%r333, %rd115;
	mul.wide.s32 	%rd123, %r333, 4;
	add.s64 	%rd103, %rd53, %rd123;
	cvt.u32.u64 	%r334, %rd116;
	mul.wide.s32 	%rd124, %r334, 4;
	add.s64 	%rd104, %rd53, %rd124;
	cvt.u32.u64 	%r335, %rd117;
	mul.wide.s32 	%rd125, %r335, 4;
	add.s64 	%rd105, %rd53, %rd125;
	cvt.u32.u64 	%r336, %rd118;
	mul.wide.s32 	%rd126, %r336, 4;
	add.s64 	%rd106, %rd53, %rd126;
	cvt.u32.u64 	%r337, %rd119;
	mul.wide.s32 	%rd127, %r337, 4;
	add.s64 	%rd107, %rd53, %rd127;
	cvt.u32.u64 	%r338, %rd120;
	mul.wide.s32 	%rd128, %r338, 4;
	add.s64 	%rd108, %rd53, %rd128;
	.loc	1 70 98                         // implicit_gemm_kernel.py:70:98
	add.s64 	%rd129, %rd14, %rd164;
	setp.lt.s64 	%p45, %rd129, %rd12;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s64 	%rd130, %rd159, %rd164;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	add.s64 	%rd131, %rd11, %rd160;
	add.s64 	%rd132, %rd11, %rd161;
	add.s64 	%rd133, %rd11, %rd162;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s64 	%rd134, %rd11, %rd163;
	cvt.u32.u64 	%r339, %rd131;
	mul.wide.s32 	%rd135, %r339, 4;
	add.s64 	%rd109, %rd54, %rd135;
	cvt.u32.u64 	%r340, %rd132;
	mul.wide.s32 	%rd136, %r340, 4;
	add.s64 	%rd110, %rd54, %rd136;
	cvt.u32.u64 	%r341, %rd133;
	mul.wide.s32 	%rd137, %r341, 4;
	add.s64 	%rd111, %rd54, %rd137;
	cvt.u32.u64 	%r342, %rd134;
	mul.wide.s32 	%rd138, %r342, 4;
	add.s64 	%rd112, %rd54, %rd138;
	cvt.u32.u64 	%r343, %rd130;
	add.s32 	%r344, %r343, 16;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p46, %r344, %r28;
	add.s32 	%r345, %r343, 20;
	setp.lt.s32 	%p47, %r345, %r28;
	add.s32 	%r346, %r343, 24;
	setp.lt.s32 	%p48, %r346, %r28;
	add.s32 	%r347, %r343, 28;
	setp.lt.s32 	%p49, %r347, %r28;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r348, 4, 0, %p45;
	selp.b32 	%r349, %r348, 0, %p22;
	selp.b32 	%r283, %r349, 0, %p43;
	// begin inline asm
	cp.async.ca.shared.global [ %r196 + 0 ], [ %rd101 + 0 ], 0x4, %r283;
	// end inline asm
	selp.b32 	%r350, %r348, 0, %p23;
	selp.b32 	%r285, %r350, 0, %p43;
	// begin inline asm
	cp.async.ca.shared.global [ %r198 + 0 ], [ %rd102 + 0 ], 0x4, %r285;
	// end inline asm
	selp.b32 	%r351, %r348, 0, %p24;
	selp.b32 	%r287, %r351, 0, %p43;
	// begin inline asm
	cp.async.ca.shared.global [ %r200 + 0 ], [ %rd103 + 0 ], 0x4, %r287;
	// end inline asm
	selp.b32 	%r352, %r348, 0, %p25;
	selp.b32 	%r289, %r352, 0, %p43;
	// begin inline asm
	cp.async.ca.shared.global [ %r202 + 0 ], [ %rd104 + 0 ], 0x4, %r289;
	// end inline asm
	selp.b32 	%r353, %r348, 0, %p26;
	selp.b32 	%r291, %r353, 0, %p43;
	// begin inline asm
	cp.async.ca.shared.global [ %r204 + 0 ], [ %rd105 + 0 ], 0x4, %r291;
	// end inline asm
	selp.b32 	%r354, %r348, 0, %p27;
	selp.b32 	%r293, %r354, 0, %p43;
	// begin inline asm
	cp.async.ca.shared.global [ %r206 + 0 ], [ %rd106 + 0 ], 0x4, %r293;
	// end inline asm
	selp.b32 	%r355, %r348, 0, %p28;
	selp.b32 	%r295, %r355, 0, %p43;
	// begin inline asm
	cp.async.ca.shared.global [ %r208 + 0 ], [ %rd107 + 0 ], 0x4, %r295;
	// end inline asm
	selp.b32 	%r356, %r348, 0, %p29;
	selp.b32 	%r297, %r356, 0, %p43;
	// begin inline asm
	cp.async.ca.shared.global [ %r210 + 0 ], [ %rd108 + 0 ], 0x4, %r297;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r357, 4, 0, %p46;
	selp.b32 	%r358, %r357, 0, %p4;
	selp.b32 	%r299, %r358, 0, %p43;
	// begin inline asm
	cp.async.ca.shared.global [ %r212 + 0 ], [ %rd109 + 0 ], 0x4, %r299;
	// end inline asm
	selp.b32 	%r359, 4, 0, %p47;
	selp.b32 	%r360, %r359, 0, %p4;
	selp.b32 	%r301, %r360, 0, %p43;
	// begin inline asm
	cp.async.ca.shared.global [ %r214 + 0 ], [ %rd110 + 0 ], 0x4, %r301;
	// end inline asm
	selp.b32 	%r361, 4, 0, %p48;
	selp.b32 	%r362, %r361, 0, %p4;
	selp.b32 	%r303, %r362, 0, %p43;
	// begin inline asm
	cp.async.ca.shared.global [ %r216 + 0 ], [ %rd111 + 0 ], 0x4, %r303;
	// end inline asm
	selp.b32 	%r363, 4, 0, %p49;
	selp.b32 	%r364, %r363, 0, %p4;
	selp.b32 	%r305, %r364, 0, %p43;
	// begin inline asm
	cp.async.ca.shared.global [ %r218 + 0 ], [ %rd112 + 0 ], 0x4, %r305;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd164, %rd164, 16;
	add.s64 	%rd163, %rd163, %rd19;
	add.s64 	%rd162, %rd162, %rd19;
	add.s64 	%rd161, %rd161, %rd19;
	add.s64 	%rd160, %rd160, %rd19;
	setp.ne.s64 	%p50, %rd13, %rd165;
	@%p50 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge12_crit_edge
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r127, %r2, 4;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r450, %r127, %r13;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shr.u32 	%r449, %r5, 2;
	shr.u32 	%r448, %r7, 1;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	shl.b32 	%r447, %r97, 4;
	mov.b32 	%r451, 0;
	mov.u32 	%r452, %r451;
	mov.u32 	%r453, %r451;
	mov.u32 	%r454, %r451;
	mov.u32 	%r455, %r451;
	mov.u32 	%r456, %r451;
	mov.u32 	%r457, %r451;
	mov.u32 	%r458, %r451;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %._crit_edge12.loopexit
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	mov.b32 	%r451, %f82;
	mov.b32 	%r452, %f83;
	mov.b32 	%r453, %f84;
	mov.b32 	%r454, %f85;
	mov.b32 	%r455, %f86;
	mov.b32 	%r456, %f87;
	mov.b32 	%r457, %f88;
	mov.b32 	%r458, %f89;
$L__BB0_10:                             // %._crit_edge12
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r397, %r14, %r97;
	add.s32 	%r398, %r397, %r447;
	shl.b32 	%r399, %r97, 2;
	add.s32 	%r400, %r398, %r399;
	add.s32 	%r401, %r400, %r399;
	add.s32 	%r402, %r401, %r399;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r403, %r450, %r397;
	mad.lo.s32 	%r404, %r15, %r97, %r450;
	mad.lo.s32 	%r405, %r16, %r97, %r450;
	mad.lo.s32 	%r406, %r17, %r97, %r450;
	add.s32 	%r407, %r450, %r398;
	add.s32 	%r408, %r450, %r400;
	add.s32 	%r409, %r450, %r401;
	add.s32 	%r410, %r450, %r402;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd147, %r403, 4;
	add.s64 	%rd139, %rd55, %rd147;
	mul.wide.s32 	%rd148, %r404, 4;
	add.s64 	%rd140, %rd55, %rd148;
	mul.wide.s32 	%rd149, %r405, 4;
	add.s64 	%rd141, %rd55, %rd149;
	mul.wide.s32 	%rd150, %r406, 4;
	add.s64 	%rd142, %rd55, %rd150;
	mul.wide.s32 	%rd151, %r407, 4;
	add.s64 	%rd143, %rd55, %rd151;
	mul.wide.s32 	%rd152, %r408, 4;
	add.s64 	%rd144, %rd55, %rd152;
	mul.wide.s32 	%rd153, %r409, 4;
	add.s64 	%rd145, %rd55, %rd153;
	mul.wide.s32 	%rd154, %r410, 4;
	add.s64 	%rd146, %rd55, %rd154;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p76, %r450, %r97;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p60, %p84, %p76;
	and.pred  	%p61, %p83, %p76;
	and.pred  	%p62, %p82, %p76;
	and.pred  	%p63, %p81, %p76;
	and.pred  	%p64, %p80, %p76;
	and.pred  	%p65, %p79, %p76;
	and.pred  	%p66, %p78, %p76;
	and.pred  	%p67, %p77, %p76;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shl.b32 	%r411, %r4, 6;
	and.b32  	%r412, %r411, 192;
	bfe.u32 	%r413, %r4, 2, 2;
	or.b32  	%r414, %r449, %r448;
	or.b32  	%r415, %r414, %r413;
	or.b32  	%r416, %r415, %r412;
	shl.b32 	%r417, %r4, 5;
	and.b32  	%r418, %r417, 480;
	or.b32  	%r419, %r418, %r6;
	or.b32  	%r420, %r419, %r8;
	shr.u32 	%r421, %r412, 3;
	add.s32 	%r423, %r444, %r421;
	shl.b32 	%r424, %r416, 2;
	add.s32 	%r365, %r423, %r424;
	mov.pred 	%p52, -1;
	// begin inline asm
	@%p52 st.shared.b32 [ %r365 + 0 ], %r451;
	// end inline asm
	or.b32  	%r425, %r416, 32;
	shr.u32 	%r426, %r425, 3;
	and.b32  	%r427, %r426, 28;
	add.s32 	%r428, %r444, %r427;
	add.s32 	%r429, %r428, %r424;
	add.s32 	%r367, %r429, 128;
	// begin inline asm
	@%p52 st.shared.b32 [ %r367 + 0 ], %r452;
	// end inline asm
	add.s32 	%r369, %r365, 32;
	// begin inline asm
	@%p52 st.shared.b32 [ %r369 + 0 ], %r453;
	// end inline asm
	add.s32 	%r371, %r429, 160;
	// begin inline asm
	@%p52 st.shared.b32 [ %r371 + 0 ], %r454;
	// end inline asm
	or.b32  	%r430, %r416, 256;
	shr.u32 	%r431, %r430, 3;
	and.b32  	%r432, %r431, 56;
	add.s32 	%r433, %r444, %r432;
	add.s32 	%r434, %r433, %r424;
	add.s32 	%r373, %r434, 1024;
	// begin inline asm
	@%p52 st.shared.b32 [ %r373 + 0 ], %r455;
	// end inline asm
	or.b32  	%r435, %r416, 288;
	shr.u32 	%r436, %r435, 3;
	and.b32  	%r437, %r436, 60;
	add.s32 	%r438, %r444, %r437;
	add.s32 	%r439, %r438, %r424;
	add.s32 	%r375, %r439, 1152;
	// begin inline asm
	@%p52 st.shared.b32 [ %r375 + 0 ], %r456;
	// end inline asm
	add.s32 	%r377, %r434, 1056;
	// begin inline asm
	@%p52 st.shared.b32 [ %r377 + 0 ], %r457;
	// end inline asm
	add.s32 	%r379, %r439, 1184;
	// begin inline asm
	@%p52 st.shared.b32 [ %r379 + 0 ], %r458;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r440, %r418, 3;
	add.s32 	%r441, %r444, %r440;
	shl.b32 	%r442, %r420, 2;
	add.s32 	%r443, %r441, %r442;
	ld.shared.u32 	%r382, [%r443];
	ld.shared.u32 	%r384, [%r443+16];
	ld.shared.u32 	%r386, [%r443+32];
	ld.shared.u32 	%r388, [%r443+48];
	ld.shared.u32 	%r390, [%r443+64];
	ld.shared.u32 	%r392, [%r443+80];
	ld.shared.u32 	%r394, [%r443+96];
	ld.shared.u32 	%r396, [%r443+112];
	// begin inline asm
	mov.u32 %r381, 0x0;
	@%p60 atom.global.gpu.acq_rel.add.f32 %r381, [ %rd139 + 0 ], %r382;
	// end inline asm
	// begin inline asm
	mov.u32 %r383, 0x0;
	@%p61 atom.global.gpu.acq_rel.add.f32 %r383, [ %rd140 + 0 ], %r384;
	// end inline asm
	// begin inline asm
	mov.u32 %r385, 0x0;
	@%p62 atom.global.gpu.acq_rel.add.f32 %r385, [ %rd141 + 0 ], %r386;
	// end inline asm
	// begin inline asm
	mov.u32 %r387, 0x0;
	@%p63 atom.global.gpu.acq_rel.add.f32 %r387, [ %rd142 + 0 ], %r388;
	// end inline asm
	// begin inline asm
	mov.u32 %r389, 0x0;
	@%p64 atom.global.gpu.acq_rel.add.f32 %r389, [ %rd143 + 0 ], %r390;
	// end inline asm
	// begin inline asm
	mov.u32 %r391, 0x0;
	@%p65 atom.global.gpu.acq_rel.add.f32 %r391, [ %rd144 + 0 ], %r392;
	// end inline asm
	// begin inline asm
	mov.u32 %r393, 0x0;
	@%p66 atom.global.gpu.acq_rel.add.f32 %r393, [ %rd145 + 0 ], %r394;
	// end inline asm
	// begin inline asm
	mov.u32 %r395, 0x0;
	@%p67 atom.global.gpu.acq_rel.add.f32 %r395, [ %rd146 + 0 ], %r396;
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 150                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x8f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
