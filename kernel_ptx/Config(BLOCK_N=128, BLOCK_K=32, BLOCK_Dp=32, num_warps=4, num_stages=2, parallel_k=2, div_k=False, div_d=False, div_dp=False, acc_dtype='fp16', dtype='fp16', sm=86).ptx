//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<202>;
	.reg .b16 	%rs<506>;
	.reg .b32 	%r<679>;
	.reg .b64 	%rd<300>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r107, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r105, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd89, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r108, %ctaid.x;
	.loc	1 50 36                         // implicit_gemm_kernel.py:50:36
	shr.u32 	%r109, %r108, 31;
	add.s32 	%r110, %r108, %r109;
	and.b32  	%r111, %r110, -2;
	sub.s32 	%r675, %r108, %r111;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r112, %r105, 127;
$L__tmp2:
	.loc	1 49 35                         // implicit_gemm_kernel.py:49:35
	shr.s32 	%r113, %r110, 1;
	shr.s32 	%r115, %r112, 31;
	shr.u32 	%r116, %r115, 25;
	add.s32 	%r117, %r112, %r116;
	shr.s32 	%r118, %r117, 7;
	ld.param.u32 	%r119, [implicit_conv3d_kernel_param_8];
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r2, %r113, %r118;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r120, %r2, %r118;
	sub.s32 	%r121, %r113, %r120;
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r122, %r119, %r119;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r3, %r122, %r119;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r4, %tid.x;
	and.b32  	%r5, %r4, 31;
	and.b32  	%r6, %r4, 16;
	and.b32  	%r7, %r4, 64;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r9, %r121, 7;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.lt.s32 	%p2, %r675, %r3;
	mov.u32 	%r674, global_smem;
	@%p2 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph9
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r106, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r104, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd88, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd87, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd90, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	and.b32  	%r8, %r4, 127;
	or.b32  	%r10, %r9, %r8;
	mul.lo.s32 	%r123, %r10, %r3;
	mul.wide.s32 	%rd91, %r123, 4;
	add.s64 	%rd1, %rd90, %rd91;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r126, %r4, 15;
	shr.u32 	%r678, %r4, 5;
	bfe.u32 	%r127, %r4, 5, 2;
	shl.b32 	%r128, %r8, 2;
	add.s32 	%r194, %r674, %r128;
	shl.b32 	%r130, %r127, 2;
	add.s32 	%r16, %r674, %r130;
	add.s32 	%r196, %r674, %r127;
	setp.lt.s32 	%p3, %r4, 4;
	add.s32 	%r197, %r674, %r4;
	and.b32  	%r131, %r4, 3;
	setp.eq.s32 	%p4, %r131, 0;
	and.pred  	%p9, %p3, %p4;
	add.s32 	%r19, %r106, 31;
	shr.s32 	%r132, %r19, 31;
	shr.u32 	%r133, %r132, 27;
	add.s32 	%r134, %r19, %r133;
	shr.s32 	%r135, %r134, 5;
	shl.b32 	%r136, %r2, 5;
	mul.lo.s32 	%r20, %r3, %r106;
	or.b32  	%r677, %r136, %r5;
	shr.u32 	%r137, %r7, 3;
	xor.b32  	%r138, %r137, %r5;
	shl.b32 	%r139, %r127, 5;
	or.b32  	%r140, %r138, %r139;
	shl.b32 	%r141, %r140, 1;
	add.s32 	%r22, %r674, %r141;
	or.b32  	%r142, %r126, 16;
	xor.b32  	%r143, %r142, %r6;
	xor.b32  	%r144, %r143, %r137;
	or.b32  	%r145, %r144, %r139;
	shl.b32 	%r146, %r145, 1;
	add.s32 	%r23, %r674, %r146;
	add.s32 	%r147, %r674, 8192;
	add.s32 	%r24, %r147, %r141;
	add.s32 	%r25, %r147, %r146;
	shl.b32 	%r148, %r4, 2;
	and.b32  	%r149, %r148, 8;
	and.b32  	%r150, %r148, 16;
	and.b32  	%r151, %r148, 24;
	shr.u32 	%r152, %r6, 1;
	xor.b32  	%r153, %r151, %r152;
	shr.u32 	%r154, %r4, 1;
	and.b32  	%r676, %r154, 48;
	or.b32  	%r155, %r676, %r126;
	shl.b32 	%r156, %r155, 5;
	or.b32  	%r157, %r156, %r153;
	shl.b32 	%r158, %r157, 1;
	add.s32 	%r245, %r674, %r158;
	or.b32  	%r159, %r149, 16;
	xor.b32  	%r160, %r159, %r150;
	xor.b32  	%r161, %r160, %r152;
	or.b32  	%r162, %r161, %r156;
	shl.b32 	%r163, %r162, 1;
	add.s32 	%r250, %r674, %r163;
	add.s32 	%r255, %r245, 4096;
	add.s32 	%r260, %r250, 4096;
	shl.b32 	%r164, %r5, 5;
	or.b32  	%r165, %r151, %r164;
	shl.b32 	%r166, %r165, 1;
	add.s32 	%r265, %r147, %r166;
	xor.b32  	%r167, %r165, 8;
	shl.b32 	%r168, %r167, 1;
	add.s32 	%r270, %r147, %r168;
	or.b32  	%r169, %r160, %r164;
	shl.b32 	%r170, %r169, 1;
	add.s32 	%r275, %r147, %r170;
	xor.b32  	%r171, %r165, 24;
	shl.b32 	%r172, %r171, 1;
	add.s32 	%r280, %r147, %r172;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	cvt.u64.u32 	%rd2, %r5;
	cvt.s64.s32 	%rd3, %r106;
	cvt.u64.u32 	%rd4, %r135;
	mad.lo.s32 	%r173, %r675, %r106, %r127;
	cvt.u64.u32 	%rd289, %r173;
	shl.b32 	%r174, %r106, 1;
	cvt.u64.u32 	%rd6, %r174;
	add.s32 	%r175, %r173, 28;
	mad.lo.s32 	%r176, %r107, %r175, %r136;
	cvt.u64.u32 	%rd288, %r176;
	mul.lo.s32 	%r177, %r107, %r106;
	shl.b32 	%r178, %r177, 1;
	cvt.u64.u32 	%rd8, %r178;
	shl.b32 	%r179, %r107, 5;
	cvt.u64.u32 	%rd9, %r179;
	add.s32 	%r180, %r173, 24;
	mad.lo.s32 	%r181, %r107, %r180, %r136;
	cvt.u64.u32 	%rd287, %r181;
	add.s32 	%r182, %r173, 20;
	mad.lo.s32 	%r183, %r107, %r182, %r136;
	cvt.u64.u32 	%rd286, %r183;
	add.s32 	%r184, %r173, 16;
	mad.lo.s32 	%r185, %r107, %r184, %r136;
	cvt.u64.u32 	%rd285, %r185;
	add.s32 	%r186, %r173, 12;
	mad.lo.s32 	%r187, %r107, %r186, %r136;
	cvt.u64.u32 	%rd284, %r187;
	add.s32 	%r188, %r173, 8;
	mad.lo.s32 	%r189, %r107, %r188, %r136;
	cvt.u64.u32 	%rd283, %r189;
	add.s32 	%r190, %r173, 4;
	mad.lo.s32 	%r191, %r107, %r190, %r136;
	cvt.u64.u32 	%rd282, %r191;
	mad.lo.s32 	%r192, %r107, %r173, %r136;
	cvt.u64.u32 	%rd281, %r192;
	mov.b16 	%rs442, 0x0000;
	setp.eq.s32 	%p7, %r5, 0;
	setp.lt.s32 	%p5, %r10, %r105;
	mov.u16 	%rs443, %rs442;
	mov.u16 	%rs444, %rs442;
	mov.u16 	%rs445, %rs442;
	mov.u16 	%rs446, %rs442;
	mov.u16 	%rs447, %rs442;
	mov.u16 	%rs448, %rs442;
	mov.u16 	%rs449, %rs442;
	mov.u16 	%rs450, %rs442;
	mov.u16 	%rs451, %rs442;
	mov.u16 	%rs452, %rs442;
	mov.u16 	%rs453, %rs442;
	mov.u16 	%rs454, %rs442;
	mov.u16 	%rs455, %rs442;
	mov.u16 	%rs456, %rs442;
	mov.u16 	%rs457, %rs442;
	mov.u16 	%rs458, %rs442;
	mov.u16 	%rs459, %rs442;
	mov.u16 	%rs460, %rs442;
	mov.u16 	%rs461, %rs442;
	mov.u16 	%rs462, %rs442;
	mov.u16 	%rs463, %rs442;
	mov.u16 	%rs464, %rs442;
	mov.u16 	%rs465, %rs442;
	mov.u16 	%rs466, %rs442;
	mov.u16 	%rs467, %rs442;
	mov.u16 	%rs468, %rs442;
	mov.u16 	%rs469, %rs442;
	mov.u16 	%rs470, %rs442;
	mov.u16 	%rs471, %rs442;
	mov.u16 	%rs472, %rs442;
	mov.u16 	%rs473, %rs442;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %.loopexit
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s32 	%r675, %r675, 2;
	add.s64 	%rd289, %rd289, %rd6;
	add.s64 	%rd288, %rd288, %rd8;
	add.s64 	%rd287, %rd287, %rd8;
	add.s64 	%rd286, %rd286, %rd8;
	add.s64 	%rd285, %rd285, %rd8;
	add.s64 	%rd284, %rd284, %rd8;
	add.s64 	%rd283, %rd283, %rd8;
	add.s64 	%rd282, %rd282, %rd8;
	add.s64 	%rd281, %rd281, %rd8;
	setp.lt.s32 	%p104, %r675, %r3;
	@%p104 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_8;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	mul.wide.s32 	%rd93, %r675, 4;
	add.s64 	%rd92, %rd1, %rd93;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r195, 0xffffffffffffffff;
	@%p5 ld.global.b32 { %r195 }, [ %rd92 + 0 ];
	// end inline asm
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	bar.sync 	0;
	mov.pred 	%p6, -1;
	// begin inline asm
	@%p6 st.shared.b32 [ %r194 + 0 ], %r195;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r36, [%r16];
	ld.shared.u32 	%r37, [%r16+16];
	ld.shared.u32 	%r38, [%r16+32];
	ld.shared.u32 	%r39, [%r16+48];
	ld.shared.u32 	%r40, [%r16+64];
	ld.shared.u32 	%r41, [%r16+80];
	ld.shared.u32 	%r42, [%r16+96];
	ld.shared.u32 	%r43, [%r16+112];
	ld.shared.u32 	%r44, [%r16+128];
	ld.shared.u32 	%r45, [%r16+144];
	ld.shared.u32 	%r46, [%r16+160];
	ld.shared.u32 	%r47, [%r16+176];
	ld.shared.u32 	%r48, [%r16+192];
	ld.shared.u32 	%r49, [%r16+208];
	ld.shared.u32 	%r50, [%r16+224];
	ld.shared.u32 	%r51, [%r16+240];
	ld.shared.u32 	%r52, [%r16+256];
	ld.shared.u32 	%r53, [%r16+272];
	ld.shared.u32 	%r54, [%r16+288];
	ld.shared.u32 	%r55, [%r16+304];
	ld.shared.u32 	%r56, [%r16+320];
	ld.shared.u32 	%r57, [%r16+336];
	ld.shared.u32 	%r58, [%r16+352];
	ld.shared.u32 	%r59, [%r16+368];
	ld.shared.u32 	%r60, [%r16+384];
	ld.shared.u32 	%r61, [%r16+400];
	ld.shared.u32 	%r62, [%r16+416];
	ld.shared.u32 	%r63, [%r16+432];
	ld.shared.u32 	%r64, [%r16+448];
	ld.shared.u32 	%r65, [%r16+464];
	ld.shared.u32 	%r66, [%r16+480];
	ld.shared.u32 	%r67, [%r16+496];
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p10, %r195, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p11, %r195, %r104;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p12, %p10, %p11;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	bar.sync 	0;
	selp.u32 	%r199, 1, 0, %p12;
	mov.b32 	%r200, -1;
	redux.sync.or.b32 %r201, %r199, %r200;
	cvt.u16.u32 	%rs198, %r201;
	and.b16  	%rs195, %rs198, 1;
	// begin inline asm
	@%p7 st.shared.b8 [ %r196 + 0 ], %rs195;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p3 ld.shared.b8 %rs196, [ %r197 + 0 ];
	// end inline asm
	cvt.u32.u16 	%r202, %rs196;
	and.b16  	%rs199, %rs196, 1;
	setp.eq.b16 	%p13, %rs199, 1;
	and.b32  	%r203, %r202, 1;
	shfl.sync.bfly.b32	%r204, %r203, 2, 31, -1;
	and.b32  	%r205, %r204, 1;
	setp.eq.b32 	%p14, %r205, 1;
$L__tmp3:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p15, %p13, %p14;
$L__tmp4:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r206, 1, 0, %p15;
	shfl.sync.bfly.b32	%r207, %r206, 1, 31, -1;
	and.b32  	%r208, %r207, 1;
	setp.eq.b32 	%p16, %r208, 1;
$L__tmp5:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p17, %p15, %p16;
$L__tmp6:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u16 	%rs197, 1, 0, %p17;
	// begin inline asm
	@%p9 st.shared.b8 [ %r197 + 0 ], %rs197;
	// end inline asm
	bar.sync 	0;
	ld.shared.u8 	%rs200, [global_smem];
	and.b16  	%rs201, %rs200, 1;
	setp.eq.b16 	%p18, %rs201, 1;
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p19, %p18;
	@%p19 bra 	$L__BB0_7;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.lt.s32 	%p20, %r19, 32;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p20 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 0                           // implicit_gemm_kernel.py:0:0
	mul.lo.s32 	%r68, %r36, %r106;
	mul.lo.s32 	%r69, %r37, %r106;
	mul.lo.s32 	%r70, %r38, %r106;
	mul.lo.s32 	%r71, %r39, %r106;
	mul.lo.s32 	%r72, %r40, %r106;
	mul.lo.s32 	%r73, %r41, %r106;
	mul.lo.s32 	%r74, %r42, %r106;
	mul.lo.s32 	%r75, %r43, %r106;
	mul.lo.s32 	%r76, %r44, %r106;
	mul.lo.s32 	%r77, %r45, %r106;
	mul.lo.s32 	%r78, %r46, %r106;
	mul.lo.s32 	%r79, %r47, %r106;
	mul.lo.s32 	%r80, %r48, %r106;
	mul.lo.s32 	%r81, %r49, %r106;
	mul.lo.s32 	%r82, %r50, %r106;
	mul.lo.s32 	%r83, %r51, %r106;
	mul.lo.s32 	%r84, %r52, %r106;
	mul.lo.s32 	%r85, %r53, %r106;
	mul.lo.s32 	%r86, %r54, %r106;
	mul.lo.s32 	%r87, %r55, %r106;
	mul.lo.s32 	%r88, %r56, %r106;
	mul.lo.s32 	%r89, %r57, %r106;
	mul.lo.s32 	%r90, %r58, %r106;
	mul.lo.s32 	%r91, %r59, %r106;
	mul.lo.s32 	%r92, %r60, %r106;
	mul.lo.s32 	%r93, %r61, %r106;
	mul.lo.s32 	%r94, %r62, %r106;
	mul.lo.s32 	%r95, %r63, %r106;
	mul.lo.s32 	%r96, %r64, %r106;
	mul.lo.s32 	%r97, %r65, %r106;
	mul.lo.s32 	%r98, %r66, %r106;
	mul.lo.s32 	%r99, %r67, %r106;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s32 	%r209, %r5, %r99;
	cvt.u64.u32 	%rd26, %r209;
	add.s32 	%r210, %r5, %r98;
	cvt.u64.u32 	%rd27, %r210;
	add.s32 	%r211, %r5, %r97;
	cvt.u64.u32 	%rd28, %r211;
	add.s32 	%r212, %r5, %r96;
	cvt.u64.u32 	%rd29, %r212;
	add.s32 	%r213, %r5, %r95;
	cvt.u64.u32 	%rd30, %r213;
	add.s32 	%r214, %r5, %r94;
	cvt.u64.u32 	%rd31, %r214;
	add.s32 	%r215, %r5, %r93;
	cvt.u64.u32 	%rd32, %r215;
	add.s32 	%r216, %r5, %r92;
	cvt.u64.u32 	%rd33, %r216;
	add.s32 	%r217, %r5, %r91;
	cvt.u64.u32 	%rd34, %r217;
	add.s32 	%r218, %r5, %r90;
	cvt.u64.u32 	%rd35, %r218;
	add.s32 	%r219, %r5, %r89;
	cvt.u64.u32 	%rd36, %r219;
	add.s32 	%r220, %r5, %r88;
	cvt.u64.u32 	%rd37, %r220;
	add.s32 	%r221, %r5, %r87;
	cvt.u64.u32 	%rd38, %r221;
	add.s32 	%r222, %r5, %r86;
	cvt.u64.u32 	%rd39, %r222;
	add.s32 	%r223, %r5, %r85;
	cvt.u64.u32 	%rd40, %r223;
	add.s32 	%r224, %r5, %r84;
	cvt.u64.u32 	%rd41, %r224;
	add.s32 	%r225, %r5, %r83;
	cvt.u64.u32 	%rd42, %r225;
	add.s32 	%r226, %r5, %r82;
	cvt.u64.u32 	%rd43, %r226;
	add.s32 	%r227, %r5, %r81;
	cvt.u64.u32 	%rd44, %r227;
	add.s32 	%r228, %r5, %r80;
	cvt.u64.u32 	%rd45, %r228;
	add.s32 	%r229, %r5, %r79;
	cvt.u64.u32 	%rd46, %r229;
	add.s32 	%r230, %r5, %r78;
	cvt.u64.u32 	%rd47, %r230;
	add.s32 	%r231, %r5, %r77;
	cvt.u64.u32 	%rd48, %r231;
	add.s32 	%r232, %r5, %r76;
	cvt.u64.u32 	%rd49, %r232;
	add.s32 	%r233, %r5, %r75;
	cvt.u64.u32 	%rd50, %r233;
	add.s32 	%r234, %r5, %r74;
	cvt.u64.u32 	%rd51, %r234;
	add.s32 	%r235, %r5, %r73;
	cvt.u64.u32 	%rd52, %r235;
	add.s32 	%r236, %r5, %r72;
	cvt.u64.u32 	%rd53, %r236;
	add.s32 	%r237, %r5, %r71;
	cvt.u64.u32 	%rd54, %r237;
	add.s32 	%r238, %r5, %r70;
	cvt.u64.u32 	%rd55, %r238;
	add.s32 	%r239, %r5, %r69;
	cvt.u64.u32 	%rd56, %r239;
	add.s32 	%r240, %r5, %r68;
	cvt.u64.u32 	%rd57, %r240;
	mov.b64 	%rd298, 0;
	mov.u64 	%rd290, %rd281;
	mov.u64 	%rd291, %rd282;
	mov.u64 	%rd292, %rd283;
	mov.u64 	%rd293, %rd284;
	mov.u64 	%rd294, %rd285;
	mov.u64 	%rd295, %rd286;
	mov.u64 	%rd296, %rd287;
	mov.u64 	%rd297, %rd288;
	mov.u64 	%rd299, %rd4;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.loc	1 70 43                         // implicit_gemm_kernel.py:70:43
	setp.ne.s32 	%p61, %r67, -1;
	setp.ne.s32 	%p62, %r66, -1;
	setp.ne.s32 	%p63, %r65, -1;
	setp.ne.s32 	%p64, %r64, -1;
	setp.ne.s32 	%p65, %r63, -1;
	setp.ne.s32 	%p66, %r62, -1;
	setp.ne.s32 	%p67, %r61, -1;
	setp.ne.s32 	%p68, %r60, -1;
	setp.ne.s32 	%p69, %r59, -1;
	setp.ne.s32 	%p70, %r58, -1;
	setp.ne.s32 	%p71, %r57, -1;
	setp.ne.s32 	%p72, %r56, -1;
	setp.ne.s32 	%p73, %r55, -1;
	setp.ne.s32 	%p74, %r54, -1;
	setp.ne.s32 	%p75, %r53, -1;
	setp.ne.s32 	%p76, %r52, -1;
	setp.ne.s32 	%p77, %r51, -1;
	setp.ne.s32 	%p78, %r50, -1;
	setp.ne.s32 	%p79, %r49, -1;
	setp.ne.s32 	%p80, %r48, -1;
	setp.ne.s32 	%p81, %r47, -1;
	setp.ne.s32 	%p82, %r46, -1;
	setp.ne.s32 	%p83, %r45, -1;
	setp.ne.s32 	%p84, %r44, -1;
	setp.ne.s32 	%p85, %r43, -1;
	setp.ne.s32 	%p86, %r42, -1;
	setp.ne.s32 	%p87, %r41, -1;
	setp.ne.s32 	%p88, %r40, -1;
	setp.ne.s32 	%p89, %r39, -1;
	setp.ne.s32 	%p90, %r38, -1;
	setp.ne.s32 	%p91, %r37, -1;
	setp.ne.s32 	%p92, %r36, -1;
	setp.lt.s32 	%p93, %r677, %r107;
	.loc	1 69 89                         // implicit_gemm_kernel.py:69:89
	add.s64 	%rd135, %rd57, %rd298;
	add.s64 	%rd136, %rd56, %rd298;
	add.s64 	%rd137, %rd55, %rd298;
	add.s64 	%rd138, %rd54, %rd298;
	add.s64 	%rd139, %rd53, %rd298;
	add.s64 	%rd140, %rd52, %rd298;
	add.s64 	%rd141, %rd51, %rd298;
	add.s64 	%rd142, %rd50, %rd298;
	add.s64 	%rd143, %rd49, %rd298;
	add.s64 	%rd144, %rd48, %rd298;
	add.s64 	%rd145, %rd47, %rd298;
	add.s64 	%rd146, %rd46, %rd298;
	add.s64 	%rd147, %rd45, %rd298;
	add.s64 	%rd148, %rd44, %rd298;
	add.s64 	%rd149, %rd43, %rd298;
	add.s64 	%rd150, %rd42, %rd298;
	add.s64 	%rd151, %rd41, %rd298;
	add.s64 	%rd152, %rd40, %rd298;
	add.s64 	%rd153, %rd39, %rd298;
	add.s64 	%rd154, %rd38, %rd298;
	add.s64 	%rd155, %rd37, %rd298;
	add.s64 	%rd156, %rd36, %rd298;
	add.s64 	%rd157, %rd35, %rd298;
	add.s64 	%rd158, %rd34, %rd298;
	add.s64 	%rd159, %rd33, %rd298;
	add.s64 	%rd160, %rd32, %rd298;
	add.s64 	%rd161, %rd31, %rd298;
	add.s64 	%rd162, %rd30, %rd298;
	add.s64 	%rd163, %rd29, %rd298;
	add.s64 	%rd164, %rd28, %rd298;
	add.s64 	%rd165, %rd27, %rd298;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd166, %rd26, %rd298;
	cvt.u32.u64 	%r441, %rd135;
	mul.wide.s32 	%rd167, %r441, 2;
	add.s64 	%rd95, %rd87, %rd167;
	cvt.u32.u64 	%r442, %rd136;
	mul.wide.s32 	%rd168, %r442, 2;
	add.s64 	%rd96, %rd87, %rd168;
	cvt.u32.u64 	%r443, %rd137;
	mul.wide.s32 	%rd169, %r443, 2;
	add.s64 	%rd97, %rd87, %rd169;
	cvt.u32.u64 	%r444, %rd138;
	mul.wide.s32 	%rd170, %r444, 2;
	add.s64 	%rd98, %rd87, %rd170;
	cvt.u32.u64 	%r445, %rd139;
	mul.wide.s32 	%rd171, %r445, 2;
	add.s64 	%rd99, %rd87, %rd171;
	cvt.u32.u64 	%r446, %rd140;
	mul.wide.s32 	%rd172, %r446, 2;
	add.s64 	%rd100, %rd87, %rd172;
	cvt.u32.u64 	%r447, %rd141;
	mul.wide.s32 	%rd173, %r447, 2;
	add.s64 	%rd101, %rd87, %rd173;
	cvt.u32.u64 	%r448, %rd142;
	mul.wide.s32 	%rd174, %r448, 2;
	add.s64 	%rd102, %rd87, %rd174;
	cvt.u32.u64 	%r449, %rd143;
	mul.wide.s32 	%rd175, %r449, 2;
	add.s64 	%rd103, %rd87, %rd175;
	cvt.u32.u64 	%r450, %rd144;
	mul.wide.s32 	%rd176, %r450, 2;
	add.s64 	%rd104, %rd87, %rd176;
	cvt.u32.u64 	%r451, %rd145;
	mul.wide.s32 	%rd177, %r451, 2;
	add.s64 	%rd105, %rd87, %rd177;
	cvt.u32.u64 	%r452, %rd146;
	mul.wide.s32 	%rd178, %r452, 2;
	add.s64 	%rd106, %rd87, %rd178;
	cvt.u32.u64 	%r453, %rd147;
	mul.wide.s32 	%rd179, %r453, 2;
	add.s64 	%rd107, %rd87, %rd179;
	cvt.u32.u64 	%r454, %rd148;
	mul.wide.s32 	%rd180, %r454, 2;
	add.s64 	%rd108, %rd87, %rd180;
	cvt.u32.u64 	%r455, %rd149;
	mul.wide.s32 	%rd181, %r455, 2;
	add.s64 	%rd109, %rd87, %rd181;
	cvt.u32.u64 	%r456, %rd150;
	mul.wide.s32 	%rd182, %r456, 2;
	add.s64 	%rd110, %rd87, %rd182;
	cvt.u32.u64 	%r457, %rd151;
	mul.wide.s32 	%rd183, %r457, 2;
	add.s64 	%rd111, %rd87, %rd183;
	cvt.u32.u64 	%r458, %rd152;
	mul.wide.s32 	%rd184, %r458, 2;
	add.s64 	%rd112, %rd87, %rd184;
	cvt.u32.u64 	%r459, %rd153;
	mul.wide.s32 	%rd185, %r459, 2;
	add.s64 	%rd113, %rd87, %rd185;
	cvt.u32.u64 	%r460, %rd154;
	mul.wide.s32 	%rd186, %r460, 2;
	add.s64 	%rd114, %rd87, %rd186;
	cvt.u32.u64 	%r461, %rd155;
	mul.wide.s32 	%rd187, %r461, 2;
	add.s64 	%rd115, %rd87, %rd187;
	cvt.u32.u64 	%r462, %rd156;
	mul.wide.s32 	%rd188, %r462, 2;
	add.s64 	%rd116, %rd87, %rd188;
	cvt.u32.u64 	%r463, %rd157;
	mul.wide.s32 	%rd189, %r463, 2;
	add.s64 	%rd117, %rd87, %rd189;
	cvt.u32.u64 	%r464, %rd158;
	mul.wide.s32 	%rd190, %r464, 2;
	add.s64 	%rd118, %rd87, %rd190;
	cvt.u32.u64 	%r465, %rd159;
	mul.wide.s32 	%rd191, %r465, 2;
	add.s64 	%rd119, %rd87, %rd191;
	cvt.u32.u64 	%r466, %rd160;
	mul.wide.s32 	%rd192, %r466, 2;
	add.s64 	%rd120, %rd87, %rd192;
	cvt.u32.u64 	%r467, %rd161;
	mul.wide.s32 	%rd193, %r467, 2;
	add.s64 	%rd121, %rd87, %rd193;
	cvt.u32.u64 	%r468, %rd162;
	mul.wide.s32 	%rd194, %r468, 2;
	add.s64 	%rd122, %rd87, %rd194;
	cvt.u32.u64 	%r469, %rd163;
	mul.wide.s32 	%rd195, %r469, 2;
	add.s64 	%rd123, %rd87, %rd195;
	cvt.u32.u64 	%r470, %rd164;
	mul.wide.s32 	%rd196, %r470, 2;
	add.s64 	%rd124, %rd87, %rd196;
	cvt.u32.u64 	%r471, %rd165;
	mul.wide.s32 	%rd197, %r471, 2;
	add.s64 	%rd125, %rd87, %rd197;
	cvt.u32.u64 	%r472, %rd166;
	mul.wide.s32 	%rd198, %r472, 2;
	add.s64 	%rd126, %rd87, %rd198;
	.loc	1 70 98                         // implicit_gemm_kernel.py:70:98
	add.s64 	%rd199, %rd2, %rd298;
	setp.lt.s64 	%p94, %rd199, %rd3;
	.loc	1 70 50                         // implicit_gemm_kernel.py:70:50
	and.pred  	%p21, %p92, %p94;
	and.pred  	%p22, %p91, %p94;
	and.pred  	%p23, %p90, %p94;
	and.pred  	%p24, %p89, %p94;
	and.pred  	%p25, %p88, %p94;
	and.pred  	%p26, %p87, %p94;
	and.pred  	%p27, %p86, %p94;
	and.pred  	%p28, %p85, %p94;
	and.pred  	%p29, %p84, %p94;
	and.pred  	%p30, %p83, %p94;
	and.pred  	%p31, %p82, %p94;
	and.pred  	%p32, %p81, %p94;
	and.pred  	%p33, %p80, %p94;
	and.pred  	%p34, %p79, %p94;
	and.pred  	%p35, %p78, %p94;
	and.pred  	%p36, %p77, %p94;
	and.pred  	%p37, %p76, %p94;
	and.pred  	%p38, %p75, %p94;
	and.pred  	%p39, %p74, %p94;
	and.pred  	%p40, %p73, %p94;
	and.pred  	%p41, %p72, %p94;
	and.pred  	%p42, %p71, %p94;
	and.pred  	%p43, %p70, %p94;
	and.pred  	%p44, %p69, %p94;
	and.pred  	%p45, %p68, %p94;
	and.pred  	%p46, %p67, %p94;
	and.pred  	%p47, %p66, %p94;
	and.pred  	%p48, %p65, %p94;
	and.pred  	%p49, %p64, %p94;
	and.pred  	%p50, %p63, %p94;
	and.pred  	%p51, %p62, %p94;
	and.pred  	%p52, %p61, %p94;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s64 	%rd200, %rd289, %rd298;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	add.s64 	%rd201, %rd2, %rd290;
	add.s64 	%rd202, %rd2, %rd291;
	add.s64 	%rd203, %rd2, %rd292;
	add.s64 	%rd204, %rd2, %rd293;
	add.s64 	%rd205, %rd2, %rd294;
	add.s64 	%rd206, %rd2, %rd295;
	add.s64 	%rd207, %rd2, %rd296;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s64 	%rd208, %rd2, %rd297;
	cvt.u32.u64 	%r473, %rd201;
	mul.wide.s32 	%rd209, %r473, 2;
	add.s64 	%rd127, %rd88, %rd209;
	cvt.u32.u64 	%r474, %rd202;
	mul.wide.s32 	%rd210, %r474, 2;
	add.s64 	%rd128, %rd88, %rd210;
	cvt.u32.u64 	%r475, %rd203;
	mul.wide.s32 	%rd211, %r475, 2;
	add.s64 	%rd129, %rd88, %rd211;
	cvt.u32.u64 	%r476, %rd204;
	mul.wide.s32 	%rd212, %r476, 2;
	add.s64 	%rd130, %rd88, %rd212;
	cvt.u32.u64 	%r477, %rd205;
	mul.wide.s32 	%rd213, %r477, 2;
	add.s64 	%rd131, %rd88, %rd213;
	cvt.u32.u64 	%r478, %rd206;
	mul.wide.s32 	%rd214, %r478, 2;
	add.s64 	%rd132, %rd88, %rd214;
	cvt.u32.u64 	%r479, %rd207;
	mul.wide.s32 	%rd215, %r479, 2;
	add.s64 	%rd133, %rd88, %rd215;
	cvt.u32.u64 	%r480, %rd208;
	mul.wide.s32 	%rd216, %r480, 2;
	add.s64 	%rd134, %rd88, %rd216;
	cvt.u32.u64 	%r481, %rd200;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p95, %r481, %r20;
	add.s32 	%r482, %r481, 4;
	setp.lt.s32 	%p96, %r482, %r20;
	add.s32 	%r483, %r481, 8;
	setp.lt.s32 	%p97, %r483, %r20;
	add.s32 	%r484, %r481, 12;
	setp.lt.s32 	%p98, %r484, %r20;
	add.s32 	%r485, %r481, 16;
	setp.lt.s32 	%p99, %r485, %r20;
	add.s32 	%r486, %r481, 20;
	setp.lt.s32 	%p100, %r486, %r20;
	add.s32 	%r487, %r481, 24;
	setp.lt.s32 	%p101, %r487, %r20;
	add.s32 	%r488, %r481, 28;
	setp.lt.s32 	%p102, %r488, %r20;
	.loc	1 78 20                         // implicit_gemm_kernel.py:78:20
	and.pred  	%p53, %p93, %p95;
	and.pred  	%p54, %p93, %p96;
	and.pred  	%p55, %p93, %p97;
	and.pred  	%p56, %p93, %p98;
	and.pred  	%p57, %p93, %p99;
	and.pred  	%p58, %p93, %p100;
	and.pred  	%p59, %p93, %p101;
	and.pred  	%p60, %p93, %p102;
	mov.b16 	%rs203, 0;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	// begin inline asm
	mov.u16 %rs202, %rs203;
	@%p21 ld.global.b16 { %rs202 }, [ %rd95 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs204, %rs203;
	@%p22 ld.global.b16 { %rs204 }, [ %rd96 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs206, %rs203;
	@%p23 ld.global.b16 { %rs206 }, [ %rd97 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs208, %rs203;
	@%p24 ld.global.b16 { %rs208 }, [ %rd98 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs210, %rs203;
	@%p25 ld.global.b16 { %rs210 }, [ %rd99 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs212, %rs203;
	@%p26 ld.global.b16 { %rs212 }, [ %rd100 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs214, %rs203;
	@%p27 ld.global.b16 { %rs214 }, [ %rd101 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs216, %rs203;
	@%p28 ld.global.b16 { %rs216 }, [ %rd102 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs218, %rs203;
	@%p29 ld.global.b16 { %rs218 }, [ %rd103 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs220, %rs203;
	@%p30 ld.global.b16 { %rs220 }, [ %rd104 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs222, %rs203;
	@%p31 ld.global.b16 { %rs222 }, [ %rd105 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs224, %rs203;
	@%p32 ld.global.b16 { %rs224 }, [ %rd106 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs226, %rs203;
	@%p33 ld.global.b16 { %rs226 }, [ %rd107 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs228, %rs203;
	@%p34 ld.global.b16 { %rs228 }, [ %rd108 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs230, %rs203;
	@%p35 ld.global.b16 { %rs230 }, [ %rd109 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs232, %rs203;
	@%p36 ld.global.b16 { %rs232 }, [ %rd110 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs234, %rs203;
	@%p37 ld.global.b16 { %rs234 }, [ %rd111 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs236, %rs203;
	@%p38 ld.global.b16 { %rs236 }, [ %rd112 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs238, %rs203;
	@%p39 ld.global.b16 { %rs238 }, [ %rd113 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs240, %rs203;
	@%p40 ld.global.b16 { %rs240 }, [ %rd114 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs242, %rs203;
	@%p41 ld.global.b16 { %rs242 }, [ %rd115 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs244, %rs203;
	@%p42 ld.global.b16 { %rs244 }, [ %rd116 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs246, %rs203;
	@%p43 ld.global.b16 { %rs246 }, [ %rd117 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs248, %rs203;
	@%p44 ld.global.b16 { %rs248 }, [ %rd118 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs250, %rs203;
	@%p45 ld.global.b16 { %rs250 }, [ %rd119 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs252, %rs203;
	@%p46 ld.global.b16 { %rs252 }, [ %rd120 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs254, %rs203;
	@%p47 ld.global.b16 { %rs254 }, [ %rd121 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs256, %rs203;
	@%p48 ld.global.b16 { %rs256 }, [ %rd122 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs258, %rs203;
	@%p49 ld.global.b16 { %rs258 }, [ %rd123 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs260, %rs203;
	@%p50 ld.global.b16 { %rs260 }, [ %rd124 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs262, %rs203;
	@%p51 ld.global.b16 { %rs262 }, [ %rd125 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs264, %rs203;
	@%p52 ld.global.b16 { %rs264 }, [ %rd126 + 0 ];
	// end inline asm
	bar.sync 	0;
	st.shared.u16 	[%r22], %rs202;
	st.shared.u16 	[%r23+256], %rs204;
	st.shared.u16 	[%r22+512], %rs206;
	st.shared.u16 	[%r23+768], %rs208;
	st.shared.u16 	[%r22+1024], %rs210;
	st.shared.u16 	[%r23+1280], %rs212;
	st.shared.u16 	[%r22+1536], %rs214;
	st.shared.u16 	[%r23+1792], %rs216;
	st.shared.u16 	[%r22+2048], %rs218;
	st.shared.u16 	[%r23+2304], %rs220;
	st.shared.u16 	[%r22+2560], %rs222;
	st.shared.u16 	[%r23+2816], %rs224;
	st.shared.u16 	[%r22+3072], %rs226;
	st.shared.u16 	[%r23+3328], %rs228;
	st.shared.u16 	[%r22+3584], %rs230;
	st.shared.u16 	[%r23+3840], %rs232;
	st.shared.u16 	[%r22+4096], %rs234;
	st.shared.u16 	[%r23+4352], %rs236;
	st.shared.u16 	[%r22+4608], %rs238;
	st.shared.u16 	[%r23+4864], %rs240;
	st.shared.u16 	[%r22+5120], %rs242;
	st.shared.u16 	[%r23+5376], %rs244;
	st.shared.u16 	[%r22+5632], %rs246;
	st.shared.u16 	[%r23+5888], %rs248;
	st.shared.u16 	[%r22+6144], %rs250;
	st.shared.u16 	[%r23+6400], %rs252;
	st.shared.u16 	[%r22+6656], %rs254;
	st.shared.u16 	[%r23+6912], %rs256;
	st.shared.u16 	[%r22+7168], %rs258;
	st.shared.u16 	[%r23+7424], %rs260;
	st.shared.u16 	[%r22+7680], %rs262;
	st.shared.u16 	[%r23+7936], %rs264;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	// begin inline asm
	mov.u16 %rs266, %rs203;
	@%p53 ld.global.b16 { %rs266 }, [ %rd127 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs268, %rs203;
	@%p54 ld.global.b16 { %rs268 }, [ %rd128 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs270, %rs203;
	@%p55 ld.global.b16 { %rs270 }, [ %rd129 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs272, %rs203;
	@%p56 ld.global.b16 { %rs272 }, [ %rd130 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs274, %rs203;
	@%p57 ld.global.b16 { %rs274 }, [ %rd131 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs276, %rs203;
	@%p58 ld.global.b16 { %rs276 }, [ %rd132 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs278, %rs203;
	@%p59 ld.global.b16 { %rs278 }, [ %rd133 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs280, %rs203;
	@%p60 ld.global.b16 { %rs280 }, [ %rd134 + 0 ];
	// end inline asm
	st.shared.u16 	[%r24], %rs266;
	st.shared.u16 	[%r25+256], %rs268;
	st.shared.u16 	[%r24+512], %rs270;
	st.shared.u16 	[%r25+768], %rs272;
	st.shared.u16 	[%r24+1024], %rs274;
	st.shared.u16 	[%r25+1280], %rs276;
	st.shared.u16 	[%r24+1536], %rs278;
	st.shared.u16 	[%r25+1792], %rs280;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r285, %r286, %r287, %r288}, [%r245];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r365, %r366, %r367, %r368}, [%r250];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r325, %r326, %r327, %r328}, [%r255];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r405, %r406, %r407, %r408}, [%r260];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r289, %r290, %r369, %r370}, [%r265];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r299, %r300, %r379, %r380}, [%r270];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r309, %r310, %r389, %r390}, [%r275];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r319, %r320, %r399, %r400}, [%r280];
	// end inline asm
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	mov.b32 	%r361, {%rs442, %rs443};
	mov.b32 	%r362, {%rs444, %rs445};
	mov.b32 	%r371, {%rs446, %rs447};
	mov.b32 	%r372, {%rs448, %rs449};
	mov.b32 	%r381, {%rs450, %rs451};
	mov.b32 	%r382, {%rs452, %rs453};
	mov.b32 	%r391, {%rs454, %rs455};
	mov.b32 	%r392, {%rs456, %rs457};
	mov.b32 	%r401, {%rs458, %rs459};
	mov.b32 	%r402, {%rs460, %rs461};
	mov.b32 	%r411, {%rs462, %rs463};
	mov.b32 	%r412, {%rs464, %rs465};
	mov.b32 	%r421, {%rs466, %rs467};
	mov.b32 	%r422, {%rs468, %rs469};
	mov.b32 	%r431, {%rs470, %rs471};
	mov.b32 	%r432, {%rs472, %rs473};
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r361, %r362 }, { %r285, %r286, %r287, %r288 }, { %r289, %r290 }, { %r361, %r362 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r371, %r372 }, { %r285, %r286, %r287, %r288 }, { %r299, %r300 }, { %r371, %r372 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r381, %r382 }, { %r285, %r286, %r287, %r288 }, { %r309, %r310 }, { %r381, %r382 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r391, %r392 }, { %r285, %r286, %r287, %r288 }, { %r319, %r320 }, { %r391, %r392 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r401, %r402 }, { %r325, %r326, %r327, %r328 }, { %r289, %r290 }, { %r401, %r402 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r411, %r412 }, { %r325, %r326, %r327, %r328 }, { %r299, %r300 }, { %r411, %r412 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r421, %r422 }, { %r325, %r326, %r327, %r328 }, { %r309, %r310 }, { %r421, %r422 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r431, %r432 }, { %r325, %r326, %r327, %r328 }, { %r319, %r320 }, { %r431, %r432 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r361, %r362 }, { %r365, %r366, %r367, %r368 }, { %r369, %r370 }, { %r361, %r362 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r371, %r372 }, { %r365, %r366, %r367, %r368 }, { %r379, %r380 }, { %r371, %r372 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r381, %r382 }, { %r365, %r366, %r367, %r368 }, { %r389, %r390 }, { %r381, %r382 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r391, %r392 }, { %r365, %r366, %r367, %r368 }, { %r399, %r400 }, { %r391, %r392 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r401, %r402 }, { %r405, %r406, %r407, %r408 }, { %r369, %r370 }, { %r401, %r402 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r411, %r412 }, { %r405, %r406, %r407, %r408 }, { %r379, %r380 }, { %r411, %r412 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r421, %r422 }, { %r405, %r406, %r407, %r408 }, { %r389, %r390 }, { %r421, %r422 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r431, %r432 }, { %r405, %r406, %r407, %r408 }, { %r399, %r400 }, { %r431, %r432 };
	// end inline asm
	mov.b32 	{%rs442, %rs443}, %r361;
	mov.b32 	{%rs444, %rs445}, %r362;
	mov.b32 	{%rs446, %rs447}, %r371;
	mov.b32 	{%rs448, %rs449}, %r372;
	mov.b32 	{%rs450, %rs451}, %r381;
	mov.b32 	{%rs452, %rs453}, %r382;
	mov.b32 	{%rs454, %rs455}, %r391;
	mov.b32 	{%rs456, %rs457}, %r392;
	mov.b32 	{%rs458, %rs459}, %r401;
	mov.b32 	{%rs460, %rs461}, %r402;
	mov.b32 	{%rs462, %rs463}, %r411;
	mov.b32 	{%rs464, %rs465}, %r412;
	mov.b32 	{%rs466, %rs467}, %r421;
	mov.b32 	{%rs468, %rs469}, %r422;
	mov.b32 	{%rs470, %rs471}, %r431;
	mov.b32 	{%rs472, %rs473}, %r432;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd299, %rd299, -1;
	add.s64 	%rd298, %rd298, 32;
	add.s64 	%rd297, %rd297, %rd9;
	add.s64 	%rd296, %rd296, %rd9;
	add.s64 	%rd295, %rd295, %rd9;
	add.s64 	%rd294, %rd294, %rd9;
	add.s64 	%rd293, %rd293, %rd9;
	add.s64 	%rd292, %rd292, %rd9;
	add.s64 	%rd291, %rd291, %rd9;
	add.s64 	%rd290, %rd290, %rd9;
	setp.ne.s64 	%p103, %rd299, 0;
	@%p103 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge_crit_edge
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	shr.u32 	%r678, %r4, 5;
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r124, %r2, 5;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r677, %r124, %r5;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shr.u32 	%r125, %r4, 1;
	and.b32  	%r676, %r125, 48;
	mov.b16 	%rs442, 0;
	mov.u16 	%rs443, %rs442;
	mov.u16 	%rs444, %rs442;
	mov.u16 	%rs445, %rs442;
	mov.u16 	%rs446, %rs442;
	mov.u16 	%rs447, %rs442;
	mov.u16 	%rs448, %rs442;
	mov.u16 	%rs449, %rs442;
	mov.u16 	%rs450, %rs442;
	mov.u16 	%rs451, %rs442;
	mov.u16 	%rs452, %rs442;
	mov.u16 	%rs453, %rs442;
	mov.u16 	%rs454, %rs442;
	mov.u16 	%rs455, %rs442;
	mov.u16 	%rs456, %rs442;
	mov.u16 	%rs457, %rs442;
	mov.u16 	%rs458, %rs442;
	mov.u16 	%rs459, %rs442;
	mov.u16 	%rs460, %rs442;
	mov.u16 	%rs461, %rs442;
	mov.u16 	%rs462, %rs442;
	mov.u16 	%rs463, %rs442;
	mov.u16 	%rs464, %rs442;
	mov.u16 	%rs465, %rs442;
	mov.u16 	%rs466, %rs442;
	mov.u16 	%rs467, %rs442;
	mov.u16 	%rs468, %rs442;
	mov.u16 	%rs469, %rs442;
	mov.u16 	%rs470, %rs442;
	mov.u16 	%rs471, %rs442;
	mov.u16 	%rs472, %rs442;
	mov.u16 	%rs473, %rs442;
$L__BB0_8:                              // %._crit_edge
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	and.b32  	%r521, %r678, 1;
	shr.u32 	%r522, %r7, 5;
	or.b32  	%r523, %r521, %r522;
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r524, %r523, %r9;
	or.b32  	%r525, %r524, 4;
	or.b32  	%r526, %r524, 8;
	or.b32  	%r527, %r524, 12;
	or.b32  	%r528, %r524, 16;
	or.b32  	%r529, %r524, 20;
	or.b32  	%r530, %r524, 24;
	or.b32  	%r531, %r524, 28;
	or.b32  	%r532, %r524, 32;
	or.b32  	%r533, %r524, 36;
	or.b32  	%r534, %r524, 40;
	or.b32  	%r535, %r524, 44;
	or.b32  	%r536, %r524, 48;
	or.b32  	%r537, %r524, 52;
	or.b32  	%r538, %r524, 56;
	or.b32  	%r539, %r524, 60;
	or.b32  	%r540, %r524, 64;
	or.b32  	%r541, %r524, 68;
	or.b32  	%r542, %r524, 72;
	or.b32  	%r543, %r524, 76;
	or.b32  	%r544, %r524, 80;
	or.b32  	%r545, %r524, 84;
	or.b32  	%r546, %r524, 88;
	or.b32  	%r547, %r524, 92;
	or.b32  	%r548, %r524, 96;
	or.b32  	%r549, %r524, 100;
	or.b32  	%r550, %r524, 104;
	or.b32  	%r551, %r524, 108;
	or.b32  	%r552, %r524, 112;
	or.b32  	%r553, %r524, 116;
	or.b32  	%r554, %r524, 120;
	or.b32  	%r555, %r524, 124;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r556, %r524, %r107;
	shl.b32 	%r557, %r107, 2;
	add.s32 	%r558, %r556, %r557;
	add.s32 	%r559, %r558, %r557;
	add.s32 	%r560, %r559, %r557;
	add.s32 	%r561, %r560, %r557;
	add.s32 	%r562, %r561, %r557;
	add.s32 	%r563, %r562, %r557;
	add.s32 	%r564, %r563, %r557;
	add.s32 	%r565, %r564, %r557;
	add.s32 	%r566, %r565, %r557;
	add.s32 	%r567, %r566, %r557;
	add.s32 	%r568, %r567, %r557;
	add.s32 	%r569, %r568, %r557;
	add.s32 	%r570, %r569, %r557;
	add.s32 	%r571, %r570, %r557;
	add.s32 	%r572, %r571, %r557;
	add.s32 	%r573, %r572, %r557;
	add.s32 	%r574, %r573, %r557;
	add.s32 	%r575, %r574, %r557;
	add.s32 	%r576, %r575, %r557;
	add.s32 	%r577, %r576, %r557;
	add.s32 	%r578, %r577, %r557;
	add.s32 	%r579, %r578, %r557;
	add.s32 	%r580, %r579, %r557;
	add.s32 	%r581, %r580, %r557;
	add.s32 	%r582, %r581, %r557;
	add.s32 	%r583, %r582, %r557;
	add.s32 	%r584, %r583, %r557;
	add.s32 	%r585, %r584, %r557;
	add.s32 	%r586, %r585, %r557;
	add.s32 	%r587, %r586, %r557;
	add.s32 	%r588, %r587, %r557;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r589, %r677, %r556;
	add.s32 	%r590, %r677, %r558;
	add.s32 	%r591, %r677, %r559;
	add.s32 	%r592, %r677, %r560;
	add.s32 	%r593, %r677, %r561;
	add.s32 	%r594, %r677, %r562;
	add.s32 	%r595, %r677, %r563;
	add.s32 	%r596, %r677, %r564;
	add.s32 	%r597, %r677, %r565;
	add.s32 	%r598, %r677, %r566;
	add.s32 	%r599, %r677, %r567;
	add.s32 	%r600, %r677, %r568;
	add.s32 	%r601, %r677, %r569;
	add.s32 	%r602, %r677, %r570;
	add.s32 	%r603, %r677, %r571;
	add.s32 	%r604, %r677, %r572;
	add.s32 	%r605, %r677, %r573;
	add.s32 	%r606, %r677, %r574;
	add.s32 	%r607, %r677, %r575;
	add.s32 	%r608, %r677, %r576;
	add.s32 	%r609, %r677, %r577;
	add.s32 	%r610, %r677, %r578;
	add.s32 	%r611, %r677, %r579;
	add.s32 	%r612, %r677, %r580;
	add.s32 	%r613, %r677, %r581;
	add.s32 	%r614, %r677, %r582;
	add.s32 	%r615, %r677, %r583;
	add.s32 	%r616, %r677, %r584;
	add.s32 	%r617, %r677, %r585;
	add.s32 	%r618, %r677, %r586;
	add.s32 	%r619, %r677, %r587;
	add.s32 	%r620, %r677, %r588;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd249, %r589, 2;
	add.s64 	%rd217, %rd89, %rd249;
	mul.wide.s32 	%rd250, %r590, 2;
	add.s64 	%rd218, %rd89, %rd250;
	mul.wide.s32 	%rd251, %r591, 2;
	add.s64 	%rd219, %rd89, %rd251;
	mul.wide.s32 	%rd252, %r592, 2;
	add.s64 	%rd220, %rd89, %rd252;
	mul.wide.s32 	%rd253, %r593, 2;
	add.s64 	%rd221, %rd89, %rd253;
	mul.wide.s32 	%rd254, %r594, 2;
	add.s64 	%rd222, %rd89, %rd254;
	mul.wide.s32 	%rd255, %r595, 2;
	add.s64 	%rd223, %rd89, %rd255;
	mul.wide.s32 	%rd256, %r596, 2;
	add.s64 	%rd224, %rd89, %rd256;
	mul.wide.s32 	%rd257, %r597, 2;
	add.s64 	%rd225, %rd89, %rd257;
	mul.wide.s32 	%rd258, %r598, 2;
	add.s64 	%rd226, %rd89, %rd258;
	mul.wide.s32 	%rd259, %r599, 2;
	add.s64 	%rd227, %rd89, %rd259;
	mul.wide.s32 	%rd260, %r600, 2;
	add.s64 	%rd228, %rd89, %rd260;
	mul.wide.s32 	%rd261, %r601, 2;
	add.s64 	%rd229, %rd89, %rd261;
	mul.wide.s32 	%rd262, %r602, 2;
	add.s64 	%rd230, %rd89, %rd262;
	mul.wide.s32 	%rd263, %r603, 2;
	add.s64 	%rd231, %rd89, %rd263;
	mul.wide.s32 	%rd264, %r604, 2;
	add.s64 	%rd232, %rd89, %rd264;
	mul.wide.s32 	%rd265, %r605, 2;
	add.s64 	%rd233, %rd89, %rd265;
	mul.wide.s32 	%rd266, %r606, 2;
	add.s64 	%rd234, %rd89, %rd266;
	mul.wide.s32 	%rd267, %r607, 2;
	add.s64 	%rd235, %rd89, %rd267;
	mul.wide.s32 	%rd268, %r608, 2;
	add.s64 	%rd236, %rd89, %rd268;
	mul.wide.s32 	%rd269, %r609, 2;
	add.s64 	%rd237, %rd89, %rd269;
	mul.wide.s32 	%rd270, %r610, 2;
	add.s64 	%rd238, %rd89, %rd270;
	mul.wide.s32 	%rd271, %r611, 2;
	add.s64 	%rd239, %rd89, %rd271;
	mul.wide.s32 	%rd272, %r612, 2;
	add.s64 	%rd240, %rd89, %rd272;
	mul.wide.s32 	%rd273, %r613, 2;
	add.s64 	%rd241, %rd89, %rd273;
	mul.wide.s32 	%rd274, %r614, 2;
	add.s64 	%rd242, %rd89, %rd274;
	mul.wide.s32 	%rd275, %r615, 2;
	add.s64 	%rd243, %rd89, %rd275;
	mul.wide.s32 	%rd276, %r616, 2;
	add.s64 	%rd244, %rd89, %rd276;
	mul.wide.s32 	%rd277, %r617, 2;
	add.s64 	%rd245, %rd89, %rd277;
	mul.wide.s32 	%rd278, %r618, 2;
	add.s64 	%rd246, %rd89, %rd278;
	mul.wide.s32 	%rd279, %r619, 2;
	add.s64 	%rd247, %rd89, %rd279;
	mul.wide.s32 	%rd280, %r620, 2;
	add.s64 	%rd248, %rd89, %rd280;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p169, %r524, %r105;
	setp.lt.s32 	%p170, %r525, %r105;
	setp.lt.s32 	%p171, %r526, %r105;
	setp.lt.s32 	%p172, %r527, %r105;
	setp.lt.s32 	%p173, %r528, %r105;
	setp.lt.s32 	%p174, %r529, %r105;
	setp.lt.s32 	%p175, %r530, %r105;
	setp.lt.s32 	%p176, %r531, %r105;
	setp.lt.s32 	%p177, %r532, %r105;
	setp.lt.s32 	%p178, %r533, %r105;
	setp.lt.s32 	%p179, %r534, %r105;
	setp.lt.s32 	%p180, %r535, %r105;
	setp.lt.s32 	%p181, %r536, %r105;
	setp.lt.s32 	%p182, %r537, %r105;
	setp.lt.s32 	%p183, %r538, %r105;
	setp.lt.s32 	%p184, %r539, %r105;
	setp.lt.s32 	%p185, %r540, %r105;
	setp.lt.s32 	%p186, %r541, %r105;
	setp.lt.s32 	%p187, %r542, %r105;
	setp.lt.s32 	%p188, %r543, %r105;
	setp.lt.s32 	%p189, %r544, %r105;
	setp.lt.s32 	%p190, %r545, %r105;
	setp.lt.s32 	%p191, %r546, %r105;
	setp.lt.s32 	%p192, %r547, %r105;
	setp.lt.s32 	%p193, %r548, %r105;
	setp.lt.s32 	%p194, %r549, %r105;
	setp.lt.s32 	%p195, %r550, %r105;
	setp.lt.s32 	%p196, %r551, %r105;
	setp.lt.s32 	%p197, %r552, %r105;
	setp.lt.s32 	%p198, %r553, %r105;
	setp.lt.s32 	%p199, %r554, %r105;
	setp.lt.s32 	%p200, %r555, %r105;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p201, %r677, %r107;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p137, %p169, %p201;
	and.pred  	%p138, %p170, %p201;
	and.pred  	%p139, %p171, %p201;
	and.pred  	%p140, %p172, %p201;
	and.pred  	%p141, %p173, %p201;
	and.pred  	%p142, %p174, %p201;
	and.pred  	%p143, %p175, %p201;
	and.pred  	%p144, %p176, %p201;
	and.pred  	%p145, %p177, %p201;
	and.pred  	%p146, %p178, %p201;
	and.pred  	%p147, %p179, %p201;
	and.pred  	%p148, %p180, %p201;
	and.pred  	%p149, %p181, %p201;
	and.pred  	%p150, %p182, %p201;
	and.pred  	%p151, %p183, %p201;
	and.pred  	%p152, %p184, %p201;
	and.pred  	%p153, %p185, %p201;
	and.pred  	%p154, %p186, %p201;
	and.pred  	%p155, %p187, %p201;
	and.pred  	%p156, %p188, %p201;
	and.pred  	%p157, %p189, %p201;
	and.pred  	%p158, %p190, %p201;
	and.pred  	%p159, %p191, %p201;
	and.pred  	%p160, %p192, %p201;
	and.pred  	%p161, %p193, %p201;
	and.pred  	%p162, %p194, %p201;
	and.pred  	%p163, %p195, %p201;
	and.pred  	%p164, %p196, %p201;
	and.pred  	%p165, %p197, %p201;
	and.pred  	%p166, %p198, %p201;
	and.pred  	%p167, %p199, %p201;
	and.pred  	%p168, %p200, %p201;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	bar.sync 	0;
	shl.b32 	%r621, %r4, 7;
	and.b32  	%r622, %r621, 384;
	bfe.u32 	%r623, %r4, 2, 2;
	shr.u32 	%r624, %r6, 2;
	or.b32  	%r625, %r624, %r676;
	or.b32  	%r626, %r625, %r623;
	or.b32  	%r627, %r626, %r622;
	shl.b32 	%r628, %r4, 6;
	and.b32  	%r629, %r628, 1984;
	or.b32  	%r630, %r523, %r629;
	shr.u32 	%r631, %r622, 5;
	add.s32 	%r633, %r674, %r631;
	shl.b32 	%r634, %r627, 1;
	add.s32 	%r489, %r633, %r634;
	mov.pred 	%p105, -1;
	// begin inline asm
	@%p105 st.shared.b16 [ %r489 + 0 ], %rs442;
	// end inline asm
	or.b32  	%r635, %r627, 64;
	shr.u32 	%r636, %r635, 5;
	and.b32  	%r637, %r636, 33554430;
	add.s32 	%r638, %r674, %r637;
	add.s32 	%r639, %r638, %r634;
	add.s32 	%r490, %r639, 128;
	// begin inline asm
	@%p105 st.shared.b16 [ %r490 + 0 ], %rs443;
	// end inline asm
	add.s32 	%r491, %r489, 16;
	// begin inline asm
	@%p105 st.shared.b16 [ %r491 + 0 ], %rs444;
	// end inline asm
	add.s32 	%r492, %r639, 144;
	// begin inline asm
	@%p105 st.shared.b16 [ %r492 + 0 ], %rs445;
	// end inline asm
	or.b32  	%r640, %r627, 512;
	shr.u32 	%r641, %r640, 5;
	and.b32  	%r642, %r641, 33554430;
	add.s32 	%r643, %r674, %r642;
	add.s32 	%r644, %r643, %r634;
	add.s32 	%r493, %r644, 1024;
	// begin inline asm
	@%p105 st.shared.b16 [ %r493 + 0 ], %rs446;
	// end inline asm
	or.b32  	%r645, %r627, 576;
	shr.u32 	%r646, %r645, 5;
	and.b32  	%r647, %r646, 33554430;
	add.s32 	%r648, %r674, %r647;
	add.s32 	%r649, %r648, %r634;
	add.s32 	%r494, %r649, 1152;
	// begin inline asm
	@%p105 st.shared.b16 [ %r494 + 0 ], %rs447;
	// end inline asm
	add.s32 	%r495, %r644, 1040;
	// begin inline asm
	@%p105 st.shared.b16 [ %r495 + 0 ], %rs448;
	// end inline asm
	add.s32 	%r496, %r649, 1168;
	// begin inline asm
	@%p105 st.shared.b16 [ %r496 + 0 ], %rs449;
	// end inline asm
	or.b32  	%r650, %r627, 1024;
	shr.u32 	%r651, %r650, 5;
	and.b32  	%r652, %r651, 33554430;
	add.s32 	%r653, %r674, %r652;
	add.s32 	%r654, %r653, %r634;
	add.s32 	%r497, %r654, 2048;
	// begin inline asm
	@%p105 st.shared.b16 [ %r497 + 0 ], %rs450;
	// end inline asm
	or.b32  	%r655, %r627, 1088;
	shr.u32 	%r656, %r655, 5;
	and.b32  	%r657, %r656, 33554430;
	add.s32 	%r658, %r674, %r657;
	add.s32 	%r659, %r658, %r634;
	add.s32 	%r498, %r659, 2176;
	// begin inline asm
	@%p105 st.shared.b16 [ %r498 + 0 ], %rs451;
	// end inline asm
	add.s32 	%r499, %r654, 2064;
	// begin inline asm
	@%p105 st.shared.b16 [ %r499 + 0 ], %rs452;
	// end inline asm
	add.s32 	%r500, %r659, 2192;
	// begin inline asm
	@%p105 st.shared.b16 [ %r500 + 0 ], %rs453;
	// end inline asm
	or.b32  	%r660, %r627, 1536;
	shr.u32 	%r661, %r660, 5;
	and.b32  	%r662, %r661, 33554430;
	add.s32 	%r663, %r674, %r662;
	add.s32 	%r664, %r663, %r634;
	add.s32 	%r501, %r664, 3072;
	// begin inline asm
	@%p105 st.shared.b16 [ %r501 + 0 ], %rs454;
	// end inline asm
	or.b32  	%r665, %r627, 1600;
	shr.u32 	%r666, %r665, 5;
	and.b32  	%r667, %r666, 33554430;
	add.s32 	%r668, %r674, %r667;
	add.s32 	%r669, %r668, %r634;
	add.s32 	%r502, %r669, 3200;
	// begin inline asm
	@%p105 st.shared.b16 [ %r502 + 0 ], %rs455;
	// end inline asm
	add.s32 	%r503, %r664, 3088;
	// begin inline asm
	@%p105 st.shared.b16 [ %r503 + 0 ], %rs456;
	// end inline asm
	add.s32 	%r504, %r669, 3216;
	// begin inline asm
	@%p105 st.shared.b16 [ %r504 + 0 ], %rs457;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r670, %r629, 5;
	add.s32 	%r671, %r674, %r670;
	shl.b32 	%r672, %r630, 1;
	add.s32 	%r673, %r671, %r672;
	ld.shared.u16 	%rs315, [%r673];
	ld.shared.u16 	%rs317, [%r673+8];
	ld.shared.u16 	%rs319, [%r673+16];
	ld.shared.u16 	%rs321, [%r673+24];
	ld.shared.u16 	%rs323, [%r673+32];
	ld.shared.u16 	%rs325, [%r673+40];
	ld.shared.u16 	%rs327, [%r673+48];
	ld.shared.u16 	%rs329, [%r673+56];
	ld.shared.u16 	%rs331, [%r673+64];
	ld.shared.u16 	%rs333, [%r673+72];
	ld.shared.u16 	%rs335, [%r673+80];
	ld.shared.u16 	%rs337, [%r673+88];
	ld.shared.u16 	%rs339, [%r673+96];
	ld.shared.u16 	%rs341, [%r673+104];
	ld.shared.u16 	%rs343, [%r673+112];
	ld.shared.u16 	%rs345, [%r673+120];
	bar.sync 	0;
	// begin inline asm
	@%p105 st.shared.b16 [ %r489 + 0 ], %rs458;
	// end inline asm
	// begin inline asm
	@%p105 st.shared.b16 [ %r490 + 0 ], %rs459;
	// end inline asm
	// begin inline asm
	@%p105 st.shared.b16 [ %r491 + 0 ], %rs460;
	// end inline asm
	// begin inline asm
	@%p105 st.shared.b16 [ %r492 + 0 ], %rs461;
	// end inline asm
	// begin inline asm
	@%p105 st.shared.b16 [ %r493 + 0 ], %rs462;
	// end inline asm
	// begin inline asm
	@%p105 st.shared.b16 [ %r494 + 0 ], %rs463;
	// end inline asm
	// begin inline asm
	@%p105 st.shared.b16 [ %r495 + 0 ], %rs464;
	// end inline asm
	// begin inline asm
	@%p105 st.shared.b16 [ %r496 + 0 ], %rs465;
	// end inline asm
	// begin inline asm
	@%p105 st.shared.b16 [ %r497 + 0 ], %rs466;
	// end inline asm
	// begin inline asm
	@%p105 st.shared.b16 [ %r498 + 0 ], %rs467;
	// end inline asm
	// begin inline asm
	@%p105 st.shared.b16 [ %r499 + 0 ], %rs468;
	// end inline asm
	// begin inline asm
	@%p105 st.shared.b16 [ %r500 + 0 ], %rs469;
	// end inline asm
	// begin inline asm
	@%p105 st.shared.b16 [ %r501 + 0 ], %rs470;
	// end inline asm
	// begin inline asm
	@%p105 st.shared.b16 [ %r502 + 0 ], %rs471;
	// end inline asm
	// begin inline asm
	@%p105 st.shared.b16 [ %r503 + 0 ], %rs472;
	// end inline asm
	// begin inline asm
	@%p105 st.shared.b16 [ %r504 + 0 ], %rs473;
	// end inline asm
	bar.sync 	0;
	ld.shared.u16 	%rs347, [%r673];
	ld.shared.u16 	%rs349, [%r673+8];
	ld.shared.u16 	%rs351, [%r673+16];
	ld.shared.u16 	%rs353, [%r673+24];
	ld.shared.u16 	%rs355, [%r673+32];
	ld.shared.u16 	%rs357, [%r673+40];
	ld.shared.u16 	%rs359, [%r673+48];
	ld.shared.u16 	%rs361, [%r673+56];
	ld.shared.u16 	%rs363, [%r673+64];
	ld.shared.u16 	%rs365, [%r673+72];
	ld.shared.u16 	%rs367, [%r673+80];
	ld.shared.u16 	%rs369, [%r673+88];
	ld.shared.u16 	%rs371, [%r673+96];
	ld.shared.u16 	%rs373, [%r673+104];
	ld.shared.u16 	%rs375, [%r673+112];
	ld.shared.u16 	%rs377, [%r673+120];
	// begin inline asm
	mov.u16 %rs314, 0x0;
	@%p137 atom.global.gpu.acq_rel.add.noftz.f16 %rs314, [ %rd217 + 0 ], %rs315;
	// end inline asm
	// begin inline asm
	mov.u16 %rs316, 0x0;
	@%p138 atom.global.gpu.acq_rel.add.noftz.f16 %rs316, [ %rd218 + 0 ], %rs317;
	// end inline asm
	// begin inline asm
	mov.u16 %rs318, 0x0;
	@%p139 atom.global.gpu.acq_rel.add.noftz.f16 %rs318, [ %rd219 + 0 ], %rs319;
	// end inline asm
	// begin inline asm
	mov.u16 %rs320, 0x0;
	@%p140 atom.global.gpu.acq_rel.add.noftz.f16 %rs320, [ %rd220 + 0 ], %rs321;
	// end inline asm
	// begin inline asm
	mov.u16 %rs322, 0x0;
	@%p141 atom.global.gpu.acq_rel.add.noftz.f16 %rs322, [ %rd221 + 0 ], %rs323;
	// end inline asm
	// begin inline asm
	mov.u16 %rs324, 0x0;
	@%p142 atom.global.gpu.acq_rel.add.noftz.f16 %rs324, [ %rd222 + 0 ], %rs325;
	// end inline asm
	// begin inline asm
	mov.u16 %rs326, 0x0;
	@%p143 atom.global.gpu.acq_rel.add.noftz.f16 %rs326, [ %rd223 + 0 ], %rs327;
	// end inline asm
	// begin inline asm
	mov.u16 %rs328, 0x0;
	@%p144 atom.global.gpu.acq_rel.add.noftz.f16 %rs328, [ %rd224 + 0 ], %rs329;
	// end inline asm
	// begin inline asm
	mov.u16 %rs330, 0x0;
	@%p145 atom.global.gpu.acq_rel.add.noftz.f16 %rs330, [ %rd225 + 0 ], %rs331;
	// end inline asm
	// begin inline asm
	mov.u16 %rs332, 0x0;
	@%p146 atom.global.gpu.acq_rel.add.noftz.f16 %rs332, [ %rd226 + 0 ], %rs333;
	// end inline asm
	// begin inline asm
	mov.u16 %rs334, 0x0;
	@%p147 atom.global.gpu.acq_rel.add.noftz.f16 %rs334, [ %rd227 + 0 ], %rs335;
	// end inline asm
	// begin inline asm
	mov.u16 %rs336, 0x0;
	@%p148 atom.global.gpu.acq_rel.add.noftz.f16 %rs336, [ %rd228 + 0 ], %rs337;
	// end inline asm
	// begin inline asm
	mov.u16 %rs338, 0x0;
	@%p149 atom.global.gpu.acq_rel.add.noftz.f16 %rs338, [ %rd229 + 0 ], %rs339;
	// end inline asm
	// begin inline asm
	mov.u16 %rs340, 0x0;
	@%p150 atom.global.gpu.acq_rel.add.noftz.f16 %rs340, [ %rd230 + 0 ], %rs341;
	// end inline asm
	// begin inline asm
	mov.u16 %rs342, 0x0;
	@%p151 atom.global.gpu.acq_rel.add.noftz.f16 %rs342, [ %rd231 + 0 ], %rs343;
	// end inline asm
	// begin inline asm
	mov.u16 %rs344, 0x0;
	@%p152 atom.global.gpu.acq_rel.add.noftz.f16 %rs344, [ %rd232 + 0 ], %rs345;
	// end inline asm
	// begin inline asm
	mov.u16 %rs346, 0x0;
	@%p153 atom.global.gpu.acq_rel.add.noftz.f16 %rs346, [ %rd233 + 0 ], %rs347;
	// end inline asm
	// begin inline asm
	mov.u16 %rs348, 0x0;
	@%p154 atom.global.gpu.acq_rel.add.noftz.f16 %rs348, [ %rd234 + 0 ], %rs349;
	// end inline asm
	// begin inline asm
	mov.u16 %rs350, 0x0;
	@%p155 atom.global.gpu.acq_rel.add.noftz.f16 %rs350, [ %rd235 + 0 ], %rs351;
	// end inline asm
	// begin inline asm
	mov.u16 %rs352, 0x0;
	@%p156 atom.global.gpu.acq_rel.add.noftz.f16 %rs352, [ %rd236 + 0 ], %rs353;
	// end inline asm
	// begin inline asm
	mov.u16 %rs354, 0x0;
	@%p157 atom.global.gpu.acq_rel.add.noftz.f16 %rs354, [ %rd237 + 0 ], %rs355;
	// end inline asm
	// begin inline asm
	mov.u16 %rs356, 0x0;
	@%p158 atom.global.gpu.acq_rel.add.noftz.f16 %rs356, [ %rd238 + 0 ], %rs357;
	// end inline asm
	// begin inline asm
	mov.u16 %rs358, 0x0;
	@%p159 atom.global.gpu.acq_rel.add.noftz.f16 %rs358, [ %rd239 + 0 ], %rs359;
	// end inline asm
	// begin inline asm
	mov.u16 %rs360, 0x0;
	@%p160 atom.global.gpu.acq_rel.add.noftz.f16 %rs360, [ %rd240 + 0 ], %rs361;
	// end inline asm
	// begin inline asm
	mov.u16 %rs362, 0x0;
	@%p161 atom.global.gpu.acq_rel.add.noftz.f16 %rs362, [ %rd241 + 0 ], %rs363;
	// end inline asm
	// begin inline asm
	mov.u16 %rs364, 0x0;
	@%p162 atom.global.gpu.acq_rel.add.noftz.f16 %rs364, [ %rd242 + 0 ], %rs365;
	// end inline asm
	// begin inline asm
	mov.u16 %rs366, 0x0;
	@%p163 atom.global.gpu.acq_rel.add.noftz.f16 %rs366, [ %rd243 + 0 ], %rs367;
	// end inline asm
	// begin inline asm
	mov.u16 %rs368, 0x0;
	@%p164 atom.global.gpu.acq_rel.add.noftz.f16 %rs368, [ %rd244 + 0 ], %rs369;
	// end inline asm
	// begin inline asm
	mov.u16 %rs370, 0x0;
	@%p165 atom.global.gpu.acq_rel.add.noftz.f16 %rs370, [ %rd245 + 0 ], %rs371;
	// end inline asm
	// begin inline asm
	mov.u16 %rs372, 0x0;
	@%p166 atom.global.gpu.acq_rel.add.noftz.f16 %rs372, [ %rd246 + 0 ], %rs373;
	// end inline asm
	// begin inline asm
	mov.u16 %rs374, 0x0;
	@%p167 atom.global.gpu.acq_rel.add.noftz.f16 %rs374, [ %rd247 + 0 ], %rs375;
	// end inline asm
	// begin inline asm
	mov.u16 %rs376, 0x0;
	@%p168 atom.global.gpu.acq_rel.add.noftz.f16 %rs376, [ %rd248 + 0 ], %rs377;
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 174                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x98:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
