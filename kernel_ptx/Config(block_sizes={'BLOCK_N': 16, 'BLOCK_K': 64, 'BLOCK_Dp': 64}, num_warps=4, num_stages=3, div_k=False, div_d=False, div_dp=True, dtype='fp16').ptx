//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_89
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<97>;
	.reg .b16 	%rs<131>;
	.reg .b32 	%r<517>;
	.reg .b64 	%rd<154>;
	.loc	1 32 0                          // triton_spconv.py:32:0
$L__func_begin0:
	.loc	1 32 0                          // triton_spconv.py:32:0

// %bb.0:
	ld.param.u32 	%r110, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r108, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd54, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 47 24                         // triton_spconv.py:47:24
	mov.u32 	%r111, %ctaid.x;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r112, %r108, 15;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r113, %r112, 31;
	shr.u32 	%r114, %r113, 28;
	add.s32 	%r115, %r112, %r114;
	shr.s32 	%r116, %r115, 4;
$L__tmp2:
	.loc	1 51 20                         // triton_spconv.py:51:20
	div.s32 	%r1, %r111, %r116;
	.loc	1 50 18                         // triton_spconv.py:50:18
	mul.lo.s32 	%r118, %r1, %r116;
	sub.s32 	%r119, %r111, %r118;
	ld.param.u32 	%r120, [implicit_conv3d_kernel_param_8];
	.loc	1 53 19                         // triton_spconv.py:53:19
	mul.lo.s32 	%r121, %r120, %r120;
	.loc	1 53 23                         // triton_spconv.py:53:23
	mul.lo.s32 	%r2, %r121, %r120;
	.loc	1 56 38                         // triton_spconv.py:56:38
	mov.u32 	%r3, %tid.x;
	bfe.u32 	%r5, %r3, 6, 1;
	or.b32  	%r6, %r5, 2;
	or.b32  	%r7, %r5, 4;
	or.b32  	%r8, %r5, 6;
	or.b32  	%r9, %r5, 8;
	or.b32  	%r10, %r5, 10;
	or.b32  	%r11, %r5, 12;
	or.b32  	%r12, %r5, 14;
	.loc	1 56 57                         // triton_spconv.py:56:57
	shl.b32 	%r122, %r119, 4;
	.loc	1 56 49                         // triton_spconv.py:56:49
	or.b32  	%r14, %r122, %r5;
	or.b32  	%r15, %r122, %r6;
	or.b32  	%r16, %r122, %r7;
	or.b32  	%r17, %r122, %r8;
	or.b32  	%r18, %r122, %r9;
	or.b32  	%r19, %r122, %r10;
	or.b32  	%r20, %r122, %r11;
	or.b32  	%r21, %r122, %r12;
	.loc	1 58 19                         // triton_spconv.py:58:19
	setp.gt.s32 	%p3, %r2, 0;
	mov.u32 	%r503, global_smem;
	setp.lt.s32 	%p89, %r21, %r108;
	setp.lt.s32 	%p90, %r20, %r108;
	setp.lt.s32 	%p91, %r19, %r108;
	setp.lt.s32 	%p92, %r18, %r108;
	setp.lt.s32 	%p93, %r17, %r108;
	setp.lt.s32 	%p94, %r16, %r108;
	setp.lt.s32 	%p95, %r15, %r108;
	setp.lt.s32 	%p96, %r14, %r108;
	@%p3 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph41
	.loc	1 0 19                          // triton_spconv.py:0:19
	ld.param.u32 	%r109, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r107, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd53, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd52, [implicit_conv3d_kernel_param_1];
	ld.param.u64 	%rd51, [implicit_conv3d_kernel_param_0];
	.loc	1 56 0                          // triton_spconv.py:56:0
	and.b32  	%r4, %r3, 64;
	and.b32  	%r13, %r3, 15;
	or.b32  	%r22, %r122, %r13;
	.loc	1 56 68                         // triton_spconv.py:56:68
	mul.lo.s32 	%r123, %r22, %r2;
	.loc	1 56 24                         // triton_spconv.py:56:24
	mul.wide.s32 	%rd56, %r123, 4;
	add.s64 	%rd151, %rd52, %rd56;
	.loc	1 56 68                         // triton_spconv.py:56:68
	mul.lo.s32 	%r124, %r21, %r2;
	.loc	1 56 24                         // triton_spconv.py:56:24
	mul.wide.s32 	%rd57, %r124, 4;
	add.s64 	%rd143, %rd52, %rd57;
	.loc	1 56 68                         // triton_spconv.py:56:68
	mul.lo.s32 	%r125, %r20, %r2;
	.loc	1 56 24                         // triton_spconv.py:56:24
	mul.wide.s32 	%rd58, %r125, 4;
	add.s64 	%rd144, %rd52, %rd58;
	.loc	1 56 68                         // triton_spconv.py:56:68
	mul.lo.s32 	%r126, %r19, %r2;
	.loc	1 56 24                         // triton_spconv.py:56:24
	mul.wide.s32 	%rd59, %r126, 4;
	add.s64 	%rd145, %rd52, %rd59;
	.loc	1 56 68                         // triton_spconv.py:56:68
	mul.lo.s32 	%r127, %r18, %r2;
	.loc	1 56 24                         // triton_spconv.py:56:24
	mul.wide.s32 	%rd60, %r127, 4;
	add.s64 	%rd146, %rd52, %rd60;
	.loc	1 56 68                         // triton_spconv.py:56:68
	mul.lo.s32 	%r128, %r17, %r2;
	.loc	1 56 24                         // triton_spconv.py:56:24
	mul.wide.s32 	%rd61, %r128, 4;
	add.s64 	%rd147, %rd52, %rd61;
	.loc	1 56 68                         // triton_spconv.py:56:68
	mul.lo.s32 	%r129, %r16, %r2;
	.loc	1 56 24                         // triton_spconv.py:56:24
	mul.wide.s32 	%rd62, %r129, 4;
	add.s64 	%rd148, %rd52, %rd62;
	.loc	1 56 68                         // triton_spconv.py:56:68
	mul.lo.s32 	%r130, %r15, %r2;
	.loc	1 56 24                         // triton_spconv.py:56:24
	mul.wide.s32 	%rd63, %r130, 4;
	add.s64 	%rd149, %rd52, %rd63;
	.loc	1 56 68                         // triton_spconv.py:56:68
	mul.lo.s32 	%r131, %r14, %r2;
	.loc	1 56 24                         // triton_spconv.py:56:24
	mul.wide.s32 	%rd64, %r131, 4;
	add.s64 	%rd150, %rd52, %rd64;
	add.s32 	%r26, %r109, 63;
	shr.s32 	%r132, %r26, 31;
	shr.u32 	%r133, %r132, 26;
	add.s32 	%r134, %r26, %r133;
	shr.s32 	%r135, %r134, 6;
	shl.b32 	%r514, %r3, 3;
	and.b32  	%r136, %r514, 8;
	and.b32  	%r137, %r514, 16;
	and.b32  	%r138, %r514, 24;
	and.b32  	%r139, %r514, 32;
	and.b32  	%r28, %r514, 56;
	and.b32  	%r140, %r3, 16;
	and.b32  	%r141, %r3, 32;
	and.b32  	%r516, %r3, 63;
	bfe.u32 	%r142, %r3, 3, 3;
	shr.u32 	%r143, %r4, 3;
	or.b32  	%r30, %r142, %r143;
	or.b32  	%r31, %r30, 16;
	or.b32  	%r32, %r30, 32;
	or.b32  	%r33, %r30, 48;
	shl.b32 	%r515, %r1, 6;
	mul.lo.s32 	%r35, %r2, %r109;
	or.b32  	%r36, %r515, %r28;
	setp.lt.s32 	%p4, %r36, %r110;
	setp.gt.s32 	%p5, %r26, 63;
	xor.b32  	%r144, %r514, %r3;
	and.b32  	%r145, %r144, 56;
	shl.b32 	%r146, %r30, 6;
	or.b32  	%r37, %r146, %r145;
	shl.b32 	%r147, %r37, 1;
	add.s32 	%r241, %r503, %r147;
	add.s32 	%r243, %r241, 2048;
	add.s32 	%r245, %r241, 4096;
	add.s32 	%r247, %r241, 6144;
	setp.gt.s32 	%p6, %r26, 127;
	add.s32 	%r249, %r241, 8192;
	add.s32 	%r251, %r241, 10240;
	add.s32 	%r253, %r241, 12288;
	add.s32 	%r255, %r241, 14336;
	or.b32  	%r149, %r141, %r143;
	add.s32 	%r150, %r135, -2;
	xor.b32  	%r151, %r143, %r516;
	or.b32  	%r152, %r151, %r4;
	shl.b32 	%r153, %r152, 1;
	add.s32 	%r154, %r503, 16384;
	add.s32 	%r46, %r154, %r153;
	or.b32  	%r155, %r13, 16;
	xor.b32  	%r156, %r155, %r140;
	or.b32  	%r157, %r156, %r141;
	xor.b32  	%r158, %r157, %r143;
	shl.b32 	%r159, %r6, 7;
	shl.b32 	%r160, %r158, 1;
	or.b32  	%r161, %r159, %r160;
	add.s32 	%r47, %r154, %r161;
	and.b32  	%r162, %r3, 31;
	or.b32  	%r163, %r162, 32;
	xor.b32  	%r164, %r163, %r149;
	shl.b32 	%r165, %r7, 7;
	shl.b32 	%r166, %r164, 1;
	or.b32  	%r167, %r165, %r166;
	add.s32 	%r48, %r154, %r167;
	or.b32  	%r168, %r13, 48;
	and.b32  	%r169, %r3, 48;
	xor.b32  	%r170, %r168, %r169;
	xor.b32  	%r171, %r170, %r143;
	shl.b32 	%r172, %r8, 7;
	shl.b32 	%r173, %r171, 1;
	or.b32  	%r174, %r172, %r173;
	add.s32 	%r49, %r154, %r174;
	shl.b32 	%r175, %r151, 1;
	shl.b32 	%r176, %r9, 7;
	or.b32  	%r177, %r176, %r175;
	add.s32 	%r50, %r154, %r177;
	shl.b32 	%r178, %r10, 7;
	or.b32  	%r179, %r178, %r160;
	add.s32 	%r51, %r154, %r179;
	shl.b32 	%r180, %r11, 7;
	or.b32  	%r181, %r180, %r166;
	add.s32 	%r52, %r154, %r181;
	shl.b32 	%r182, %r12, 7;
	or.b32  	%r183, %r182, %r173;
	add.s32 	%r53, %r154, %r183;
	shr.u32 	%r184, %r140, 1;
	xor.b32  	%r185, %r28, %r184;
	shl.b32 	%r186, %r13, 6;
	or.b32  	%r187, %r185, %r186;
	shl.b32 	%r188, %r187, 1;
	add.s32 	%r292, %r154, %r188;
	or.b32  	%r189, %r136, 16;
	xor.b32  	%r190, %r189, %r137;
	or.b32  	%r191, %r190, %r139;
	xor.b32  	%r192, %r191, %r184;
	or.b32  	%r193, %r192, %r186;
	shl.b32 	%r194, %r193, 1;
	add.s32 	%r297, %r154, %r194;
	or.b32  	%r195, %r138, 32;
	xor.b32  	%r196, %r195, %r139;
	xor.b32  	%r197, %r196, %r184;
	or.b32  	%r198, %r197, %r186;
	shl.b32 	%r199, %r198, 1;
	add.s32 	%r302, %r154, %r199;
	or.b32  	%r200, %r136, 48;
	and.b32  	%r201, %r514, 48;
	or.b32  	%r202, %r184, %r201;
	xor.b32  	%r203, %r202, %r200;
	or.b32  	%r204, %r203, %r186;
	shl.b32 	%r205, %r204, 1;
	add.s32 	%r307, %r154, %r205;
	shr.u32 	%r206, %r141, 2;
	xor.b32  	%r207, %r28, %r206;
	shr.u32 	%r208, %r4, 2;
	xor.b32  	%r209, %r207, %r208;
	shl.b32 	%r210, %r3, 6;
	and.b32  	%r211, %r210, 1984;
	or.b32  	%r58, %r209, %r211;
	shl.b32 	%r212, %r163, 6;
	or.b32  	%r59, %r209, %r212;
	or.b32  	%r213, %r208, %r206;
	xor.b32  	%r214, %r213, %r196;
	or.b32  	%r60, %r214, %r211;
	or.b32  	%r61, %r214, %r212;
	.loc	1 58 19                         // triton_spconv.py:58:19
	cvt.u64.u32 	%rd10, %r516;
	cvt.u64.u32 	%rd11, %r2;
	cvt.u64.u32 	%rd12, %r135;
	and.pred  	%p1, %p4, %p5;
	and.pred  	%p2, %p4, %p6;
	cvt.s64.s32 	%rd14, %r150;
	cvt.s64.s32 	%rd13, %r109;
	add.s32 	%r215, %r143, %r142;
	cvt.u64.u32 	%rd141, %r215;
	cvt.u64.u32 	%rd16, %r109;
	add.s32 	%r216, %r215, 176;
	mad.lo.s32 	%r507, %r110, %r216, %r515;
	mul.lo.s32 	%r63, %r110, %r109;
	shl.b32 	%r64, %r110, 6;
	or.b32  	%r217, %r215, 160;
	mad.lo.s32 	%r506, %r110, %r217, %r515;
	add.s32 	%r218, %r215, 144;
	mad.lo.s32 	%r505, %r110, %r218, %r515;
	or.b32  	%r219, %r215, 128;
	mad.lo.s32 	%r504, %r110, %r219, %r515;
	mov.b16 	%rs107, 0x0000;
	mov.b64 	%rd142, 0;
	setp.lt.s32 	%p15, %r22, %r108;
	shl.b32 	%r428, %r58, 1;
	shl.b32 	%r429, %r59, 1;
	shl.b32 	%r430, %r60, 1;
	shl.b32 	%r431, %r61, 1;
	mov.u16 	%rs108, %rs107;
	mov.u16 	%rs109, %rs107;
	mov.u16 	%rs110, %rs107;
	mov.u16 	%rs111, %rs107;
	mov.u16 	%rs112, %rs107;
	mov.u16 	%rs113, %rs107;
	mov.u16 	%rs114, %rs107;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 63 28                         // triton_spconv.py:63:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 82 19                         // triton_spconv.py:82:19
	add.s64 	%rd150, %rd150, 4;
	add.s64 	%rd149, %rd149, 4;
	add.s64 	%rd148, %rd148, 4;
	add.s64 	%rd147, %rd147, 4;
	add.s64 	%rd146, %rd146, 4;
	add.s64 	%rd145, %rd145, 4;
	add.s64 	%rd144, %rd144, 4;
	add.s64 	%rd143, %rd143, 4;
	add.s64 	%rd151, %rd151, 4;
	.loc	1 58 19                         // triton_spconv.py:58:19
	add.s64 	%rd142, %rd142, 1;
	add.s64 	%rd141, %rd141, %rd16;
	add.s32 	%r507, %r507, %r63;
	add.s32 	%r506, %r506, %r63;
	add.s32 	%r505, %r505, %r63;
	add.s32 	%r504, %r504, %r63;
	setp.ne.s64 	%p63, %rd142, %rd11;
	@%p63 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 60 23                         // triton_spconv.py:60:23
	// begin inline asm
	mov.u32 %r220, 0xffffffffffffffff;
	@%p96 ld.global.b32 { %r220 }, [ %rd150 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r221, 0xffffffffffffffff;
	@%p95 ld.global.b32 { %r221 }, [ %rd149 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r222, 0xffffffffffffffff;
	@%p94 ld.global.b32 { %r222 }, [ %rd148 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r223, 0xffffffffffffffff;
	@%p93 ld.global.b32 { %r223 }, [ %rd147 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r224, 0xffffffffffffffff;
	@%p92 ld.global.b32 { %r224 }, [ %rd146 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r225, 0xffffffffffffffff;
	@%p91 ld.global.b32 { %r225 }, [ %rd145 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r226, 0xffffffffffffffff;
	@%p90 ld.global.b32 { %r226 }, [ %rd144 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r227, 0xffffffffffffffff;
	@%p89 ld.global.b32 { %r227 }, [ %rd143 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r228, 0xffffffffffffffff;
	@%p15 ld.global.b32 { %r228 }, [ %rd151 + 0 ];
	// end inline asm
	.loc	1 62 27                         // triton_spconv.py:62:27
	setp.gt.s32 	%p16, %r228, -1;
	.loc	1 62 43                         // triton_spconv.py:62:43
	setp.lt.s32 	%p17, %r228, %r107;
	.loc	1 62 36                         // triton_spconv.py:62:36
	and.pred  	%p18, %p16, %p17;
	.loc	1 62 50                         // triton_spconv.py:62:50
	selp.u32 	%r229, 1, 0, %p18;
	shfl.sync.bfly.b32	%r230, %r229, 8, 31, -1;
	and.b32  	%r231, %r230, 1;
	setp.eq.b32 	%p19, %r231, 1;
$L__tmp3:
	.loc	1 13 15                         // triton_spconv.py:13:15
	or.pred  	%p20, %p18, %p19;
$L__tmp4:
	.loc	1 62 50                         // triton_spconv.py:62:50
	selp.u32 	%r232, 1, 0, %p20;
	shfl.sync.bfly.b32	%r233, %r232, 4, 31, -1;
	and.b32  	%r234, %r233, 1;
	setp.eq.b32 	%p21, %r234, 1;
$L__tmp5:
	.loc	1 13 15                         // triton_spconv.py:13:15
	or.pred  	%p22, %p20, %p21;
$L__tmp6:
	.loc	1 62 50                         // triton_spconv.py:62:50
	selp.u32 	%r235, 1, 0, %p22;
	shfl.sync.bfly.b32	%r236, %r235, 2, 31, -1;
	and.b32  	%r237, %r236, 1;
	setp.eq.b32 	%p23, %r237, 1;
$L__tmp7:
	.loc	1 13 15                         // triton_spconv.py:13:15
	or.pred  	%p24, %p22, %p23;
$L__tmp8:
	.loc	1 62 50                         // triton_spconv.py:62:50
	selp.u32 	%r238, 1, 0, %p24;
	shfl.sync.bfly.b32	%r239, %r238, 1, 31, -1;
	and.b32  	%r240, %r239, 1;
	setp.eq.b32 	%p25, %r240, 1;
$L__tmp9:
	.loc	1 13 15                         // triton_spconv.py:13:15
	or.pred  	%p26, %p24, %p25;
$L__tmp10:
	.loc	1 62 11                         // triton_spconv.py:62:11
	not.pred 	%p27, %p26;
	@%p27 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // triton_spconv.py:0:11
	setp.lt.s32 	%p28, %r26, 64;
	.loc	1 64 31                         // triton_spconv.py:64:31
	cvt.u32.u64 	%r257, %rd142;
	mul.lo.s32 	%r258, %r109, %r257;
	.loc	1 70 54                         // triton_spconv.py:70:54
	add.s32 	%r259, %r258, %r30;
	add.s32 	%r260, %r258, %r31;
	add.s32 	%r261, %r258, %r32;
	add.s32 	%r262, %r258, %r33;
	.loc	1 72 22                         // triton_spconv.py:72:22
	mad.lo.s32 	%r263, %r259, %r110, %r36;
	mad.lo.s32 	%r264, %r260, %r110, %r36;
	mad.lo.s32 	%r265, %r261, %r110, %r36;
	mad.lo.s32 	%r266, %r262, %r110, %r36;
	.loc	1 70 20                         // triton_spconv.py:70:20
	mul.wide.s32 	%rd82, %r263, 2;
	add.s64 	%rd74, %rd53, %rd82;
	mul.wide.s32 	%rd83, %r264, 2;
	add.s64 	%rd75, %rd53, %rd83;
	mul.wide.s32 	%rd84, %r265, 2;
	add.s64 	%rd76, %rd53, %rd84;
	mul.wide.s32 	%rd85, %r266, 2;
	add.s64 	%rd77, %rd53, %rd85;
	.loc	1 74 72                         // triton_spconv.py:74:72
	setp.lt.s32 	%p29, %r259, %r35;
	setp.lt.s32 	%p30, %r260, %r35;
	setp.lt.s32 	%p31, %r261, %r35;
	setp.lt.s32 	%p32, %r262, %r35;
	.loc	1 79 36                         // triton_spconv.py:79:36
	selp.b32 	%r267, 16, 0, %p1;
	selp.b32 	%r242, %r267, 0, %p29;
	// begin inline asm
	cp.async.cg.shared.global [ %r241 + 0 ], [ %rd74 + 0 ], 0x10, %r242;
	// end inline asm
	selp.b32 	%r244, %r267, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r243 + 0 ], [ %rd75 + 0 ], 0x10, %r244;
	// end inline asm
	selp.b32 	%r246, %r267, 0, %p31;
	// begin inline asm
	cp.async.cg.shared.global [ %r245 + 0 ], [ %rd76 + 0 ], 0x10, %r246;
	// end inline asm
	selp.b32 	%r248, %r267, 0, %p32;
	// begin inline asm
	cp.async.cg.shared.global [ %r247 + 0 ], [ %rd77 + 0 ], 0x10, %r248;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 35                         // triton_spconv.py:64:35
	add.s32 	%r268, %r258, 64;
	.loc	1 70 54                         // triton_spconv.py:70:54
	add.s32 	%r269, %r268, %r30;
	add.s32 	%r270, %r268, %r31;
	add.s32 	%r271, %r268, %r32;
	add.s32 	%r272, %r268, %r33;
	.loc	1 72 22                         // triton_spconv.py:72:22
	mad.lo.s32 	%r273, %r269, %r110, %r36;
	mad.lo.s32 	%r274, %r270, %r110, %r36;
	mad.lo.s32 	%r275, %r271, %r110, %r36;
	mad.lo.s32 	%r276, %r272, %r110, %r36;
	.loc	1 70 20                         // triton_spconv.py:70:20
	mul.wide.s32 	%rd86, %r273, 2;
	add.s64 	%rd78, %rd53, %rd86;
	mul.wide.s32 	%rd87, %r274, 2;
	add.s64 	%rd79, %rd53, %rd87;
	mul.wide.s32 	%rd88, %r275, 2;
	add.s64 	%rd80, %rd53, %rd88;
	mul.wide.s32 	%rd89, %r276, 2;
	add.s64 	%rd81, %rd53, %rd89;
	.loc	1 74 72                         // triton_spconv.py:74:72
	setp.lt.s32 	%p33, %r269, %r35;
	setp.lt.s32 	%p34, %r270, %r35;
	setp.lt.s32 	%p35, %r271, %r35;
	setp.lt.s32 	%p36, %r272, %r35;
	.loc	1 79 36                         // triton_spconv.py:79:36
	bar.sync 	0;
	selp.b32 	%r277, 16, 0, %p2;
	selp.b32 	%r250, %r277, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r249 + 0 ], [ %rd78 + 0 ], 0x10, %r250;
	// end inline asm
	selp.b32 	%r252, %r277, 0, %p34;
	// begin inline asm
	cp.async.cg.shared.global [ %r251 + 0 ], [ %rd79 + 0 ], 0x10, %r252;
	// end inline asm
	selp.b32 	%r254, %r277, 0, %p35;
	// begin inline asm
	cp.async.cg.shared.global [ %r253 + 0 ], [ %rd80 + 0 ], 0x10, %r254;
	// end inline asm
	selp.b32 	%r256, %r277, 0, %p36;
	// begin inline asm
	cp.async.cg.shared.global [ %r255 + 0 ], [ %rd81 + 0 ], 0x10, %r256;
	// end inline asm
	cp.async.commit_group;
	.loc	1 63 28                         // triton_spconv.py:63:28
	@%p28 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 0                           // triton_spconv.py:0:0
	mul.lo.s32 	%r80, %r220, %r109;
	mul.lo.s32 	%r81, %r221, %r109;
	mul.lo.s32 	%r82, %r222, %r109;
	mul.lo.s32 	%r83, %r223, %r109;
	mul.lo.s32 	%r84, %r224, %r109;
	mul.lo.s32 	%r85, %r225, %r109;
	mul.lo.s32 	%r86, %r226, %r109;
	mul.lo.s32 	%r87, %r227, %r109;
	.loc	1 63 28                         // triton_spconv.py:63:28
	add.s32 	%r280, %r516, %r87;
	cvt.u64.u32 	%rd28, %r280;
	add.s32 	%r281, %r516, %r86;
	cvt.u64.u32 	%rd29, %r281;
	add.s32 	%r282, %r516, %r85;
	cvt.u64.u32 	%rd30, %r282;
	add.s32 	%r283, %r516, %r84;
	cvt.u64.u32 	%rd31, %r283;
	add.s32 	%r284, %r516, %r83;
	cvt.u64.u32 	%rd32, %r284;
	add.s32 	%r285, %r516, %r82;
	cvt.u64.u32 	%rd33, %r285;
	add.s32 	%r286, %r516, %r81;
	cvt.u64.u32 	%rd34, %r286;
	add.s32 	%r287, %r516, %r80;
	cvt.u64.u32 	%rd35, %r287;
	mov.b32 	%r513, 1;
	mov.b32 	%r512, -1;
	mov.b64 	%rd152, 0;
	mov.u32 	%r508, %r504;
	mov.u32 	%r509, %r505;
	mov.u32 	%r510, %r506;
	mov.u32 	%r511, %r507;
	mov.u64 	%rd153, %rd152;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.loc	1 67 43                         // triton_spconv.py:67:43
	setp.ne.s32 	%p45, %r227, -1;
	setp.ne.s32 	%p46, %r226, -1;
	setp.ne.s32 	%p47, %r225, -1;
	setp.ne.s32 	%p48, %r224, -1;
	setp.ne.s32 	%p49, %r223, -1;
	setp.ne.s32 	%p50, %r222, -1;
	setp.ne.s32 	%p51, %r221, -1;
	setp.ne.s32 	%p52, %r220, -1;
	.loc	1 63 28                         // triton_spconv.py:63:28
	add.s32 	%r416, %r512, 1;
	setp.lt.s32 	%p54, %r416, 2;
	selp.b32 	%r512, %r416, 0, %p54;
	.loc	1 66 89                         // triton_spconv.py:66:89
	add.s64 	%rd103, %rd35, %rd153;
	add.s64 	%rd104, %rd34, %rd153;
	add.s64 	%rd105, %rd33, %rd153;
	add.s64 	%rd106, %rd32, %rd153;
	add.s64 	%rd107, %rd31, %rd153;
	add.s64 	%rd108, %rd30, %rd153;
	add.s64 	%rd109, %rd29, %rd153;
	.loc	1 66 36                         // triton_spconv.py:66:36
	add.s64 	%rd110, %rd28, %rd153;
	cvt.u32.u64 	%r417, %rd103;
	mul.wide.s32 	%rd111, %r417, 2;
	add.s64 	%rd91, %rd51, %rd111;
	cvt.u32.u64 	%r418, %rd104;
	mul.wide.s32 	%rd112, %r418, 2;
	add.s64 	%rd92, %rd51, %rd112;
	cvt.u32.u64 	%r419, %rd105;
	mul.wide.s32 	%rd113, %r419, 2;
	add.s64 	%rd93, %rd51, %rd113;
	cvt.u32.u64 	%r420, %rd106;
	mul.wide.s32 	%rd114, %r420, 2;
	add.s64 	%rd94, %rd51, %rd114;
	cvt.u32.u64 	%r421, %rd107;
	mul.wide.s32 	%rd115, %r421, 2;
	add.s64 	%rd95, %rd51, %rd115;
	cvt.u32.u64 	%r422, %rd108;
	mul.wide.s32 	%rd116, %r422, 2;
	add.s64 	%rd96, %rd51, %rd116;
	cvt.u32.u64 	%r423, %rd109;
	mul.wide.s32 	%rd117, %r423, 2;
	add.s64 	%rd97, %rd51, %rd117;
	cvt.u32.u64 	%r424, %rd110;
	mul.wide.s32 	%rd118, %r424, 2;
	add.s64 	%rd98, %rd51, %rd118;
	.loc	1 67 98                         // triton_spconv.py:67:98
	add.s64 	%rd119, %rd10, %rd153;
	setp.lt.s64 	%p55, %rd152, %rd14;
	setp.lt.s64 	%p56, %rd119, %rd13;
	.loc	1 67 50                         // triton_spconv.py:67:50
	and.pred  	%p37, %p52, %p56;
	and.pred  	%p38, %p51, %p56;
	and.pred  	%p39, %p50, %p56;
	and.pred  	%p40, %p49, %p56;
	and.pred  	%p41, %p48, %p56;
	and.pred  	%p42, %p47, %p56;
	and.pred  	%p43, %p46, %p56;
	and.pred  	%p44, %p45, %p56;
	mov.b16 	%rs60, 0;
	.loc	1 78 39                         // triton_spconv.py:78:39
	// begin inline asm
	mov.u16 %rs59, %rs60;
	@%p37 ld.global.b16 { %rs59 }, [ %rd91 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs61, %rs60;
	@%p38 ld.global.b16 { %rs61 }, [ %rd92 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs63, %rs60;
	@%p39 ld.global.b16 { %rs63 }, [ %rd93 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs65, %rs60;
	@%p40 ld.global.b16 { %rs65 }, [ %rd94 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs67, %rs60;
	@%p41 ld.global.b16 { %rs67 }, [ %rd95 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs69, %rs60;
	@%p42 ld.global.b16 { %rs69 }, [ %rd96 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs71, %rs60;
	@%p43 ld.global.b16 { %rs71 }, [ %rd97 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs73, %rs60;
	@%p44 ld.global.b16 { %rs73 }, [ %rd98 + 0 ];
	// end inline asm
	st.shared.u16 	[%r46], %rs59;
	st.shared.u16 	[%r47], %rs61;
	st.shared.u16 	[%r48], %rs63;
	st.shared.u16 	[%r49], %rs65;
	st.shared.u16 	[%r50], %rs67;
	st.shared.u16 	[%r51], %rs69;
	st.shared.u16 	[%r52], %rs71;
	st.shared.u16 	[%r53], %rs73;
	.loc	1 79 36                         // triton_spconv.py:79:36
	cp.async.wait_group 1;
	bar.sync 	0;
	shl.b32 	%r425, %r512, 13;
	add.s32 	%r427, %r503, %r425;
	.loc	1 78 39                         // triton_spconv.py:78:39
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r332, %r333, %r334, %r335}, [%r292];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r352, %r353, %r354, %r355}, [%r297];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r372, %r373, %r374, %r375}, [%r302];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r392, %r393, %r394, %r395}, [%r307];
	// end inline asm
	.loc	1 79 36                         // triton_spconv.py:79:36
	add.s32 	%r312, %r427, %r428;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r308, %r309, %r310, %r311}, [%r312];
	// end inline asm
	add.s32 	%r317, %r427, %r429;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r313, %r314, %r315, %r316}, [%r317];
	// end inline asm
	add.s32 	%r322, %r427, %r430;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r318, %r319, %r320, %r321}, [%r322];
	// end inline asm
	add.s32 	%r327, %r427, %r431;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r323, %r324, %r325, %r326}, [%r327];
	// end inline asm
	.loc	1 81 37                         // triton_spconv.py:81:37
	mov.b32 	%r348, {%rs107, %rs108};
	mov.b32 	%r349, {%rs109, %rs110};
	mov.b32 	%r358, {%rs111, %rs112};
	mov.b32 	%r359, {%rs113, %rs114};
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r348, %r349 }, { %r332, %r333, %r334, %r335 }, { %r308, %r309 }, { %r348, %r349 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r358, %r359 }, { %r332, %r333, %r334, %r335 }, { %r318, %r319 }, { %r358, %r359 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r348, %r349 }, { %r352, %r353, %r354, %r355 }, { %r310, %r311 }, { %r348, %r349 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r358, %r359 }, { %r352, %r353, %r354, %r355 }, { %r320, %r321 }, { %r358, %r359 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r348, %r349 }, { %r372, %r373, %r374, %r375 }, { %r313, %r314 }, { %r348, %r349 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r358, %r359 }, { %r372, %r373, %r374, %r375 }, { %r323, %r324 }, { %r358, %r359 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r348, %r349 }, { %r392, %r393, %r394, %r395 }, { %r315, %r316 }, { %r348, %r349 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r358, %r359 }, { %r392, %r393, %r394, %r395 }, { %r325, %r326 }, { %r358, %r359 };
	// end inline asm
	mov.b32 	{%rs107, %rs108}, %r348;
	mov.b32 	{%rs109, %rs110}, %r349;
	mov.b32 	{%rs111, %rs112}, %r358;
	mov.b32 	{%rs113, %rs114}, %r359;
	.loc	1 63 28                         // triton_spconv.py:63:28
	add.s32 	%r432, %r513, 1;
	setp.lt.s32 	%p57, %r432, 2;
	selp.b32 	%r513, %r432, 0, %p57;
	.loc	1 70 54                         // triton_spconv.py:70:54
	add.s64 	%rd120, %rd141, %rd153;
	.loc	1 72 22                         // triton_spconv.py:72:22
	add.s32 	%r433, %r28, %r508;
	add.s32 	%r434, %r28, %r509;
	add.s32 	%r435, %r28, %r510;
	.loc	1 70 20                         // triton_spconv.py:70:20
	add.s32 	%r436, %r28, %r511;
	mul.wide.s32 	%rd121, %r433, 2;
	add.s64 	%rd99, %rd53, %rd121;
	mul.wide.s32 	%rd122, %r434, 2;
	add.s64 	%rd100, %rd53, %rd122;
	mul.wide.s32 	%rd123, %r435, 2;
	add.s64 	%rd101, %rd53, %rd123;
	mul.wide.s32 	%rd124, %r436, 2;
	add.s64 	%rd102, %rd53, %rd124;
	cvt.u32.u64 	%r437, %rd120;
	add.s32 	%r438, %r437, 128;
	.loc	1 74 72                         // triton_spconv.py:74:72
	setp.lt.s32 	%p58, %r438, %r35;
	add.s32 	%r439, %r437, 144;
	setp.lt.s32 	%p59, %r439, %r35;
	add.s32 	%r440, %r437, 160;
	setp.lt.s32 	%p60, %r440, %r35;
	add.s32 	%r441, %r437, 176;
	setp.lt.s32 	%p61, %r441, %r35;
	.loc	1 79 36                         // triton_spconv.py:79:36
	shl.b32 	%r442, %r513, 13;
	add.s32 	%r443, %r503, %r442;
	bar.sync 	0;
	add.s32 	%r408, %r443, %r147;
	add.s32 	%r410, %r408, 2048;
	add.s32 	%r412, %r408, 4096;
	add.s32 	%r414, %r408, 6144;
	selp.b32 	%r445, 16, 0, %p58;
	selp.b32 	%r446, %r445, 0, %p4;
	selp.b32 	%r409, %r446, 0, %p55;
	// begin inline asm
	cp.async.cg.shared.global [ %r408 + 0 ], [ %rd99 + 0 ], 0x10, %r409;
	// end inline asm
	selp.b32 	%r447, 16, 0, %p59;
	selp.b32 	%r448, %r447, 0, %p4;
	selp.b32 	%r411, %r448, 0, %p55;
	// begin inline asm
	cp.async.cg.shared.global [ %r410 + 0 ], [ %rd100 + 0 ], 0x10, %r411;
	// end inline asm
	selp.b32 	%r449, 16, 0, %p60;
	selp.b32 	%r450, %r449, 0, %p4;
	selp.b32 	%r413, %r450, 0, %p55;
	// begin inline asm
	cp.async.cg.shared.global [ %r412 + 0 ], [ %rd101 + 0 ], 0x10, %r413;
	// end inline asm
	selp.b32 	%r451, 16, 0, %p61;
	selp.b32 	%r452, %r451, 0, %p4;
	selp.b32 	%r415, %r452, 0, %p55;
	// begin inline asm
	cp.async.cg.shared.global [ %r414 + 0 ], [ %rd102 + 0 ], 0x10, %r415;
	// end inline asm
	cp.async.commit_group;
	.loc	1 63 28                         // triton_spconv.py:63:28
	add.s64 	%rd152, %rd152, 1;
	add.s64 	%rd153, %rd153, 64;
	add.s32 	%r511, %r511, %r64;
	add.s32 	%r510, %r510, %r64;
	add.s32 	%r509, %r509, %r64;
	add.s32 	%r508, %r508, %r64;
	setp.ne.s64 	%p62, %rd12, %rd152;
	@%p62 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge42_crit_edge
	.loc	1 85 33                         // triton_spconv.py:85:33
	and.b32  	%r516, %r3, 63;
	.loc	1 86 19                         // triton_spconv.py:86:19
	shl.b32 	%r515, %r1, 6;
	.loc	1 92 56                         // triton_spconv.py:92:56
	shl.b32 	%r514, %r3, 3;
	mov.b16 	%rs107, 0;
	mov.u16 	%rs108, %rs107;
	mov.u16 	%rs109, %rs107;
	mov.u16 	%rs110, %rs107;
	mov.u16 	%rs111, %rs107;
	mov.u16 	%rs112, %rs107;
	mov.u16 	%rs113, %rs107;
	mov.u16 	%rs114, %rs107;
$L__BB0_9:                              // %._crit_edge42
	.loc	1 85 10                         // triton_spconv.py:85:10
	or.b32  	%r461, %r515, %r516;
	.loc	1 86 10                         // triton_spconv.py:86:10
	mad.lo.s32 	%r462, %r14, %r110, %r461;
	mad.lo.s32 	%r463, %r15, %r110, %r461;
	mad.lo.s32 	%r464, %r16, %r110, %r461;
	mad.lo.s32 	%r465, %r17, %r110, %r461;
	mad.lo.s32 	%r466, %r18, %r110, %r461;
	mad.lo.s32 	%r467, %r19, %r110, %r461;
	mad.lo.s32 	%r468, %r20, %r110, %r461;
	mad.lo.s32 	%r469, %r21, %r110, %r461;
	.loc	1 84 8                          // triton_spconv.py:84:8
	mul.wide.s32 	%rd133, %r462, 2;
	add.s64 	%rd125, %rd54, %rd133;
	mul.wide.s32 	%rd134, %r463, 2;
	add.s64 	%rd126, %rd54, %rd134;
	mul.wide.s32 	%rd135, %r464, 2;
	add.s64 	%rd127, %rd54, %rd135;
	mul.wide.s32 	%rd136, %r465, 2;
	add.s64 	%rd128, %rd54, %rd136;
	mul.wide.s32 	%rd137, %r466, 2;
	add.s64 	%rd129, %rd54, %rd137;
	mul.wide.s32 	%rd138, %r467, 2;
	add.s64 	%rd130, %rd54, %rd138;
	mul.wide.s32 	%rd139, %r468, 2;
	add.s64 	%rd131, %rd54, %rd139;
	mul.wide.s32 	%rd140, %r469, 2;
	add.s64 	%rd132, %rd54, %rd140;
	.loc	1 89 62                         // triton_spconv.py:89:62
	setp.lt.s32 	%p88, %r461, %r110;
	.loc	1 89 8                          // triton_spconv.py:89:8
	and.pred  	%p72, %p96, %p88;
	and.pred  	%p73, %p95, %p88;
	and.pred  	%p74, %p94, %p88;
	and.pred  	%p75, %p93, %p88;
	and.pred  	%p76, %p92, %p88;
	and.pred  	%p77, %p91, %p88;
	and.pred  	%p78, %p90, %p88;
	and.pred  	%p79, %p89, %p88;
	.loc	1 92 56                         // triton_spconv.py:92:56
	shl.b32 	%r470, %r3, 4;
	and.b32  	%r471, %r470, 48;
	bfe.u32 	%r472, %r3, 2, 3;
	or.b32  	%r473, %r472, %r471;
	shl.b32 	%r474, %r3, 1;
	and.b32  	%r475, %r474, 192;
	or.b32  	%r476, %r473, %r475;
	and.b32  	%r477, %r514, 504;
	or.b32  	%r478, %r477, %r5;
	shr.u32 	%r479, %r476, 2;
	and.b32  	%r480, %r479, 60;
	add.s32 	%r482, %r503, %r480;
	shl.b32 	%r483, %r476, 1;
	add.s32 	%r453, %r482, %r483;
	mov.pred 	%p64, -1;
	// begin inline asm
	@%p64 st.shared.b16 [ %r453 + 0 ], %rs107;
	// end inline asm
	or.b32  	%r484, %r476, 8;
	shr.u32 	%r485, %r484, 2;
	and.b32  	%r486, %r485, 62;
	add.s32 	%r487, %r503, %r486;
	add.s32 	%r488, %r487, %r483;
	add.s32 	%r454, %r488, 16;
	// begin inline asm
	@%p64 st.shared.b16 [ %r454 + 0 ], %rs108;
	// end inline asm
	or.b32  	%r489, %r476, 256;
	shr.u32 	%r490, %r489, 2;
	and.b32  	%r491, %r490, 124;
	add.s32 	%r492, %r503, %r491;
	add.s32 	%r493, %r492, %r483;
	add.s32 	%r455, %r493, 512;
	// begin inline asm
	@%p64 st.shared.b16 [ %r455 + 0 ], %rs111;
	// end inline asm
	or.b32  	%r494, %r476, 264;
	shr.u32 	%r495, %r494, 2;
	and.b32  	%r496, %r495, 126;
	add.s32 	%r497, %r503, %r496;
	add.s32 	%r498, %r497, %r483;
	add.s32 	%r456, %r498, 528;
	// begin inline asm
	@%p64 st.shared.b16 [ %r456 + 0 ], %rs112;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r499, %r477, 2;
	add.s32 	%r500, %r503, %r499;
	shl.b32 	%r501, %r478, 1;
	add.s32 	%r502, %r500, %r501;
	ld.shared.u16 	%rs83, [%r502];
	ld.shared.u16 	%rs84, [%r502+4];
	ld.shared.u16 	%rs85, [%r502+8];
	ld.shared.u16 	%rs86, [%r502+12];
	bar.sync 	0;
	// begin inline asm
	@%p64 st.shared.b16 [ %r453 + 0 ], %rs109;
	// end inline asm
	// begin inline asm
	@%p64 st.shared.b16 [ %r454 + 0 ], %rs110;
	// end inline asm
	// begin inline asm
	@%p64 st.shared.b16 [ %r455 + 0 ], %rs113;
	// end inline asm
	// begin inline asm
	@%p64 st.shared.b16 [ %r456 + 0 ], %rs114;
	// end inline asm
	bar.sync 	0;
	ld.shared.u16 	%rs87, [%r502];
	ld.shared.u16 	%rs88, [%r502+4];
	ld.shared.u16 	%rs89, [%r502+8];
	ld.shared.u16 	%rs90, [%r502+12];
	// begin inline asm
	@%p72 st.global.b16 [ %rd125 + 0 ], { %rs83 };
	// end inline asm
	// begin inline asm
	@%p73 st.global.b16 [ %rd126 + 0 ], { %rs84 };
	// end inline asm
	// begin inline asm
	@%p74 st.global.b16 [ %rd127 + 0 ], { %rs85 };
	// end inline asm
	// begin inline asm
	@%p75 st.global.b16 [ %rd128 + 0 ], { %rs86 };
	// end inline asm
	// begin inline asm
	@%p76 st.global.b16 [ %rd129 + 0 ], { %rs87 };
	// end inline asm
	// begin inline asm
	@%p77 st.global.b16 [ %rd130 + 0 ], { %rs88 };
	// end inline asm
	// begin inline asm
	@%p78 st.global.b16 [ %rd131 + 0 ], { %rs89 };
	// end inline asm
	// begin inline asm
	@%p79 st.global.b16 [ %rd132 + 0 ], { %rs90 };
	// end inline asm
	.loc	1 92 4                          // triton_spconv.py:92:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/waabi-user/sparse-conv/triton_spconv.py"
	.file	2 "/home/waabi-user/.local/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 163                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x9c DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 115
.b8 112
.b8 99
.b8 111
.b8 110
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 119
.b8 97
.b8 97
.b8 98
.b8 105
.b8 45
.b8 117
.b8 115
.b8 101
.b8 114
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x47:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x60:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 71                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x75:0x18 DW_TAG_inlined_subroutine
.b32 71                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x8d:0x18 DW_TAG_inlined_subroutine
.b32 71                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 62                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
