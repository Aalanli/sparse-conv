//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<79>;
	.reg .b32 	%r<472>;
	.reg .f32 	%f<210>;
	.reg .b64 	%rd<86>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r98, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r96, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd20, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r99, %ctaid.x;
	.loc	1 50 36                         // implicit_gemm_kernel.py:50:36
	shr.u32 	%r100, %r99, 31;
	add.s32 	%r101, %r99, %r100;
	and.b32  	%r102, %r101, -2;
	sub.s32 	%r450, %r99, %r102;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r103, %r96, 31;
$L__tmp2:
	.loc	1 49 35                         // implicit_gemm_kernel.py:49:35
	shr.s32 	%r104, %r101, 1;
	shr.s32 	%r106, %r103, 31;
	shr.u32 	%r107, %r106, 27;
	add.s32 	%r108, %r103, %r107;
	shr.s32 	%r109, %r108, 5;
	ld.param.u32 	%r110, [implicit_conv3d_kernel_param_8];
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r2, %r104, %r109;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r111, %r2, %r109;
	sub.s32 	%r112, %r104, %r111;
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r113, %r110, %r110;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r3, %r113, %r110;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r4, %tid.x;
	bfe.u32 	%r6, %r4, 2, 1;
	shr.u32 	%r114, %r4, 2;
	and.b32  	%r7, %r114, 2;
	or.b32  	%r115, %r6, %r7;
	and.b32  	%r8, %r114, 4;
	or.b32  	%r9, %r115, %r8;
	and.b32  	%r10, %r4, 32;
	and.b32  	%r13, %r4, 31;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r14, %r112, 5;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.lt.s32 	%p3, %r450, %r3;
	mov.u32 	%r447, global_smem;
	@%p3 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph17
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r97, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r95, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd19, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd18, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd21, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	and.b32  	%r5, %r4, 4;
	shr.u32 	%r11, %r10, 2;
	or.b32  	%r12, %r9, %r11;
	or.b32  	%r15, %r14, %r12;
	or.b32  	%r16, %r15, 16;
	or.b32  	%r17, %r14, %r13;
	mul.lo.s32 	%r116, %r15, %r3;
	shl.b32 	%r117, %r3, 4;
	add.s32 	%r118, %r116, %r117;
	mul.lo.s32 	%r119, %r17, %r3;
	mul.wide.s32 	%rd22, %r116, 4;
	add.s64 	%rd1, %rd21, %rd22;
	mul.wide.s32 	%rd23, %r118, 4;
	add.s64 	%rd2, %rd21, %rd23;
	mul.wide.s32 	%rd24, %r119, 4;
	add.s64 	%rd3, %rd21, %rd24;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r122, %r4, 2;
	add.s32 	%r21, %r97, 15;
	shr.s32 	%r123, %r21, 31;
	shr.u32 	%r124, %r123, 28;
	add.s32 	%r125, %r21, %r124;
	shr.s32 	%r126, %r125, 4;
	shl.b32 	%r127, %r4, 2;
	and.b32  	%r22, %r127, 12;
	bfe.u32 	%r23, %r4, 3, 3;
	or.b32  	%r24, %r23, 8;
	and.b32  	%r128, %r127, 28;
	shl.b32 	%r455, %r2, 5;
	mul.lo.s32 	%r26, %r3, %r97;
	or.b32  	%r27, %r455, %r128;
	setp.lt.s32 	%p4, %r27, %r98;
	setp.gt.s32 	%p5, %r21, 15;
	setp.lt.s32 	%p6, %r22, %r97;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p1, %p6, %p5;
	shr.u32 	%r129, %r4, 1;
	xor.b32  	%r130, %r129, %r127;
	and.b32  	%r131, %r130, 12;
	shl.b32 	%r132, %r131, 2;
	shl.b32 	%r133, %r12, 6;
	or.b32  	%r134, %r133, %r132;
	add.s32 	%r173, %r447, %r134;
	add.s32 	%r175, %r173, 1024;
	and.b32  	%r136, %r4, 24;
	xor.b32  	%r137, %r128, %r136;
	shl.b32 	%r138, %r137, 2;
	shl.b32 	%r139, %r23, 7;
	or.b32  	%r140, %r139, %r138;
	add.s32 	%r141, %r447, %r140;
	add.s32 	%r177, %r141, 2048;
	add.s32 	%r179, %r141, 3072;
	add.s32 	%r142, %r126, -1;
	shl.b32 	%r143, %r122, 1;
	shl.b32 	%r144, %r5, 1;
	or.b32  	%r145, %r143, %r144;
	xor.b32  	%r32, %r145, %r8;
	shl.b32 	%r453, %r4, 4;
	and.b32  	%r34, %r453, 240;
	or.b32  	%r35, %r32, %r34;
	or.b32  	%r146, %r143, 8;
	or.b32  	%r147, %r8, %r144;
	xor.b32  	%r36, %r147, %r146;
	or.b32  	%r37, %r36, %r34;
	shl.b32 	%r148, %r4, 3;
	and.b32  	%r149, %r148, 8;
	shl.b32 	%r150, %r122, 3;
	or.b32  	%r151, %r150, %r9;
	or.b32  	%r152, %r151, %r149;
	xor.b32  	%r38, %r152, %r11;
	shl.b32 	%r153, %r4, 5;
	and.b32  	%r454, %r153, 96;
	or.b32  	%r154, %r149, 16;
	xor.b32  	%r155, %r154, %r150;
	or.b32  	%r156, %r6, %r155;
	or.b32  	%r157, %r156, %r7;
	or.b32  	%r158, %r157, %r8;
	xor.b32  	%r40, %r158, %r11;
	cvt.s64.s32 	%rd4, %r142;
	cvt.u64.u32 	%rd25, %r22;
	cvt.s64.s32 	%rd5, %r97;
	cvt.u64.u32 	%rd6, %r126;
	and.pred  	%p2, %p4, %p5;
	or.b64  	%rd7, %rd25, 16;
	mad.lo.s32 	%r159, %r450, %r97, %r23;
	cvt.u64.u32 	%rd83, %r159;
	shl.b32 	%r160, %r97, 1;
	cvt.u64.u32 	%rd9, %r160;
	add.s32 	%r161, %r159, 24;
	mad.lo.s32 	%r162, %r98, %r161, %r455;
	add.s32 	%r449, %r162, %r128;
	mul.lo.s32 	%r163, %r98, %r97;
	shl.b32 	%r42, %r163, 1;
	shl.b32 	%r43, %r98, 4;
	add.s32 	%r164, %r159, 16;
	mad.lo.s32 	%r165, %r98, %r164, %r455;
	add.s32 	%r448, %r165, %r128;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	or.b32  	%r45, %r22, 16;
	mov.f32 	%f162, 0f00000000;
	setp.lt.s32 	%p9, %r17, %r96;
	shl.b32 	%r274, %r35, 2;
	shl.b32 	%r275, %r37, 2;
	shl.b32 	%r283, %r38, 2;
	shl.b32 	%r287, %r40, 2;
	mov.f32 	%f163, %f162;
	mov.f32 	%f164, %f162;
	mov.f32 	%f165, %f162;
	mov.f32 	%f166, %f162;
	mov.f32 	%f167, %f162;
	mov.f32 	%f168, %f162;
	mov.f32 	%f169, %f162;
	mov.f32 	%f170, %f162;
	mov.f32 	%f171, %f162;
	mov.f32 	%f172, %f162;
	mov.f32 	%f173, %f162;
	mov.f32 	%f174, %f162;
	mov.f32 	%f175, %f162;
	mov.f32 	%f176, %f162;
	mov.f32 	%f177, %f162;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s32 	%r450, %r450, 2;
	add.s64 	%rd83, %rd83, %rd9;
	add.s32 	%r449, %r449, %r42;
	add.s32 	%r448, %r448, %r42;
	setp.lt.s32 	%p29, %r450, %r3;
	@%p29 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p8, %r16, %r96;
	setp.lt.s32 	%p7, %r15, %r96;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	mul.wide.s32 	%rd29, %r450, 4;
	add.s64 	%rd26, %rd1, %rd29;
	add.s64 	%rd27, %rd2, %rd29;
	add.s64 	%rd28, %rd3, %rd29;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r166, 0xffffffffffffffff;
	@%p7 ld.global.b32 { %r166 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r167, 0xffffffffffffffff;
	@%p8 ld.global.b32 { %r167 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r168, 0xffffffffffffffff;
	@%p9 ld.global.b32 { %r168 }, [ %rd28 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p10, %r168, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p11, %r168, %r95;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p12, %p10, %p11;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r169, 1, 0, %p12;
	mov.b32 	%r170, -1;
	redux.sync.or.b32 %r171, %r169, %r170;
	and.b32  	%r172, %r171, 1;
	setp.eq.b32 	%p13, %r172, 1;
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p14, %p13;
	@%p14 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.lt.s32 	%p15, %r21, 16;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	mul.lo.s32 	%r181, %r450, %r97;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r51, %r166, %r97;
	mul.lo.s32 	%r52, %r167, %r97;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r182, %r51, %r22;
	add.s32 	%r183, %r52, %r22;
	.loc	1 70 43                         // implicit_gemm_kernel.py:70:43
	setp.ne.s32 	%p16, %r166, -1;
	setp.ne.s32 	%p17, %r167, -1;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd34, %r182, 4;
	add.s64 	%rd30, %rd18, %rd34;
	mul.wide.s32 	%rd35, %r183, 4;
	add.s64 	%rd31, %rd18, %rd35;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s32 	%r184, %r181, %r23;
	add.s32 	%r185, %r181, %r24;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r186, %r184, %r98, %r27;
	mad.lo.s32 	%r187, %r185, %r98, %r27;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd36, %r186, 4;
	add.s64 	%rd32, %rd19, %rd36;
	mul.wide.s32 	%rd37, %r187, 4;
	add.s64 	%rd33, %rd19, %rd37;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p18, %r184, %r26;
	setp.lt.s32 	%p19, %r185, %r26;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	selp.b32 	%r188, 16, 0, %p1;
	selp.b32 	%r174, %r188, 0, %p16;
	// begin inline asm
	cp.async.cg.shared.global [ %r173 + 0 ], [ %rd30 + 0 ], 0x10, %r174;
	// end inline asm
	selp.b32 	%r176, %r188, 0, %p17;
	// begin inline asm
	cp.async.cg.shared.global [ %r175 + 0 ], [ %rd31 + 0 ], 0x10, %r176;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r189, 16, 0, %p2;
	selp.b32 	%r178, %r189, 0, %p18;
	// begin inline asm
	cp.async.cg.shared.global [ %r177 + 0 ], [ %rd32 + 0 ], 0x10, %r178;
	// end inline asm
	selp.b32 	%r180, %r189, 0, %p19;
	// begin inline asm
	cp.async.cg.shared.global [ %r179 + 0 ], [ %rd33 + 0 ], 0x10, %r180;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p15 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r192, %r45, %r52;
	cvt.u64.u32 	%rd11, %r192;
	add.s32 	%r193, %r45, %r51;
	cvt.u64.u32 	%rd12, %r193;
	mov.b32 	%r452, -1;
	mov.b64 	%rd84, 0;
	mov.b32 	%r451, 0;
	mov.u64 	%rd85, %rd84;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p23, %rd85, %rd4;
	add.s32 	%r270, %r452, 1;
	setp.gt.u32 	%p24, %r452, 2147483646;
	selp.b32 	%r452, %r270, 0, %p24;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r271, %r452, 11;
	add.s32 	%r273, %r447, %r271;
	add.s32 	%r198, %r273, %r274;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r214, %r215, %r216, %r217}, [%r198];
	// end inline asm
	add.s32 	%r203, %r273, %r275;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r238, %r239, %r240, %r241}, [%r203];
	// end inline asm
	add.s32 	%r276, %r32, %r34;
	shl.b32 	%r277, %r276, 2;
	add.s32 	%r278, %r273, %r277;
	add.s32 	%r208, %r278, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r226, %r227, %r228, %r229}, [%r208];
	// end inline asm
	add.s32 	%r279, %r36, %r34;
	shl.b32 	%r280, %r279, 2;
	add.s32 	%r281, %r273, %r280;
	add.s32 	%r213, %r281, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r250, %r251, %r252, %r253}, [%r213];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	add.s32 	%r282, %r273, 2048;
	add.s32 	%r284, %r282, %r283;
	shl.b32 	%r285, %r454, 2;
	add.s32 	%r286, %r284, %r285;
	ld.shared.u32 	%r218, [%r286];
	ld.shared.u32 	%r219, [%r286+512];
	ld.shared.u32 	%r242, [%r286+1024];
	ld.shared.u32 	%r243, [%r286+1536];
	add.s32 	%r288, %r282, %r287;
	add.s32 	%r289, %r288, %r285;
	ld.shared.u32 	%r224, [%r289];
	ld.shared.u32 	%r225, [%r289+512];
	ld.shared.u32 	%r248, [%r289+1024];
	ld.shared.u32 	%r249, [%r289+1536];
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f162, %f163, %f164, %f165 }, { %r214, %r215, %r216, %r217 }, { %r218, %r219 }, { %f162, %f163, %f164, %f165 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f166, %f167, %f168, %f169 }, { %r214, %r215, %r216, %r217 }, { %r224, %r225 }, { %f166, %f167, %f168, %f169 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f170, %f171, %f172, %f173 }, { %r226, %r227, %r228, %r229 }, { %r218, %r219 }, { %f170, %f171, %f172, %f173 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f174, %f175, %f176, %f177 }, { %r226, %r227, %r228, %r229 }, { %r224, %r225 }, { %f174, %f175, %f176, %f177 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f162, %f163, %f164, %f165 }, { %r238, %r239, %r240, %r241 }, { %r242, %r243 }, { %f162, %f163, %f164, %f165 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f166, %f167, %f168, %f169 }, { %r238, %r239, %r240, %r241 }, { %r248, %r249 }, { %f166, %f167, %f168, %f169 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f170, %f171, %f172, %f173 }, { %r250, %r251, %r252, %r253 }, { %r242, %r243 }, { %f170, %f171, %f172, %f173 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f174, %f175, %f176, %f177 }, { %r250, %r251, %r252, %r253 }, { %r248, %r249 }, { %f174, %f175, %f176, %f177 };
	// end inline asm
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd85, %rd85, 1;
	.loc	1 69 89                         // implicit_gemm_kernel.py:69:89
	add.s64 	%rd43, %rd12, %rd84;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd44, %rd11, %rd84;
	cvt.u32.u64 	%r290, %rd43;
	mul.wide.s32 	%rd45, %r290, 4;
	add.s64 	%rd39, %rd18, %rd45;
	cvt.u32.u64 	%r291, %rd44;
	mul.wide.s32 	%rd46, %r291, 4;
	add.s64 	%rd40, %rd18, %rd46;
	.loc	1 70 98                         // implicit_gemm_kernel.py:70:98
	add.s64 	%rd47, %rd7, %rd84;
	setp.lt.s64 	%p25, %rd47, %rd5;
	add.s64 	%rd48, %rd83, %rd84;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	add.s32 	%r292, %r448, %r451;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s32 	%r293, %r449, %r451;
	mul.wide.s32 	%rd49, %r292, 4;
	add.s64 	%rd41, %rd19, %rd49;
	mul.wide.s32 	%rd50, %r293, 4;
	add.s64 	%rd42, %rd19, %rd50;
	cvt.u32.u64 	%r294, %rd48;
	add.s32 	%r295, %r294, 16;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p26, %r295, %r26;
	add.s32 	%r296, %r294, 24;
	setp.lt.s32 	%p27, %r296, %r26;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r297, 16, 0, %p25;
	selp.b32 	%r298, %r297, 0, %p16;
	selp.b32 	%r263, %r298, 0, %p23;
	// begin inline asm
	cp.async.cg.shared.global [ %r173 + 0 ], [ %rd39 + 0 ], 0x10, %r263;
	// end inline asm
	selp.b32 	%r299, %r297, 0, %p17;
	selp.b32 	%r265, %r299, 0, %p23;
	// begin inline asm
	cp.async.cg.shared.global [ %r175 + 0 ], [ %rd40 + 0 ], 0x10, %r265;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r300, 16, 0, %p26;
	selp.b32 	%r301, %r300, 0, %p4;
	selp.b32 	%r267, %r301, 0, %p23;
	// begin inline asm
	cp.async.cg.shared.global [ %r177 + 0 ], [ %rd41 + 0 ], 0x10, %r267;
	// end inline asm
	selp.b32 	%r302, 16, 0, %p27;
	selp.b32 	%r303, %r302, 0, %p4;
	selp.b32 	%r269, %r303, 0, %p23;
	// begin inline asm
	cp.async.cg.shared.global [ %r179 + 0 ], [ %rd42 + 0 ], 0x10, %r269;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd84, %rd84, 16;
	add.s32 	%r451, %r451, %r43;
	setp.ne.s64 	%p28, %rd6, %rd85;
	@%p28 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge18_crit_edge
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r455, %r2, 5;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shl.b32 	%r121, %r4, 5;
	and.b32  	%r454, %r121, 96;
	shl.b32 	%r453, %r4, 4;
	mov.b32 	%r456, 0;
	mov.u32 	%r457, %r456;
	mov.u32 	%r458, %r456;
	mov.u32 	%r459, %r456;
	mov.u32 	%r460, %r456;
	mov.u32 	%r461, %r456;
	mov.u32 	%r462, %r456;
	mov.u32 	%r463, %r456;
	mov.u32 	%r464, %r456;
	mov.u32 	%r465, %r456;
	mov.u32 	%r466, %r456;
	mov.u32 	%r467, %r456;
	mov.u32 	%r468, %r456;
	mov.u32 	%r469, %r456;
	mov.u32 	%r470, %r456;
	mov.u32 	%r471, %r456;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %._crit_edge18.loopexit
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	mov.b32 	%r456, %f162;
	mov.b32 	%r457, %f163;
	mov.b32 	%r458, %f164;
	mov.b32 	%r459, %f165;
	mov.b32 	%r460, %f166;
	mov.b32 	%r461, %f167;
	mov.b32 	%r462, %f168;
	mov.b32 	%r463, %f169;
	mov.b32 	%r464, %f170;
	mov.b32 	%r465, %f171;
	mov.b32 	%r466, %f172;
	mov.b32 	%r467, %f173;
	mov.b32 	%r468, %f174;
	mov.b32 	%r469, %f175;
	mov.b32 	%r470, %f176;
	mov.b32 	%r471, %f177;
$L__BB0_10:                             // %._crit_edge18
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	shr.u32 	%r368, %r10, 5;
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r369, %r14, %r368;
	or.b32  	%r370, %r369, 2;
	or.b32  	%r371, %r369, 4;
	or.b32  	%r372, %r369, 6;
	or.b32  	%r373, %r369, 8;
	or.b32  	%r374, %r369, 10;
	or.b32  	%r375, %r369, 12;
	or.b32  	%r376, %r369, 14;
	or.b32  	%r377, %r369, 16;
	or.b32  	%r378, %r369, 18;
	or.b32  	%r379, %r369, 20;
	or.b32  	%r380, %r369, 22;
	or.b32  	%r381, %r369, 24;
	or.b32  	%r382, %r369, 26;
	or.b32  	%r383, %r369, 28;
	or.b32  	%r384, %r369, 30;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r385, %r369, %r98;
	shl.b32 	%r386, %r98, 1;
	add.s32 	%r387, %r385, %r386;
	add.s32 	%r388, %r387, %r386;
	add.s32 	%r389, %r388, %r386;
	add.s32 	%r390, %r389, %r386;
	add.s32 	%r391, %r390, %r386;
	add.s32 	%r392, %r391, %r386;
	add.s32 	%r393, %r392, %r386;
	add.s32 	%r394, %r393, %r386;
	add.s32 	%r395, %r394, %r386;
	add.s32 	%r396, %r395, %r386;
	add.s32 	%r397, %r396, %r386;
	add.s32 	%r398, %r397, %r386;
	add.s32 	%r399, %r398, %r386;
	add.s32 	%r400, %r399, %r386;
	add.s32 	%r401, %r400, %r386;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r402, %r455, %r13;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r403, %r402, %r385;
	add.s32 	%r404, %r402, %r387;
	add.s32 	%r405, %r402, %r388;
	add.s32 	%r406, %r402, %r389;
	add.s32 	%r407, %r402, %r390;
	add.s32 	%r408, %r402, %r391;
	add.s32 	%r409, %r402, %r392;
	add.s32 	%r410, %r402, %r393;
	add.s32 	%r411, %r402, %r394;
	add.s32 	%r412, %r402, %r395;
	add.s32 	%r413, %r402, %r396;
	add.s32 	%r414, %r402, %r397;
	add.s32 	%r415, %r402, %r398;
	add.s32 	%r416, %r402, %r399;
	add.s32 	%r417, %r402, %r400;
	add.s32 	%r418, %r402, %r401;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd67, %r403, 4;
	add.s64 	%rd51, %rd20, %rd67;
	mul.wide.s32 	%rd68, %r404, 4;
	add.s64 	%rd52, %rd20, %rd68;
	mul.wide.s32 	%rd69, %r405, 4;
	add.s64 	%rd53, %rd20, %rd69;
	mul.wide.s32 	%rd70, %r406, 4;
	add.s64 	%rd54, %rd20, %rd70;
	mul.wide.s32 	%rd71, %r407, 4;
	add.s64 	%rd55, %rd20, %rd71;
	mul.wide.s32 	%rd72, %r408, 4;
	add.s64 	%rd56, %rd20, %rd72;
	mul.wide.s32 	%rd73, %r409, 4;
	add.s64 	%rd57, %rd20, %rd73;
	mul.wide.s32 	%rd74, %r410, 4;
	add.s64 	%rd58, %rd20, %rd74;
	mul.wide.s32 	%rd75, %r411, 4;
	add.s64 	%rd59, %rd20, %rd75;
	mul.wide.s32 	%rd76, %r412, 4;
	add.s64 	%rd60, %rd20, %rd76;
	mul.wide.s32 	%rd77, %r413, 4;
	add.s64 	%rd61, %rd20, %rd77;
	mul.wide.s32 	%rd78, %r414, 4;
	add.s64 	%rd62, %rd20, %rd78;
	mul.wide.s32 	%rd79, %r415, 4;
	add.s64 	%rd63, %rd20, %rd79;
	mul.wide.s32 	%rd80, %r416, 4;
	add.s64 	%rd64, %rd20, %rd80;
	mul.wide.s32 	%rd81, %r417, 4;
	add.s64 	%rd65, %rd20, %rd81;
	mul.wide.s32 	%rd82, %r418, 4;
	add.s64 	%rd66, %rd20, %rd82;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p62, %r369, %r96;
	setp.lt.s32 	%p63, %r370, %r96;
	setp.lt.s32 	%p64, %r371, %r96;
	setp.lt.s32 	%p65, %r372, %r96;
	setp.lt.s32 	%p66, %r373, %r96;
	setp.lt.s32 	%p67, %r374, %r96;
	setp.lt.s32 	%p68, %r375, %r96;
	setp.lt.s32 	%p69, %r376, %r96;
	setp.lt.s32 	%p70, %r377, %r96;
	setp.lt.s32 	%p71, %r378, %r96;
	setp.lt.s32 	%p72, %r379, %r96;
	setp.lt.s32 	%p73, %r380, %r96;
	setp.lt.s32 	%p74, %r381, %r96;
	setp.lt.s32 	%p75, %r382, %r96;
	setp.lt.s32 	%p76, %r383, %r96;
	setp.lt.s32 	%p77, %r384, %r96;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p78, %r402, %r98;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p46, %p62, %p78;
	and.pred  	%p47, %p63, %p78;
	and.pred  	%p48, %p64, %p78;
	and.pred  	%p49, %p65, %p78;
	and.pred  	%p50, %p66, %p78;
	and.pred  	%p51, %p67, %p78;
	and.pred  	%p52, %p68, %p78;
	and.pred  	%p53, %p69, %p78;
	and.pred  	%p54, %p70, %p78;
	and.pred  	%p55, %p71, %p78;
	and.pred  	%p56, %p72, %p78;
	and.pred  	%p57, %p73, %p78;
	and.pred  	%p58, %p74, %p78;
	and.pred  	%p59, %p75, %p78;
	and.pred  	%p60, %p76, %p78;
	and.pred  	%p61, %p77, %p78;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shl.b32 	%r419, %r10, 2;
	or.b32  	%r420, %r454, %r419;
	or.b32  	%r421, %r9, %r420;
	and.b32  	%r422, %r453, 496;
	or.b32  	%r423, %r422, %r368;
	shr.u32 	%r424, %r420, 2;
	add.s32 	%r426, %r447, %r424;
	shl.b32 	%r427, %r421, 2;
	add.s32 	%r304, %r426, %r427;
	mov.pred 	%p30, -1;
	// begin inline asm
	@%p30 st.shared.b32 [ %r304 + 0 ], %r456;
	// end inline asm
	or.b32  	%r428, %r420, 16;
	shr.u32 	%r429, %r428, 2;
	and.b32  	%r430, %r429, 60;
	add.s32 	%r431, %r447, %r430;
	add.s32 	%r432, %r431, %r427;
	add.s32 	%r306, %r432, 64;
	// begin inline asm
	@%p30 st.shared.b32 [ %r306 + 0 ], %r457;
	// end inline asm
	add.s32 	%r308, %r304, 32;
	// begin inline asm
	@%p30 st.shared.b32 [ %r308 + 0 ], %r458;
	// end inline asm
	add.s32 	%r310, %r432, 96;
	// begin inline asm
	@%p30 st.shared.b32 [ %r310 + 0 ], %r459;
	// end inline asm
	or.b32  	%r433, %r420, 256;
	shr.u32 	%r434, %r433, 2;
	and.b32  	%r435, %r434, 124;
	add.s32 	%r436, %r447, %r435;
	add.s32 	%r437, %r436, %r427;
	add.s32 	%r312, %r437, 1024;
	// begin inline asm
	@%p30 st.shared.b32 [ %r312 + 0 ], %r460;
	// end inline asm
	or.b32  	%r438, %r420, 272;
	shr.u32 	%r439, %r438, 2;
	and.b32  	%r440, %r439, 124;
	add.s32 	%r441, %r447, %r440;
	add.s32 	%r442, %r441, %r427;
	add.s32 	%r314, %r442, 1088;
	// begin inline asm
	@%p30 st.shared.b32 [ %r314 + 0 ], %r461;
	// end inline asm
	add.s32 	%r316, %r437, 1056;
	// begin inline asm
	@%p30 st.shared.b32 [ %r316 + 0 ], %r462;
	// end inline asm
	add.s32 	%r318, %r442, 1120;
	// begin inline asm
	@%p30 st.shared.b32 [ %r318 + 0 ], %r463;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r443, %r422, 2;
	add.s32 	%r444, %r447, %r443;
	shl.b32 	%r445, %r423, 2;
	add.s32 	%r446, %r444, %r445;
	ld.shared.u32 	%r337, [%r446];
	ld.shared.u32 	%r339, [%r446+8];
	ld.shared.u32 	%r341, [%r446+16];
	ld.shared.u32 	%r343, [%r446+24];
	ld.shared.u32 	%r345, [%r446+32];
	ld.shared.u32 	%r347, [%r446+40];
	ld.shared.u32 	%r349, [%r446+48];
	ld.shared.u32 	%r351, [%r446+56];
	bar.sync 	0;
	// begin inline asm
	@%p30 st.shared.b32 [ %r304 + 0 ], %r464;
	// end inline asm
	// begin inline asm
	@%p30 st.shared.b32 [ %r306 + 0 ], %r465;
	// end inline asm
	// begin inline asm
	@%p30 st.shared.b32 [ %r308 + 0 ], %r466;
	// end inline asm
	// begin inline asm
	@%p30 st.shared.b32 [ %r310 + 0 ], %r467;
	// end inline asm
	// begin inline asm
	@%p30 st.shared.b32 [ %r312 + 0 ], %r468;
	// end inline asm
	// begin inline asm
	@%p30 st.shared.b32 [ %r314 + 0 ], %r469;
	// end inline asm
	// begin inline asm
	@%p30 st.shared.b32 [ %r316 + 0 ], %r470;
	// end inline asm
	// begin inline asm
	@%p30 st.shared.b32 [ %r318 + 0 ], %r471;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r353, [%r446];
	ld.shared.u32 	%r355, [%r446+8];
	ld.shared.u32 	%r357, [%r446+16];
	ld.shared.u32 	%r359, [%r446+24];
	ld.shared.u32 	%r361, [%r446+32];
	ld.shared.u32 	%r363, [%r446+40];
	ld.shared.u32 	%r365, [%r446+48];
	ld.shared.u32 	%r367, [%r446+56];
	// begin inline asm
	mov.u32 %r336, 0x0;
	@%p46 atom.global.gpu.acq_rel.add.f32 %r336, [ %rd51 + 0 ], %r337;
	// end inline asm
	// begin inline asm
	mov.u32 %r338, 0x0;
	@%p47 atom.global.gpu.acq_rel.add.f32 %r338, [ %rd52 + 0 ], %r339;
	// end inline asm
	// begin inline asm
	mov.u32 %r340, 0x0;
	@%p48 atom.global.gpu.acq_rel.add.f32 %r340, [ %rd53 + 0 ], %r341;
	// end inline asm
	// begin inline asm
	mov.u32 %r342, 0x0;
	@%p49 atom.global.gpu.acq_rel.add.f32 %r342, [ %rd54 + 0 ], %r343;
	// end inline asm
	// begin inline asm
	mov.u32 %r344, 0x0;
	@%p50 atom.global.gpu.acq_rel.add.f32 %r344, [ %rd55 + 0 ], %r345;
	// end inline asm
	// begin inline asm
	mov.u32 %r346, 0x0;
	@%p51 atom.global.gpu.acq_rel.add.f32 %r346, [ %rd56 + 0 ], %r347;
	// end inline asm
	// begin inline asm
	mov.u32 %r348, 0x0;
	@%p52 atom.global.gpu.acq_rel.add.f32 %r348, [ %rd57 + 0 ], %r349;
	// end inline asm
	// begin inline asm
	mov.u32 %r350, 0x0;
	@%p53 atom.global.gpu.acq_rel.add.f32 %r350, [ %rd58 + 0 ], %r351;
	// end inline asm
	// begin inline asm
	mov.u32 %r352, 0x0;
	@%p54 atom.global.gpu.acq_rel.add.f32 %r352, [ %rd59 + 0 ], %r353;
	// end inline asm
	// begin inline asm
	mov.u32 %r354, 0x0;
	@%p55 atom.global.gpu.acq_rel.add.f32 %r354, [ %rd60 + 0 ], %r355;
	// end inline asm
	// begin inline asm
	mov.u32 %r356, 0x0;
	@%p56 atom.global.gpu.acq_rel.add.f32 %r356, [ %rd61 + 0 ], %r357;
	// end inline asm
	// begin inline asm
	mov.u32 %r358, 0x0;
	@%p57 atom.global.gpu.acq_rel.add.f32 %r358, [ %rd62 + 0 ], %r359;
	// end inline asm
	// begin inline asm
	mov.u32 %r360, 0x0;
	@%p58 atom.global.gpu.acq_rel.add.f32 %r360, [ %rd63 + 0 ], %r361;
	// end inline asm
	// begin inline asm
	mov.u32 %r362, 0x0;
	@%p59 atom.global.gpu.acq_rel.add.f32 %r362, [ %rd64 + 0 ], %r363;
	// end inline asm
	// begin inline asm
	mov.u32 %r364, 0x0;
	@%p60 atom.global.gpu.acq_rel.add.f32 %r364, [ %rd65 + 0 ], %r365;
	// end inline asm
	// begin inline asm
	mov.u32 %r366, 0x0;
	@%p61 atom.global.gpu.acq_rel.add.f32 %r366, [ %rd66 + 0 ], %r367;
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 150                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x8f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
