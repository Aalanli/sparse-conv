//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<65>;
	.reg .b32 	%r<410>;
	.reg .f32 	%f<138>;
	.reg .b64 	%rd<93>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r87, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r85, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd27, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r88, %ctaid.x;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r89, %r85, 31;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r90, %r89, 31;
	shr.u32 	%r91, %r90, 27;
	add.s32 	%r92, %r89, %r91;
	shr.s32 	%r93, %r92, 5;
$L__tmp2:
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r1, %r88, %r93;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r95, %r1, %r93;
	sub.s32 	%r96, %r88, %r95;
	ld.param.u32 	%r97, [implicit_conv3d_kernel_param_8];
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r98, %r97, %r97;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r2, %r98, %r97;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r3, %tid.x;
	and.b32  	%r4, %r3, 16;
	and.b32  	%r5, %r3, 32;
	and.b32  	%r7, %r3, 15;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r8, %r96, 5;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.gt.s32 	%p7, %r2, 0;
	mov.u32 	%r393, global_smem;
	@%p7 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph19
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r86, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r84, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd26, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd25, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd28, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	bfe.u32 	%r6, %r3, 3, 3;
	and.b32  	%r99, %r3, 31;
	or.b32  	%r9, %r8, %r6;
	or.b32  	%r10, %r9, 8;
	or.b32  	%r11, %r9, 16;
	or.b32  	%r12, %r9, 24;
	or.b32  	%r13, %r8, %r99;
	mul.lo.s32 	%r100, %r9, %r2;
	shl.b32 	%r101, %r2, 3;
	add.s32 	%r102, %r100, %r101;
	add.s32 	%r103, %r102, %r101;
	add.s32 	%r104, %r103, %r101;
	mul.lo.s32 	%r105, %r13, %r2;
	mul.wide.s32 	%rd29, %r100, 4;
	add.s64 	%rd1, %rd28, %rd29;
	mul.wide.s32 	%rd30, %r102, 4;
	add.s64 	%rd2, %rd28, %rd30;
	mul.wide.s32 	%rd31, %r103, 4;
	add.s64 	%rd3, %rd28, %rd31;
	mul.wide.s32 	%rd32, %r104, 4;
	add.s64 	%rd4, %rd28, %rd32;
	mul.wide.s32 	%rd33, %r105, 4;
	add.s64 	%rd5, %rd28, %rd33;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r107, %r3, 8;
	add.s32 	%r18, %r86, 31;
	shr.s32 	%r108, %r18, 31;
	shr.u32 	%r109, %r108, 27;
	add.s32 	%r110, %r18, %r109;
	shr.s32 	%r111, %r110, 5;
	shl.b32 	%r112, %r3, 2;
	and.b32  	%r113, %r112, 4;
	and.b32  	%r114, %r112, 8;
	and.b32  	%r115, %r112, 12;
	and.b32  	%r116, %r112, 16;
	and.b32  	%r19, %r112, 28;
	shr.u32 	%r399, %r4, 2;
	shr.u32 	%r117, %r3, 2;
	and.b32  	%r118, %r117, 11;
	or.b32  	%r21, %r118, %r399;
	or.b32  	%r22, %r21, 16;
	shl.b32 	%r401, %r1, 4;
	mul.lo.s32 	%r24, %r2, %r86;
	or.b32  	%r25, %r401, %r115;
	setp.lt.s32 	%p8, %r25, %r87;
	setp.gt.s32 	%p9, %r18, 31;
	setp.lt.s32 	%p10, %r19, %r86;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p1, %p10, %p9;
	shr.u32 	%r119, %r3, 1;
	and.b32  	%r120, %r119, 12;
	shr.u32 	%r398, %r5, 1;
	or.b32  	%r121, %r398, %r120;
	xor.b32  	%r122, %r121, %r19;
	shl.b32 	%r123, %r122, 2;
	shl.b32 	%r124, %r6, 7;
	or.b32  	%r125, %r124, %r123;
	add.s32 	%r162, %r393, %r125;
	add.s32 	%r164, %r162, 1024;
	add.s32 	%r166, %r162, 2048;
	add.s32 	%r168, %r162, 3072;
	xor.b32  	%r127, %r115, %r107;
	shl.b32 	%r128, %r127, 2;
	shl.b32 	%r129, %r21, 6;
	or.b32  	%r130, %r129, %r128;
	add.s32 	%r131, %r393, %r130;
	add.s32 	%r170, %r131, 4096;
	add.s32 	%r172, %r131, 5120;
	add.s32 	%r132, %r111, -1;
	xor.b32  	%r133, %r19, %r399;
	or.b32  	%r134, %r398, %r7;
	shl.b32 	%r135, %r134, 5;
	or.b32  	%r33, %r133, %r135;
	or.b32  	%r136, %r113, 8;
	xor.b32  	%r137, %r136, %r114;
	or.b32  	%r138, %r137, %r116;
	xor.b32  	%r139, %r138, %r399;
	or.b32  	%r34, %r139, %r135;
	or.b32  	%r140, %r115, 16;
	or.b32  	%r141, %r399, %r116;
	xor.b32  	%r142, %r141, %r140;
	or.b32  	%r35, %r142, %r135;
	or.b32  	%r143, %r113, 24;
	or.b32  	%r144, %r141, %r114;
	xor.b32  	%r145, %r144, %r143;
	or.b32  	%r36, %r145, %r135;
	bfe.u32 	%r400, %r3, 2, 2;
	or.b32  	%r146, %r399, %r400;
	or.b32  	%r38, %r146, %r114;
	shl.b32 	%r147, %r3, 4;
	and.b32  	%r39, %r147, 48;
	or.b32  	%r40, %r38, %r39;
	xor.b32  	%r41, %r38, 8;
	or.b32  	%r42, %r41, %r39;
	cvt.s64.s32 	%rd6, %r132;
	cvt.u64.u32 	%rd35, %r19;
	cvt.s64.s32 	%rd7, %r86;
	cvt.u64.u32 	%rd8, %r2;
	cvt.u64.u32 	%rd9, %r111;
	and.pred  	%p2, %p8, %p9;
	or.b64  	%rd10, %rd35, 32;
	add.s32 	%r148, %r118, %r399;
	cvt.u64.u32 	%rd89, %r148;
	cvt.u64.u32 	%rd12, %r86;
	add.s32 	%r149, %r148, 48;
	mad.lo.s32 	%r150, %r87, %r149, %r401;
	add.s32 	%r395, %r150, %r115;
	mul.lo.s32 	%r44, %r87, %r86;
	shl.b32 	%r45, %r87, 5;
	or.b32  	%r151, %r148, 32;
	mad.lo.s32 	%r152, %r87, %r151, %r401;
	add.s32 	%r394, %r152, %r115;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	or.b32  	%r47, %r19, 32;
	mov.f32 	%f114, 0f00000000;
	mov.b64 	%rd90, 0;
	setp.lt.s32 	%p15, %r13, %r85;
	shl.b32 	%r276, %r33, 2;
	shl.b32 	%r277, %r34, 2;
	shl.b32 	%r278, %r35, 2;
	shl.b32 	%r279, %r36, 2;
	shl.b32 	%r283, %r40, 2;
	shl.b32 	%r288, %r42, 2;
	mov.f32 	%f115, %f114;
	mov.f32 	%f116, %f114;
	mov.f32 	%f117, %f114;
	mov.f32 	%f118, %f114;
	mov.f32 	%f119, %f114;
	mov.f32 	%f120, %f114;
	mov.f32 	%f121, %f114;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s64 	%rd90, %rd90, 1;
	add.s64 	%rd89, %rd89, %rd12;
	add.s32 	%r395, %r395, %r44;
	add.s32 	%r394, %r394, %r44;
	setp.ne.s64 	%p39, %rd90, %rd8;
	@%p39 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p14, %r12, %r85;
	setp.lt.s32 	%p13, %r11, %r85;
	setp.lt.s32 	%p12, %r10, %r85;
	setp.lt.s32 	%p11, %r9, %r85;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	shl.b64 	%rd41, %rd90, 2;
	add.s64 	%rd36, %rd1, %rd41;
	add.s64 	%rd37, %rd2, %rd41;
	add.s64 	%rd38, %rd3, %rd41;
	add.s64 	%rd39, %rd4, %rd41;
	add.s64 	%rd40, %rd5, %rd41;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r153, 0xffffffffffffffff;
	@%p11 ld.global.b32 { %r153 }, [ %rd36 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r154, 0xffffffffffffffff;
	@%p12 ld.global.b32 { %r154 }, [ %rd37 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r155, 0xffffffffffffffff;
	@%p13 ld.global.b32 { %r155 }, [ %rd38 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r156, 0xffffffffffffffff;
	@%p14 ld.global.b32 { %r156 }, [ %rd39 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r157, 0xffffffffffffffff;
	@%p15 ld.global.b32 { %r157 }, [ %rd40 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p20, %r157, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p25, %r157, %r84;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p26, %p20, %p25;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r158, 1, 0, %p26;
	mov.b32 	%r159, -1;
	redux.sync.or.b32 %r160, %r158, %r159;
	and.b32  	%r161, %r160, 1;
	setp.eq.b32 	%p27, %r161, 1;
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p28, %p27;
	@%p28 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.gt.s32 	%p16, %r153, -1;
	setp.gt.s32 	%p17, %r154, -1;
	setp.gt.s32 	%p18, %r155, -1;
	setp.gt.s32 	%p19, %r156, -1;
	setp.lt.s32 	%p21, %r153, %r84;
	setp.lt.s32 	%p22, %r154, %r84;
	setp.lt.s32 	%p23, %r155, %r84;
	setp.lt.s32 	%p24, %r156, %r84;
	and.pred  	%p3, %p16, %p21;
	and.pred  	%p4, %p17, %p22;
	and.pred  	%p5, %p18, %p23;
	and.pred  	%p6, %p19, %p24;
	setp.lt.s32 	%p29, %r18, 32;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	cvt.u32.u64 	%r174, %rd90;
	mul.lo.s32 	%r175, %r86, %r174;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r54, %r153, %r86;
	mul.lo.s32 	%r55, %r154, %r86;
	mul.lo.s32 	%r56, %r155, %r86;
	mul.lo.s32 	%r57, %r156, %r86;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r176, %r54, %r19;
	add.s32 	%r177, %r55, %r19;
	add.s32 	%r178, %r56, %r19;
	add.s32 	%r179, %r57, %r19;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd48, %r176, 4;
	add.s64 	%rd42, %rd25, %rd48;
	mul.wide.s32 	%rd49, %r177, 4;
	add.s64 	%rd43, %rd25, %rd49;
	mul.wide.s32 	%rd50, %r178, 4;
	add.s64 	%rd44, %rd25, %rd50;
	mul.wide.s32 	%rd51, %r179, 4;
	add.s64 	%rd45, %rd25, %rd51;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s32 	%r180, %r175, %r21;
	add.s32 	%r181, %r175, %r22;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r182, %r180, %r87, %r25;
	mad.lo.s32 	%r183, %r181, %r87, %r25;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd52, %r182, 4;
	add.s64 	%rd46, %rd26, %rd52;
	mul.wide.s32 	%rd53, %r183, 4;
	add.s64 	%rd47, %rd26, %rd53;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p30, %r180, %r24;
	setp.lt.s32 	%p31, %r181, %r24;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	selp.b32 	%r184, 16, 0, %p1;
	selp.b32 	%r163, %r184, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r162 + 0 ], [ %rd42 + 0 ], 0x10, %r163;
	// end inline asm
	selp.b32 	%r165, %r184, 0, %p4;
	// begin inline asm
	cp.async.cg.shared.global [ %r164 + 0 ], [ %rd43 + 0 ], 0x10, %r165;
	// end inline asm
	selp.b32 	%r167, %r184, 0, %p5;
	// begin inline asm
	cp.async.cg.shared.global [ %r166 + 0 ], [ %rd44 + 0 ], 0x10, %r167;
	// end inline asm
	selp.b32 	%r169, %r184, 0, %p6;
	// begin inline asm
	cp.async.cg.shared.global [ %r168 + 0 ], [ %rd45 + 0 ], 0x10, %r169;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r185, 16, 0, %p2;
	selp.b32 	%r171, %r185, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r170 + 0 ], [ %rd46 + 0 ], 0x10, %r171;
	// end inline asm
	selp.b32 	%r173, %r185, 0, %p31;
	// begin inline asm
	cp.async.cg.shared.global [ %r172 + 0 ], [ %rd47 + 0 ], 0x10, %r173;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p29 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r188, %r47, %r57;
	cvt.u64.u32 	%rd15, %r188;
	add.s32 	%r189, %r47, %r56;
	cvt.u64.u32 	%rd16, %r189;
	add.s32 	%r190, %r47, %r55;
	cvt.u64.u32 	%rd17, %r190;
	add.s32 	%r191, %r47, %r54;
	cvt.u64.u32 	%rd18, %r191;
	mov.b32 	%r397, -1;
	mov.b64 	%rd91, 0;
	mov.b32 	%r396, 0;
	mov.u64 	%rd92, %rd91;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p33, %rd92, %rd6;
	add.s32 	%r272, %r397, 1;
	setp.gt.u32 	%p34, %r397, 2147483646;
	selp.b32 	%r397, %r272, 0, %p34;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r273, %r397, 12;
	add.s32 	%r275, %r393, %r273;
	add.s32 	%r196, %r275, %r276;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r212, %r213, %r214, %r215}, [%r196];
	// end inline asm
	add.s32 	%r201, %r275, %r277;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r224, %r225, %r226, %r227}, [%r201];
	// end inline asm
	add.s32 	%r206, %r275, %r278;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r236, %r237, %r238, %r239}, [%r206];
	// end inline asm
	add.s32 	%r211, %r275, %r279;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r248, %r249, %r250, %r251}, [%r211];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	shl.b32 	%r280, %r397, 11;
	add.s32 	%r281, %r393, %r280;
	add.s32 	%r282, %r281, 4096;
	add.s32 	%r284, %r282, %r283;
	ld.shared.u32 	%r216, [%r284];
	add.s32 	%r285, %r38, %r39;
	shl.b32 	%r286, %r285, 2;
	add.s32 	%r287, %r282, %r286;
	ld.shared.u32 	%r217, [%r287+256];
	ld.shared.u32 	%r228, [%r287+512];
	ld.shared.u32 	%r229, [%r287+768];
	ld.shared.u32 	%r240, [%r287+1024];
	ld.shared.u32 	%r241, [%r287+1280];
	ld.shared.u32 	%r252, [%r287+1536];
	ld.shared.u32 	%r253, [%r287+1792];
	add.s32 	%r289, %r282, %r288;
	ld.shared.u32 	%r222, [%r289];
	add.s32 	%r290, %r41, %r39;
	shl.b32 	%r291, %r290, 2;
	add.s32 	%r292, %r282, %r291;
	ld.shared.u32 	%r223, [%r292+256];
	ld.shared.u32 	%r234, [%r292+512];
	ld.shared.u32 	%r235, [%r292+768];
	ld.shared.u32 	%r246, [%r292+1024];
	ld.shared.u32 	%r247, [%r292+1280];
	ld.shared.u32 	%r258, [%r292+1536];
	ld.shared.u32 	%r259, [%r292+1792];
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f114, %f115, %f116, %f117 }, { %r212, %r213, %r214, %r215 }, { %r216, %r217 }, { %f114, %f115, %f116, %f117 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f118, %f119, %f120, %f121 }, { %r212, %r213, %r214, %r215 }, { %r222, %r223 }, { %f118, %f119, %f120, %f121 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f114, %f115, %f116, %f117 }, { %r224, %r225, %r226, %r227 }, { %r228, %r229 }, { %f114, %f115, %f116, %f117 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f118, %f119, %f120, %f121 }, { %r224, %r225, %r226, %r227 }, { %r234, %r235 }, { %f118, %f119, %f120, %f121 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f114, %f115, %f116, %f117 }, { %r236, %r237, %r238, %r239 }, { %r240, %r241 }, { %f114, %f115, %f116, %f117 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f118, %f119, %f120, %f121 }, { %r236, %r237, %r238, %r239 }, { %r246, %r247 }, { %f118, %f119, %f120, %f121 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f114, %f115, %f116, %f117 }, { %r248, %r249, %r250, %r251 }, { %r252, %r253 }, { %f114, %f115, %f116, %f117 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f118, %f119, %f120, %f121 }, { %r248, %r249, %r250, %r251 }, { %r258, %r259 }, { %f118, %f119, %f120, %f121 };
	// end inline asm
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd92, %rd92, 1;
	.loc	1 69 89                         // implicit_gemm_kernel.py:69:89
	add.s64 	%rd61, %rd18, %rd91;
	add.s64 	%rd62, %rd17, %rd91;
	add.s64 	%rd63, %rd16, %rd91;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd64, %rd15, %rd91;
	cvt.u32.u64 	%r293, %rd61;
	mul.wide.s32 	%rd65, %r293, 4;
	add.s64 	%rd55, %rd25, %rd65;
	cvt.u32.u64 	%r294, %rd62;
	mul.wide.s32 	%rd66, %r294, 4;
	add.s64 	%rd56, %rd25, %rd66;
	cvt.u32.u64 	%r295, %rd63;
	mul.wide.s32 	%rd67, %r295, 4;
	add.s64 	%rd57, %rd25, %rd67;
	cvt.u32.u64 	%r296, %rd64;
	mul.wide.s32 	%rd68, %r296, 4;
	add.s64 	%rd58, %rd25, %rd68;
	.loc	1 70 112                        // implicit_gemm_kernel.py:70:112
	add.s64 	%rd69, %rd10, %rd91;
	setp.lt.s64 	%p35, %rd69, %rd7;
	add.s64 	%rd70, %rd89, %rd91;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	add.s32 	%r297, %r394, %r396;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s32 	%r298, %r395, %r396;
	mul.wide.s32 	%rd71, %r297, 4;
	add.s64 	%rd59, %rd26, %rd71;
	mul.wide.s32 	%rd72, %r298, 4;
	add.s64 	%rd60, %rd26, %rd72;
	cvt.u32.u64 	%r299, %rd70;
	add.s32 	%r300, %r299, 32;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p36, %r300, %r24;
	add.s32 	%r301, %r299, 48;
	setp.lt.s32 	%p37, %r301, %r24;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r302, 16, 0, %p35;
	selp.b32 	%r303, %r302, 0, %p3;
	selp.b32 	%r261, %r303, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r162 + 0 ], [ %rd55 + 0 ], 0x10, %r261;
	// end inline asm
	selp.b32 	%r304, %r302, 0, %p4;
	selp.b32 	%r263, %r304, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r164 + 0 ], [ %rd56 + 0 ], 0x10, %r263;
	// end inline asm
	selp.b32 	%r305, %r302, 0, %p5;
	selp.b32 	%r265, %r305, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r166 + 0 ], [ %rd57 + 0 ], 0x10, %r265;
	// end inline asm
	selp.b32 	%r306, %r302, 0, %p6;
	selp.b32 	%r267, %r306, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r168 + 0 ], [ %rd58 + 0 ], 0x10, %r267;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r307, 16, 0, %p36;
	selp.b32 	%r308, %r307, 0, %p8;
	selp.b32 	%r269, %r308, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r170 + 0 ], [ %rd59 + 0 ], 0x10, %r269;
	// end inline asm
	selp.b32 	%r309, 16, 0, %p37;
	selp.b32 	%r310, %r309, 0, %p8;
	selp.b32 	%r271, %r310, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r172 + 0 ], [ %rd60 + 0 ], 0x10, %r271;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd91, %rd91, 32;
	add.s32 	%r396, %r396, %r45;
	setp.ne.s64 	%p38, %rd9, %rd92;
	@%p38 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_9:                              // %._crit_edge20.loopexit
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	mov.b32 	%r402, %f114;
	mov.b32 	%r403, %f115;
	mov.b32 	%r404, %f116;
	mov.b32 	%r405, %f117;
	mov.b32 	%r406, %f118;
	mov.b32 	%r407, %f119;
	mov.b32 	%r408, %f120;
	mov.b32 	%r409, %f121;
	bra.uni 	$L__BB0_10;
$L__BB0_1:                              // %.._crit_edge20_crit_edge
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r401, %r1, 4;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	bfe.u32 	%r400, %r3, 2, 2;
	shr.u32 	%r399, %r4, 2;
	shr.u32 	%r398, %r5, 1;
	mov.b32 	%r402, 0;
	mov.u32 	%r403, %r402;
	mov.u32 	%r404, %r402;
	mov.u32 	%r405, %r402;
	mov.u32 	%r406, %r402;
	mov.u32 	%r407, %r402;
	mov.u32 	%r408, %r402;
	mov.u32 	%r409, %r402;
$L__BB0_10:                             // %._crit_edge20
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	bfe.u32 	%r335, %r3, 4, 2;
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r336, %r335, %r8;
	or.b32  	%r337, %r336, 4;
	or.b32  	%r338, %r336, 8;
	or.b32  	%r339, %r336, 12;
	or.b32  	%r340, %r336, 16;
	or.b32  	%r341, %r336, 20;
	or.b32  	%r342, %r336, 24;
	or.b32  	%r343, %r336, 28;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r344, %r336, %r87;
	shl.b32 	%r345, %r87, 2;
	add.s32 	%r346, %r344, %r345;
	add.s32 	%r347, %r346, %r345;
	add.s32 	%r348, %r347, %r345;
	add.s32 	%r349, %r348, %r345;
	add.s32 	%r350, %r349, %r345;
	add.s32 	%r351, %r350, %r345;
	add.s32 	%r352, %r351, %r345;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r353, %r401, %r7;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r354, %r353, %r344;
	add.s32 	%r355, %r353, %r346;
	add.s32 	%r356, %r353, %r347;
	add.s32 	%r357, %r353, %r348;
	add.s32 	%r358, %r353, %r349;
	add.s32 	%r359, %r353, %r350;
	add.s32 	%r360, %r353, %r351;
	add.s32 	%r361, %r353, %r352;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd81, %r354, 4;
	add.s64 	%rd73, %rd27, %rd81;
	mul.wide.s32 	%rd82, %r355, 4;
	add.s64 	%rd74, %rd27, %rd82;
	mul.wide.s32 	%rd83, %r356, 4;
	add.s64 	%rd75, %rd27, %rd83;
	mul.wide.s32 	%rd84, %r357, 4;
	add.s64 	%rd76, %rd27, %rd84;
	mul.wide.s32 	%rd85, %r358, 4;
	add.s64 	%rd77, %rd27, %rd85;
	mul.wide.s32 	%rd86, %r359, 4;
	add.s64 	%rd78, %rd27, %rd86;
	mul.wide.s32 	%rd87, %r360, 4;
	add.s64 	%rd79, %rd27, %rd87;
	mul.wide.s32 	%rd88, %r361, 4;
	add.s64 	%rd80, %rd27, %rd88;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p56, %r336, %r85;
	setp.lt.s32 	%p57, %r337, %r85;
	setp.lt.s32 	%p58, %r338, %r85;
	setp.lt.s32 	%p59, %r339, %r85;
	setp.lt.s32 	%p60, %r340, %r85;
	setp.lt.s32 	%p61, %r341, %r85;
	setp.lt.s32 	%p62, %r342, %r85;
	setp.lt.s32 	%p63, %r343, %r85;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p64, %r353, %r87;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p48, %p56, %p64;
	and.pred  	%p49, %p57, %p64;
	and.pred  	%p50, %p58, %p64;
	and.pred  	%p51, %p59, %p64;
	and.pred  	%p52, %p60, %p64;
	and.pred  	%p53, %p61, %p64;
	and.pred  	%p54, %p62, %p64;
	and.pred  	%p55, %p63, %p64;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	shl.b32 	%r362, %r3, 6;
	and.b32  	%r363, %r362, 192;
	or.b32  	%r364, %r399, %r398;
	or.b32  	%r365, %r364, %r400;
	or.b32  	%r366, %r365, %r363;
	shl.b32 	%r367, %r3, 5;
	and.b32  	%r368, %r367, 480;
	or.b32  	%r369, %r335, %r368;
	shr.u32 	%r370, %r363, 3;
	add.s32 	%r372, %r393, %r370;
	shl.b32 	%r373, %r366, 2;
	add.s32 	%r311, %r372, %r373;
	mov.pred 	%p40, -1;
	// begin inline asm
	@%p40 st.shared.b32 [ %r311 + 0 ], %r402;
	// end inline asm
	or.b32  	%r374, %r366, 32;
	shr.u32 	%r375, %r374, 3;
	and.b32  	%r376, %r375, 28;
	add.s32 	%r377, %r393, %r376;
	add.s32 	%r378, %r377, %r373;
	add.s32 	%r313, %r378, 128;
	// begin inline asm
	@%p40 st.shared.b32 [ %r313 + 0 ], %r403;
	// end inline asm
	add.s32 	%r315, %r311, 32;
	// begin inline asm
	@%p40 st.shared.b32 [ %r315 + 0 ], %r404;
	// end inline asm
	add.s32 	%r317, %r378, 160;
	// begin inline asm
	@%p40 st.shared.b32 [ %r317 + 0 ], %r405;
	// end inline asm
	or.b32  	%r379, %r366, 256;
	shr.u32 	%r380, %r379, 3;
	and.b32  	%r381, %r380, 56;
	add.s32 	%r382, %r393, %r381;
	add.s32 	%r383, %r382, %r373;
	add.s32 	%r319, %r383, 1024;
	// begin inline asm
	@%p40 st.shared.b32 [ %r319 + 0 ], %r406;
	// end inline asm
	or.b32  	%r384, %r366, 288;
	shr.u32 	%r385, %r384, 3;
	and.b32  	%r386, %r385, 60;
	add.s32 	%r387, %r393, %r386;
	add.s32 	%r388, %r387, %r373;
	add.s32 	%r321, %r388, 1152;
	// begin inline asm
	@%p40 st.shared.b32 [ %r321 + 0 ], %r407;
	// end inline asm
	add.s32 	%r323, %r383, 1056;
	// begin inline asm
	@%p40 st.shared.b32 [ %r323 + 0 ], %r408;
	// end inline asm
	add.s32 	%r325, %r388, 1184;
	// begin inline asm
	@%p40 st.shared.b32 [ %r325 + 0 ], %r409;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r389, %r368, 3;
	add.s32 	%r390, %r393, %r389;
	shl.b32 	%r391, %r369, 2;
	add.s32 	%r392, %r390, %r391;
	ld.shared.u32 	%r327, [%r392];
	ld.shared.u32 	%r328, [%r392+16];
	ld.shared.u32 	%r329, [%r392+32];
	ld.shared.u32 	%r330, [%r392+48];
	ld.shared.u32 	%r331, [%r392+64];
	ld.shared.u32 	%r332, [%r392+80];
	ld.shared.u32 	%r333, [%r392+96];
	ld.shared.u32 	%r334, [%r392+112];
	// begin inline asm
	@%p48 st.global.b32 [ %rd73 + 0 ], { %r327 };
	// end inline asm
	// begin inline asm
	@%p49 st.global.b32 [ %rd74 + 0 ], { %r328 };
	// end inline asm
	// begin inline asm
	@%p50 st.global.b32 [ %rd75 + 0 ], { %r329 };
	// end inline asm
	// begin inline asm
	@%p51 st.global.b32 [ %rd76 + 0 ], { %r330 };
	// end inline asm
	// begin inline asm
	@%p52 st.global.b32 [ %rd77 + 0 ], { %r331 };
	// end inline asm
	// begin inline asm
	@%p53 st.global.b32 [ %rd78 + 0 ], { %r332 };
	// end inline asm
	// begin inline asm
	@%p54 st.global.b32 [ %rd79 + 0 ], { %r333 };
	// end inline asm
	// begin inline asm
	@%p55 st.global.b32 [ %rd80 + 0 ], { %r334 };
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 150                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x8f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
