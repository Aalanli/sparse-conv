//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_89
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<79>;
	.reg .b32 	%r<447>;
	.reg .f32 	%f<210>;
	.reg .b64 	%rd<92>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r95, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r93, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd23, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r96, %ctaid.x;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r97, %r93, 31;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r98, %r97, 31;
	shr.u32 	%r99, %r98, 27;
	add.s32 	%r100, %r97, %r99;
	shr.s32 	%r101, %r100, 5;
$L__tmp2:
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r1, %r96, %r101;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r103, %r1, %r101;
	sub.s32 	%r104, %r96, %r103;
	ld.param.u32 	%r105, [implicit_conv3d_kernel_param_8];
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r106, %r105, %r105;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r2, %r106, %r105;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r3, %tid.x;
	bfe.u32 	%r5, %r3, 2, 1;
	shr.u32 	%r107, %r3, 2;
	and.b32  	%r6, %r107, 2;
	or.b32  	%r108, %r5, %r6;
	and.b32  	%r7, %r107, 4;
	or.b32  	%r8, %r108, %r7;
	and.b32  	%r9, %r3, 32;
	and.b32  	%r12, %r3, 31;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r13, %r104, 5;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.gt.s32 	%p3, %r2, 0;
	mov.u32 	%r423, global_smem;
	@%p3 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph17
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r94, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r92, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd22, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd21, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd24, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	and.b32  	%r4, %r3, 4;
	shr.u32 	%r10, %r9, 2;
	or.b32  	%r11, %r8, %r10;
	or.b32  	%r14, %r13, %r11;
	or.b32  	%r15, %r14, 16;
	or.b32  	%r16, %r13, %r12;
	mul.lo.s32 	%r109, %r14, %r2;
	shl.b32 	%r110, %r2, 4;
	add.s32 	%r111, %r109, %r110;
	mul.lo.s32 	%r112, %r16, %r2;
	mul.wide.s32 	%rd25, %r109, 4;
	add.s64 	%rd1, %rd24, %rd25;
	mul.wide.s32 	%rd26, %r111, 4;
	add.s64 	%rd2, %rd24, %rd26;
	mul.wide.s32 	%rd27, %r112, 4;
	add.s64 	%rd3, %rd24, %rd27;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r115, %r3, 2;
	add.s32 	%r20, %r94, 15;
	shr.s32 	%r116, %r20, 31;
	shr.u32 	%r117, %r116, 28;
	add.s32 	%r118, %r20, %r117;
	shr.s32 	%r119, %r118, 4;
	shl.b32 	%r120, %r3, 2;
	and.b32  	%r21, %r120, 12;
	shr.u32 	%r121, %r3, 3;
	bfe.u32 	%r22, %r3, 3, 3;
	or.b32  	%r23, %r22, 8;
	and.b32  	%r122, %r120, 28;
	shl.b32 	%r430, %r1, 5;
	mul.lo.s32 	%r25, %r2, %r94;
	or.b32  	%r26, %r430, %r122;
	setp.lt.s32 	%p4, %r26, %r95;
	setp.gt.s32 	%p5, %r20, 15;
	setp.lt.s32 	%p6, %r21, %r94;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p1, %p6, %p5;
	shr.u32 	%r123, %r3, 1;
	xor.b32  	%r124, %r123, %r120;
	and.b32  	%r125, %r124, 12;
	shl.b32 	%r126, %r125, 2;
	shl.b32 	%r127, %r11, 6;
	or.b32  	%r128, %r127, %r126;
	add.s32 	%r164, %r423, %r128;
	add.s32 	%r166, %r164, 1024;
	and.b32  	%r130, %r3, 24;
	xor.b32  	%r131, %r122, %r130;
	shl.b32 	%r132, %r131, 2;
	shl.b32 	%r133, %r22, 7;
	or.b32  	%r134, %r133, %r132;
	add.s32 	%r135, %r423, %r134;
	add.s32 	%r168, %r135, 2048;
	add.s32 	%r170, %r135, 3072;
	add.s32 	%r136, %r119, -1;
	shl.b32 	%r137, %r115, 1;
	shl.b32 	%r138, %r4, 1;
	or.b32  	%r139, %r137, %r138;
	xor.b32  	%r31, %r139, %r7;
	shl.b32 	%r428, %r3, 4;
	and.b32  	%r33, %r428, 240;
	or.b32  	%r34, %r31, %r33;
	or.b32  	%r140, %r137, 8;
	or.b32  	%r141, %r7, %r138;
	xor.b32  	%r35, %r141, %r140;
	or.b32  	%r36, %r35, %r33;
	shl.b32 	%r142, %r3, 3;
	and.b32  	%r143, %r142, 8;
	shl.b32 	%r144, %r115, 3;
	or.b32  	%r145, %r144, %r8;
	or.b32  	%r146, %r145, %r143;
	xor.b32  	%r37, %r146, %r10;
	shl.b32 	%r147, %r3, 5;
	and.b32  	%r429, %r147, 96;
	or.b32  	%r148, %r143, 16;
	xor.b32  	%r149, %r148, %r144;
	or.b32  	%r150, %r5, %r149;
	or.b32  	%r151, %r150, %r6;
	or.b32  	%r152, %r151, %r7;
	xor.b32  	%r39, %r152, %r10;
	cvt.s64.s32 	%rd4, %r136;
	cvt.u64.u32 	%rd29, %r21;
	cvt.s64.s32 	%rd5, %r94;
	cvt.u64.u32 	%rd6, %r2;
	cvt.u64.u32 	%rd7, %r119;
	and.pred  	%p2, %p4, %p5;
	or.b64  	%rd8, %rd29, 16;
	cvt.u64.u32 	%rd30, %r121;
	and.b64  	%rd88, %rd30, 7;
	cvt.u64.u32 	%rd10, %r94;
	or.b32  	%r153, %r22, 24;
	mad.lo.s32 	%r154, %r95, %r153, %r430;
	add.s32 	%r425, %r154, %r122;
	mul.lo.s32 	%r41, %r95, %r94;
	shl.b32 	%r42, %r95, 4;
	or.b32  	%r155, %r22, 16;
	mad.lo.s32 	%r156, %r95, %r155, %r430;
	add.s32 	%r424, %r156, %r122;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	or.b32  	%r44, %r21, 16;
	mov.f32 	%f162, 0f00000000;
	mov.b64 	%rd89, 0;
	setp.lt.s32 	%p9, %r16, %r93;
	shl.b32 	%r266, %r34, 2;
	shl.b32 	%r267, %r36, 2;
	shl.b32 	%r275, %r37, 2;
	shl.b32 	%r279, %r39, 2;
	mov.f32 	%f163, %f162;
	mov.f32 	%f164, %f162;
	mov.f32 	%f165, %f162;
	mov.f32 	%f166, %f162;
	mov.f32 	%f167, %f162;
	mov.f32 	%f168, %f162;
	mov.f32 	%f169, %f162;
	mov.f32 	%f170, %f162;
	mov.f32 	%f171, %f162;
	mov.f32 	%f172, %f162;
	mov.f32 	%f173, %f162;
	mov.f32 	%f174, %f162;
	mov.f32 	%f175, %f162;
	mov.f32 	%f176, %f162;
	mov.f32 	%f177, %f162;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s64 	%rd89, %rd89, 1;
	add.s64 	%rd88, %rd88, %rd10;
	add.s32 	%r425, %r425, %r41;
	add.s32 	%r424, %r424, %r41;
	setp.ne.s64 	%p29, %rd89, %rd6;
	@%p29 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p8, %r15, %r93;
	setp.lt.s32 	%p7, %r14, %r93;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	shl.b64 	%rd34, %rd89, 2;
	add.s64 	%rd31, %rd1, %rd34;
	add.s64 	%rd32, %rd2, %rd34;
	add.s64 	%rd33, %rd3, %rd34;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r157, 0xffffffffffffffff;
	@%p7 ld.global.b32 { %r157 }, [ %rd31 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r158, 0xffffffffffffffff;
	@%p8 ld.global.b32 { %r158 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r159, 0xffffffffffffffff;
	@%p9 ld.global.b32 { %r159 }, [ %rd33 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p10, %r159, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p11, %r159, %r92;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p12, %p10, %p11;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r160, 1, 0, %p12;
	mov.b32 	%r161, -1;
	redux.sync.or.b32 %r162, %r160, %r161;
	and.b32  	%r163, %r162, 1;
	setp.eq.b32 	%p13, %r163, 1;
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p14, %p13;
	@%p14 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.lt.s32 	%p15, %r20, 16;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	cvt.u32.u64 	%r172, %rd89;
	mul.lo.s32 	%r173, %r94, %r172;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r49, %r157, %r94;
	mul.lo.s32 	%r50, %r158, %r94;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r174, %r49, %r21;
	add.s32 	%r175, %r50, %r21;
	.loc	1 70 43                         // implicit_gemm_kernel.py:70:43
	setp.ne.s32 	%p16, %r157, -1;
	setp.ne.s32 	%p17, %r158, -1;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd39, %r174, 4;
	add.s64 	%rd35, %rd21, %rd39;
	mul.wide.s32 	%rd40, %r175, 4;
	add.s64 	%rd36, %rd21, %rd40;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s32 	%r176, %r173, %r22;
	add.s32 	%r177, %r173, %r23;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r178, %r176, %r95, %r26;
	mad.lo.s32 	%r179, %r177, %r95, %r26;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd41, %r178, 4;
	add.s64 	%rd37, %rd22, %rd41;
	mul.wide.s32 	%rd42, %r179, 4;
	add.s64 	%rd38, %rd22, %rd42;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p18, %r176, %r25;
	setp.lt.s32 	%p19, %r177, %r25;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	selp.b32 	%r180, 16, 0, %p1;
	selp.b32 	%r165, %r180, 0, %p16;
	// begin inline asm
	cp.async.cg.shared.global [ %r164 + 0 ], [ %rd35 + 0 ], 0x10, %r165;
	// end inline asm
	selp.b32 	%r167, %r180, 0, %p17;
	// begin inline asm
	cp.async.cg.shared.global [ %r166 + 0 ], [ %rd36 + 0 ], 0x10, %r167;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r181, 16, 0, %p2;
	selp.b32 	%r169, %r181, 0, %p18;
	// begin inline asm
	cp.async.cg.shared.global [ %r168 + 0 ], [ %rd37 + 0 ], 0x10, %r169;
	// end inline asm
	selp.b32 	%r171, %r181, 0, %p19;
	// begin inline asm
	cp.async.cg.shared.global [ %r170 + 0 ], [ %rd38 + 0 ], 0x10, %r171;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p15 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r184, %r44, %r50;
	cvt.u64.u32 	%rd13, %r184;
	add.s32 	%r185, %r44, %r49;
	cvt.u64.u32 	%rd14, %r185;
	mov.b32 	%r427, -1;
	mov.b64 	%rd90, 0;
	mov.b32 	%r426, 0;
	mov.u64 	%rd91, %rd90;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p23, %rd91, %rd4;
	add.s32 	%r262, %r427, 1;
	setp.gt.u32 	%p24, %r427, 2147483646;
	selp.b32 	%r427, %r262, 0, %p24;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r263, %r427, 11;
	add.s32 	%r265, %r423, %r263;
	add.s32 	%r190, %r265, %r266;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r206, %r207, %r208, %r209}, [%r190];
	// end inline asm
	add.s32 	%r195, %r265, %r267;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r230, %r231, %r232, %r233}, [%r195];
	// end inline asm
	add.s32 	%r268, %r31, %r33;
	shl.b32 	%r269, %r268, 2;
	add.s32 	%r270, %r265, %r269;
	add.s32 	%r200, %r270, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r218, %r219, %r220, %r221}, [%r200];
	// end inline asm
	add.s32 	%r271, %r35, %r33;
	shl.b32 	%r272, %r271, 2;
	add.s32 	%r273, %r265, %r272;
	add.s32 	%r205, %r273, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r242, %r243, %r244, %r245}, [%r205];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	add.s32 	%r274, %r265, 2048;
	add.s32 	%r276, %r274, %r275;
	shl.b32 	%r277, %r429, 2;
	add.s32 	%r278, %r276, %r277;
	ld.shared.u32 	%r210, [%r278];
	ld.shared.u32 	%r211, [%r278+512];
	ld.shared.u32 	%r234, [%r278+1024];
	ld.shared.u32 	%r235, [%r278+1536];
	add.s32 	%r280, %r274, %r279;
	add.s32 	%r281, %r280, %r277;
	ld.shared.u32 	%r216, [%r281];
	ld.shared.u32 	%r217, [%r281+512];
	ld.shared.u32 	%r240, [%r281+1024];
	ld.shared.u32 	%r241, [%r281+1536];
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f162, %f163, %f164, %f165 }, { %r206, %r207, %r208, %r209 }, { %r210, %r211 }, { %f162, %f163, %f164, %f165 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f166, %f167, %f168, %f169 }, { %r206, %r207, %r208, %r209 }, { %r216, %r217 }, { %f166, %f167, %f168, %f169 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f170, %f171, %f172, %f173 }, { %r218, %r219, %r220, %r221 }, { %r210, %r211 }, { %f170, %f171, %f172, %f173 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f174, %f175, %f176, %f177 }, { %r218, %r219, %r220, %r221 }, { %r216, %r217 }, { %f174, %f175, %f176, %f177 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f162, %f163, %f164, %f165 }, { %r230, %r231, %r232, %r233 }, { %r234, %r235 }, { %f162, %f163, %f164, %f165 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f166, %f167, %f168, %f169 }, { %r230, %r231, %r232, %r233 }, { %r240, %r241 }, { %f166, %f167, %f168, %f169 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f170, %f171, %f172, %f173 }, { %r242, %r243, %r244, %r245 }, { %r234, %r235 }, { %f170, %f171, %f172, %f173 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f174, %f175, %f176, %f177 }, { %r242, %r243, %r244, %r245 }, { %r240, %r241 }, { %f174, %f175, %f176, %f177 };
	// end inline asm
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd91, %rd91, 1;
	.loc	1 69 89                         // implicit_gemm_kernel.py:69:89
	add.s64 	%rd48, %rd14, %rd90;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd49, %rd13, %rd90;
	cvt.u32.u64 	%r282, %rd48;
	mul.wide.s32 	%rd50, %r282, 4;
	add.s64 	%rd44, %rd21, %rd50;
	cvt.u32.u64 	%r283, %rd49;
	mul.wide.s32 	%rd51, %r283, 4;
	add.s64 	%rd45, %rd21, %rd51;
	.loc	1 70 98                         // implicit_gemm_kernel.py:70:98
	add.s64 	%rd52, %rd8, %rd90;
	setp.lt.s64 	%p25, %rd52, %rd5;
	add.s64 	%rd53, %rd88, %rd90;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	add.s32 	%r284, %r424, %r426;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s32 	%r285, %r425, %r426;
	mul.wide.s32 	%rd54, %r284, 4;
	add.s64 	%rd46, %rd22, %rd54;
	mul.wide.s32 	%rd55, %r285, 4;
	add.s64 	%rd47, %rd22, %rd55;
	cvt.u32.u64 	%r286, %rd53;
	add.s32 	%r287, %r286, 16;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p26, %r287, %r25;
	add.s32 	%r288, %r286, 24;
	setp.lt.s32 	%p27, %r288, %r25;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r289, 16, 0, %p25;
	selp.b32 	%r290, %r289, 0, %p16;
	selp.b32 	%r255, %r290, 0, %p23;
	// begin inline asm
	cp.async.cg.shared.global [ %r164 + 0 ], [ %rd44 + 0 ], 0x10, %r255;
	// end inline asm
	selp.b32 	%r291, %r289, 0, %p17;
	selp.b32 	%r257, %r291, 0, %p23;
	// begin inline asm
	cp.async.cg.shared.global [ %r166 + 0 ], [ %rd45 + 0 ], 0x10, %r257;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r292, 16, 0, %p26;
	selp.b32 	%r293, %r292, 0, %p4;
	selp.b32 	%r259, %r293, 0, %p23;
	// begin inline asm
	cp.async.cg.shared.global [ %r168 + 0 ], [ %rd46 + 0 ], 0x10, %r259;
	// end inline asm
	selp.b32 	%r294, 16, 0, %p27;
	selp.b32 	%r295, %r294, 0, %p4;
	selp.b32 	%r261, %r295, 0, %p23;
	// begin inline asm
	cp.async.cg.shared.global [ %r170 + 0 ], [ %rd47 + 0 ], 0x10, %r261;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd90, %rd90, 16;
	add.s32 	%r426, %r426, %r42;
	setp.ne.s64 	%p28, %rd7, %rd91;
	@%p28 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_9:                              // %._crit_edge18.loopexit
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	mov.b32 	%r431, %f162;
	mov.b32 	%r432, %f163;
	mov.b32 	%r433, %f164;
	mov.b32 	%r434, %f165;
	mov.b32 	%r435, %f166;
	mov.b32 	%r436, %f167;
	mov.b32 	%r437, %f168;
	mov.b32 	%r438, %f169;
	mov.b32 	%r439, %f170;
	mov.b32 	%r440, %f171;
	mov.b32 	%r441, %f172;
	mov.b32 	%r442, %f173;
	mov.b32 	%r443, %f174;
	mov.b32 	%r444, %f175;
	mov.b32 	%r445, %f176;
	mov.b32 	%r446, %f177;
	bra.uni 	$L__BB0_10;
$L__BB0_1:                              // %.._crit_edge18_crit_edge
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r430, %r1, 5;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	shl.b32 	%r114, %r3, 5;
	and.b32  	%r429, %r114, 96;
	shl.b32 	%r428, %r3, 4;
	mov.b32 	%r431, 0;
	mov.u32 	%r432, %r431;
	mov.u32 	%r433, %r431;
	mov.u32 	%r434, %r431;
	mov.u32 	%r435, %r431;
	mov.u32 	%r436, %r431;
	mov.u32 	%r437, %r431;
	mov.u32 	%r438, %r431;
	mov.u32 	%r439, %r431;
	mov.u32 	%r440, %r431;
	mov.u32 	%r441, %r431;
	mov.u32 	%r442, %r431;
	mov.u32 	%r443, %r431;
	mov.u32 	%r444, %r431;
	mov.u32 	%r445, %r431;
	mov.u32 	%r446, %r431;
$L__BB0_10:                             // %._crit_edge18
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	shr.u32 	%r344, %r9, 5;
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r345, %r13, %r344;
	or.b32  	%r346, %r345, 2;
	or.b32  	%r347, %r345, 4;
	or.b32  	%r348, %r345, 6;
	or.b32  	%r349, %r345, 8;
	or.b32  	%r350, %r345, 10;
	or.b32  	%r351, %r345, 12;
	or.b32  	%r352, %r345, 14;
	or.b32  	%r353, %r345, 16;
	or.b32  	%r354, %r345, 18;
	or.b32  	%r355, %r345, 20;
	or.b32  	%r356, %r345, 22;
	or.b32  	%r357, %r345, 24;
	or.b32  	%r358, %r345, 26;
	or.b32  	%r359, %r345, 28;
	or.b32  	%r360, %r345, 30;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r361, %r345, %r95;
	shl.b32 	%r362, %r95, 1;
	add.s32 	%r363, %r361, %r362;
	add.s32 	%r364, %r363, %r362;
	add.s32 	%r365, %r364, %r362;
	add.s32 	%r366, %r365, %r362;
	add.s32 	%r367, %r366, %r362;
	add.s32 	%r368, %r367, %r362;
	add.s32 	%r369, %r368, %r362;
	add.s32 	%r370, %r369, %r362;
	add.s32 	%r371, %r370, %r362;
	add.s32 	%r372, %r371, %r362;
	add.s32 	%r373, %r372, %r362;
	add.s32 	%r374, %r373, %r362;
	add.s32 	%r375, %r374, %r362;
	add.s32 	%r376, %r375, %r362;
	add.s32 	%r377, %r376, %r362;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r378, %r430, %r12;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r379, %r378, %r361;
	add.s32 	%r380, %r378, %r363;
	add.s32 	%r381, %r378, %r364;
	add.s32 	%r382, %r378, %r365;
	add.s32 	%r383, %r378, %r366;
	add.s32 	%r384, %r378, %r367;
	add.s32 	%r385, %r378, %r368;
	add.s32 	%r386, %r378, %r369;
	add.s32 	%r387, %r378, %r370;
	add.s32 	%r388, %r378, %r371;
	add.s32 	%r389, %r378, %r372;
	add.s32 	%r390, %r378, %r373;
	add.s32 	%r391, %r378, %r374;
	add.s32 	%r392, %r378, %r375;
	add.s32 	%r393, %r378, %r376;
	add.s32 	%r394, %r378, %r377;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd72, %r379, 4;
	add.s64 	%rd56, %rd23, %rd72;
	mul.wide.s32 	%rd73, %r380, 4;
	add.s64 	%rd57, %rd23, %rd73;
	mul.wide.s32 	%rd74, %r381, 4;
	add.s64 	%rd58, %rd23, %rd74;
	mul.wide.s32 	%rd75, %r382, 4;
	add.s64 	%rd59, %rd23, %rd75;
	mul.wide.s32 	%rd76, %r383, 4;
	add.s64 	%rd60, %rd23, %rd76;
	mul.wide.s32 	%rd77, %r384, 4;
	add.s64 	%rd61, %rd23, %rd77;
	mul.wide.s32 	%rd78, %r385, 4;
	add.s64 	%rd62, %rd23, %rd78;
	mul.wide.s32 	%rd79, %r386, 4;
	add.s64 	%rd63, %rd23, %rd79;
	mul.wide.s32 	%rd80, %r387, 4;
	add.s64 	%rd64, %rd23, %rd80;
	mul.wide.s32 	%rd81, %r388, 4;
	add.s64 	%rd65, %rd23, %rd81;
	mul.wide.s32 	%rd82, %r389, 4;
	add.s64 	%rd66, %rd23, %rd82;
	mul.wide.s32 	%rd83, %r390, 4;
	add.s64 	%rd67, %rd23, %rd83;
	mul.wide.s32 	%rd84, %r391, 4;
	add.s64 	%rd68, %rd23, %rd84;
	mul.wide.s32 	%rd85, %r392, 4;
	add.s64 	%rd69, %rd23, %rd85;
	mul.wide.s32 	%rd86, %r393, 4;
	add.s64 	%rd70, %rd23, %rd86;
	mul.wide.s32 	%rd87, %r394, 4;
	add.s64 	%rd71, %rd23, %rd87;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p62, %r345, %r93;
	setp.lt.s32 	%p63, %r346, %r93;
	setp.lt.s32 	%p64, %r347, %r93;
	setp.lt.s32 	%p65, %r348, %r93;
	setp.lt.s32 	%p66, %r349, %r93;
	setp.lt.s32 	%p67, %r350, %r93;
	setp.lt.s32 	%p68, %r351, %r93;
	setp.lt.s32 	%p69, %r352, %r93;
	setp.lt.s32 	%p70, %r353, %r93;
	setp.lt.s32 	%p71, %r354, %r93;
	setp.lt.s32 	%p72, %r355, %r93;
	setp.lt.s32 	%p73, %r356, %r93;
	setp.lt.s32 	%p74, %r357, %r93;
	setp.lt.s32 	%p75, %r358, %r93;
	setp.lt.s32 	%p76, %r359, %r93;
	setp.lt.s32 	%p77, %r360, %r93;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p78, %r378, %r95;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p46, %p62, %p78;
	and.pred  	%p47, %p63, %p78;
	and.pred  	%p48, %p64, %p78;
	and.pred  	%p49, %p65, %p78;
	and.pred  	%p50, %p66, %p78;
	and.pred  	%p51, %p67, %p78;
	and.pred  	%p52, %p68, %p78;
	and.pred  	%p53, %p69, %p78;
	and.pred  	%p54, %p70, %p78;
	and.pred  	%p55, %p71, %p78;
	and.pred  	%p56, %p72, %p78;
	and.pred  	%p57, %p73, %p78;
	and.pred  	%p58, %p74, %p78;
	and.pred  	%p59, %p75, %p78;
	and.pred  	%p60, %p76, %p78;
	and.pred  	%p61, %p77, %p78;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	shl.b32 	%r395, %r9, 2;
	or.b32  	%r396, %r429, %r395;
	or.b32  	%r397, %r8, %r396;
	and.b32  	%r398, %r428, 496;
	or.b32  	%r399, %r398, %r344;
	shr.u32 	%r400, %r396, 2;
	add.s32 	%r402, %r423, %r400;
	shl.b32 	%r403, %r397, 2;
	add.s32 	%r296, %r402, %r403;
	mov.pred 	%p30, -1;
	// begin inline asm
	@%p30 st.shared.b32 [ %r296 + 0 ], %r431;
	// end inline asm
	or.b32  	%r404, %r396, 16;
	shr.u32 	%r405, %r404, 2;
	and.b32  	%r406, %r405, 60;
	add.s32 	%r407, %r423, %r406;
	add.s32 	%r408, %r407, %r403;
	add.s32 	%r298, %r408, 64;
	// begin inline asm
	@%p30 st.shared.b32 [ %r298 + 0 ], %r432;
	// end inline asm
	add.s32 	%r300, %r296, 32;
	// begin inline asm
	@%p30 st.shared.b32 [ %r300 + 0 ], %r433;
	// end inline asm
	add.s32 	%r302, %r408, 96;
	// begin inline asm
	@%p30 st.shared.b32 [ %r302 + 0 ], %r434;
	// end inline asm
	or.b32  	%r409, %r396, 256;
	shr.u32 	%r410, %r409, 2;
	and.b32  	%r411, %r410, 124;
	add.s32 	%r412, %r423, %r411;
	add.s32 	%r413, %r412, %r403;
	add.s32 	%r304, %r413, 1024;
	// begin inline asm
	@%p30 st.shared.b32 [ %r304 + 0 ], %r435;
	// end inline asm
	or.b32  	%r414, %r396, 272;
	shr.u32 	%r415, %r414, 2;
	and.b32  	%r416, %r415, 124;
	add.s32 	%r417, %r423, %r416;
	add.s32 	%r418, %r417, %r403;
	add.s32 	%r306, %r418, 1088;
	// begin inline asm
	@%p30 st.shared.b32 [ %r306 + 0 ], %r436;
	// end inline asm
	add.s32 	%r308, %r413, 1056;
	// begin inline asm
	@%p30 st.shared.b32 [ %r308 + 0 ], %r437;
	// end inline asm
	add.s32 	%r310, %r418, 1120;
	// begin inline asm
	@%p30 st.shared.b32 [ %r310 + 0 ], %r438;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r419, %r398, 2;
	add.s32 	%r420, %r423, %r419;
	shl.b32 	%r421, %r399, 2;
	add.s32 	%r422, %r420, %r421;
	ld.shared.u32 	%r328, [%r422];
	ld.shared.u32 	%r329, [%r422+8];
	ld.shared.u32 	%r330, [%r422+16];
	ld.shared.u32 	%r331, [%r422+24];
	ld.shared.u32 	%r332, [%r422+32];
	ld.shared.u32 	%r333, [%r422+40];
	ld.shared.u32 	%r334, [%r422+48];
	ld.shared.u32 	%r335, [%r422+56];
	bar.sync 	0;
	// begin inline asm
	@%p30 st.shared.b32 [ %r296 + 0 ], %r439;
	// end inline asm
	// begin inline asm
	@%p30 st.shared.b32 [ %r298 + 0 ], %r440;
	// end inline asm
	// begin inline asm
	@%p30 st.shared.b32 [ %r300 + 0 ], %r441;
	// end inline asm
	// begin inline asm
	@%p30 st.shared.b32 [ %r302 + 0 ], %r442;
	// end inline asm
	// begin inline asm
	@%p30 st.shared.b32 [ %r304 + 0 ], %r443;
	// end inline asm
	// begin inline asm
	@%p30 st.shared.b32 [ %r306 + 0 ], %r444;
	// end inline asm
	// begin inline asm
	@%p30 st.shared.b32 [ %r308 + 0 ], %r445;
	// end inline asm
	// begin inline asm
	@%p30 st.shared.b32 [ %r310 + 0 ], %r446;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r336, [%r422];
	ld.shared.u32 	%r337, [%r422+8];
	ld.shared.u32 	%r338, [%r422+16];
	ld.shared.u32 	%r339, [%r422+24];
	ld.shared.u32 	%r340, [%r422+32];
	ld.shared.u32 	%r341, [%r422+40];
	ld.shared.u32 	%r342, [%r422+48];
	ld.shared.u32 	%r343, [%r422+56];
	// begin inline asm
	@%p46 st.global.b32 [ %rd56 + 0 ], { %r328 };
	// end inline asm
	// begin inline asm
	@%p47 st.global.b32 [ %rd57 + 0 ], { %r329 };
	// end inline asm
	// begin inline asm
	@%p48 st.global.b32 [ %rd58 + 0 ], { %r330 };
	// end inline asm
	// begin inline asm
	@%p49 st.global.b32 [ %rd59 + 0 ], { %r331 };
	// end inline asm
	// begin inline asm
	@%p50 st.global.b32 [ %rd60 + 0 ], { %r332 };
	// end inline asm
	// begin inline asm
	@%p51 st.global.b32 [ %rd61 + 0 ], { %r333 };
	// end inline asm
	// begin inline asm
	@%p52 st.global.b32 [ %rd62 + 0 ], { %r334 };
	// end inline asm
	// begin inline asm
	@%p53 st.global.b32 [ %rd63 + 0 ], { %r335 };
	// end inline asm
	// begin inline asm
	@%p54 st.global.b32 [ %rd64 + 0 ], { %r336 };
	// end inline asm
	// begin inline asm
	@%p55 st.global.b32 [ %rd65 + 0 ], { %r337 };
	// end inline asm
	// begin inline asm
	@%p56 st.global.b32 [ %rd66 + 0 ], { %r338 };
	// end inline asm
	// begin inline asm
	@%p57 st.global.b32 [ %rd67 + 0 ], { %r339 };
	// end inline asm
	// begin inline asm
	@%p58 st.global.b32 [ %rd68 + 0 ], { %r340 };
	// end inline asm
	// begin inline asm
	@%p59 st.global.b32 [ %rd69 + 0 ], { %r341 };
	// end inline asm
	// begin inline asm
	@%p60 st.global.b32 [ %rd70 + 0 ], { %r342 };
	// end inline asm
	// begin inline asm
	@%p61 st.global.b32 [ %rd71 + 0 ], { %r343 };
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 150                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x8f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
