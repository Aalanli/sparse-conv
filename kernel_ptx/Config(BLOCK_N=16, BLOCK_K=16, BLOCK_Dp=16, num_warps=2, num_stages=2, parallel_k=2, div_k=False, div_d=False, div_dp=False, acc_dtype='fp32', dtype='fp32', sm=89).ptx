//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_89
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<68>;
	.reg .b32 	%r<336>;
	.reg .f32 	%f<54>;
	.reg .b64 	%rd<122>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r69, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r67, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd47, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r70, %ctaid.x;
	.loc	1 50 36                         // implicit_gemm_kernel.py:50:36
	shr.u32 	%r71, %r70, 31;
	add.s32 	%r72, %r70, %r71;
	and.b32  	%r73, %r72, -2;
	sub.s32 	%r327, %r70, %r73;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r74, %r67, 15;
$L__tmp2:
	.loc	1 49 35                         // implicit_gemm_kernel.py:49:35
	shr.s32 	%r75, %r72, 1;
	shr.s32 	%r77, %r74, 31;
	shr.u32 	%r78, %r77, 28;
	add.s32 	%r79, %r74, %r78;
	shr.s32 	%r80, %r79, 4;
	ld.param.u32 	%r81, [implicit_conv3d_kernel_param_8];
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r2, %r75, %r80;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r82, %r2, %r80;
	sub.s32 	%r83, %r75, %r82;
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r84, %r81, %r81;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r3, %r84, %r81;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r4, %tid.x;
	and.b32  	%r5, %r4, 16;
	bfe.u32 	%r6, %r4, 4, 1;
	and.b32  	%r7, %r4, 32;
	shr.u32 	%r8, %r7, 4;
	or.b32  	%r9, %r6, %r8;
	or.b32  	%r10, %r9, 4;
	or.b32  	%r11, %r9, 8;
	or.b32  	%r12, %r9, 12;
	and.b32  	%r13, %r4, 15;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r85, %r83, 4;
	.loc	1 58 49                         // implicit_gemm_kernel.py:58:49
	or.b32  	%r14, %r85, %r9;
	or.b32  	%r15, %r85, %r10;
	or.b32  	%r16, %r85, %r11;
	or.b32  	%r17, %r85, %r12;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.lt.s32 	%p7, %r327, %r3;
	mov.u32 	%r326, global_smem;
	setp.lt.s32 	%p64, %r17, %r67;
	setp.lt.s32 	%p65, %r16, %r67;
	setp.lt.s32 	%p66, %r15, %r67;
	setp.lt.s32 	%p67, %r14, %r67;
	@%p7 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph10
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r68, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r66, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd46, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd45, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd48, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	or.b32  	%r18, %r85, %r13;
	mul.lo.s32 	%r86, %r14, %r3;
	mul.lo.s32 	%r87, %r15, %r3;
	mul.lo.s32 	%r88, %r16, %r3;
	mul.lo.s32 	%r89, %r17, %r3;
	mul.lo.s32 	%r90, %r18, %r3;
	mul.wide.s32 	%rd49, %r86, 4;
	add.s64 	%rd1, %rd48, %rd49;
	mul.wide.s32 	%rd50, %r87, 4;
	add.s64 	%rd2, %rd48, %rd50;
	mul.wide.s32 	%rd51, %r88, 4;
	add.s64 	%rd3, %rd48, %rd51;
	mul.wide.s32 	%rd52, %r89, 4;
	add.s64 	%rd4, %rd48, %rd52;
	mul.wide.s32 	%rd53, %r90, 4;
	add.s64 	%rd5, %rd48, %rd53;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r94, %r4, 4;
	and.b32  	%r95, %r4, 3;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	or.b32  	%r96, %r94, %r95;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r97, %r4, 8;
	and.b32  	%r98, %r4, 2;
	add.s32 	%r22, %r68, 15;
	shr.s32 	%r99, %r22, 31;
	shr.u32 	%r100, %r99, 28;
	add.s32 	%r101, %r22, %r100;
	shr.s32 	%r102, %r101, 4;
	shl.b32 	%r103, %r2, 4;
	mul.lo.s32 	%r23, %r3, %r68;
	or.b32  	%r331, %r103, %r13;
	setp.lt.s32 	%p8, %r331, %r69;
	setp.gt.s32 	%p9, %r22, 15;
	setp.lt.s32 	%p10, %r13, %r68;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p1, %p10, %p9;
	shr.u32 	%r104, %r7, 3;
	xor.b32  	%r105, %r104, %r13;
	shl.b32 	%r106, %r9, 4;
	or.b32  	%r107, %r106, %r105;
	shl.b32 	%r108, %r107, 2;
	add.s32 	%r167, %r326, %r108;
	or.b32  	%r110, %r96, 8;
	or.b32  	%r111, %r104, %r97;
	xor.b32  	%r112, %r111, %r110;
	or.b32  	%r113, %r112, %r106;
	shl.b32 	%r114, %r113, 2;
	add.s32 	%r115, %r326, %r114;
	add.s32 	%r169, %r115, 256;
	add.s32 	%r171, %r167, 512;
	add.s32 	%r173, %r115, 768;
	shr.u32 	%r116, %r7, 2;
	xor.b32  	%r117, %r116, %r13;
	or.b32  	%r118, %r106, %r117;
	shl.b32 	%r119, %r118, 2;
	add.s32 	%r120, %r326, %r119;
	add.s32 	%r175, %r120, 1024;
	add.s32 	%r177, %r120, 1280;
	add.s32 	%r179, %r120, 1536;
	add.s32 	%r181, %r120, 1792;
	add.s32 	%r121, %r102, -1;
	shl.b32 	%r122, %r98, 1;
	shl.b32 	%r123, %r94, 1;
	or.b32  	%r124, %r122, %r123;
	shr.u32 	%r329, %r5, 2;
	xor.b32  	%r125, %r124, %r329;
	shl.b32 	%r126, %r13, 4;
	or.b32  	%r34, %r125, %r126;
	or.b32  	%r127, %r122, 8;
	or.b32  	%r128, %r329, %r123;
	xor.b32  	%r129, %r128, %r127;
	or.b32  	%r35, %r129, %r126;
	shl.b32 	%r130, %r98, 2;
	or.b32  	%r131, %r94, %r97;
	shr.u32 	%r132, %r131, 2;
	or.b32  	%r133, %r132, %r130;
	or.b32  	%r134, %r133, %r329;
	xor.b32  	%r36, %r134, %r116;
	shl.b32 	%r135, %r4, 4;
	and.b32  	%r330, %r135, 48;
	or.b32  	%r38, %r36, %r330;
	or.b32  	%r39, %r38, 64;
	shl.b32 	%r40, %r95, 4;
	or.b32  	%r41, %r38, 192;
	cvt.s64.s32 	%rd6, %r121;
	cvt.u64.u32 	%rd7, %r13;
	cvt.s64.s32 	%rd8, %r68;
	cvt.u64.u32 	%rd9, %r102;
	and.pred  	%p2, %p8, %p9;
	or.b64  	%rd10, %rd7, 16;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	or.b32  	%r42, %r13, 16;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	mad.lo.s32 	%r136, %r327, %r68, %r8;
	add.s32 	%r137, %r136, %r6;
	cvt.u64.u32 	%rd115, %r137;
	shl.b32 	%r138, %r68, 1;
	cvt.u64.u32 	%rd12, %r138;
	add.s32 	%r139, %r137, 28;
	mad.lo.s32 	%r140, %r69, %r139, %r103;
	cvt.u64.u32 	%rd114, %r140;
	mul.lo.s32 	%r141, %r69, %r68;
	shl.b32 	%r142, %r141, 1;
	cvt.u64.u32 	%rd14, %r142;
	shl.b32 	%r143, %r69, 4;
	cvt.u64.u32 	%rd15, %r143;
	add.s32 	%r144, %r137, 24;
	mad.lo.s32 	%r145, %r69, %r144, %r103;
	cvt.u64.u32 	%rd113, %r145;
	add.s32 	%r146, %r137, 20;
	mad.lo.s32 	%r147, %r69, %r146, %r103;
	cvt.u64.u32 	%rd112, %r147;
	add.s32 	%r148, %r137, 16;
	mad.lo.s32 	%r149, %r69, %r148, %r103;
	cvt.u64.u32 	%rd111, %r149;
	mov.f32 	%f42, 0f00000000;
	setp.lt.s32 	%p15, %r18, %r67;
	shl.b32 	%r245, %r34, 2;
	shl.b32 	%r246, %r35, 2;
	shl.b32 	%r250, %r39, 2;
	add.s32 	%r252, %r36, %r40;
	shl.b32 	%r253, %r252, 2;
	shl.b32 	%r255, %r41, 2;
	mov.f32 	%f43, %f42;
	mov.f32 	%f44, %f42;
	mov.f32 	%f45, %f42;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s32 	%r327, %r327, 2;
	add.s64 	%rd115, %rd115, %rd12;
	add.s64 	%rd114, %rd114, %rd14;
	add.s64 	%rd113, %rd113, %rd14;
	add.s64 	%rd112, %rd112, %rd14;
	add.s64 	%rd111, %rd111, %rd14;
	setp.lt.s32 	%p50, %r327, %r3;
	@%p50 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	mul.wide.s32 	%rd59, %r327, 4;
	add.s64 	%rd54, %rd1, %rd59;
	add.s64 	%rd55, %rd2, %rd59;
	add.s64 	%rd56, %rd3, %rd59;
	add.s64 	%rd57, %rd4, %rd59;
	add.s64 	%rd58, %rd5, %rd59;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r150, 0xffffffffffffffff;
	@%p67 ld.global.b32 { %r150 }, [ %rd54 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r151, 0xffffffffffffffff;
	@%p66 ld.global.b32 { %r151 }, [ %rd55 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r152, 0xffffffffffffffff;
	@%p65 ld.global.b32 { %r152 }, [ %rd56 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r153, 0xffffffffffffffff;
	@%p64 ld.global.b32 { %r153 }, [ %rd57 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r154, 0xffffffffffffffff;
	@%p15 ld.global.b32 { %r154 }, [ %rd58 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p20, %r154, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p25, %r154, %r66;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p26, %p20, %p25;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r155, 1, 0, %p26;
	shfl.sync.bfly.b32	%r156, %r155, 8, 31, -1;
	and.b32  	%r157, %r156, 1;
	setp.eq.b32 	%p27, %r157, 1;
$L__tmp3:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p28, %p26, %p27;
$L__tmp4:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r158, 1, 0, %p28;
	shfl.sync.bfly.b32	%r159, %r158, 4, 31, -1;
	and.b32  	%r160, %r159, 1;
	setp.eq.b32 	%p29, %r160, 1;
$L__tmp5:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p30, %p28, %p29;
$L__tmp6:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r161, 1, 0, %p30;
	shfl.sync.bfly.b32	%r162, %r161, 2, 31, -1;
	and.b32  	%r163, %r162, 1;
	setp.eq.b32 	%p31, %r163, 1;
$L__tmp7:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p32, %p30, %p31;
$L__tmp8:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r164, 1, 0, %p32;
	shfl.sync.bfly.b32	%r165, %r164, 1, 31, -1;
	and.b32  	%r166, %r165, 1;
	setp.eq.b32 	%p33, %r166, 1;
$L__tmp9:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p34, %p32, %p33;
$L__tmp10:
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p35, %p34;
	@%p35 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.gt.s32 	%p16, %r150, -1;
	setp.gt.s32 	%p17, %r151, -1;
	setp.gt.s32 	%p18, %r152, -1;
	setp.gt.s32 	%p19, %r153, -1;
	setp.lt.s32 	%p21, %r150, %r66;
	setp.lt.s32 	%p22, %r151, %r66;
	setp.lt.s32 	%p23, %r152, %r66;
	setp.lt.s32 	%p24, %r153, %r66;
	and.pred  	%p3, %p16, %p21;
	and.pred  	%p4, %p17, %p22;
	and.pred  	%p5, %p18, %p23;
	and.pred  	%p6, %p19, %p24;
	setp.lt.s32 	%p36, %r22, 16;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	mul.lo.s32 	%r183, %r327, %r68;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r48, %r150, %r68;
	mul.lo.s32 	%r49, %r151, %r68;
	mul.lo.s32 	%r50, %r152, %r68;
	mul.lo.s32 	%r51, %r153, %r68;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r184, %r48, %r13;
	add.s32 	%r185, %r49, %r13;
	add.s32 	%r186, %r50, %r13;
	add.s32 	%r187, %r51, %r13;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd68, %r184, 4;
	add.s64 	%rd60, %rd45, %rd68;
	mul.wide.s32 	%rd69, %r185, 4;
	add.s64 	%rd61, %rd45, %rd69;
	mul.wide.s32 	%rd70, %r186, 4;
	add.s64 	%rd62, %rd45, %rd70;
	mul.wide.s32 	%rd71, %r187, 4;
	add.s64 	%rd63, %rd45, %rd71;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s32 	%r188, %r183, %r9;
	add.s32 	%r189, %r183, %r10;
	add.s32 	%r190, %r183, %r11;
	add.s32 	%r191, %r183, %r12;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r192, %r188, %r69, %r331;
	mad.lo.s32 	%r193, %r189, %r69, %r331;
	mad.lo.s32 	%r194, %r190, %r69, %r331;
	mad.lo.s32 	%r195, %r191, %r69, %r331;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd72, %r192, 4;
	add.s64 	%rd64, %rd46, %rd72;
	mul.wide.s32 	%rd73, %r193, 4;
	add.s64 	%rd65, %rd46, %rd73;
	mul.wide.s32 	%rd74, %r194, 4;
	add.s64 	%rd66, %rd46, %rd74;
	mul.wide.s32 	%rd75, %r195, 4;
	add.s64 	%rd67, %rd46, %rd75;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p37, %r188, %r23;
	setp.lt.s32 	%p38, %r189, %r23;
	setp.lt.s32 	%p39, %r190, %r23;
	setp.lt.s32 	%p40, %r191, %r23;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	selp.b32 	%r196, 4, 0, %p1;
	selp.b32 	%r168, %r196, 0, %p3;
	// begin inline asm
	cp.async.ca.shared.global [ %r167 + 0 ], [ %rd60 + 0 ], 0x4, %r168;
	// end inline asm
	selp.b32 	%r170, %r196, 0, %p4;
	// begin inline asm
	cp.async.ca.shared.global [ %r169 + 0 ], [ %rd61 + 0 ], 0x4, %r170;
	// end inline asm
	selp.b32 	%r172, %r196, 0, %p5;
	// begin inline asm
	cp.async.ca.shared.global [ %r171 + 0 ], [ %rd62 + 0 ], 0x4, %r172;
	// end inline asm
	selp.b32 	%r174, %r196, 0, %p6;
	// begin inline asm
	cp.async.ca.shared.global [ %r173 + 0 ], [ %rd63 + 0 ], 0x4, %r174;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r197, 4, 0, %p2;
	selp.b32 	%r176, %r197, 0, %p37;
	// begin inline asm
	cp.async.ca.shared.global [ %r175 + 0 ], [ %rd64 + 0 ], 0x4, %r176;
	// end inline asm
	selp.b32 	%r178, %r197, 0, %p38;
	// begin inline asm
	cp.async.ca.shared.global [ %r177 + 0 ], [ %rd65 + 0 ], 0x4, %r178;
	// end inline asm
	selp.b32 	%r180, %r197, 0, %p39;
	// begin inline asm
	cp.async.ca.shared.global [ %r179 + 0 ], [ %rd66 + 0 ], 0x4, %r180;
	// end inline asm
	selp.b32 	%r182, %r197, 0, %p40;
	// begin inline asm
	cp.async.ca.shared.global [ %r181 + 0 ], [ %rd67 + 0 ], 0x4, %r182;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p36 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r199, %r42, %r51;
	cvt.u64.u32 	%rd24, %r199;
	add.s32 	%r200, %r42, %r50;
	cvt.u64.u32 	%rd25, %r200;
	add.s32 	%r201, %r42, %r49;
	cvt.u64.u32 	%rd26, %r201;
	add.s32 	%r202, %r42, %r48;
	cvt.u64.u32 	%rd27, %r202;
	mov.b32 	%r328, -1;
	mov.b64 	%rd120, 0;
	mov.u64 	%rd116, %rd111;
	mov.u64 	%rd117, %rd112;
	mov.u64 	%rd118, %rd113;
	mov.u64 	%rd119, %rd114;
	mov.u64 	%rd121, %rd120;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p42, %rd121, %rd6;
	add.s32 	%r241, %r328, 1;
	setp.gt.u32 	%p43, %r328, 2147483646;
	selp.b32 	%r328, %r241, 0, %p43;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r242, %r328, 10;
	add.s32 	%r244, %r326, %r242;
	add.s32 	%r207, %r244, %r245;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r203, %r204, %r205, %r206}, [%r207];
	// end inline asm
	add.s32 	%r212, %r244, %r246;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r208, %r209, %r210, %r211}, [%r212];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	add.s32 	%r247, %r244, 1024;
	shl.b32 	%r248, %r38, 2;
	add.s32 	%r249, %r247, %r248;
	ld.shared.u32 	%r217, [%r249];
	add.s32 	%r251, %r247, %r250;
	ld.shared.u32 	%r218, [%r251];
	add.s32 	%r254, %r247, %r253;
	ld.shared.u32 	%r223, [%r254+512];
	add.s32 	%r256, %r247, %r255;
	ld.shared.u32 	%r224, [%r256];
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f42, %f43, %f44, %f45 }, { %r203, %r204, %r205, %r206 }, { %r217, %r218 }, { %f42, %f43, %f44, %f45 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f42, %f43, %f44, %f45 }, { %r208, %r209, %r210, %r211 }, { %r223, %r224 }, { %f42, %f43, %f44, %f45 };
	// end inline asm
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd121, %rd121, 1;
	.loc	1 69 89                         // implicit_gemm_kernel.py:69:89
	add.s64 	%rd85, %rd27, %rd120;
	add.s64 	%rd86, %rd26, %rd120;
	add.s64 	%rd87, %rd25, %rd120;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd88, %rd24, %rd120;
	cvt.u32.u64 	%r257, %rd85;
	mul.wide.s32 	%rd89, %r257, 4;
	add.s64 	%rd77, %rd45, %rd89;
	cvt.u32.u64 	%r258, %rd86;
	mul.wide.s32 	%rd90, %r258, 4;
	add.s64 	%rd78, %rd45, %rd90;
	cvt.u32.u64 	%r259, %rd87;
	mul.wide.s32 	%rd91, %r259, 4;
	add.s64 	%rd79, %rd45, %rd91;
	cvt.u32.u64 	%r260, %rd88;
	mul.wide.s32 	%rd92, %r260, 4;
	add.s64 	%rd80, %rd45, %rd92;
	.loc	1 70 112                        // implicit_gemm_kernel.py:70:112
	add.s64 	%rd93, %rd10, %rd120;
	setp.lt.s64 	%p44, %rd93, %rd8;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s64 	%rd94, %rd115, %rd120;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	add.s64 	%rd95, %rd7, %rd116;
	add.s64 	%rd96, %rd7, %rd117;
	add.s64 	%rd97, %rd7, %rd118;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s64 	%rd98, %rd7, %rd119;
	cvt.u32.u64 	%r261, %rd95;
	mul.wide.s32 	%rd99, %r261, 4;
	add.s64 	%rd81, %rd46, %rd99;
	cvt.u32.u64 	%r262, %rd96;
	mul.wide.s32 	%rd100, %r262, 4;
	add.s64 	%rd82, %rd46, %rd100;
	cvt.u32.u64 	%r263, %rd97;
	mul.wide.s32 	%rd101, %r263, 4;
	add.s64 	%rd83, %rd46, %rd101;
	cvt.u32.u64 	%r264, %rd98;
	mul.wide.s32 	%rd102, %r264, 4;
	add.s64 	%rd84, %rd46, %rd102;
	cvt.u32.u64 	%r265, %rd94;
	add.s32 	%r266, %r265, 16;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p45, %r266, %r23;
	add.s32 	%r267, %r265, 20;
	setp.lt.s32 	%p46, %r267, %r23;
	add.s32 	%r268, %r265, 24;
	setp.lt.s32 	%p47, %r268, %r23;
	add.s32 	%r269, %r265, 28;
	setp.lt.s32 	%p48, %r269, %r23;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r270, 4, 0, %p44;
	selp.b32 	%r271, %r270, 0, %p3;
	selp.b32 	%r226, %r271, 0, %p42;
	// begin inline asm
	cp.async.ca.shared.global [ %r167 + 0 ], [ %rd77 + 0 ], 0x4, %r226;
	// end inline asm
	selp.b32 	%r272, %r270, 0, %p4;
	selp.b32 	%r228, %r272, 0, %p42;
	// begin inline asm
	cp.async.ca.shared.global [ %r169 + 0 ], [ %rd78 + 0 ], 0x4, %r228;
	// end inline asm
	selp.b32 	%r273, %r270, 0, %p5;
	selp.b32 	%r230, %r273, 0, %p42;
	// begin inline asm
	cp.async.ca.shared.global [ %r171 + 0 ], [ %rd79 + 0 ], 0x4, %r230;
	// end inline asm
	selp.b32 	%r274, %r270, 0, %p6;
	selp.b32 	%r232, %r274, 0, %p42;
	// begin inline asm
	cp.async.ca.shared.global [ %r173 + 0 ], [ %rd80 + 0 ], 0x4, %r232;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r275, 4, 0, %p45;
	selp.b32 	%r276, %r275, 0, %p8;
	selp.b32 	%r234, %r276, 0, %p42;
	// begin inline asm
	cp.async.ca.shared.global [ %r175 + 0 ], [ %rd81 + 0 ], 0x4, %r234;
	// end inline asm
	selp.b32 	%r277, 4, 0, %p46;
	selp.b32 	%r278, %r277, 0, %p8;
	selp.b32 	%r236, %r278, 0, %p42;
	// begin inline asm
	cp.async.ca.shared.global [ %r177 + 0 ], [ %rd82 + 0 ], 0x4, %r236;
	// end inline asm
	selp.b32 	%r279, 4, 0, %p47;
	selp.b32 	%r280, %r279, 0, %p8;
	selp.b32 	%r238, %r280, 0, %p42;
	// begin inline asm
	cp.async.ca.shared.global [ %r179 + 0 ], [ %rd83 + 0 ], 0x4, %r238;
	// end inline asm
	selp.b32 	%r281, 4, 0, %p48;
	selp.b32 	%r282, %r281, 0, %p8;
	selp.b32 	%r240, %r282, 0, %p42;
	// begin inline asm
	cp.async.ca.shared.global [ %r181 + 0 ], [ %rd84 + 0 ], 0x4, %r240;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd120, %rd120, 16;
	add.s64 	%rd119, %rd119, %rd15;
	add.s64 	%rd118, %rd118, %rd15;
	add.s64 	%rd117, %rd117, %rd15;
	add.s64 	%rd116, %rd116, %rd15;
	setp.ne.s64 	%p49, %rd9, %rd121;
	@%p49 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge11_crit_edge
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r92, %r2, 4;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r331, %r92, %r13;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shl.b32 	%r93, %r4, 4;
	and.b32  	%r330, %r93, 48;
	shr.u32 	%r329, %r5, 2;
	mov.b32 	%r332, 0;
	mov.u32 	%r333, %r332;
	mov.u32 	%r334, %r332;
	mov.u32 	%r335, %r332;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %._crit_edge11.loopexit
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	mov.b32 	%r332, %f42;
	mov.b32 	%r333, %f43;
	mov.b32 	%r334, %f44;
	mov.b32 	%r335, %f45;
$L__BB0_10:                             // %._crit_edge11
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	mad.lo.s32 	%r299, %r14, %r69, %r331;
	mad.lo.s32 	%r300, %r15, %r69, %r331;
	mad.lo.s32 	%r301, %r16, %r69, %r331;
	mad.lo.s32 	%r302, %r17, %r69, %r331;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd107, %r299, 4;
	add.s64 	%rd103, %rd47, %rd107;
	mul.wide.s32 	%rd108, %r300, 4;
	add.s64 	%rd104, %rd47, %rd108;
	mul.wide.s32 	%rd109, %r301, 4;
	add.s64 	%rd105, %rd47, %rd109;
	mul.wide.s32 	%rd110, %r302, 4;
	add.s64 	%rd106, %rd47, %rd110;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p63, %r331, %r69;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p55, %p67, %p63;
	and.pred  	%p56, %p66, %p63;
	and.pred  	%p57, %p65, %p63;
	and.pred  	%p58, %p64, %p63;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	bfe.u32 	%r303, %r4, 2, 2;
	or.b32  	%r304, %r303, %r330;
	or.b32  	%r305, %r304, %r329;
	shl.b32 	%r306, %r7, 1;
	or.b32  	%r307, %r305, %r306;
	shl.b32 	%r308, %r4, 3;
	and.b32  	%r309, %r308, 120;
	or.b32  	%r310, %r309, %r6;
	or.b32  	%r311, %r310, %r8;
	shr.u32 	%r312, %r307, 1;
	and.b32  	%r313, %r312, 60;
	add.s32 	%r315, %r326, %r313;
	shl.b32 	%r316, %r307, 2;
	add.s32 	%r283, %r315, %r316;
	mov.pred 	%p51, -1;
	// begin inline asm
	@%p51 st.shared.b32 [ %r283 + 0 ], %r332;
	// end inline asm
	or.b32  	%r317, %r307, 8;
	shr.u32 	%r318, %r317, 1;
	and.b32  	%r319, %r318, 60;
	add.s32 	%r320, %r326, %r319;
	add.s32 	%r321, %r320, %r316;
	add.s32 	%r285, %r321, 32;
	// begin inline asm
	@%p51 st.shared.b32 [ %r285 + 0 ], %r333;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r322, %r309, 1;
	add.s32 	%r323, %r326, %r322;
	shl.b32 	%r324, %r311, 2;
	add.s32 	%r325, %r323, %r324;
	ld.shared.u32 	%r292, [%r325];
	ld.shared.u32 	%r294, [%r325+16];
	bar.sync 	0;
	// begin inline asm
	@%p51 st.shared.b32 [ %r283 + 0 ], %r334;
	// end inline asm
	// begin inline asm
	@%p51 st.shared.b32 [ %r285 + 0 ], %r335;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r296, [%r325];
	ld.shared.u32 	%r298, [%r325+16];
	// begin inline asm
	mov.u32 %r291, 0x0;
	@%p55 atom.global.gpu.acq_rel.add.f32 %r291, [ %rd103 + 0 ], %r292;
	// end inline asm
	// begin inline asm
	mov.u32 %r293, 0x0;
	@%p56 atom.global.gpu.acq_rel.add.f32 %r293, [ %rd104 + 0 ], %r294;
	// end inline asm
	// begin inline asm
	mov.u32 %r295, 0x0;
	@%p57 atom.global.gpu.acq_rel.add.f32 %r295, [ %rd105 + 0 ], %r296;
	// end inline asm
	// begin inline asm
	mov.u32 %r297, 0x0;
	@%p58 atom.global.gpu.acq_rel.add.f32 %r297, [ %rd106 + 0 ], %r298;
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 174                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x98:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
