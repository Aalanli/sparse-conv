//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<53>;
	.reg .b32 	%r<349>;
	.reg .f32 	%f<106>;
	.reg .b64 	%rd<59>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r78, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r76, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd16, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r79, %ctaid.x;
	.loc	1 50 36                         // implicit_gemm_kernel.py:50:36
	shr.u32 	%r80, %r79, 31;
	add.s32 	%r81, %r79, %r80;
	and.b32  	%r82, %r81, -2;
	sub.s32 	%r335, %r79, %r82;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r83, %r76, 31;
$L__tmp2:
	.loc	1 49 35                         // implicit_gemm_kernel.py:49:35
	shr.s32 	%r84, %r81, 1;
	shr.s32 	%r86, %r83, 31;
	shr.u32 	%r87, %r86, 27;
	add.s32 	%r88, %r83, %r87;
	shr.s32 	%r89, %r88, 5;
	ld.param.u32 	%r90, [implicit_conv3d_kernel_param_8];
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r2, %r84, %r89;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r91, %r2, %r89;
	sub.s32 	%r92, %r84, %r91;
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r93, %r90, %r90;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r3, %r93, %r90;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r4, %tid.x;
	bfe.u32 	%r6, %r4, 2, 1;
	and.b32  	%r7, %r4, 8;
	shr.u32 	%r8, %r7, 2;
	shr.u32 	%r94, %r4, 2;
	and.b32  	%r9, %r94, 4;
	and.b32  	%r10, %r4, 32;
	and.b32  	%r13, %r4, 15;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r14, %r92, 5;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.lt.s32 	%p3, %r335, %r3;
	mov.u32 	%r332, global_smem;
	@%p3 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph10
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r77, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r75, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd15, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd14, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd17, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	and.b32  	%r5, %r4, 4;
	and.b32  	%r11, %r94, 10;
	or.b32  	%r95, %r6, %r11;
	or.b32  	%r12, %r95, %r9;
	and.b32  	%r96, %r4, 31;
	or.b32  	%r15, %r14, %r12;
	or.b32  	%r16, %r15, 16;
	or.b32  	%r17, %r14, %r96;
	mul.lo.s32 	%r97, %r15, %r3;
	shl.b32 	%r98, %r3, 4;
	add.s32 	%r99, %r97, %r98;
	mul.lo.s32 	%r100, %r17, %r3;
	mul.wide.s32 	%rd18, %r97, 4;
	add.s64 	%rd1, %rd17, %rd18;
	mul.wide.s32 	%rd19, %r99, 4;
	add.s64 	%rd2, %rd17, %rd19;
	mul.wide.s32 	%rd20, %r100, 4;
	add.s64 	%rd3, %rd17, %rd20;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r102, %r4, 2;
	add.s32 	%r20, %r77, 15;
	shr.s32 	%r103, %r20, 31;
	shr.u32 	%r104, %r103, 28;
	add.s32 	%r105, %r20, %r104;
	shr.s32 	%r106, %r105, 4;
	shl.b32 	%r107, %r102, 2;
	shl.b32 	%r108, %r4, 2;
	and.b32  	%r21, %r108, 12;
	shl.b32 	%r340, %r2, 4;
	mul.lo.s32 	%r23, %r3, %r77;
	or.b32  	%r24, %r340, %r21;
	setp.lt.s32 	%p4, %r24, %r78;
	setp.gt.s32 	%p5, %r20, 15;
	setp.lt.s32 	%p6, %r21, %r77;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p1, %p6, %p5;
	shr.u32 	%r109, %r4, 1;
	xor.b32  	%r110, %r109, %r108;
	and.b32  	%r111, %r110, 12;
	shl.b32 	%r112, %r12, 4;
	or.b32  	%r113, %r112, %r111;
	shl.b32 	%r114, %r113, 2;
	add.s32 	%r145, %r332, %r114;
	add.s32 	%r147, %r145, 1024;
	xor.b32  	%r116, %r21, %r7;
	or.b32  	%r117, %r112, %r116;
	shl.b32 	%r118, %r117, 2;
	add.s32 	%r119, %r332, %r118;
	add.s32 	%r149, %r119, 2048;
	add.s32 	%r120, %r106, -1;
	shl.b32 	%r121, %r102, 1;
	shl.b32 	%r122, %r5, 1;
	or.b32  	%r123, %r121, %r122;
	xor.b32  	%r124, %r123, %r9;
	shr.u32 	%r339, %r10, 1;
	or.b32  	%r125, %r339, %r13;
	shl.b32 	%r126, %r125, 4;
	or.b32  	%r29, %r124, %r126;
	or.b32  	%r127, %r121, 8;
	or.b32  	%r128, %r9, %r122;
	xor.b32  	%r129, %r128, %r127;
	or.b32  	%r30, %r129, %r126;
	or.b32  	%r130, %r9, %r107;
	or.b32  	%r131, %r130, %r8;
	or.b32  	%r31, %r131, %r6;
	shl.b32 	%r132, %r4, 4;
	and.b32  	%r32, %r132, 48;
	or.b32  	%r33, %r31, %r32;
	xor.b32  	%r34, %r31, 8;
	or.b32  	%r35, %r34, %r32;
	cvt.s64.s32 	%rd4, %r120;
	cvt.u64.u32 	%rd21, %r21;
	cvt.s64.s32 	%rd5, %r77;
	cvt.u64.u32 	%rd6, %r106;
	and.pred  	%p2, %p4, %p5;
	or.b64  	%rd7, %rd21, 16;
	mad.lo.s32 	%r133, %r335, %r77, %r11;
	add.s32 	%r134, %r133, %r9;
	add.s32 	%r135, %r134, %r6;
	add.s32 	%r334, %r135, 16;
	shl.b32 	%r37, %r77, 1;
	mad.lo.s32 	%r136, %r78, %r334, %r340;
	add.s32 	%r333, %r136, %r21;
	mul.lo.s32 	%r137, %r78, %r77;
	shl.b32 	%r39, %r137, 1;
	shl.b32 	%r40, %r78, 4;
	mov.f32 	%f82, 0f00000000;
	setp.lt.s32 	%p9, %r17, %r76;
	shl.b32 	%r202, %r29, 2;
	shl.b32 	%r203, %r30, 2;
	shl.b32 	%r207, %r33, 2;
	shl.b32 	%r212, %r35, 2;
	mov.f32 	%f83, %f82;
	mov.f32 	%f84, %f82;
	mov.f32 	%f85, %f82;
	mov.f32 	%f86, %f82;
	mov.f32 	%f87, %f82;
	mov.f32 	%f88, %f82;
	mov.f32 	%f89, %f82;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s32 	%r335, %r335, 2;
	add.s32 	%r334, %r334, %r37;
	add.s32 	%r333, %r333, %r39;
	setp.lt.s32 	%p27, %r335, %r3;
	@%p27 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p8, %r16, %r76;
	setp.lt.s32 	%p7, %r15, %r76;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	mul.wide.s32 	%rd25, %r335, 4;
	add.s64 	%rd22, %rd1, %rd25;
	add.s64 	%rd23, %rd2, %rd25;
	add.s64 	%rd24, %rd3, %rd25;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r138, 0xffffffffffffffff;
	@%p7 ld.global.b32 { %r138 }, [ %rd22 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r139, 0xffffffffffffffff;
	@%p8 ld.global.b32 { %r139 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r140, 0xffffffffffffffff;
	@%p9 ld.global.b32 { %r140 }, [ %rd24 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p10, %r140, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p11, %r140, %r75;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p12, %p10, %p11;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r141, 1, 0, %p12;
	mov.b32 	%r142, -1;
	redux.sync.or.b32 %r143, %r141, %r142;
	and.b32  	%r144, %r143, 1;
	setp.eq.b32 	%p13, %r144, 1;
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p14, %p13;
	@%p14 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.lt.s32 	%p15, %r20, 16;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r46, %r138, %r77;
	mul.lo.s32 	%r47, %r139, %r77;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r151, %r46, %r21;
	add.s32 	%r152, %r47, %r21;
	.loc	1 70 43                         // implicit_gemm_kernel.py:70:43
	setp.ne.s32 	%p16, %r138, -1;
	setp.ne.s32 	%p17, %r139, -1;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd29, %r151, 4;
	add.s64 	%rd26, %rd14, %rd29;
	mul.wide.s32 	%rd30, %r152, 4;
	add.s64 	%rd27, %rd14, %rd30;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	mad.lo.s32 	%r153, %r335, %r77, %r12;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r154, %r153, %r78, %r24;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd31, %r154, 4;
	add.s64 	%rd28, %rd15, %rd31;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p18, %r153, %r23;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	selp.b32 	%r155, 16, 0, %p1;
	selp.b32 	%r146, %r155, 0, %p16;
	// begin inline asm
	cp.async.cg.shared.global [ %r145 + 0 ], [ %rd26 + 0 ], 0x10, %r146;
	// end inline asm
	selp.b32 	%r148, %r155, 0, %p17;
	// begin inline asm
	cp.async.cg.shared.global [ %r147 + 0 ], [ %rd27 + 0 ], 0x10, %r148;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r156, 16, 0, %p2;
	selp.b32 	%r150, %r156, 0, %p18;
	// begin inline asm
	cp.async.cg.shared.global [ %r149 + 0 ], [ %rd28 + 0 ], 0x10, %r150;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p15 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	cvt.u64.u32 	%rd8, %r47;
	cvt.u64.u32 	%rd9, %r46;
	mov.b32 	%r338, -1;
	mov.b64 	%rd58, 0;
	mov.u32 	%r336, %r333;
	mov.u32 	%r337, %r334;
	mov.u64 	%rd57, %rd7;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p22, %rd58, %rd4;
	add.s32 	%r198, %r338, 1;
	setp.gt.u32 	%p23, %r338, 2147483646;
	selp.b32 	%r338, %r198, 0, %p23;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r199, %r338, 11;
	add.s32 	%r201, %r332, %r199;
	add.s32 	%r162, %r201, %r202;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r168, %r169, %r170, %r171}, [%r162];
	// end inline asm
	add.s32 	%r167, %r201, %r203;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r180, %r181, %r182, %r183}, [%r167];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	shl.b32 	%r204, %r338, 10;
	add.s32 	%r205, %r332, %r204;
	add.s32 	%r206, %r205, 2048;
	add.s32 	%r208, %r206, %r207;
	ld.shared.u32 	%r172, [%r208];
	add.s32 	%r209, %r31, %r32;
	shl.b32 	%r210, %r209, 2;
	add.s32 	%r211, %r206, %r210;
	ld.shared.u32 	%r173, [%r211+256];
	ld.shared.u32 	%r184, [%r211+512];
	ld.shared.u32 	%r185, [%r211+768];
	add.s32 	%r213, %r206, %r212;
	ld.shared.u32 	%r178, [%r213];
	add.s32 	%r214, %r34, %r32;
	shl.b32 	%r215, %r214, 2;
	add.s32 	%r216, %r206, %r215;
	ld.shared.u32 	%r179, [%r216+256];
	ld.shared.u32 	%r190, [%r216+512];
	ld.shared.u32 	%r191, [%r216+768];
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f82, %f83, %f84, %f85 }, { %r168, %r169, %r170, %r171 }, { %r172, %r173 }, { %f82, %f83, %f84, %f85 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f86, %f87, %f88, %f89 }, { %r168, %r169, %r170, %r171 }, { %r178, %r179 }, { %f86, %f87, %f88, %f89 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f82, %f83, %f84, %f85 }, { %r180, %r181, %r182, %r183 }, { %r184, %r185 }, { %f82, %f83, %f84, %f85 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f86, %f87, %f88, %f89 }, { %r180, %r181, %r182, %r183 }, { %r190, %r191 }, { %f86, %f87, %f88, %f89 };
	// end inline asm
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd58, %rd58, 1;
	.loc	1 69 89                         // implicit_gemm_kernel.py:69:89
	add.s64 	%rd36, %rd9, %rd57;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd37, %rd8, %rd57;
	cvt.u32.u64 	%r217, %rd36;
	mul.wide.s32 	%rd38, %r217, 4;
	add.s64 	%rd33, %rd14, %rd38;
	cvt.u32.u64 	%r218, %rd37;
	mul.wide.s32 	%rd39, %r218, 4;
	add.s64 	%rd34, %rd14, %rd39;
	.loc	1 70 98                         // implicit_gemm_kernel.py:70:98
	setp.lt.s64 	%p24, %rd57, %rd5;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd40, %r336, 4;
	add.s64 	%rd35, %rd15, %rd40;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p25, %r337, %r23;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r219, 16, 0, %p24;
	selp.b32 	%r220, %r219, 0, %p16;
	selp.b32 	%r193, %r220, 0, %p22;
	// begin inline asm
	cp.async.cg.shared.global [ %r145 + 0 ], [ %rd33 + 0 ], 0x10, %r193;
	// end inline asm
	selp.b32 	%r221, %r219, 0, %p17;
	selp.b32 	%r195, %r221, 0, %p22;
	// begin inline asm
	cp.async.cg.shared.global [ %r147 + 0 ], [ %rd34 + 0 ], 0x10, %r195;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r222, 16, 0, %p25;
	selp.b32 	%r223, %r222, 0, %p4;
	selp.b32 	%r197, %r223, 0, %p22;
	// begin inline asm
	cp.async.cg.shared.global [ %r149 + 0 ], [ %rd35 + 0 ], 0x10, %r197;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd57, %rd57, 16;
	add.s32 	%r337, %r337, 16;
	add.s32 	%r336, %r336, %r40;
	setp.ne.s64 	%p26, %rd6, %rd58;
	@%p26 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge11_crit_edge
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r340, %r2, 4;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shr.u32 	%r339, %r10, 1;
	mov.b32 	%r341, 0;
	mov.u32 	%r342, %r341;
	mov.u32 	%r343, %r341;
	mov.u32 	%r344, %r341;
	mov.u32 	%r345, %r341;
	mov.u32 	%r346, %r341;
	mov.u32 	%r347, %r341;
	mov.u32 	%r348, %r341;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %._crit_edge11.loopexit
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	mov.b32 	%r341, %f82;
	mov.b32 	%r342, %f83;
	mov.b32 	%r343, %f84;
	mov.b32 	%r344, %f85;
	mov.b32 	%r345, %f86;
	mov.b32 	%r346, %f87;
	mov.b32 	%r347, %f88;
	mov.b32 	%r348, %f89;
$L__BB0_10:                             // %._crit_edge11
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	bfe.u32 	%r256, %r4, 4, 2;
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r257, %r256, %r14;
	or.b32  	%r258, %r257, 4;
	or.b32  	%r259, %r257, 8;
	or.b32  	%r260, %r257, 12;
	or.b32  	%r261, %r257, 16;
	or.b32  	%r262, %r257, 20;
	or.b32  	%r263, %r257, 24;
	or.b32  	%r264, %r257, 28;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r265, %r257, %r78;
	shl.b32 	%r266, %r78, 2;
	add.s32 	%r267, %r265, %r266;
	add.s32 	%r268, %r267, %r266;
	add.s32 	%r269, %r268, %r266;
	add.s32 	%r270, %r269, %r266;
	add.s32 	%r271, %r270, %r266;
	add.s32 	%r272, %r271, %r266;
	add.s32 	%r273, %r272, %r266;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r274, %r340, %r13;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r275, %r274, %r265;
	add.s32 	%r276, %r274, %r267;
	add.s32 	%r277, %r274, %r268;
	add.s32 	%r278, %r274, %r269;
	add.s32 	%r279, %r274, %r270;
	add.s32 	%r280, %r274, %r271;
	add.s32 	%r281, %r274, %r272;
	add.s32 	%r282, %r274, %r273;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd49, %r275, 4;
	add.s64 	%rd41, %rd16, %rd49;
	mul.wide.s32 	%rd50, %r276, 4;
	add.s64 	%rd42, %rd16, %rd50;
	mul.wide.s32 	%rd51, %r277, 4;
	add.s64 	%rd43, %rd16, %rd51;
	mul.wide.s32 	%rd52, %r278, 4;
	add.s64 	%rd44, %rd16, %rd52;
	mul.wide.s32 	%rd53, %r279, 4;
	add.s64 	%rd45, %rd16, %rd53;
	mul.wide.s32 	%rd54, %r280, 4;
	add.s64 	%rd46, %rd16, %rd54;
	mul.wide.s32 	%rd55, %r281, 4;
	add.s64 	%rd47, %rd16, %rd55;
	mul.wide.s32 	%rd56, %r282, 4;
	add.s64 	%rd48, %rd16, %rd56;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p44, %r257, %r76;
	setp.lt.s32 	%p45, %r258, %r76;
	setp.lt.s32 	%p46, %r259, %r76;
	setp.lt.s32 	%p47, %r260, %r76;
	setp.lt.s32 	%p48, %r261, %r76;
	setp.lt.s32 	%p49, %r262, %r76;
	setp.lt.s32 	%p50, %r263, %r76;
	setp.lt.s32 	%p51, %r264, %r76;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p52, %r274, %r78;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p36, %p44, %p52;
	and.pred  	%p37, %p45, %p52;
	and.pred  	%p38, %p46, %p52;
	and.pred  	%p39, %p47, %p52;
	and.pred  	%p40, %p48, %p52;
	and.pred  	%p41, %p49, %p52;
	and.pred  	%p42, %p50, %p52;
	and.pred  	%p43, %p51, %p52;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shl.b32 	%r283, %r4, 6;
	and.b32  	%r284, %r283, 192;
	or.b32  	%r285, %r284, %r339;
	or.b32  	%r286, %r285, %r6;
	or.b32  	%r287, %r286, %r8;
	or.b32  	%r288, %r287, %r9;
	shl.b32 	%r289, %r4, 5;
	and.b32  	%r290, %r289, 480;
	or.b32  	%r291, %r256, %r290;
	shr.u32 	%r292, %r284, 3;
	add.s32 	%r294, %r332, %r292;
	shl.b32 	%r295, %r288, 2;
	add.s32 	%r224, %r294, %r295;
	mov.pred 	%p28, -1;
	// begin inline asm
	@%p28 st.shared.b32 [ %r224 + 0 ], %r341;
	// end inline asm
	or.b32  	%r296, %r288, 32;
	shr.u32 	%r297, %r296, 3;
	and.b32  	%r298, %r297, 536870908;
	add.s32 	%r299, %r332, %r298;
	shl.b32 	%r300, %r296, 2;
	add.s32 	%r226, %r299, %r300;
	// begin inline asm
	@%p28 st.shared.b32 [ %r226 + 0 ], %r342;
	// end inline asm
	xor.b32  	%r301, %r288, 8;
	shl.b32 	%r302, %r301, 2;
	add.s32 	%r228, %r294, %r302;
	// begin inline asm
	@%p28 st.shared.b32 [ %r228 + 0 ], %r343;
	// end inline asm
	xor.b32  	%r303, %r288, 40;
	shr.u32 	%r304, %r303, 3;
	and.b32  	%r305, %r304, 536870908;
	add.s32 	%r306, %r332, %r305;
	shl.b32 	%r307, %r303, 2;
	add.s32 	%r230, %r306, %r307;
	// begin inline asm
	@%p28 st.shared.b32 [ %r230 + 0 ], %r344;
	// end inline asm
	or.b32  	%r308, %r288, 256;
	shr.u32 	%r309, %r308, 3;
	and.b32  	%r310, %r309, 536870908;
	add.s32 	%r311, %r332, %r310;
	shl.b32 	%r312, %r308, 2;
	add.s32 	%r232, %r311, %r312;
	// begin inline asm
	@%p28 st.shared.b32 [ %r232 + 0 ], %r345;
	// end inline asm
	or.b32  	%r313, %r288, 288;
	shr.u32 	%r314, %r313, 3;
	and.b32  	%r315, %r314, 536870908;
	add.s32 	%r316, %r332, %r315;
	shl.b32 	%r317, %r313, 2;
	add.s32 	%r234, %r316, %r317;
	// begin inline asm
	@%p28 st.shared.b32 [ %r234 + 0 ], %r346;
	// end inline asm
	xor.b32  	%r318, %r288, 264;
	shr.u32 	%r319, %r318, 3;
	and.b32  	%r320, %r319, 536870908;
	add.s32 	%r321, %r332, %r320;
	shl.b32 	%r322, %r318, 2;
	add.s32 	%r236, %r321, %r322;
	// begin inline asm
	@%p28 st.shared.b32 [ %r236 + 0 ], %r347;
	// end inline asm
	xor.b32  	%r323, %r288, 296;
	shr.u32 	%r324, %r323, 3;
	and.b32  	%r325, %r324, 536870908;
	add.s32 	%r326, %r332, %r325;
	shl.b32 	%r327, %r323, 2;
	add.s32 	%r238, %r326, %r327;
	// begin inline asm
	@%p28 st.shared.b32 [ %r238 + 0 ], %r348;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r328, %r290, 3;
	add.s32 	%r329, %r332, %r328;
	shl.b32 	%r330, %r291, 2;
	add.s32 	%r331, %r329, %r330;
	ld.shared.u32 	%r241, [%r331];
	ld.shared.u32 	%r243, [%r331+16];
	ld.shared.u32 	%r245, [%r331+32];
	ld.shared.u32 	%r247, [%r331+48];
	ld.shared.u32 	%r249, [%r331+64];
	ld.shared.u32 	%r251, [%r331+80];
	ld.shared.u32 	%r253, [%r331+96];
	ld.shared.u32 	%r255, [%r331+112];
	// begin inline asm
	mov.u32 %r240, 0x0;
	@%p36 atom.global.gpu.acq_rel.add.f32 %r240, [ %rd41 + 0 ], %r241;
	// end inline asm
	// begin inline asm
	mov.u32 %r242, 0x0;
	@%p37 atom.global.gpu.acq_rel.add.f32 %r242, [ %rd42 + 0 ], %r243;
	// end inline asm
	// begin inline asm
	mov.u32 %r244, 0x0;
	@%p38 atom.global.gpu.acq_rel.add.f32 %r244, [ %rd43 + 0 ], %r245;
	// end inline asm
	// begin inline asm
	mov.u32 %r246, 0x0;
	@%p39 atom.global.gpu.acq_rel.add.f32 %r246, [ %rd44 + 0 ], %r247;
	// end inline asm
	// begin inline asm
	mov.u32 %r248, 0x0;
	@%p40 atom.global.gpu.acq_rel.add.f32 %r248, [ %rd45 + 0 ], %r249;
	// end inline asm
	// begin inline asm
	mov.u32 %r250, 0x0;
	@%p41 atom.global.gpu.acq_rel.add.f32 %r250, [ %rd46 + 0 ], %r251;
	// end inline asm
	// begin inline asm
	mov.u32 %r252, 0x0;
	@%p42 atom.global.gpu.acq_rel.add.f32 %r252, [ %rd47 + 0 ], %r253;
	// end inline asm
	// begin inline asm
	mov.u32 %r254, 0x0;
	@%p43 atom.global.gpu.acq_rel.add.f32 %r254, [ %rd48 + 0 ], %r255;
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 150                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x8f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
