//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<109>;
	.reg .b32 	%r<689>;
	.reg .f32 	%f<210>;
	.reg .b64 	%rd<164>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r162, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r160, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd32, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r163, %ctaid.x;
	.loc	1 50 36                         // implicit_gemm_kernel.py:50:36
	shr.u32 	%r164, %r163, 31;
	add.s32 	%r165, %r163, %r164;
	and.b32  	%r166, %r165, -2;
	sub.s32 	%r659, %r163, %r166;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r167, %r160, 31;
$L__tmp2:
	.loc	1 49 35                         // implicit_gemm_kernel.py:49:35
	shr.s32 	%r168, %r165, 1;
	shr.s32 	%r170, %r167, 31;
	shr.u32 	%r171, %r170, 27;
	add.s32 	%r172, %r167, %r171;
	shr.s32 	%r173, %r172, 5;
	ld.param.u32 	%r174, [implicit_conv3d_kernel_param_8];
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r2, %r168, %r173;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r175, %r2, %r173;
	sub.s32 	%r176, %r168, %r175;
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r177, %r174, %r174;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r3, %r177, %r174;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r4, %tid.x;
	and.b32  	%r5, %r4, 16;
	and.b32  	%r6, %r4, 32;
	and.b32  	%r9, %r4, 31;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r10, %r176, 5;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.lt.s32 	%p3, %r659, %r3;
	mov.u32 	%r650, global_smem;
	@%p3 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph14
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r161, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r159, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd31, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd30, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd33, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	bfe.u32 	%r7, %r4, 4, 2;
	and.b32  	%r8, %r4, 15;
	or.b32  	%r11, %r10, %r7;
	or.b32  	%r12, %r11, 4;
	or.b32  	%r13, %r11, 8;
	or.b32  	%r14, %r11, 12;
	or.b32  	%r15, %r11, 16;
	or.b32  	%r16, %r11, 20;
	or.b32  	%r17, %r11, 24;
	or.b32  	%r18, %r11, 28;
	or.b32  	%r19, %r10, %r9;
	mul.lo.s32 	%r178, %r11, %r3;
	shl.b32 	%r179, %r3, 2;
	add.s32 	%r180, %r178, %r179;
	add.s32 	%r181, %r180, %r179;
	add.s32 	%r182, %r181, %r179;
	add.s32 	%r183, %r182, %r179;
	add.s32 	%r184, %r183, %r179;
	add.s32 	%r185, %r184, %r179;
	add.s32 	%r186, %r185, %r179;
	mul.lo.s32 	%r187, %r19, %r3;
	mul.wide.s32 	%rd34, %r178, 4;
	add.s64 	%rd1, %rd33, %rd34;
	mul.wide.s32 	%rd35, %r180, 4;
	add.s64 	%rd2, %rd33, %rd35;
	mul.wide.s32 	%rd36, %r181, 4;
	add.s64 	%rd3, %rd33, %rd36;
	mul.wide.s32 	%rd37, %r182, 4;
	add.s64 	%rd4, %rd33, %rd37;
	mul.wide.s32 	%rd38, %r183, 4;
	add.s64 	%rd5, %rd33, %rd38;
	mul.wide.s32 	%rd39, %r184, 4;
	add.s64 	%rd6, %rd33, %rd39;
	mul.wide.s32 	%rd40, %r185, 4;
	add.s64 	%rd7, %rd33, %rd40;
	mul.wide.s32 	%rd41, %r186, 4;
	add.s64 	%rd8, %rd33, %rd41;
	mul.wide.s32 	%rd42, %r187, 4;
	add.s64 	%rd9, %rd33, %rd42;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r191, %r4, 4;
	and.b32  	%r192, %r4, 3;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	or.b32  	%r193, %r191, %r192;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r194, %r4, 8;
	and.b32  	%r195, %r4, 2;
	add.s32 	%r24, %r161, 15;
	shr.s32 	%r196, %r24, 31;
	shr.u32 	%r197, %r196, 28;
	add.s32 	%r198, %r24, %r197;
	shr.s32 	%r199, %r198, 4;
	shr.u32 	%r672, %r6, 5;
	or.b32  	%r26, %r672, 2;
	or.b32  	%r27, %r672, 4;
	or.b32  	%r28, %r672, 6;
	or.b32  	%r29, %r672, 8;
	or.b32  	%r30, %r672, 10;
	or.b32  	%r31, %r672, 12;
	or.b32  	%r32, %r672, 14;
	shl.b32 	%r200, %r2, 5;
	mul.lo.s32 	%r33, %r3, %r161;
	or.b32  	%r671, %r200, %r9;
	setp.lt.s32 	%p4, %r671, %r162;
	setp.gt.s32 	%p5, %r24, 15;
	setp.lt.s32 	%p6, %r8, %r161;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p1, %p6, %p5;
	shr.u32 	%r201, %r6, 3;
	xor.b32  	%r202, %r201, %r8;
	shl.b32 	%r203, %r7, 4;
	or.b32  	%r204, %r202, %r203;
	shl.b32 	%r205, %r204, 2;
	add.s32 	%r285, %r650, %r205;
	or.b32  	%r207, %r193, 8;
	or.b32  	%r208, %r201, %r194;
	xor.b32  	%r209, %r208, %r207;
	or.b32  	%r210, %r209, %r203;
	shl.b32 	%r211, %r210, 2;
	add.s32 	%r212, %r650, %r211;
	add.s32 	%r287, %r212, 256;
	add.s32 	%r289, %r285, 512;
	add.s32 	%r291, %r212, 768;
	add.s32 	%r293, %r285, 1024;
	add.s32 	%r295, %r212, 1280;
	add.s32 	%r297, %r285, 1536;
	add.s32 	%r299, %r212, 1792;
	shr.u32 	%r213, %r6, 2;
	xor.b32  	%r214, %r213, %r9;
	or.b32  	%r215, %r214, %r6;
	shl.b32 	%r216, %r215, 2;
	add.s32 	%r217, %r650, 2048;
	add.s32 	%r301, %r217, %r216;
	or.b32  	%r60, %r8, 16;
	xor.b32  	%r218, %r60, %r5;
	xor.b32  	%r219, %r218, %r213;
	shl.b32 	%r220, %r26, 7;
	shl.b32 	%r221, %r219, 2;
	or.b32  	%r222, %r220, %r221;
	add.s32 	%r303, %r217, %r222;
	shl.b32 	%r223, %r27, 7;
	shl.b32 	%r224, %r214, 2;
	or.b32  	%r225, %r223, %r224;
	add.s32 	%r305, %r217, %r225;
	shl.b32 	%r226, %r28, 7;
	or.b32  	%r227, %r226, %r221;
	add.s32 	%r307, %r217, %r227;
	shl.b32 	%r228, %r29, 7;
	or.b32  	%r229, %r228, %r224;
	add.s32 	%r309, %r217, %r229;
	shl.b32 	%r230, %r30, 7;
	or.b32  	%r231, %r230, %r221;
	add.s32 	%r311, %r217, %r231;
	shl.b32 	%r232, %r31, 7;
	or.b32  	%r233, %r232, %r224;
	add.s32 	%r313, %r217, %r233;
	shl.b32 	%r234, %r32, 7;
	or.b32  	%r235, %r234, %r221;
	add.s32 	%r315, %r217, %r235;
	add.s32 	%r236, %r199, -1;
	shl.b32 	%r237, %r195, 1;
	shl.b32 	%r238, %r191, 1;
	or.b32  	%r239, %r237, %r238;
	shr.u32 	%r669, %r5, 2;
	xor.b32  	%r240, %r239, %r669;
	shl.b32 	%r241, %r8, 4;
	or.b32  	%r52, %r240, %r241;
	or.b32  	%r242, %r237, 8;
	or.b32  	%r243, %r669, %r238;
	xor.b32  	%r244, %r243, %r242;
	or.b32  	%r53, %r244, %r241;
	shl.b32 	%r245, %r60, 4;
	or.b32  	%r54, %r240, %r245;
	or.b32  	%r55, %r244, %r245;
	shl.b32 	%r246, %r4, 3;
	and.b32  	%r247, %r246, 8;
	shl.b32 	%r248, %r195, 3;
	bfe.u32 	%r249, %r4, 2, 1;
	shr.u32 	%r250, %r194, 2;
	or.b32  	%r251, %r250, %r249;
	or.b32  	%r252, %r251, %r248;
	or.b32  	%r253, %r252, %r247;
	or.b32  	%r254, %r253, %r669;
	xor.b32  	%r56, %r254, %r213;
	shl.b32 	%r255, %r4, 5;
	and.b32  	%r670, %r255, 96;
	shl.b32 	%r58, %r192, 5;
	or.b32  	%r256, %r247, 16;
	xor.b32  	%r257, %r256, %r248;
	or.b32  	%r258, %r249, %r257;
	or.b32  	%r259, %r258, %r250;
	or.b32  	%r260, %r259, %r669;
	xor.b32  	%r59, %r260, %r213;
	cvt.s64.s32 	%rd10, %r236;
	cvt.u64.u32 	%rd43, %r8;
	cvt.s64.s32 	%rd11, %r161;
	cvt.u64.u32 	%rd12, %r199;
	and.pred  	%p2, %p4, %p5;
	or.b64  	%rd13, %rd43, 16;
	mad.lo.s32 	%r261, %r659, %r161, %r672;
	cvt.u64.u32 	%rd161, %r261;
	shl.b32 	%r262, %r161, 1;
	cvt.u64.u32 	%rd15, %r262;
	add.s32 	%r263, %r261, 30;
	mad.lo.s32 	%r658, %r162, %r263, %r200;
	mul.lo.s32 	%r264, %r162, %r161;
	shl.b32 	%r62, %r264, 1;
	shl.b32 	%r63, %r162, 4;
	add.s32 	%r265, %r261, 28;
	mad.lo.s32 	%r657, %r162, %r265, %r200;
	add.s32 	%r266, %r261, 26;
	mad.lo.s32 	%r656, %r162, %r266, %r200;
	add.s32 	%r267, %r261, 24;
	mad.lo.s32 	%r655, %r162, %r267, %r200;
	add.s32 	%r268, %r261, 22;
	mad.lo.s32 	%r654, %r162, %r268, %r200;
	add.s32 	%r269, %r261, 20;
	mad.lo.s32 	%r653, %r162, %r269, %r200;
	add.s32 	%r270, %r261, 18;
	mad.lo.s32 	%r652, %r162, %r270, %r200;
	add.s32 	%r271, %r261, 16;
	mad.lo.s32 	%r651, %r162, %r271, %r200;
	mov.f32 	%f162, 0f00000000;
	setp.lt.s32 	%p15, %r19, %r160;
	shl.b32 	%r457, %r52, 2;
	shl.b32 	%r458, %r53, 2;
	shl.b32 	%r459, %r54, 2;
	shl.b32 	%r460, %r55, 2;
	shl.b32 	%r462, %r56, 2;
	shl.b32 	%r466, %r58, 2;
	shl.b32 	%r468, %r59, 2;
	mov.f32 	%f163, %f162;
	mov.f32 	%f164, %f162;
	mov.f32 	%f165, %f162;
	mov.f32 	%f166, %f162;
	mov.f32 	%f167, %f162;
	mov.f32 	%f168, %f162;
	mov.f32 	%f169, %f162;
	mov.f32 	%f170, %f162;
	mov.f32 	%f171, %f162;
	mov.f32 	%f172, %f162;
	mov.f32 	%f173, %f162;
	mov.f32 	%f174, %f162;
	mov.f32 	%f175, %f162;
	mov.f32 	%f176, %f162;
	mov.f32 	%f177, %f162;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s32 	%r659, %r659, 2;
	add.s64 	%rd161, %rd161, %rd15;
	add.s32 	%r658, %r658, %r62;
	add.s32 	%r657, %r657, %r62;
	add.s32 	%r656, %r656, %r62;
	add.s32 	%r655, %r655, %r62;
	add.s32 	%r654, %r654, %r62;
	add.s32 	%r653, %r653, %r62;
	add.s32 	%r652, %r652, %r62;
	add.s32 	%r651, %r651, %r62;
	setp.lt.s32 	%p59, %r659, %r3;
	@%p59 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p14, %r18, %r160;
	setp.lt.s32 	%p13, %r17, %r160;
	setp.lt.s32 	%p12, %r16, %r160;
	setp.lt.s32 	%p11, %r15, %r160;
	setp.lt.s32 	%p10, %r14, %r160;
	setp.lt.s32 	%p9, %r13, %r160;
	setp.lt.s32 	%p8, %r12, %r160;
	setp.lt.s32 	%p7, %r11, %r160;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	mul.wide.s32 	%rd53, %r659, 4;
	add.s64 	%rd44, %rd1, %rd53;
	add.s64 	%rd45, %rd2, %rd53;
	add.s64 	%rd46, %rd3, %rd53;
	add.s64 	%rd47, %rd4, %rd53;
	add.s64 	%rd48, %rd5, %rd53;
	add.s64 	%rd49, %rd6, %rd53;
	add.s64 	%rd50, %rd7, %rd53;
	add.s64 	%rd51, %rd8, %rd53;
	add.s64 	%rd52, %rd9, %rd53;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r272, 0xffffffffffffffff;
	@%p7 ld.global.b32 { %r272 }, [ %rd44 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r273, 0xffffffffffffffff;
	@%p8 ld.global.b32 { %r273 }, [ %rd45 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r274, 0xffffffffffffffff;
	@%p9 ld.global.b32 { %r274 }, [ %rd46 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r275, 0xffffffffffffffff;
	@%p10 ld.global.b32 { %r275 }, [ %rd47 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r276, 0xffffffffffffffff;
	@%p11 ld.global.b32 { %r276 }, [ %rd48 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r277, 0xffffffffffffffff;
	@%p12 ld.global.b32 { %r277 }, [ %rd49 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r278, 0xffffffffffffffff;
	@%p13 ld.global.b32 { %r278 }, [ %rd50 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r279, 0xffffffffffffffff;
	@%p14 ld.global.b32 { %r279 }, [ %rd51 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r280, 0xffffffffffffffff;
	@%p15 ld.global.b32 { %r280 }, [ %rd52 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p16, %r280, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p17, %r280, %r159;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p18, %p16, %p17;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r281, 1, 0, %p18;
	mov.b32 	%r282, -1;
	redux.sync.or.b32 %r283, %r281, %r282;
	and.b32  	%r284, %r283, 1;
	setp.eq.b32 	%p19, %r284, 1;
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p20, %p19;
	@%p20 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.lt.s32 	%p21, %r24, 16;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	mul.lo.s32 	%r317, %r659, %r161;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r88, %r272, %r161;
	mul.lo.s32 	%r89, %r273, %r161;
	mul.lo.s32 	%r90, %r274, %r161;
	mul.lo.s32 	%r91, %r275, %r161;
	mul.lo.s32 	%r92, %r276, %r161;
	mul.lo.s32 	%r93, %r277, %r161;
	mul.lo.s32 	%r94, %r278, %r161;
	mul.lo.s32 	%r95, %r279, %r161;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r318, %r88, %r8;
	add.s32 	%r319, %r89, %r8;
	add.s32 	%r320, %r90, %r8;
	add.s32 	%r321, %r91, %r8;
	add.s32 	%r322, %r92, %r8;
	add.s32 	%r323, %r93, %r8;
	add.s32 	%r324, %r94, %r8;
	add.s32 	%r325, %r95, %r8;
	.loc	1 70 43                         // implicit_gemm_kernel.py:70:43
	setp.ne.s32 	%p22, %r272, -1;
	setp.ne.s32 	%p23, %r273, -1;
	setp.ne.s32 	%p24, %r274, -1;
	setp.ne.s32 	%p25, %r275, -1;
	setp.ne.s32 	%p26, %r276, -1;
	setp.ne.s32 	%p27, %r277, -1;
	setp.ne.s32 	%p28, %r278, -1;
	setp.ne.s32 	%p29, %r279, -1;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd70, %r318, 4;
	add.s64 	%rd54, %rd30, %rd70;
	mul.wide.s32 	%rd71, %r319, 4;
	add.s64 	%rd55, %rd30, %rd71;
	mul.wide.s32 	%rd72, %r320, 4;
	add.s64 	%rd56, %rd30, %rd72;
	mul.wide.s32 	%rd73, %r321, 4;
	add.s64 	%rd57, %rd30, %rd73;
	mul.wide.s32 	%rd74, %r322, 4;
	add.s64 	%rd58, %rd30, %rd74;
	mul.wide.s32 	%rd75, %r323, 4;
	add.s64 	%rd59, %rd30, %rd75;
	mul.wide.s32 	%rd76, %r324, 4;
	add.s64 	%rd60, %rd30, %rd76;
	mul.wide.s32 	%rd77, %r325, 4;
	add.s64 	%rd61, %rd30, %rd77;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s32 	%r326, %r317, %r672;
	add.s32 	%r327, %r317, %r26;
	add.s32 	%r328, %r317, %r27;
	add.s32 	%r329, %r317, %r28;
	add.s32 	%r330, %r317, %r29;
	add.s32 	%r331, %r317, %r30;
	add.s32 	%r332, %r317, %r31;
	add.s32 	%r333, %r317, %r32;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r334, %r326, %r162, %r671;
	mad.lo.s32 	%r335, %r327, %r162, %r671;
	mad.lo.s32 	%r336, %r328, %r162, %r671;
	mad.lo.s32 	%r337, %r329, %r162, %r671;
	mad.lo.s32 	%r338, %r330, %r162, %r671;
	mad.lo.s32 	%r339, %r331, %r162, %r671;
	mad.lo.s32 	%r340, %r332, %r162, %r671;
	mad.lo.s32 	%r341, %r333, %r162, %r671;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd78, %r334, 4;
	add.s64 	%rd62, %rd31, %rd78;
	mul.wide.s32 	%rd79, %r335, 4;
	add.s64 	%rd63, %rd31, %rd79;
	mul.wide.s32 	%rd80, %r336, 4;
	add.s64 	%rd64, %rd31, %rd80;
	mul.wide.s32 	%rd81, %r337, 4;
	add.s64 	%rd65, %rd31, %rd81;
	mul.wide.s32 	%rd82, %r338, 4;
	add.s64 	%rd66, %rd31, %rd82;
	mul.wide.s32 	%rd83, %r339, 4;
	add.s64 	%rd67, %rd31, %rd83;
	mul.wide.s32 	%rd84, %r340, 4;
	add.s64 	%rd68, %rd31, %rd84;
	mul.wide.s32 	%rd85, %r341, 4;
	add.s64 	%rd69, %rd31, %rd85;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p30, %r326, %r33;
	setp.lt.s32 	%p31, %r327, %r33;
	setp.lt.s32 	%p32, %r328, %r33;
	setp.lt.s32 	%p33, %r329, %r33;
	setp.lt.s32 	%p34, %r330, %r33;
	setp.lt.s32 	%p35, %r331, %r33;
	setp.lt.s32 	%p36, %r332, %r33;
	setp.lt.s32 	%p37, %r333, %r33;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	selp.b32 	%r342, 4, 0, %p1;
	selp.b32 	%r286, %r342, 0, %p22;
	// begin inline asm
	cp.async.ca.shared.global [ %r285 + 0 ], [ %rd54 + 0 ], 0x4, %r286;
	// end inline asm
	selp.b32 	%r288, %r342, 0, %p23;
	// begin inline asm
	cp.async.ca.shared.global [ %r287 + 0 ], [ %rd55 + 0 ], 0x4, %r288;
	// end inline asm
	selp.b32 	%r290, %r342, 0, %p24;
	// begin inline asm
	cp.async.ca.shared.global [ %r289 + 0 ], [ %rd56 + 0 ], 0x4, %r290;
	// end inline asm
	selp.b32 	%r292, %r342, 0, %p25;
	// begin inline asm
	cp.async.ca.shared.global [ %r291 + 0 ], [ %rd57 + 0 ], 0x4, %r292;
	// end inline asm
	selp.b32 	%r294, %r342, 0, %p26;
	// begin inline asm
	cp.async.ca.shared.global [ %r293 + 0 ], [ %rd58 + 0 ], 0x4, %r294;
	// end inline asm
	selp.b32 	%r296, %r342, 0, %p27;
	// begin inline asm
	cp.async.ca.shared.global [ %r295 + 0 ], [ %rd59 + 0 ], 0x4, %r296;
	// end inline asm
	selp.b32 	%r298, %r342, 0, %p28;
	// begin inline asm
	cp.async.ca.shared.global [ %r297 + 0 ], [ %rd60 + 0 ], 0x4, %r298;
	// end inline asm
	selp.b32 	%r300, %r342, 0, %p29;
	// begin inline asm
	cp.async.ca.shared.global [ %r299 + 0 ], [ %rd61 + 0 ], 0x4, %r300;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r343, 4, 0, %p2;
	selp.b32 	%r302, %r343, 0, %p30;
	// begin inline asm
	cp.async.ca.shared.global [ %r301 + 0 ], [ %rd62 + 0 ], 0x4, %r302;
	// end inline asm
	selp.b32 	%r304, %r343, 0, %p31;
	// begin inline asm
	cp.async.ca.shared.global [ %r303 + 0 ], [ %rd63 + 0 ], 0x4, %r304;
	// end inline asm
	selp.b32 	%r306, %r343, 0, %p32;
	// begin inline asm
	cp.async.ca.shared.global [ %r305 + 0 ], [ %rd64 + 0 ], 0x4, %r306;
	// end inline asm
	selp.b32 	%r308, %r343, 0, %p33;
	// begin inline asm
	cp.async.ca.shared.global [ %r307 + 0 ], [ %rd65 + 0 ], 0x4, %r308;
	// end inline asm
	selp.b32 	%r310, %r343, 0, %p34;
	// begin inline asm
	cp.async.ca.shared.global [ %r309 + 0 ], [ %rd66 + 0 ], 0x4, %r310;
	// end inline asm
	selp.b32 	%r312, %r343, 0, %p35;
	// begin inline asm
	cp.async.ca.shared.global [ %r311 + 0 ], [ %rd67 + 0 ], 0x4, %r312;
	// end inline asm
	selp.b32 	%r314, %r343, 0, %p36;
	// begin inline asm
	cp.async.ca.shared.global [ %r313 + 0 ], [ %rd68 + 0 ], 0x4, %r314;
	// end inline asm
	selp.b32 	%r316, %r343, 0, %p37;
	// begin inline asm
	cp.async.ca.shared.global [ %r315 + 0 ], [ %rd69 + 0 ], 0x4, %r316;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p21 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r345, %r60, %r95;
	cvt.u64.u32 	%rd17, %r345;
	add.s32 	%r346, %r60, %r94;
	cvt.u64.u32 	%rd18, %r346;
	add.s32 	%r347, %r60, %r93;
	cvt.u64.u32 	%rd19, %r347;
	add.s32 	%r348, %r60, %r92;
	cvt.u64.u32 	%rd20, %r348;
	add.s32 	%r349, %r60, %r91;
	cvt.u64.u32 	%rd21, %r349;
	add.s32 	%r350, %r60, %r90;
	cvt.u64.u32 	%rd22, %r350;
	add.s32 	%r351, %r60, %r89;
	cvt.u64.u32 	%rd23, %r351;
	add.s32 	%r352, %r60, %r88;
	cvt.u64.u32 	%rd24, %r352;
	mov.b32 	%r668, -1;
	mov.b64 	%rd162, 0;
	mov.u32 	%r660, %r651;
	mov.u32 	%r661, %r652;
	mov.u32 	%r662, %r653;
	mov.u32 	%r663, %r654;
	mov.u32 	%r664, %r655;
	mov.u32 	%r665, %r656;
	mov.u32 	%r666, %r657;
	mov.u32 	%r667, %r658;
	mov.u64 	%rd163, %rd162;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p47, %rd163, %rd10;
	add.s32 	%r453, %r668, 1;
	setp.gt.u32 	%p48, %r668, 2147483646;
	selp.b32 	%r668, %r453, 0, %p48;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r454, %r668, 11;
	add.s32 	%r456, %r650, %r454;
	add.s32 	%r357, %r456, %r457;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r373, %r374, %r375, %r376}, [%r357];
	// end inline asm
	add.s32 	%r362, %r456, %r458;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r397, %r398, %r399, %r400}, [%r362];
	// end inline asm
	add.s32 	%r367, %r456, %r459;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r385, %r386, %r387, %r388}, [%r367];
	// end inline asm
	add.s32 	%r372, %r456, %r460;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r409, %r410, %r411, %r412}, [%r372];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	add.s32 	%r461, %r456, 2048;
	add.s32 	%r463, %r461, %r462;
	shl.b32 	%r464, %r670, 2;
	add.s32 	%r465, %r463, %r464;
	ld.shared.u32 	%r377, [%r465];
	ld.shared.u32 	%r378, [%r465+512];
	add.s32 	%r467, %r463, %r466;
	ld.shared.u32 	%r401, [%r467+1024];
	ld.shared.u32 	%r402, [%r465+1536];
	add.s32 	%r469, %r461, %r468;
	add.s32 	%r470, %r469, %r464;
	ld.shared.u32 	%r383, [%r470];
	ld.shared.u32 	%r384, [%r470+512];
	add.s32 	%r471, %r469, %r466;
	ld.shared.u32 	%r407, [%r471+1024];
	ld.shared.u32 	%r408, [%r470+1536];
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f162, %f163, %f164, %f165 }, { %r373, %r374, %r375, %r376 }, { %r377, %r378 }, { %f162, %f163, %f164, %f165 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f166, %f167, %f168, %f169 }, { %r373, %r374, %r375, %r376 }, { %r383, %r384 }, { %f166, %f167, %f168, %f169 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f170, %f171, %f172, %f173 }, { %r385, %r386, %r387, %r388 }, { %r377, %r378 }, { %f170, %f171, %f172, %f173 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f174, %f175, %f176, %f177 }, { %r385, %r386, %r387, %r388 }, { %r383, %r384 }, { %f174, %f175, %f176, %f177 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f162, %f163, %f164, %f165 }, { %r397, %r398, %r399, %r400 }, { %r401, %r402 }, { %f162, %f163, %f164, %f165 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f166, %f167, %f168, %f169 }, { %r397, %r398, %r399, %r400 }, { %r407, %r408 }, { %f166, %f167, %f168, %f169 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f170, %f171, %f172, %f173 }, { %r409, %r410, %r411, %r412 }, { %r401, %r402 }, { %f170, %f171, %f172, %f173 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f174, %f175, %f176, %f177 }, { %r409, %r410, %r411, %r412 }, { %r407, %r408 }, { %f174, %f175, %f176, %f177 };
	// end inline asm
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd163, %rd163, 1;
	.loc	1 69 89                         // implicit_gemm_kernel.py:69:89
	add.s64 	%rd103, %rd24, %rd162;
	add.s64 	%rd104, %rd23, %rd162;
	add.s64 	%rd105, %rd22, %rd162;
	add.s64 	%rd106, %rd21, %rd162;
	add.s64 	%rd107, %rd20, %rd162;
	add.s64 	%rd108, %rd19, %rd162;
	add.s64 	%rd109, %rd18, %rd162;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd110, %rd17, %rd162;
	cvt.u32.u64 	%r472, %rd103;
	mul.wide.s32 	%rd111, %r472, 4;
	add.s64 	%rd87, %rd30, %rd111;
	cvt.u32.u64 	%r473, %rd104;
	mul.wide.s32 	%rd112, %r473, 4;
	add.s64 	%rd88, %rd30, %rd112;
	cvt.u32.u64 	%r474, %rd105;
	mul.wide.s32 	%rd113, %r474, 4;
	add.s64 	%rd89, %rd30, %rd113;
	cvt.u32.u64 	%r475, %rd106;
	mul.wide.s32 	%rd114, %r475, 4;
	add.s64 	%rd90, %rd30, %rd114;
	cvt.u32.u64 	%r476, %rd107;
	mul.wide.s32 	%rd115, %r476, 4;
	add.s64 	%rd91, %rd30, %rd115;
	cvt.u32.u64 	%r477, %rd108;
	mul.wide.s32 	%rd116, %r477, 4;
	add.s64 	%rd92, %rd30, %rd116;
	cvt.u32.u64 	%r478, %rd109;
	mul.wide.s32 	%rd117, %r478, 4;
	add.s64 	%rd93, %rd30, %rd117;
	cvt.u32.u64 	%r479, %rd110;
	mul.wide.s32 	%rd118, %r479, 4;
	add.s64 	%rd94, %rd30, %rd118;
	.loc	1 70 98                         // implicit_gemm_kernel.py:70:98
	add.s64 	%rd119, %rd13, %rd162;
	setp.lt.s64 	%p49, %rd119, %rd11;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s64 	%rd120, %rd161, %rd162;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	add.s32 	%r480, %r9, %r660;
	add.s32 	%r481, %r9, %r661;
	add.s32 	%r482, %r9, %r662;
	add.s32 	%r483, %r9, %r663;
	add.s32 	%r484, %r9, %r664;
	add.s32 	%r485, %r9, %r665;
	add.s32 	%r486, %r9, %r666;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s32 	%r487, %r9, %r667;
	mul.wide.s32 	%rd121, %r480, 4;
	add.s64 	%rd95, %rd31, %rd121;
	mul.wide.s32 	%rd122, %r481, 4;
	add.s64 	%rd96, %rd31, %rd122;
	mul.wide.s32 	%rd123, %r482, 4;
	add.s64 	%rd97, %rd31, %rd123;
	mul.wide.s32 	%rd124, %r483, 4;
	add.s64 	%rd98, %rd31, %rd124;
	mul.wide.s32 	%rd125, %r484, 4;
	add.s64 	%rd99, %rd31, %rd125;
	mul.wide.s32 	%rd126, %r485, 4;
	add.s64 	%rd100, %rd31, %rd126;
	mul.wide.s32 	%rd127, %r486, 4;
	add.s64 	%rd101, %rd31, %rd127;
	mul.wide.s32 	%rd128, %r487, 4;
	add.s64 	%rd102, %rd31, %rd128;
	cvt.u32.u64 	%r488, %rd120;
	add.s32 	%r489, %r488, 16;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p50, %r489, %r33;
	add.s32 	%r490, %r488, 18;
	setp.lt.s32 	%p51, %r490, %r33;
	add.s32 	%r491, %r488, 20;
	setp.lt.s32 	%p52, %r491, %r33;
	add.s32 	%r492, %r488, 22;
	setp.lt.s32 	%p53, %r492, %r33;
	add.s32 	%r493, %r488, 24;
	setp.lt.s32 	%p54, %r493, %r33;
	add.s32 	%r494, %r488, 26;
	setp.lt.s32 	%p55, %r494, %r33;
	add.s32 	%r495, %r488, 28;
	setp.lt.s32 	%p56, %r495, %r33;
	add.s32 	%r496, %r488, 30;
	setp.lt.s32 	%p57, %r496, %r33;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r497, 4, 0, %p49;
	selp.b32 	%r498, %r497, 0, %p22;
	selp.b32 	%r422, %r498, 0, %p47;
	// begin inline asm
	cp.async.ca.shared.global [ %r285 + 0 ], [ %rd87 + 0 ], 0x4, %r422;
	// end inline asm
	selp.b32 	%r499, %r497, 0, %p23;
	selp.b32 	%r424, %r499, 0, %p47;
	// begin inline asm
	cp.async.ca.shared.global [ %r287 + 0 ], [ %rd88 + 0 ], 0x4, %r424;
	// end inline asm
	selp.b32 	%r500, %r497, 0, %p24;
	selp.b32 	%r426, %r500, 0, %p47;
	// begin inline asm
	cp.async.ca.shared.global [ %r289 + 0 ], [ %rd89 + 0 ], 0x4, %r426;
	// end inline asm
	selp.b32 	%r501, %r497, 0, %p25;
	selp.b32 	%r428, %r501, 0, %p47;
	// begin inline asm
	cp.async.ca.shared.global [ %r291 + 0 ], [ %rd90 + 0 ], 0x4, %r428;
	// end inline asm
	selp.b32 	%r502, %r497, 0, %p26;
	selp.b32 	%r430, %r502, 0, %p47;
	// begin inline asm
	cp.async.ca.shared.global [ %r293 + 0 ], [ %rd91 + 0 ], 0x4, %r430;
	// end inline asm
	selp.b32 	%r503, %r497, 0, %p27;
	selp.b32 	%r432, %r503, 0, %p47;
	// begin inline asm
	cp.async.ca.shared.global [ %r295 + 0 ], [ %rd92 + 0 ], 0x4, %r432;
	// end inline asm
	selp.b32 	%r504, %r497, 0, %p28;
	selp.b32 	%r434, %r504, 0, %p47;
	// begin inline asm
	cp.async.ca.shared.global [ %r297 + 0 ], [ %rd93 + 0 ], 0x4, %r434;
	// end inline asm
	selp.b32 	%r505, %r497, 0, %p29;
	selp.b32 	%r436, %r505, 0, %p47;
	// begin inline asm
	cp.async.ca.shared.global [ %r299 + 0 ], [ %rd94 + 0 ], 0x4, %r436;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r506, 4, 0, %p50;
	selp.b32 	%r507, %r506, 0, %p4;
	selp.b32 	%r438, %r507, 0, %p47;
	// begin inline asm
	cp.async.ca.shared.global [ %r301 + 0 ], [ %rd95 + 0 ], 0x4, %r438;
	// end inline asm
	selp.b32 	%r508, 4, 0, %p51;
	selp.b32 	%r509, %r508, 0, %p4;
	selp.b32 	%r440, %r509, 0, %p47;
	// begin inline asm
	cp.async.ca.shared.global [ %r303 + 0 ], [ %rd96 + 0 ], 0x4, %r440;
	// end inline asm
	selp.b32 	%r510, 4, 0, %p52;
	selp.b32 	%r511, %r510, 0, %p4;
	selp.b32 	%r442, %r511, 0, %p47;
	// begin inline asm
	cp.async.ca.shared.global [ %r305 + 0 ], [ %rd97 + 0 ], 0x4, %r442;
	// end inline asm
	selp.b32 	%r512, 4, 0, %p53;
	selp.b32 	%r513, %r512, 0, %p4;
	selp.b32 	%r444, %r513, 0, %p47;
	// begin inline asm
	cp.async.ca.shared.global [ %r307 + 0 ], [ %rd98 + 0 ], 0x4, %r444;
	// end inline asm
	selp.b32 	%r514, 4, 0, %p54;
	selp.b32 	%r515, %r514, 0, %p4;
	selp.b32 	%r446, %r515, 0, %p47;
	// begin inline asm
	cp.async.ca.shared.global [ %r309 + 0 ], [ %rd99 + 0 ], 0x4, %r446;
	// end inline asm
	selp.b32 	%r516, 4, 0, %p55;
	selp.b32 	%r517, %r516, 0, %p4;
	selp.b32 	%r448, %r517, 0, %p47;
	// begin inline asm
	cp.async.ca.shared.global [ %r311 + 0 ], [ %rd100 + 0 ], 0x4, %r448;
	// end inline asm
	selp.b32 	%r518, 4, 0, %p56;
	selp.b32 	%r519, %r518, 0, %p4;
	selp.b32 	%r450, %r519, 0, %p47;
	// begin inline asm
	cp.async.ca.shared.global [ %r313 + 0 ], [ %rd101 + 0 ], 0x4, %r450;
	// end inline asm
	selp.b32 	%r520, 4, 0, %p57;
	selp.b32 	%r521, %r520, 0, %p4;
	selp.b32 	%r452, %r521, 0, %p47;
	// begin inline asm
	cp.async.ca.shared.global [ %r315 + 0 ], [ %rd102 + 0 ], 0x4, %r452;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd162, %rd162, 16;
	add.s32 	%r667, %r667, %r63;
	add.s32 	%r666, %r666, %r63;
	add.s32 	%r665, %r665, %r63;
	add.s32 	%r664, %r664, %r63;
	add.s32 	%r663, %r663, %r63;
	add.s32 	%r662, %r662, %r63;
	add.s32 	%r661, %r661, %r63;
	add.s32 	%r660, %r660, %r63;
	setp.ne.s64 	%p58, %rd12, %rd163;
	@%p58 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge15_crit_edge
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	shr.u32 	%r672, %r6, 5;
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r189, %r2, 5;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r671, %r189, %r9;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shl.b32 	%r190, %r4, 5;
	and.b32  	%r670, %r190, 96;
	shr.u32 	%r669, %r5, 2;
	mov.b32 	%r673, 0;
	mov.u32 	%r674, %r673;
	mov.u32 	%r675, %r673;
	mov.u32 	%r676, %r673;
	mov.u32 	%r677, %r673;
	mov.u32 	%r678, %r673;
	mov.u32 	%r679, %r673;
	mov.u32 	%r680, %r673;
	mov.u32 	%r681, %r673;
	mov.u32 	%r682, %r673;
	mov.u32 	%r683, %r673;
	mov.u32 	%r684, %r673;
	mov.u32 	%r685, %r673;
	mov.u32 	%r686, %r673;
	mov.u32 	%r687, %r673;
	mov.u32 	%r688, %r673;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %._crit_edge15.loopexit
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	mov.b32 	%r673, %f162;
	mov.b32 	%r674, %f163;
	mov.b32 	%r675, %f164;
	mov.b32 	%r676, %f165;
	mov.b32 	%r677, %f166;
	mov.b32 	%r678, %f167;
	mov.b32 	%r679, %f168;
	mov.b32 	%r680, %f169;
	mov.b32 	%r681, %f170;
	mov.b32 	%r682, %f171;
	mov.b32 	%r683, %f172;
	mov.b32 	%r684, %f173;
	mov.b32 	%r685, %f174;
	mov.b32 	%r686, %f175;
	mov.b32 	%r687, %f176;
	mov.b32 	%r688, %f177;
$L__BB0_10:                             // %._crit_edge15
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r586, %r10, %r672;
	or.b32  	%r587, %r586, 2;
	or.b32  	%r588, %r586, 4;
	or.b32  	%r589, %r586, 6;
	or.b32  	%r590, %r586, 8;
	or.b32  	%r591, %r586, 10;
	or.b32  	%r592, %r586, 12;
	or.b32  	%r593, %r586, 14;
	or.b32  	%r594, %r586, 16;
	or.b32  	%r595, %r586, 18;
	or.b32  	%r596, %r586, 20;
	or.b32  	%r597, %r586, 22;
	or.b32  	%r598, %r586, 24;
	or.b32  	%r599, %r586, 26;
	or.b32  	%r600, %r586, 28;
	or.b32  	%r601, %r586, 30;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	mad.lo.s32 	%r602, %r586, %r162, %r671;
	mad.lo.s32 	%r603, %r587, %r162, %r671;
	mad.lo.s32 	%r604, %r588, %r162, %r671;
	mad.lo.s32 	%r605, %r589, %r162, %r671;
	mad.lo.s32 	%r606, %r590, %r162, %r671;
	mad.lo.s32 	%r607, %r591, %r162, %r671;
	mad.lo.s32 	%r608, %r592, %r162, %r671;
	mad.lo.s32 	%r609, %r593, %r162, %r671;
	mad.lo.s32 	%r610, %r594, %r162, %r671;
	mad.lo.s32 	%r611, %r595, %r162, %r671;
	mad.lo.s32 	%r612, %r596, %r162, %r671;
	mad.lo.s32 	%r613, %r597, %r162, %r671;
	mad.lo.s32 	%r614, %r598, %r162, %r671;
	mad.lo.s32 	%r615, %r599, %r162, %r671;
	mad.lo.s32 	%r616, %r600, %r162, %r671;
	mad.lo.s32 	%r617, %r601, %r162, %r671;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd145, %r602, 4;
	add.s64 	%rd129, %rd32, %rd145;
	mul.wide.s32 	%rd146, %r603, 4;
	add.s64 	%rd130, %rd32, %rd146;
	mul.wide.s32 	%rd147, %r604, 4;
	add.s64 	%rd131, %rd32, %rd147;
	mul.wide.s32 	%rd148, %r605, 4;
	add.s64 	%rd132, %rd32, %rd148;
	mul.wide.s32 	%rd149, %r606, 4;
	add.s64 	%rd133, %rd32, %rd149;
	mul.wide.s32 	%rd150, %r607, 4;
	add.s64 	%rd134, %rd32, %rd150;
	mul.wide.s32 	%rd151, %r608, 4;
	add.s64 	%rd135, %rd32, %rd151;
	mul.wide.s32 	%rd152, %r609, 4;
	add.s64 	%rd136, %rd32, %rd152;
	mul.wide.s32 	%rd153, %r610, 4;
	add.s64 	%rd137, %rd32, %rd153;
	mul.wide.s32 	%rd154, %r611, 4;
	add.s64 	%rd138, %rd32, %rd154;
	mul.wide.s32 	%rd155, %r612, 4;
	add.s64 	%rd139, %rd32, %rd155;
	mul.wide.s32 	%rd156, %r613, 4;
	add.s64 	%rd140, %rd32, %rd156;
	mul.wide.s32 	%rd157, %r614, 4;
	add.s64 	%rd141, %rd32, %rd157;
	mul.wide.s32 	%rd158, %r615, 4;
	add.s64 	%rd142, %rd32, %rd158;
	mul.wide.s32 	%rd159, %r616, 4;
	add.s64 	%rd143, %rd32, %rd159;
	mul.wide.s32 	%rd160, %r617, 4;
	add.s64 	%rd144, %rd32, %rd160;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p92, %r586, %r160;
	setp.lt.s32 	%p93, %r587, %r160;
	setp.lt.s32 	%p94, %r588, %r160;
	setp.lt.s32 	%p95, %r589, %r160;
	setp.lt.s32 	%p96, %r590, %r160;
	setp.lt.s32 	%p97, %r591, %r160;
	setp.lt.s32 	%p98, %r592, %r160;
	setp.lt.s32 	%p99, %r593, %r160;
	setp.lt.s32 	%p100, %r594, %r160;
	setp.lt.s32 	%p101, %r595, %r160;
	setp.lt.s32 	%p102, %r596, %r160;
	setp.lt.s32 	%p103, %r597, %r160;
	setp.lt.s32 	%p104, %r598, %r160;
	setp.lt.s32 	%p105, %r599, %r160;
	setp.lt.s32 	%p106, %r600, %r160;
	setp.lt.s32 	%p107, %r601, %r160;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p108, %r671, %r162;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p76, %p92, %p108;
	and.pred  	%p77, %p93, %p108;
	and.pred  	%p78, %p94, %p108;
	and.pred  	%p79, %p95, %p108;
	and.pred  	%p80, %p96, %p108;
	and.pred  	%p81, %p97, %p108;
	and.pred  	%p82, %p98, %p108;
	and.pred  	%p83, %p99, %p108;
	and.pred  	%p84, %p100, %p108;
	and.pred  	%p85, %p101, %p108;
	and.pred  	%p86, %p102, %p108;
	and.pred  	%p87, %p103, %p108;
	and.pred  	%p88, %p104, %p108;
	and.pred  	%p89, %p105, %p108;
	and.pred  	%p90, %p106, %p108;
	and.pred  	%p91, %p107, %p108;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	bfe.u32 	%r618, %r4, 2, 2;
	or.b32  	%r619, %r618, %r670;
	or.b32  	%r620, %r619, %r669;
	shl.b32 	%r621, %r6, 2;
	or.b32  	%r622, %r620, %r621;
	shl.b32 	%r623, %r4, 4;
	and.b32  	%r624, %r623, 496;
	or.b32  	%r625, %r624, %r672;
	shr.u32 	%r626, %r622, 2;
	and.b32  	%r627, %r626, 60;
	add.s32 	%r629, %r650, %r627;
	shl.b32 	%r630, %r622, 2;
	add.s32 	%r522, %r629, %r630;
	mov.pred 	%p60, -1;
	// begin inline asm
	@%p60 st.shared.b32 [ %r522 + 0 ], %r673;
	// end inline asm
	or.b32  	%r631, %r622, 16;
	shr.u32 	%r632, %r631, 2;
	and.b32  	%r633, %r632, 60;
	add.s32 	%r634, %r650, %r633;
	add.s32 	%r635, %r634, %r630;
	add.s32 	%r524, %r635, 64;
	// begin inline asm
	@%p60 st.shared.b32 [ %r524 + 0 ], %r674;
	// end inline asm
	add.s32 	%r526, %r522, 32;
	// begin inline asm
	@%p60 st.shared.b32 [ %r526 + 0 ], %r675;
	// end inline asm
	add.s32 	%r528, %r635, 96;
	// begin inline asm
	@%p60 st.shared.b32 [ %r528 + 0 ], %r676;
	// end inline asm
	or.b32  	%r636, %r622, 256;
	shr.u32 	%r637, %r636, 2;
	and.b32  	%r638, %r637, 124;
	add.s32 	%r639, %r650, %r638;
	add.s32 	%r640, %r639, %r630;
	add.s32 	%r530, %r640, 1024;
	// begin inline asm
	@%p60 st.shared.b32 [ %r530 + 0 ], %r677;
	// end inline asm
	or.b32  	%r641, %r622, 272;
	shr.u32 	%r642, %r641, 2;
	and.b32  	%r643, %r642, 124;
	add.s32 	%r644, %r650, %r643;
	add.s32 	%r645, %r644, %r630;
	add.s32 	%r532, %r645, 1088;
	// begin inline asm
	@%p60 st.shared.b32 [ %r532 + 0 ], %r678;
	// end inline asm
	add.s32 	%r534, %r640, 1056;
	// begin inline asm
	@%p60 st.shared.b32 [ %r534 + 0 ], %r679;
	// end inline asm
	add.s32 	%r536, %r645, 1120;
	// begin inline asm
	@%p60 st.shared.b32 [ %r536 + 0 ], %r680;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r646, %r624, 2;
	add.s32 	%r647, %r650, %r646;
	shl.b32 	%r648, %r625, 2;
	add.s32 	%r649, %r647, %r648;
	ld.shared.u32 	%r555, [%r649];
	ld.shared.u32 	%r557, [%r649+8];
	ld.shared.u32 	%r559, [%r649+16];
	ld.shared.u32 	%r561, [%r649+24];
	ld.shared.u32 	%r563, [%r649+32];
	ld.shared.u32 	%r565, [%r649+40];
	ld.shared.u32 	%r567, [%r649+48];
	ld.shared.u32 	%r569, [%r649+56];
	bar.sync 	0;
	// begin inline asm
	@%p60 st.shared.b32 [ %r522 + 0 ], %r681;
	// end inline asm
	// begin inline asm
	@%p60 st.shared.b32 [ %r524 + 0 ], %r682;
	// end inline asm
	// begin inline asm
	@%p60 st.shared.b32 [ %r526 + 0 ], %r683;
	// end inline asm
	// begin inline asm
	@%p60 st.shared.b32 [ %r528 + 0 ], %r684;
	// end inline asm
	// begin inline asm
	@%p60 st.shared.b32 [ %r530 + 0 ], %r685;
	// end inline asm
	// begin inline asm
	@%p60 st.shared.b32 [ %r532 + 0 ], %r686;
	// end inline asm
	// begin inline asm
	@%p60 st.shared.b32 [ %r534 + 0 ], %r687;
	// end inline asm
	// begin inline asm
	@%p60 st.shared.b32 [ %r536 + 0 ], %r688;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r571, [%r649];
	ld.shared.u32 	%r573, [%r649+8];
	ld.shared.u32 	%r575, [%r649+16];
	ld.shared.u32 	%r577, [%r649+24];
	ld.shared.u32 	%r579, [%r649+32];
	ld.shared.u32 	%r581, [%r649+40];
	ld.shared.u32 	%r583, [%r649+48];
	ld.shared.u32 	%r585, [%r649+56];
	// begin inline asm
	mov.u32 %r554, 0x0;
	@%p76 atom.global.gpu.acq_rel.add.f32 %r554, [ %rd129 + 0 ], %r555;
	// end inline asm
	// begin inline asm
	mov.u32 %r556, 0x0;
	@%p77 atom.global.gpu.acq_rel.add.f32 %r556, [ %rd130 + 0 ], %r557;
	// end inline asm
	// begin inline asm
	mov.u32 %r558, 0x0;
	@%p78 atom.global.gpu.acq_rel.add.f32 %r558, [ %rd131 + 0 ], %r559;
	// end inline asm
	// begin inline asm
	mov.u32 %r560, 0x0;
	@%p79 atom.global.gpu.acq_rel.add.f32 %r560, [ %rd132 + 0 ], %r561;
	// end inline asm
	// begin inline asm
	mov.u32 %r562, 0x0;
	@%p80 atom.global.gpu.acq_rel.add.f32 %r562, [ %rd133 + 0 ], %r563;
	// end inline asm
	// begin inline asm
	mov.u32 %r564, 0x0;
	@%p81 atom.global.gpu.acq_rel.add.f32 %r564, [ %rd134 + 0 ], %r565;
	// end inline asm
	// begin inline asm
	mov.u32 %r566, 0x0;
	@%p82 atom.global.gpu.acq_rel.add.f32 %r566, [ %rd135 + 0 ], %r567;
	// end inline asm
	// begin inline asm
	mov.u32 %r568, 0x0;
	@%p83 atom.global.gpu.acq_rel.add.f32 %r568, [ %rd136 + 0 ], %r569;
	// end inline asm
	// begin inline asm
	mov.u32 %r570, 0x0;
	@%p84 atom.global.gpu.acq_rel.add.f32 %r570, [ %rd137 + 0 ], %r571;
	// end inline asm
	// begin inline asm
	mov.u32 %r572, 0x0;
	@%p85 atom.global.gpu.acq_rel.add.f32 %r572, [ %rd138 + 0 ], %r573;
	// end inline asm
	// begin inline asm
	mov.u32 %r574, 0x0;
	@%p86 atom.global.gpu.acq_rel.add.f32 %r574, [ %rd139 + 0 ], %r575;
	// end inline asm
	// begin inline asm
	mov.u32 %r576, 0x0;
	@%p87 atom.global.gpu.acq_rel.add.f32 %r576, [ %rd140 + 0 ], %r577;
	// end inline asm
	// begin inline asm
	mov.u32 %r578, 0x0;
	@%p88 atom.global.gpu.acq_rel.add.f32 %r578, [ %rd141 + 0 ], %r579;
	// end inline asm
	// begin inline asm
	mov.u32 %r580, 0x0;
	@%p89 atom.global.gpu.acq_rel.add.f32 %r580, [ %rd142 + 0 ], %r581;
	// end inline asm
	// begin inline asm
	mov.u32 %r582, 0x0;
	@%p90 atom.global.gpu.acq_rel.add.f32 %r582, [ %rd143 + 0 ], %r583;
	// end inline asm
	// begin inline asm
	mov.u32 %r584, 0x0;
	@%p91 atom.global.gpu.acq_rel.add.f32 %r584, [ %rd144 + 0 ], %r585;
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 150                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x8f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
