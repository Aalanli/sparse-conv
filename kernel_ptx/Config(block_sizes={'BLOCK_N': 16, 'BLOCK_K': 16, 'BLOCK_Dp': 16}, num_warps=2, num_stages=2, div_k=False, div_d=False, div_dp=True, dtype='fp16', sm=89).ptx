//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_89
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<49>;
	.reg .b16 	%rs<67>;
	.reg .b32 	%r<176>;
	.reg .b64 	%rd<71>;
	.loc	1 32 0                          // triton_spconv.py:32:0
$L__func_begin0:
	.loc	1 32 0                          // triton_spconv.py:32:0

// %bb.0:
	ld.param.u32 	%r37, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r35, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd32, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 47 24                         // triton_spconv.py:47:24
	mov.u32 	%r38, %ctaid.x;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r39, %r35, 15;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r40, %r39, 31;
	shr.u32 	%r41, %r40, 28;
	add.s32 	%r42, %r39, %r41;
	shr.s32 	%r43, %r42, 4;
$L__tmp2:
	.loc	1 51 20                         // triton_spconv.py:51:20
	div.s32 	%r1, %r38, %r43;
	.loc	1 50 18                         // triton_spconv.py:50:18
	mul.lo.s32 	%r45, %r1, %r43;
	sub.s32 	%r46, %r38, %r45;
	ld.param.u32 	%r47, [implicit_conv3d_kernel_param_8];
	.loc	1 53 19                         // triton_spconv.py:53:19
	mul.lo.s32 	%r48, %r47, %r47;
	.loc	1 53 23                         // triton_spconv.py:53:23
	mul.lo.s32 	%r2, %r48, %r47;
	.loc	1 56 38                         // triton_spconv.py:56:38
	mov.u32 	%r3, %tid.x;
	bfe.u32 	%r4, %r3, 2, 3;
	and.b32  	%r5, %r3, 32;
	and.b32  	%r8, %r3, 15;
	.loc	1 56 57                         // triton_spconv.py:56:57
	shl.b32 	%r9, %r46, 4;
	.loc	1 58 19                         // triton_spconv.py:58:19
	setp.gt.s32 	%p2, %r2, 0;
	mov.u32 	%r171, global_smem;
	@%p2 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph13
	.loc	1 0 19                          // triton_spconv.py:0:19
	ld.param.u32 	%r36, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r34, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd31, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd30, [implicit_conv3d_kernel_param_1];
	ld.param.u64 	%rd29, [implicit_conv3d_kernel_param_0];
	.loc	1 56 0                          // triton_spconv.py:56:0
	shr.u32 	%r6, %r5, 2;
	or.b32  	%r7, %r4, %r6;
	or.b32  	%r10, %r9, %r7;
	or.b32  	%r11, %r9, %r8;
	.loc	1 56 68                         // triton_spconv.py:56:68
	mul.lo.s32 	%r49, %r11, %r2;
	.loc	1 56 24                         // triton_spconv.py:56:24
	mul.wide.s32 	%rd34, %r49, 4;
	add.s64 	%rd68, %rd30, %rd34;
	.loc	1 56 68                         // triton_spconv.py:56:68
	mul.lo.s32 	%r50, %r10, %r2;
	.loc	1 56 24                         // triton_spconv.py:56:24
	mul.wide.s32 	%rd35, %r50, 4;
	add.s64 	%rd67, %rd30, %rd35;
	add.s32 	%r13, %r36, 15;
	shr.s32 	%r51, %r13, 31;
	shr.u32 	%r52, %r51, 28;
	add.s32 	%r53, %r13, %r52;
	shr.s32 	%r54, %r53, 4;
	shl.b32 	%r55, %r3, 2;
	and.b32  	%r14, %r55, 12;
	or.b32  	%r56, %r14, 1;
	or.b32  	%r57, %r14, 2;
	or.b32  	%r58, %r14, 3;
	shl.b32 	%r175, %r1, 4;
	mul.lo.s32 	%r16, %r2, %r36;
	or.b32  	%r17, %r175, %r14;
	setp.lt.s32 	%p3, %r17, %r37;
	setp.gt.s32 	%p4, %r13, 15;
	shr.u32 	%r59, %r3, 1;
	and.b32  	%r60, %r59, 8;
	xor.b32  	%r61, %r14, %r60;
	shl.b32 	%r62, %r61, 1;
	shl.b32 	%r63, %r7, 5;
	or.b32  	%r64, %r63, %r62;
	add.s32 	%r94, %r171, %r64;
	add.s32 	%r66, %r54, -1;
	add.s32 	%r67, %r171, 512;
	add.s32 	%r19, %r67, %r64;
	shl.b32 	%r68, %r3, 1;
	and.b32  	%r69, %r68, 8;
	xor.b32  	%r70, %r69, %r60;
	shl.b32 	%r71, %r8, 4;
	or.b32  	%r72, %r70, %r71;
	shl.b32 	%r73, %r72, 1;
	add.s32 	%r106, %r67, %r73;
	xor.b32  	%r74, %r69, %r6;
	or.b32  	%r75, %r74, %r71;
	shl.b32 	%r76, %r75, 1;
	add.s32 	%r21, %r171, %r76;
	.loc	1 58 19                         // triton_spconv.py:58:19
	cvt.u64.u32 	%rd6, %r14;
	cvt.u64.u32 	%rd5, %r56;
	cvt.u64.u32 	%rd4, %r57;
	cvt.u64.u32 	%rd3, %r58;
	cvt.s64.s32 	%rd7, %r66;
	cvt.u64.u32 	%rd8, %r2;
	and.pred  	%p1, %p3, %p4;
	cvt.u64.u32 	%rd9, %r36;
	mul.wide.u32 	%rd13, %r54, 16;
	add.s32 	%r77, %r6, %r4;
	add.s32 	%r78, %r77, 16;
	cvt.u64.u32 	%rd65, %r78;
	mad.lo.s32 	%r79, %r37, %r78, %r175;
	add.s32 	%r172, %r79, %r14;
	mul.lo.s32 	%r23, %r37, %r36;
	shl.b32 	%r24, %r37, 4;
	mov.b16 	%rs55, 0x0000;
	mov.b64 	%rd66, 0;
	setp.lt.s32 	%p6, %r11, %r35;
	setp.lt.s32 	%p5, %r10, %r35;
	mov.u16 	%rs56, %rs55;
	mov.u16 	%rs57, %rs55;
	mov.u16 	%rs58, %rs55;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 63 28                         // triton_spconv.py:63:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 82 19                         // triton_spconv.py:82:19
	add.s64 	%rd67, %rd67, 4;
	add.s64 	%rd68, %rd68, 4;
	.loc	1 58 19                         // triton_spconv.py:58:19
	add.s64 	%rd66, %rd66, 1;
	add.s64 	%rd65, %rd65, %rd9;
	add.s32 	%r172, %r172, %r23;
	setp.ne.s64 	%p35, %rd66, %rd8;
	@%p35 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 60 23                         // triton_spconv.py:60:23
	// begin inline asm
	mov.u32 %r80, 0xffffffffffffffff;
	@%p5 ld.global.b32 { %r80 }, [ %rd67 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r81, 0xffffffffffffffff;
	@%p6 ld.global.b32 { %r81 }, [ %rd68 + 0 ];
	// end inline asm
	.loc	1 62 27                         // triton_spconv.py:62:27
	setp.gt.s32 	%p7, %r81, -1;
	.loc	1 62 43                         // triton_spconv.py:62:43
	setp.lt.s32 	%p8, %r81, %r34;
	.loc	1 62 36                         // triton_spconv.py:62:36
	and.pred  	%p9, %p7, %p8;
	.loc	1 62 50                         // triton_spconv.py:62:50
	selp.u32 	%r82, 1, 0, %p9;
	shfl.sync.bfly.b32	%r83, %r82, 8, 31, -1;
	and.b32  	%r84, %r83, 1;
	setp.eq.b32 	%p10, %r84, 1;
$L__tmp3:
	.loc	1 13 15                         // triton_spconv.py:13:15
	or.pred  	%p11, %p9, %p10;
$L__tmp4:
	.loc	1 62 50                         // triton_spconv.py:62:50
	selp.u32 	%r85, 1, 0, %p11;
	shfl.sync.bfly.b32	%r86, %r85, 4, 31, -1;
	and.b32  	%r87, %r86, 1;
	setp.eq.b32 	%p12, %r87, 1;
$L__tmp5:
	.loc	1 13 15                         // triton_spconv.py:13:15
	or.pred  	%p13, %p11, %p12;
$L__tmp6:
	.loc	1 62 50                         // triton_spconv.py:62:50
	selp.u32 	%r88, 1, 0, %p13;
	shfl.sync.bfly.b32	%r89, %r88, 2, 31, -1;
	and.b32  	%r90, %r89, 1;
	setp.eq.b32 	%p14, %r90, 1;
$L__tmp7:
	.loc	1 13 15                         // triton_spconv.py:13:15
	or.pred  	%p15, %p13, %p14;
$L__tmp8:
	.loc	1 62 50                         // triton_spconv.py:62:50
	selp.u32 	%r91, 1, 0, %p15;
	shfl.sync.bfly.b32	%r92, %r91, 1, 31, -1;
	and.b32  	%r93, %r92, 1;
	setp.eq.b32 	%p16, %r93, 1;
$L__tmp9:
	.loc	1 13 15                         // triton_spconv.py:13:15
	or.pred  	%p17, %p15, %p16;
$L__tmp10:
	.loc	1 62 11                         // triton_spconv.py:62:11
	not.pred 	%p18, %p17;
	@%p18 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // triton_spconv.py:0:11
	setp.lt.s32 	%p19, %r13, 16;
	.loc	1 64 31                         // triton_spconv.py:64:31
	cvt.u32.u64 	%r96, %rd66;
	.loc	1 70 54                         // triton_spconv.py:70:54
	mad.lo.s32 	%r97, %r36, %r96, %r7;
	.loc	1 72 22                         // triton_spconv.py:72:22
	mad.lo.s32 	%r98, %r97, %r37, %r17;
	.loc	1 70 20                         // triton_spconv.py:70:20
	mul.wide.s32 	%rd39, %r98, 2;
	add.s64 	%rd38, %rd31, %rd39;
	.loc	1 74 72                         // triton_spconv.py:74:72
	setp.lt.s32 	%p20, %r97, %r16;
	.loc	1 79 36                         // triton_spconv.py:79:36
	selp.b32 	%r99, 8, 0, %p1;
	selp.b32 	%r95, %r99, 0, %p20;
	// begin inline asm
	cp.async.ca.shared.global [ %r94 + 0 ], [ %rd38 + 0 ], 0x8, %r95;
	// end inline asm
	cp.async.commit_group;
	.loc	1 63 28                         // triton_spconv.py:63:28
	@%p19 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 0                           // triton_spconv.py:0:0
	mul.lo.s32 	%r27, %r80, %r36;
	.loc	1 63 28                         // triton_spconv.py:63:28
	add.s32 	%r101, %r14, %r27;
	cvt.u64.u32 	%rd20, %r101;
	mov.b32 	%r174, -1;
	mov.b64 	%rd69, 0;
	mov.u32 	%r173, %r172;
	mov.u64 	%rd70, %rd69;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.loc	1 67 43                         // triton_spconv.py:67:43
	setp.ne.s32 	%p25, %r80, -1;
	.loc	1 63 28                         // triton_spconv.py:63:28
	setp.lt.s64 	%p27, %rd69, %rd7;
	add.s32 	%r122, %r174, 1;
	setp.gt.u32 	%p28, %r174, 2147483646;
	selp.b32 	%r174, %r122, 0, %p28;
	.loc	1 66 89                         // triton_spconv.py:66:89
	add.s64 	%rd46, %rd20, %rd70;
	cvt.u32.u64 	%r123, %rd46;
	.loc	1 66 36                         // triton_spconv.py:66:36
	mul.wide.s32 	%rd47, %r123, 2;
	add.s64 	%rd41, %rd29, %rd47;
	add.s32 	%r124, %r123, 1;
	mul.wide.s32 	%rd48, %r124, 2;
	add.s64 	%rd42, %rd29, %rd48;
	add.s32 	%r125, %r123, 2;
	mul.wide.s32 	%rd49, %r125, 2;
	add.s64 	%rd43, %rd29, %rd49;
	add.s32 	%r126, %r123, 3;
	mul.wide.s32 	%rd50, %r126, 2;
	add.s64 	%rd44, %rd29, %rd50;
	.loc	1 67 83                         // triton_spconv.py:67:83
	or.b64  	%rd51, %rd70, %rd6;
	or.b64  	%rd52, %rd70, %rd5;
	or.b64  	%rd53, %rd70, %rd4;
	or.b64  	%rd54, %rd70, %rd3;
	.loc	1 67 98                         // triton_spconv.py:67:98
	setp.lt.u64 	%p29, %rd54, %rd9;
	setp.lt.u64 	%p30, %rd53, %rd9;
	setp.lt.u64 	%p31, %rd52, %rd9;
	setp.lt.u64 	%p32, %rd51, %rd9;
	.loc	1 67 50                         // triton_spconv.py:67:50
	and.pred  	%p21, %p25, %p32;
	and.pred  	%p22, %p25, %p31;
	and.pred  	%p23, %p25, %p30;
	and.pred  	%p24, %p25, %p29;
	mov.b16 	%rs32, 0;
	.loc	1 78 39                         // triton_spconv.py:78:39
	// begin inline asm
	mov.u16 %rs31, %rs32;
	@%p21 ld.global.b16 { %rs31 }, [ %rd41 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs33, %rs32;
	@%p22 ld.global.b16 { %rs33 }, [ %rd42 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs35, %rs32;
	@%p23 ld.global.b16 { %rs35 }, [ %rd43 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs37, %rs32;
	@%p24 ld.global.b16 { %rs37 }, [ %rd44 + 0 ];
	// end inline asm
	st.shared.v4.u16 	[%r19], {%rs31, %rs33, %rs35, %rs37};
	.loc	1 79 36                         // triton_spconv.py:79:36
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r127, %r174, 9;
	.loc	1 78 39                         // triton_spconv.py:78:39
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r102, %r103, %r104, %r105}, [%r106];
	// end inline asm
	.loc	1 79 36                         // triton_spconv.py:79:36
	add.s32 	%r109, %r21, %r127;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x2.trans.shared.b16 {%r107, %r108}, [%r109];
	// end inline asm
	.loc	1 81 37                         // triton_spconv.py:81:37
	mov.b32 	%r110, {%rs55, %rs56};
	mov.b32 	%r111, {%rs57, %rs58};
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r110, %r111 }, { %r102, %r103, %r104, %r105 }, { %r107, %r108 }, { %r110, %r111 };
	// end inline asm
	mov.b32 	{%rs55, %rs56}, %r110;
	mov.b32 	{%rs57, %rs58}, %r111;
	.loc	1 63 28                         // triton_spconv.py:63:28
	add.s64 	%rd69, %rd69, 1;
	.loc	1 70 66                         // triton_spconv.py:70:66
	add.s64 	%rd55, %rd65, %rd70;
	.loc	1 70 20                         // triton_spconv.py:70:20
	mul.wide.s32 	%rd56, %r173, 2;
	add.s64 	%rd45, %rd31, %rd56;
	cvt.u32.u64 	%r128, %rd55;
	.loc	1 74 72                         // triton_spconv.py:74:72
	setp.lt.s32 	%p33, %r128, %r16;
	.loc	1 79 36                         // triton_spconv.py:79:36
	bar.sync 	0;
	selp.b32 	%r129, 8, 0, %p33;
	selp.b32 	%r130, %r129, 0, %p27;
	selp.b32 	%r121, %r130, 0, %p3;
	// begin inline asm
	cp.async.ca.shared.global [ %r94 + 0 ], [ %rd45 + 0 ], 0x8, %r121;
	// end inline asm
	cp.async.commit_group;
	.loc	1 64 40                         // triton_spconv.py:64:40
	add.s64 	%rd70, %rd70, 16;
	.loc	1 63 28                         // triton_spconv.py:63:28
	add.s32 	%r173, %r173, %r24;
	setp.ne.s64 	%p34, %rd13, %rd70;
	@%p34 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge14_crit_edge
	.loc	1 86 19                         // triton_spconv.py:86:19
	shl.b32 	%r175, %r1, 4;
	mov.b16 	%rs55, 0;
	mov.u16 	%rs56, %rs55;
	mov.u16 	%rs57, %rs55;
	mov.u16 	%rs58, %rs55;
$L__BB0_9:                              // %._crit_edge14
	.loc	1 84 31                         // triton_spconv.py:84:31
	bfe.u32 	%r135, %r3, 4, 2;
	.loc	1 84 42                         // triton_spconv.py:84:42
	or.b32  	%r136, %r135, %r9;
	or.b32  	%r137, %r136, 4;
	or.b32  	%r138, %r136, 8;
	or.b32  	%r139, %r136, 12;
	.loc	1 84 61                         // triton_spconv.py:84:61
	mul.lo.s32 	%r140, %r136, %r37;
	shl.b32 	%r141, %r37, 2;
	add.s32 	%r142, %r140, %r141;
	add.s32 	%r143, %r142, %r141;
	add.s32 	%r144, %r143, %r141;
	.loc	1 85 10                         // triton_spconv.py:85:10
	or.b32  	%r145, %r175, %r8;
	.loc	1 86 10                         // triton_spconv.py:86:10
	add.s32 	%r146, %r145, %r140;
	add.s32 	%r147, %r145, %r142;
	add.s32 	%r148, %r145, %r143;
	add.s32 	%r149, %r145, %r144;
	.loc	1 84 8                          // triton_spconv.py:84:8
	mul.wide.s32 	%rd61, %r146, 2;
	add.s64 	%rd57, %rd32, %rd61;
	mul.wide.s32 	%rd62, %r147, 2;
	add.s64 	%rd58, %rd32, %rd62;
	mul.wide.s32 	%rd63, %r148, 2;
	add.s64 	%rd59, %rd32, %rd63;
	mul.wide.s32 	%rd64, %r149, 2;
	add.s64 	%rd60, %rd32, %rd64;
	.loc	1 88 67                         // triton_spconv.py:88:67
	setp.lt.s32 	%p44, %r136, %r35;
	setp.lt.s32 	%p45, %r137, %r35;
	setp.lt.s32 	%p46, %r138, %r35;
	setp.lt.s32 	%p47, %r139, %r35;
	.loc	1 89 62                         // triton_spconv.py:89:62
	setp.lt.s32 	%p48, %r145, %r37;
	.loc	1 89 8                          // triton_spconv.py:89:8
	and.pred  	%p40, %p44, %p48;
	and.pred  	%p41, %p45, %p48;
	and.pred  	%p42, %p46, %p48;
	and.pred  	%p43, %p47, %p48;
	.loc	1 92 56                         // triton_spconv.py:92:56
	shl.b32 	%r150, %r3, 4;
	and.b32  	%r151, %r150, 48;
	shl.b32 	%r152, %r5, 1;
	or.b32  	%r153, %r151, %r152;
	or.b32  	%r154, %r4, %r153;
	shl.b32 	%r155, %r3, 3;
	and.b32  	%r156, %r155, 120;
	or.b32  	%r157, %r135, %r156;
	shr.u32 	%r158, %r153, 2;
	add.s32 	%r160, %r171, %r158;
	shl.b32 	%r161, %r154, 1;
	add.s32 	%r131, %r160, %r161;
	mov.pred 	%p36, -1;
	// begin inline asm
	@%p36 st.shared.b16 [ %r131 + 0 ], %rs55;
	// end inline asm
	or.b32  	%r162, %r153, 8;
	shr.u32 	%r163, %r162, 2;
	and.b32  	%r164, %r163, 30;
	add.s32 	%r165, %r171, %r164;
	add.s32 	%r166, %r165, %r161;
	add.s32 	%r132, %r166, 16;
	// begin inline asm
	@%p36 st.shared.b16 [ %r132 + 0 ], %rs56;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r167, %r156, 2;
	add.s32 	%r168, %r171, %r167;
	shl.b32 	%r169, %r157, 1;
	add.s32 	%r170, %r168, %r169;
	ld.shared.u16 	%rs43, [%r170];
	ld.shared.u16 	%rs44, [%r170+8];
	bar.sync 	0;
	// begin inline asm
	@%p36 st.shared.b16 [ %r131 + 0 ], %rs57;
	// end inline asm
	// begin inline asm
	@%p36 st.shared.b16 [ %r132 + 0 ], %rs58;
	// end inline asm
	bar.sync 	0;
	ld.shared.u16 	%rs45, [%r170];
	ld.shared.u16 	%rs46, [%r170+8];
	// begin inline asm
	@%p40 st.global.b16 [ %rd57 + 0 ], { %rs43 };
	// end inline asm
	// begin inline asm
	@%p41 st.global.b16 [ %rd58 + 0 ], { %rs44 };
	// end inline asm
	// begin inline asm
	@%p42 st.global.b16 [ %rd59 + 0 ], { %rs45 };
	// end inline asm
	// begin inline asm
	@%p43 st.global.b16 [ %rd60 + 0 ], { %rs46 };
	// end inline asm
	.loc	1 92 4                          // triton_spconv.py:92:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/waabi-user/sparse-conv/triton_spconv.py"
	.file	2 "/home/waabi-user/.local/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 163                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x9c DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 115
.b8 112
.b8 99
.b8 111
.b8 110
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 119
.b8 97
.b8 97
.b8 98
.b8 105
.b8 45
.b8 117
.b8 115
.b8 101
.b8 114
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x47:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x60:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 71                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x75:0x18 DW_TAG_inlined_subroutine
.b32 71                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x8d:0x18 DW_TAG_inlined_subroutine
.b32 71                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 62                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
