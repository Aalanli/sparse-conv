//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_89
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<60>;
	.reg .b16 	%rs<115>;
	.reg .b32 	%r<287>;
	.reg .b64 	%rd<66>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r48, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r46, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd21, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r49, %ctaid.x;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r50, %r46, 15;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r51, %r50, 31;
	shr.u32 	%r52, %r51, 28;
	add.s32 	%r53, %r50, %r52;
	shr.s32 	%r54, %r53, 4;
$L__tmp2:
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r1, %r49, %r54;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r56, %r1, %r54;
	sub.s32 	%r57, %r49, %r56;
	ld.param.u32 	%r58, [implicit_conv3d_kernel_param_8];
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r59, %r58, %r58;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r2, %r59, %r58;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r3, %tid.x;
	bfe.u32 	%r4, %r3, 2, 3;
	and.b32  	%r5, %r3, 32;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r9, %r57, 4;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.gt.s32 	%p4, %r2, 0;
	mov.u32 	%r280, global_smem;
	@%p4 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph12
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r47, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r45, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd20, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd19, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd22, [implicit_conv3d_kernel_param_1];
	shr.u32 	%r6, %r5, 2;
	or.b32  	%r7, %r4, %r6;
	and.b32  	%r8, %r3, 15;
	or.b32  	%r10, %r9, %r7;
	or.b32  	%r11, %r9, %r8;
	mul.lo.s32 	%r60, %r10, %r2;
	mul.lo.s32 	%r61, %r11, %r2;
	mul.wide.s32 	%rd23, %r60, 4;
	add.s64 	%rd1, %rd22, %rd23;
	mul.wide.s32 	%rd24, %r61, 4;
	add.s64 	%rd2, %rd22, %rd24;
	add.s32 	%r14, %r47, 31;
	shr.s32 	%r62, %r14, 31;
	shr.u32 	%r63, %r62, 27;
	add.s32 	%r64, %r14, %r63;
	shr.s32 	%r65, %r64, 5;
	shl.b32 	%r285, %r3, 3;
	and.b32  	%r16, %r285, 24;
	or.b32  	%r17, %r7, 16;
	shl.b32 	%r286, %r1, 5;
	mul.lo.s32 	%r19, %r2, %r47;
	or.b32  	%r20, %r286, %r16;
	setp.lt.s32 	%p5, %r20, %r48;
	setp.gt.s32 	%p6, %r14, 31;
	setp.lt.s32 	%p7, %r16, %r47;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p1, %p7, %p6;
	xor.b32  	%r66, %r285, %r3;
	and.b32  	%r67, %r66, 24;
	shl.b32 	%r68, %r67, 1;
	shl.b32 	%r69, %r7, 6;
	or.b32  	%r70, %r69, %r68;
	add.s32 	%r109, %r280, %r70;
	add.s32 	%r107, %r109, 2048;
	add.s32 	%r111, %r109, 1024;
	add.s32 	%r72, %r65, -1;
	shl.b32 	%r73, %r3, 2;
	and.b32  	%r74, %r73, 8;
	and.b32  	%r75, %r73, 16;
	or.b32  	%r76, %r74, %r75;
	shr.u32 	%r77, %r3, 1;
	and.b32  	%r78, %r77, 8;
	xor.b32  	%r79, %r76, %r78;
	shl.b32 	%r80, %r8, 5;
	or.b32  	%r24, %r79, %r80;
	or.b32  	%r81, %r74, 16;
	xor.b32  	%r82, %r81, %r75;
	xor.b32  	%r83, %r82, %r78;
	or.b32  	%r25, %r83, %r80;
	xor.b32  	%r84, %r76, %r6;
	shl.b32 	%r85, %r3, 5;
	and.b32  	%r86, %r85, 992;
	or.b32  	%r26, %r84, %r86;
	xor.b32  	%r87, %r82, %r6;
	or.b32  	%r27, %r87, %r86;
	cvt.s64.s32 	%rd3, %r72;
	cvt.u64.u32 	%rd26, %r16;
	cvt.s64.s32 	%rd4, %r47;
	cvt.u64.u32 	%rd5, %r2;
	cvt.u64.u32 	%rd6, %r65;
	and.pred  	%p2, %p5, %p6;
	or.b64  	%rd7, %rd26, 32;
	add.s32 	%r88, %r6, %r4;
	cvt.u64.u32 	%rd62, %r88;
	cvt.u64.u32 	%rd9, %r47;
	add.s32 	%r89, %r88, 48;
	mad.lo.s32 	%r90, %r48, %r89, %r286;
	add.s32 	%r282, %r90, %r16;
	mul.lo.s32 	%r29, %r48, %r47;
	shl.b32 	%r30, %r48, 5;
	or.b32  	%r91, %r88, 32;
	mad.lo.s32 	%r92, %r48, %r91, %r286;
	add.s32 	%r281, %r92, %r16;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	or.b32  	%r32, %r16, 32;
	mov.b16 	%rs91, 0x0000;
	mov.b64 	%rd63, 0;
	setp.lt.s32 	%p9, %r11, %r46;
	shl.b32 	%r196, %r24, 1;
	shl.b32 	%r197, %r25, 1;
	shl.b32 	%r200, %r26, 1;
	shl.b32 	%r201, %r27, 1;
	mov.u16 	%rs92, %rs91;
	mov.u16 	%rs93, %rs91;
	mov.u16 	%rs94, %rs91;
	mov.u16 	%rs95, %rs91;
	mov.u16 	%rs96, %rs91;
	mov.u16 	%rs97, %rs91;
	mov.u16 	%rs98, %rs91;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s64 	%rd63, %rd63, 1;
	add.s64 	%rd62, %rd62, %rd9;
	add.s32 	%r282, %r282, %r29;
	add.s32 	%r281, %r281, %r29;
	setp.ne.s64 	%p34, %rd63, %rd5;
	@%p34 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p8, %r10, %r46;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	shl.b64 	%rd29, %rd63, 2;
	add.s64 	%rd27, %rd1, %rd29;
	add.s64 	%rd28, %rd2, %rd29;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r93, 0xffffffffffffffff;
	@%p8 ld.global.b32 { %r93 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r94, 0xffffffffffffffff;
	@%p9 ld.global.b32 { %r94 }, [ %rd28 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p11, %r94, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p13, %r94, %r45;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p14, %p11, %p13;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r95, 1, 0, %p14;
	shfl.sync.bfly.b32	%r96, %r95, 8, 31, -1;
	and.b32  	%r97, %r96, 1;
	setp.eq.b32 	%p15, %r97, 1;
$L__tmp3:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p16, %p14, %p15;
$L__tmp4:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r98, 1, 0, %p16;
	shfl.sync.bfly.b32	%r99, %r98, 4, 31, -1;
	and.b32  	%r100, %r99, 1;
	setp.eq.b32 	%p17, %r100, 1;
$L__tmp5:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p18, %p16, %p17;
$L__tmp6:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r101, 1, 0, %p18;
	shfl.sync.bfly.b32	%r102, %r101, 2, 31, -1;
	and.b32  	%r103, %r102, 1;
	setp.eq.b32 	%p19, %r103, 1;
$L__tmp7:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p20, %p18, %p19;
$L__tmp8:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r104, 1, 0, %p20;
	shfl.sync.bfly.b32	%r105, %r104, 1, 31, -1;
	and.b32  	%r106, %r105, 1;
	setp.eq.b32 	%p21, %r106, 1;
$L__tmp9:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p22, %p20, %p21;
$L__tmp10:
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p23, %p22;
	@%p23 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.gt.s32 	%p10, %r93, -1;
	setp.lt.s32 	%p12, %r93, %r45;
	and.pred  	%p3, %p10, %p12;
	setp.lt.s32 	%p24, %r14, 32;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	cvt.u32.u64 	%r113, %rd63;
	mul.lo.s32 	%r114, %r47, %r113;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r36, %r93, %r47;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r115, %r36, %r16;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd33, %r115, 2;
	add.s64 	%rd30, %rd19, %rd33;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s32 	%r116, %r114, %r7;
	add.s32 	%r117, %r114, %r17;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r118, %r116, %r48, %r20;
	mad.lo.s32 	%r119, %r117, %r48, %r20;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd34, %r118, 2;
	add.s64 	%rd31, %rd20, %rd34;
	mul.wide.s32 	%rd35, %r119, 2;
	add.s64 	%rd32, %rd20, %rd35;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p25, %r116, %r19;
	setp.lt.s32 	%p26, %r117, %r19;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	selp.b32 	%r120, 16, 0, %p1;
	selp.b32 	%r108, %r120, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r107 + 0 ], [ %rd30 + 0 ], 0x10, %r108;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r121, 16, 0, %p2;
	selp.b32 	%r110, %r121, 0, %p25;
	// begin inline asm
	cp.async.cg.shared.global [ %r109 + 0 ], [ %rd31 + 0 ], 0x10, %r110;
	// end inline asm
	selp.b32 	%r112, %r121, 0, %p26;
	// begin inline asm
	cp.async.cg.shared.global [ %r111 + 0 ], [ %rd32 + 0 ], 0x10, %r112;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p24 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r124, %r32, %r36;
	cvt.u64.u32 	%rd12, %r124;
	mov.b32 	%r284, -1;
	mov.b64 	%rd64, 0;
	mov.b32 	%r283, 0;
	mov.u64 	%rd65, %rd64;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p28, %rd65, %rd3;
	add.s32 	%r191, %r284, 1;
	setp.gt.u32 	%p29, %r284, 2147483646;
	selp.b32 	%r284, %r191, 0, %p29;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r192, %r284, 10;
	add.s32 	%r194, %r280, %r192;
	add.s32 	%r195, %r194, 2048;
	add.s32 	%r129, %r195, %r196;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r149, %r150, %r151, %r152}, [%r129];
	// end inline asm
	add.s32 	%r134, %r195, %r197;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r169, %r170, %r171, %r172}, [%r134];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	shl.b32 	%r198, %r284, 11;
	add.s32 	%r199, %r280, %r198;
	add.s32 	%r139, %r199, %r200;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r135, %r136, %r137, %r138}, [%r139];
	// end inline asm
	add.s32 	%r144, %r199, %r201;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r140, %r141, %r142, %r143}, [%r144];
	// end inline asm
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	mov.b32 	%r165, {%rs91, %rs92};
	mov.b32 	%r166, {%rs93, %rs94};
	mov.b32 	%r175, {%rs95, %rs96};
	mov.b32 	%r176, {%rs97, %rs98};
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r165, %r166 }, { %r149, %r150, %r151, %r152 }, { %r135, %r136 }, { %r165, %r166 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r175, %r176 }, { %r149, %r150, %r151, %r152 }, { %r140, %r141 }, { %r175, %r176 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r165, %r166 }, { %r169, %r170, %r171, %r172 }, { %r137, %r138 }, { %r165, %r166 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r175, %r176 }, { %r169, %r170, %r171, %r172 }, { %r142, %r143 }, { %r175, %r176 };
	// end inline asm
	mov.b32 	{%rs91, %rs92}, %r165;
	mov.b32 	{%rs93, %rs94}, %r166;
	mov.b32 	{%rs95, %rs96}, %r175;
	mov.b32 	{%rs97, %rs98}, %r176;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd65, %rd65, 1;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd40, %rd12, %rd64;
	cvt.u32.u64 	%r202, %rd40;
	mul.wide.s32 	%rd41, %r202, 2;
	add.s64 	%rd37, %rd19, %rd41;
	.loc	1 70 112                        // implicit_gemm_kernel.py:70:112
	add.s64 	%rd42, %rd7, %rd64;
	setp.lt.s64 	%p30, %rd42, %rd4;
	add.s64 	%rd43, %rd62, %rd64;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	add.s32 	%r203, %r281, %r283;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s32 	%r204, %r282, %r283;
	mul.wide.s32 	%rd44, %r203, 2;
	add.s64 	%rd38, %rd20, %rd44;
	mul.wide.s32 	%rd45, %r204, 2;
	add.s64 	%rd39, %rd20, %rd45;
	cvt.u32.u64 	%r205, %rd43;
	add.s32 	%r206, %r205, 32;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p31, %r206, %r19;
	add.s32 	%r207, %r205, 48;
	setp.lt.s32 	%p32, %r207, %r19;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r208, 16, 0, %p30;
	selp.b32 	%r209, %r208, 0, %p3;
	selp.b32 	%r186, %r209, 0, %p28;
	// begin inline asm
	cp.async.cg.shared.global [ %r107 + 0 ], [ %rd37 + 0 ], 0x10, %r186;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r210, 16, 0, %p31;
	selp.b32 	%r211, %r210, 0, %p5;
	selp.b32 	%r188, %r211, 0, %p28;
	// begin inline asm
	cp.async.cg.shared.global [ %r109 + 0 ], [ %rd38 + 0 ], 0x10, %r188;
	// end inline asm
	selp.b32 	%r212, 16, 0, %p32;
	selp.b32 	%r213, %r212, 0, %p5;
	selp.b32 	%r190, %r213, 0, %p28;
	// begin inline asm
	cp.async.cg.shared.global [ %r111 + 0 ], [ %rd39 + 0 ], 0x10, %r190;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd64, %rd64, 32;
	add.s32 	%r283, %r283, %r30;
	setp.ne.s64 	%p33, %rd6, %rd65;
	@%p33 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge13_crit_edge
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r286, %r1, 5;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	shl.b32 	%r285, %r3, 3;
	mov.b16 	%rs91, 0;
	mov.u16 	%rs92, %rs91;
	mov.u16 	%rs93, %rs91;
	mov.u16 	%rs94, %rs91;
	mov.u16 	%rs95, %rs91;
	mov.u16 	%rs96, %rs91;
	mov.u16 	%rs97, %rs91;
	mov.u16 	%rs98, %rs91;
$L__BB0_9:                              // %._crit_edge13
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	shr.u32 	%r222, %r5, 5;
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r223, %r9, %r222;
	or.b32  	%r224, %r223, 2;
	or.b32  	%r225, %r223, 4;
	or.b32  	%r226, %r223, 6;
	or.b32  	%r227, %r223, 8;
	or.b32  	%r228, %r223, 10;
	or.b32  	%r229, %r223, 12;
	or.b32  	%r230, %r223, 14;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r231, %r223, %r48;
	shl.b32 	%r232, %r48, 1;
	add.s32 	%r233, %r231, %r232;
	add.s32 	%r234, %r233, %r232;
	add.s32 	%r235, %r234, %r232;
	add.s32 	%r236, %r235, %r232;
	add.s32 	%r237, %r236, %r232;
	add.s32 	%r238, %r237, %r232;
	add.s32 	%r239, %r238, %r232;
	.loc	1 87 33                         // implicit_gemm_kernel.py:87:33
	and.b32  	%r240, %r3, 31;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r241, %r286, %r240;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r242, %r241, %r231;
	add.s32 	%r243, %r241, %r233;
	add.s32 	%r244, %r241, %r234;
	add.s32 	%r245, %r241, %r235;
	add.s32 	%r246, %r241, %r236;
	add.s32 	%r247, %r241, %r237;
	add.s32 	%r248, %r241, %r238;
	add.s32 	%r249, %r241, %r239;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd54, %r242, 2;
	add.s64 	%rd46, %rd21, %rd54;
	mul.wide.s32 	%rd55, %r243, 2;
	add.s64 	%rd47, %rd21, %rd55;
	mul.wide.s32 	%rd56, %r244, 2;
	add.s64 	%rd48, %rd21, %rd56;
	mul.wide.s32 	%rd57, %r245, 2;
	add.s64 	%rd49, %rd21, %rd57;
	mul.wide.s32 	%rd58, %r246, 2;
	add.s64 	%rd50, %rd21, %rd58;
	mul.wide.s32 	%rd59, %r247, 2;
	add.s64 	%rd51, %rd21, %rd59;
	mul.wide.s32 	%rd60, %r248, 2;
	add.s64 	%rd52, %rd21, %rd60;
	mul.wide.s32 	%rd61, %r249, 2;
	add.s64 	%rd53, %rd21, %rd61;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p51, %r223, %r46;
	setp.lt.s32 	%p52, %r224, %r46;
	setp.lt.s32 	%p53, %r225, %r46;
	setp.lt.s32 	%p54, %r226, %r46;
	setp.lt.s32 	%p55, %r227, %r46;
	setp.lt.s32 	%p56, %r228, %r46;
	setp.lt.s32 	%p57, %r229, %r46;
	setp.lt.s32 	%p58, %r230, %r46;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p59, %r241, %r48;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p43, %p51, %p59;
	and.pred  	%p44, %p52, %p59;
	and.pred  	%p45, %p53, %p59;
	and.pred  	%p46, %p54, %p59;
	and.pred  	%p47, %p55, %p59;
	and.pred  	%p48, %p56, %p59;
	and.pred  	%p49, %p57, %p59;
	and.pred  	%p50, %p58, %p59;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	shl.b32 	%r250, %r3, 4;
	and.b32  	%r251, %r250, 48;
	shl.b32 	%r252, %r5, 1;
	or.b32  	%r253, %r251, %r252;
	or.b32  	%r254, %r4, %r253;
	and.b32  	%r255, %r285, 248;
	or.b32  	%r256, %r255, %r222;
	shr.u32 	%r257, %r253, 2;
	add.s32 	%r259, %r280, %r257;
	shl.b32 	%r260, %r254, 1;
	add.s32 	%r214, %r259, %r260;
	mov.pred 	%p35, -1;
	// begin inline asm
	@%p35 st.shared.b16 [ %r214 + 0 ], %rs91;
	// end inline asm
	or.b32  	%r261, %r253, 8;
	shr.u32 	%r262, %r261, 2;
	and.b32  	%r263, %r262, 30;
	add.s32 	%r264, %r280, %r263;
	add.s32 	%r265, %r264, %r260;
	add.s32 	%r215, %r265, 16;
	// begin inline asm
	@%p35 st.shared.b16 [ %r215 + 0 ], %rs92;
	// end inline asm
	or.b32  	%r266, %r253, 128;
	shr.u32 	%r267, %r266, 2;
	and.b32  	%r268, %r267, 62;
	add.s32 	%r269, %r280, %r268;
	add.s32 	%r270, %r269, %r260;
	add.s32 	%r216, %r270, 256;
	// begin inline asm
	@%p35 st.shared.b16 [ %r216 + 0 ], %rs95;
	// end inline asm
	or.b32  	%r271, %r253, 136;
	shr.u32 	%r272, %r271, 2;
	and.b32  	%r273, %r272, 62;
	add.s32 	%r274, %r280, %r273;
	add.s32 	%r275, %r274, %r260;
	add.s32 	%r217, %r275, 272;
	// begin inline asm
	@%p35 st.shared.b16 [ %r217 + 0 ], %rs96;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r276, %r255, 2;
	add.s32 	%r277, %r280, %r276;
	shl.b32 	%r278, %r256, 1;
	add.s32 	%r279, %r277, %r278;
	ld.shared.u16 	%rs67, [%r279];
	ld.shared.u16 	%rs68, [%r279+4];
	ld.shared.u16 	%rs69, [%r279+8];
	ld.shared.u16 	%rs70, [%r279+12];
	bar.sync 	0;
	// begin inline asm
	@%p35 st.shared.b16 [ %r214 + 0 ], %rs93;
	// end inline asm
	// begin inline asm
	@%p35 st.shared.b16 [ %r215 + 0 ], %rs94;
	// end inline asm
	// begin inline asm
	@%p35 st.shared.b16 [ %r216 + 0 ], %rs97;
	// end inline asm
	// begin inline asm
	@%p35 st.shared.b16 [ %r217 + 0 ], %rs98;
	// end inline asm
	bar.sync 	0;
	ld.shared.u16 	%rs71, [%r279];
	ld.shared.u16 	%rs72, [%r279+4];
	ld.shared.u16 	%rs73, [%r279+8];
	ld.shared.u16 	%rs74, [%r279+12];
	// begin inline asm
	@%p43 st.global.b16 [ %rd46 + 0 ], { %rs67 };
	// end inline asm
	// begin inline asm
	@%p44 st.global.b16 [ %rd47 + 0 ], { %rs68 };
	// end inline asm
	// begin inline asm
	@%p45 st.global.b16 [ %rd48 + 0 ], { %rs69 };
	// end inline asm
	// begin inline asm
	@%p46 st.global.b16 [ %rd49 + 0 ], { %rs70 };
	// end inline asm
	// begin inline asm
	@%p47 st.global.b16 [ %rd50 + 0 ], { %rs71 };
	// end inline asm
	// begin inline asm
	@%p48 st.global.b16 [ %rd51 + 0 ], { %rs72 };
	// end inline asm
	// begin inline asm
	@%p49 st.global.b16 [ %rd52 + 0 ], { %rs73 };
	// end inline asm
	// begin inline asm
	@%p50 st.global.b16 [ %rd53 + 0 ], { %rs74 };
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 174                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x98:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
