//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<100>;
	.reg .b32 	%r<745>;
	.reg .f32 	%f<138>;
	.reg .b64 	%rd<144>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r187, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r185, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd24, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r188, %ctaid.x;
	.loc	1 50 36                         // implicit_gemm_kernel.py:50:36
	shr.u32 	%r189, %r188, 31;
	add.s32 	%r190, %r188, %r189;
	and.b32  	%r191, %r190, -2;
	sub.s32 	%r715, %r188, %r191;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r192, %r185, 15;
$L__tmp2:
	.loc	1 49 35                         // implicit_gemm_kernel.py:49:35
	shr.s32 	%r193, %r190, 1;
	shr.s32 	%r195, %r192, 31;
	shr.u32 	%r196, %r195, 28;
	add.s32 	%r197, %r192, %r196;
	shr.s32 	%r198, %r197, 4;
	ld.param.u32 	%r199, [implicit_conv3d_kernel_param_8];
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r2, %r193, %r198;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r200, %r2, %r198;
	sub.s32 	%r201, %r193, %r200;
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r202, %r199, %r199;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r3, %r202, %r199;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r4, %tid.x;
	and.b32  	%r5, %r4, 64;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r8, %r201, 4;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.lt.s32 	%p7, %r715, %r3;
	mov.u32 	%r698, global_smem;
	@%p7 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph23
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r186, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r184, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd23, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd22, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd25, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	bfe.u32 	%r6, %r4, 5, 2;
	and.b32  	%r7, %r4, 15;
	or.b32  	%r9, %r8, %r6;
	or.b32  	%r10, %r9, 4;
	or.b32  	%r11, %r9, 8;
	or.b32  	%r12, %r9, 12;
	or.b32  	%r13, %r8, %r7;
	mul.lo.s32 	%r203, %r9, %r3;
	shl.b32 	%r204, %r3, 2;
	add.s32 	%r205, %r203, %r204;
	add.s32 	%r206, %r205, %r204;
	add.s32 	%r207, %r206, %r204;
	mul.lo.s32 	%r208, %r13, %r3;
	mul.wide.s32 	%rd26, %r203, 4;
	add.s64 	%rd1, %rd25, %rd26;
	mul.wide.s32 	%rd27, %r205, 4;
	add.s64 	%rd2, %rd25, %rd27;
	mul.wide.s32 	%rd28, %r206, 4;
	add.s64 	%rd3, %rd25, %rd28;
	mul.wide.s32 	%rd29, %r207, 4;
	add.s64 	%rd4, %rd25, %rd29;
	mul.wide.s32 	%rd30, %r208, 4;
	add.s64 	%rd5, %rd25, %rd30;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r212, %r4, 32;
	add.s32 	%r18, %r186, 31;
	shr.s32 	%r213, %r18, 31;
	shr.u32 	%r214, %r213, 27;
	add.s32 	%r215, %r18, %r214;
	shr.s32 	%r216, %r215, 5;
	and.b32  	%r217, %r4, 16;
	and.b32  	%r19, %r4, 31;
	shr.u32 	%r736, %r5, 6;
	or.b32  	%r21, %r736, 2;
	or.b32  	%r22, %r736, 4;
	or.b32  	%r23, %r736, 6;
	or.b32  	%r24, %r736, 8;
	or.b32  	%r25, %r736, 10;
	or.b32  	%r26, %r736, 12;
	or.b32  	%r27, %r736, 14;
	or.b32  	%r28, %r736, 16;
	or.b32  	%r29, %r736, 18;
	or.b32  	%r30, %r736, 20;
	or.b32  	%r31, %r736, 22;
	or.b32  	%r32, %r736, 24;
	or.b32  	%r33, %r736, 26;
	or.b32  	%r34, %r736, 28;
	or.b32  	%r35, %r736, 30;
	and.b32  	%r36, %r4, 63;
	shl.b32 	%r218, %r2, 6;
	mul.lo.s32 	%r37, %r3, %r186;
	or.b32  	%r735, %r218, %r36;
	setp.lt.s32 	%p8, %r735, %r187;
	setp.gt.s32 	%p9, %r18, 31;
	setp.lt.s32 	%p10, %r19, %r186;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p1, %p10, %p9;
	shr.u32 	%r219, %r5, 3;
	shr.u32 	%r220, %r4, 3;
	and.b32  	%r221, %r220, 12;
	xor.b32  	%r222, %r221, %r19;
	shl.b32 	%r223, %r222, 2;
	shl.b32 	%r224, %r6, 7;
	or.b32  	%r225, %r224, %r223;
	add.s32 	%r227, %r698, 8192;
	add.s32 	%r330, %r227, %r225;
	and.b32  	%r228, %r4, 3;
	or.b32  	%r229, %r228, 16;
	and.b32  	%r230, %r4, 12;
	or.b32  	%r231, %r229, %r230;
	xor.b32  	%r232, %r231, %r217;
	xor.b32  	%r233, %r221, %r232;
	shl.b32 	%r234, %r233, 2;
	add.s32 	%r235, %r227, %r234;
	add.s32 	%r236, %r235, %r224;
	add.s32 	%r332, %r236, 512;
	add.s32 	%r334, %r330, 1024;
	add.s32 	%r336, %r236, 1536;
	xor.b32  	%r237, %r219, %r36;
	or.b32  	%r238, %r237, %r5;
	shl.b32 	%r239, %r238, 2;
	add.s32 	%r338, %r698, %r239;
	or.b32  	%r240, %r232, %r212;
	xor.b32  	%r241, %r240, %r219;
	shl.b32 	%r242, %r241, 2;
	add.s32 	%r243, %r698, %r242;
	shl.b32 	%r244, %r21, 8;
	add.s32 	%r340, %r243, %r244;
	shl.b32 	%r245, %r22, 8;
	shl.b32 	%r246, %r237, 2;
	or.b32  	%r247, %r245, %r246;
	add.s32 	%r342, %r698, %r247;
	shl.b32 	%r248, %r23, 8;
	add.s32 	%r344, %r243, %r248;
	shl.b32 	%r249, %r24, 8;
	or.b32  	%r250, %r249, %r246;
	add.s32 	%r346, %r698, %r250;
	shl.b32 	%r251, %r25, 8;
	add.s32 	%r348, %r243, %r251;
	shl.b32 	%r252, %r26, 8;
	or.b32  	%r253, %r252, %r246;
	add.s32 	%r350, %r698, %r253;
	shl.b32 	%r254, %r27, 8;
	add.s32 	%r352, %r243, %r254;
	shl.b32 	%r255, %r28, 8;
	or.b32  	%r256, %r255, %r246;
	add.s32 	%r354, %r698, %r256;
	shl.b32 	%r257, %r29, 8;
	add.s32 	%r356, %r243, %r257;
	shl.b32 	%r258, %r30, 8;
	or.b32  	%r259, %r258, %r246;
	add.s32 	%r358, %r698, %r259;
	shl.b32 	%r260, %r31, 8;
	add.s32 	%r360, %r243, %r260;
	shl.b32 	%r261, %r32, 8;
	or.b32  	%r262, %r261, %r246;
	add.s32 	%r362, %r698, %r262;
	shl.b32 	%r263, %r33, 8;
	add.s32 	%r364, %r243, %r263;
	shl.b32 	%r264, %r34, 8;
	or.b32  	%r265, %r264, %r246;
	add.s32 	%r366, %r698, %r265;
	shl.b32 	%r266, %r35, 8;
	add.s32 	%r368, %r243, %r266;
	add.s32 	%r267, %r216, -1;
	shl.b32 	%r268, %r4, 2;
	and.b32  	%r269, %r268, 4;
	and.b32  	%r270, %r268, 8;
	and.b32  	%r271, %r268, 12;
	and.b32  	%r272, %r268, 16;
	and.b32  	%r273, %r268, 28;
	shr.u32 	%r274, %r217, 2;
	xor.b32  	%r275, %r273, %r274;
	shl.b32 	%r276, %r7, 5;
	or.b32  	%r59, %r275, %r276;
	or.b32  	%r277, %r269, 8;
	xor.b32  	%r278, %r277, %r270;
	or.b32  	%r279, %r278, %r272;
	xor.b32  	%r280, %r279, %r274;
	or.b32  	%r60, %r280, %r276;
	or.b32  	%r281, %r271, 16;
	or.b32  	%r282, %r274, %r272;
	xor.b32  	%r283, %r282, %r281;
	or.b32  	%r61, %r283, %r276;
	or.b32  	%r284, %r269, 24;
	or.b32  	%r285, %r282, %r270;
	xor.b32  	%r286, %r285, %r284;
	or.b32  	%r62, %r286, %r276;
	shl.b32 	%r733, %r4, 3;
	and.b32  	%r287, %r733, 24;
	shr.u32 	%r734, %r4, 2;
	bfe.u32 	%r288, %r4, 2, 2;
	or.b32  	%r289, %r288, %r287;
	or.b32  	%r290, %r289, %r274;
	and.b32  	%r291, %r734, 24;
	xor.b32  	%r65, %r291, %r290;
	shl.b32 	%r292, %r4, 6;
	and.b32  	%r66, %r292, 192;
	shl.b32 	%r67, %r229, 6;
	or.b32  	%r293, %r290, 32;
	xor.b32  	%r68, %r291, %r293;
	cvt.s64.s32 	%rd6, %r267;
	cvt.u64.u32 	%rd31, %r19;
	cvt.s64.s32 	%rd7, %r186;
	cvt.u64.u32 	%rd8, %r216;
	and.pred  	%p2, %p8, %p9;
	or.b64  	%rd9, %rd31, 32;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	or.b32  	%r69, %r19, 32;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	mad.lo.s32 	%r294, %r715, %r186, %r736;
	cvt.u64.u32 	%rd141, %r294;
	shl.b32 	%r295, %r186, 1;
	cvt.u64.u32 	%rd11, %r295;
	add.s32 	%r296, %r294, 62;
	mad.lo.s32 	%r714, %r187, %r296, %r218;
	mul.lo.s32 	%r297, %r187, %r186;
	shl.b32 	%r71, %r297, 1;
	shl.b32 	%r72, %r187, 5;
	add.s32 	%r298, %r294, 60;
	mad.lo.s32 	%r713, %r187, %r298, %r218;
	add.s32 	%r299, %r294, 58;
	mad.lo.s32 	%r712, %r187, %r299, %r218;
	add.s32 	%r300, %r294, 56;
	mad.lo.s32 	%r711, %r187, %r300, %r218;
	add.s32 	%r301, %r294, 54;
	mad.lo.s32 	%r710, %r187, %r301, %r218;
	add.s32 	%r302, %r294, 52;
	mad.lo.s32 	%r709, %r187, %r302, %r218;
	add.s32 	%r303, %r294, 50;
	mad.lo.s32 	%r708, %r187, %r303, %r218;
	add.s32 	%r304, %r294, 48;
	mad.lo.s32 	%r707, %r187, %r304, %r218;
	add.s32 	%r305, %r294, 46;
	mad.lo.s32 	%r706, %r187, %r305, %r218;
	add.s32 	%r306, %r294, 44;
	mad.lo.s32 	%r705, %r187, %r306, %r218;
	add.s32 	%r307, %r294, 42;
	mad.lo.s32 	%r704, %r187, %r307, %r218;
	add.s32 	%r308, %r294, 40;
	mad.lo.s32 	%r703, %r187, %r308, %r218;
	add.s32 	%r309, %r294, 38;
	mad.lo.s32 	%r702, %r187, %r309, %r218;
	add.s32 	%r310, %r294, 36;
	mad.lo.s32 	%r701, %r187, %r310, %r218;
	add.s32 	%r311, %r294, 34;
	mad.lo.s32 	%r700, %r187, %r311, %r218;
	add.s32 	%r312, %r294, 32;
	mad.lo.s32 	%r699, %r187, %r312, %r218;
	mov.f32 	%f114, 0f00000000;
	setp.lt.s32 	%p15, %r13, %r185;
	shl.b32 	%r527, %r59, 2;
	shl.b32 	%r528, %r60, 2;
	shl.b32 	%r529, %r61, 2;
	shl.b32 	%r530, %r62, 2;
	shl.b32 	%r533, %r65, 2;
	shl.b32 	%r535, %r66, 2;
	shl.b32 	%r537, %r67, 2;
	shl.b32 	%r539, %r68, 2;
	mov.f32 	%f115, %f114;
	mov.f32 	%f116, %f114;
	mov.f32 	%f117, %f114;
	mov.f32 	%f118, %f114;
	mov.f32 	%f119, %f114;
	mov.f32 	%f120, %f114;
	mov.f32 	%f121, %f114;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s32 	%r715, %r715, 2;
	add.s64 	%rd141, %rd141, %rd11;
	add.s32 	%r714, %r714, %r71;
	add.s32 	%r713, %r713, %r71;
	add.s32 	%r712, %r712, %r71;
	add.s32 	%r711, %r711, %r71;
	add.s32 	%r710, %r710, %r71;
	add.s32 	%r709, %r709, %r71;
	add.s32 	%r708, %r708, %r71;
	add.s32 	%r707, %r707, %r71;
	add.s32 	%r706, %r706, %r71;
	add.s32 	%r705, %r705, %r71;
	add.s32 	%r704, %r704, %r71;
	add.s32 	%r703, %r703, %r71;
	add.s32 	%r702, %r702, %r71;
	add.s32 	%r701, %r701, %r71;
	add.s32 	%r700, %r700, %r71;
	add.s32 	%r699, %r699, %r71;
	setp.lt.s32 	%p74, %r715, %r3;
	@%p74 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p14, %r12, %r185;
	setp.lt.s32 	%p13, %r11, %r185;
	setp.lt.s32 	%p12, %r10, %r185;
	setp.lt.s32 	%p11, %r9, %r185;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	mul.wide.s32 	%rd37, %r715, 4;
	add.s64 	%rd32, %rd1, %rd37;
	add.s64 	%rd33, %rd2, %rd37;
	add.s64 	%rd34, %rd3, %rd37;
	add.s64 	%rd35, %rd4, %rd37;
	add.s64 	%rd36, %rd5, %rd37;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r313, 0xffffffffffffffff;
	@%p11 ld.global.b32 { %r313 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r314, 0xffffffffffffffff;
	@%p12 ld.global.b32 { %r314 }, [ %rd33 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r315, 0xffffffffffffffff;
	@%p13 ld.global.b32 { %r315 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r316, 0xffffffffffffffff;
	@%p14 ld.global.b32 { %r316 }, [ %rd35 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r317, 0xffffffffffffffff;
	@%p15 ld.global.b32 { %r317 }, [ %rd36 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p20, %r317, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p25, %r317, %r184;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p26, %p20, %p25;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r318, 1, 0, %p26;
	shfl.sync.bfly.b32	%r319, %r318, 8, 31, -1;
	and.b32  	%r320, %r319, 1;
	setp.eq.b32 	%p27, %r320, 1;
$L__tmp3:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p28, %p26, %p27;
$L__tmp4:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r321, 1, 0, %p28;
	shfl.sync.bfly.b32	%r322, %r321, 4, 31, -1;
	and.b32  	%r323, %r322, 1;
	setp.eq.b32 	%p29, %r323, 1;
$L__tmp5:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p30, %p28, %p29;
$L__tmp6:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r324, 1, 0, %p30;
	shfl.sync.bfly.b32	%r325, %r324, 2, 31, -1;
	and.b32  	%r326, %r325, 1;
	setp.eq.b32 	%p31, %r326, 1;
$L__tmp7:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p32, %p30, %p31;
$L__tmp8:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r327, 1, 0, %p32;
	shfl.sync.bfly.b32	%r328, %r327, 1, 31, -1;
	and.b32  	%r329, %r328, 1;
	setp.eq.b32 	%p33, %r329, 1;
$L__tmp9:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p34, %p32, %p33;
$L__tmp10:
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p35, %p34;
	@%p35 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.gt.s32 	%p16, %r313, -1;
	setp.gt.s32 	%p17, %r314, -1;
	setp.gt.s32 	%p18, %r315, -1;
	setp.gt.s32 	%p19, %r316, -1;
	setp.lt.s32 	%p21, %r313, %r184;
	setp.lt.s32 	%p22, %r314, %r184;
	setp.lt.s32 	%p23, %r315, %r184;
	setp.lt.s32 	%p24, %r316, %r184;
	and.pred  	%p3, %p16, %p21;
	and.pred  	%p4, %p17, %p22;
	and.pred  	%p5, %p18, %p23;
	and.pred  	%p6, %p19, %p24;
	setp.lt.s32 	%p36, %r18, 32;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	mul.lo.s32 	%r370, %r715, %r186;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r109, %r313, %r186;
	mul.lo.s32 	%r110, %r314, %r186;
	mul.lo.s32 	%r111, %r315, %r186;
	mul.lo.s32 	%r112, %r316, %r186;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r371, %r109, %r19;
	add.s32 	%r372, %r110, %r19;
	add.s32 	%r373, %r111, %r19;
	add.s32 	%r374, %r112, %r19;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd58, %r371, 4;
	add.s64 	%rd38, %rd22, %rd58;
	mul.wide.s32 	%rd59, %r372, 4;
	add.s64 	%rd39, %rd22, %rd59;
	mul.wide.s32 	%rd60, %r373, 4;
	add.s64 	%rd40, %rd22, %rd60;
	mul.wide.s32 	%rd61, %r374, 4;
	add.s64 	%rd41, %rd22, %rd61;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s32 	%r375, %r370, %r736;
	add.s32 	%r376, %r370, %r21;
	add.s32 	%r377, %r370, %r22;
	add.s32 	%r378, %r370, %r23;
	add.s32 	%r379, %r370, %r24;
	add.s32 	%r380, %r370, %r25;
	add.s32 	%r381, %r370, %r26;
	add.s32 	%r382, %r370, %r27;
	add.s32 	%r383, %r370, %r28;
	add.s32 	%r384, %r370, %r29;
	add.s32 	%r385, %r370, %r30;
	add.s32 	%r386, %r370, %r31;
	add.s32 	%r387, %r370, %r32;
	add.s32 	%r388, %r370, %r33;
	add.s32 	%r389, %r370, %r34;
	add.s32 	%r390, %r370, %r35;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r391, %r375, %r187, %r735;
	mad.lo.s32 	%r392, %r376, %r187, %r735;
	mad.lo.s32 	%r393, %r377, %r187, %r735;
	mad.lo.s32 	%r394, %r378, %r187, %r735;
	mad.lo.s32 	%r395, %r379, %r187, %r735;
	mad.lo.s32 	%r396, %r380, %r187, %r735;
	mad.lo.s32 	%r397, %r381, %r187, %r735;
	mad.lo.s32 	%r398, %r382, %r187, %r735;
	mad.lo.s32 	%r399, %r383, %r187, %r735;
	mad.lo.s32 	%r400, %r384, %r187, %r735;
	mad.lo.s32 	%r401, %r385, %r187, %r735;
	mad.lo.s32 	%r402, %r386, %r187, %r735;
	mad.lo.s32 	%r403, %r387, %r187, %r735;
	mad.lo.s32 	%r404, %r388, %r187, %r735;
	mad.lo.s32 	%r405, %r389, %r187, %r735;
	mad.lo.s32 	%r406, %r390, %r187, %r735;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd62, %r391, 4;
	add.s64 	%rd42, %rd23, %rd62;
	mul.wide.s32 	%rd63, %r392, 4;
	add.s64 	%rd43, %rd23, %rd63;
	mul.wide.s32 	%rd64, %r393, 4;
	add.s64 	%rd44, %rd23, %rd64;
	mul.wide.s32 	%rd65, %r394, 4;
	add.s64 	%rd45, %rd23, %rd65;
	mul.wide.s32 	%rd66, %r395, 4;
	add.s64 	%rd46, %rd23, %rd66;
	mul.wide.s32 	%rd67, %r396, 4;
	add.s64 	%rd47, %rd23, %rd67;
	mul.wide.s32 	%rd68, %r397, 4;
	add.s64 	%rd48, %rd23, %rd68;
	mul.wide.s32 	%rd69, %r398, 4;
	add.s64 	%rd49, %rd23, %rd69;
	mul.wide.s32 	%rd70, %r399, 4;
	add.s64 	%rd50, %rd23, %rd70;
	mul.wide.s32 	%rd71, %r400, 4;
	add.s64 	%rd51, %rd23, %rd71;
	mul.wide.s32 	%rd72, %r401, 4;
	add.s64 	%rd52, %rd23, %rd72;
	mul.wide.s32 	%rd73, %r402, 4;
	add.s64 	%rd53, %rd23, %rd73;
	mul.wide.s32 	%rd74, %r403, 4;
	add.s64 	%rd54, %rd23, %rd74;
	mul.wide.s32 	%rd75, %r404, 4;
	add.s64 	%rd55, %rd23, %rd75;
	mul.wide.s32 	%rd76, %r405, 4;
	add.s64 	%rd56, %rd23, %rd76;
	mul.wide.s32 	%rd77, %r406, 4;
	add.s64 	%rd57, %rd23, %rd77;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p37, %r375, %r37;
	setp.lt.s32 	%p38, %r376, %r37;
	setp.lt.s32 	%p39, %r377, %r37;
	setp.lt.s32 	%p40, %r378, %r37;
	setp.lt.s32 	%p41, %r379, %r37;
	setp.lt.s32 	%p42, %r380, %r37;
	setp.lt.s32 	%p43, %r381, %r37;
	setp.lt.s32 	%p44, %r382, %r37;
	setp.lt.s32 	%p45, %r383, %r37;
	setp.lt.s32 	%p46, %r384, %r37;
	setp.lt.s32 	%p47, %r385, %r37;
	setp.lt.s32 	%p48, %r386, %r37;
	setp.lt.s32 	%p49, %r387, %r37;
	setp.lt.s32 	%p50, %r388, %r37;
	setp.lt.s32 	%p51, %r389, %r37;
	setp.lt.s32 	%p52, %r390, %r37;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	selp.b32 	%r407, 4, 0, %p1;
	selp.b32 	%r331, %r407, 0, %p3;
	// begin inline asm
	cp.async.ca.shared.global [ %r330 + 0 ], [ %rd38 + 0 ], 0x4, %r331;
	// end inline asm
	selp.b32 	%r333, %r407, 0, %p4;
	// begin inline asm
	cp.async.ca.shared.global [ %r332 + 0 ], [ %rd39 + 0 ], 0x4, %r333;
	// end inline asm
	selp.b32 	%r335, %r407, 0, %p5;
	// begin inline asm
	cp.async.ca.shared.global [ %r334 + 0 ], [ %rd40 + 0 ], 0x4, %r335;
	// end inline asm
	selp.b32 	%r337, %r407, 0, %p6;
	// begin inline asm
	cp.async.ca.shared.global [ %r336 + 0 ], [ %rd41 + 0 ], 0x4, %r337;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r408, 4, 0, %p2;
	selp.b32 	%r339, %r408, 0, %p37;
	// begin inline asm
	cp.async.ca.shared.global [ %r338 + 0 ], [ %rd42 + 0 ], 0x4, %r339;
	// end inline asm
	selp.b32 	%r341, %r408, 0, %p38;
	// begin inline asm
	cp.async.ca.shared.global [ %r340 + 0 ], [ %rd43 + 0 ], 0x4, %r341;
	// end inline asm
	selp.b32 	%r343, %r408, 0, %p39;
	// begin inline asm
	cp.async.ca.shared.global [ %r342 + 0 ], [ %rd44 + 0 ], 0x4, %r343;
	// end inline asm
	selp.b32 	%r345, %r408, 0, %p40;
	// begin inline asm
	cp.async.ca.shared.global [ %r344 + 0 ], [ %rd45 + 0 ], 0x4, %r345;
	// end inline asm
	selp.b32 	%r347, %r408, 0, %p41;
	// begin inline asm
	cp.async.ca.shared.global [ %r346 + 0 ], [ %rd46 + 0 ], 0x4, %r347;
	// end inline asm
	selp.b32 	%r349, %r408, 0, %p42;
	// begin inline asm
	cp.async.ca.shared.global [ %r348 + 0 ], [ %rd47 + 0 ], 0x4, %r349;
	// end inline asm
	selp.b32 	%r351, %r408, 0, %p43;
	// begin inline asm
	cp.async.ca.shared.global [ %r350 + 0 ], [ %rd48 + 0 ], 0x4, %r351;
	// end inline asm
	selp.b32 	%r353, %r408, 0, %p44;
	// begin inline asm
	cp.async.ca.shared.global [ %r352 + 0 ], [ %rd49 + 0 ], 0x4, %r353;
	// end inline asm
	selp.b32 	%r355, %r408, 0, %p45;
	// begin inline asm
	cp.async.ca.shared.global [ %r354 + 0 ], [ %rd50 + 0 ], 0x4, %r355;
	// end inline asm
	selp.b32 	%r357, %r408, 0, %p46;
	// begin inline asm
	cp.async.ca.shared.global [ %r356 + 0 ], [ %rd51 + 0 ], 0x4, %r357;
	// end inline asm
	selp.b32 	%r359, %r408, 0, %p47;
	// begin inline asm
	cp.async.ca.shared.global [ %r358 + 0 ], [ %rd52 + 0 ], 0x4, %r359;
	// end inline asm
	selp.b32 	%r361, %r408, 0, %p48;
	// begin inline asm
	cp.async.ca.shared.global [ %r360 + 0 ], [ %rd53 + 0 ], 0x4, %r361;
	// end inline asm
	selp.b32 	%r363, %r408, 0, %p49;
	// begin inline asm
	cp.async.ca.shared.global [ %r362 + 0 ], [ %rd54 + 0 ], 0x4, %r363;
	// end inline asm
	selp.b32 	%r365, %r408, 0, %p50;
	// begin inline asm
	cp.async.ca.shared.global [ %r364 + 0 ], [ %rd55 + 0 ], 0x4, %r365;
	// end inline asm
	selp.b32 	%r367, %r408, 0, %p51;
	// begin inline asm
	cp.async.ca.shared.global [ %r366 + 0 ], [ %rd56 + 0 ], 0x4, %r367;
	// end inline asm
	selp.b32 	%r369, %r408, 0, %p52;
	// begin inline asm
	cp.async.ca.shared.global [ %r368 + 0 ], [ %rd57 + 0 ], 0x4, %r369;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p36 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r410, %r69, %r112;
	cvt.u64.u32 	%rd13, %r410;
	add.s32 	%r411, %r69, %r111;
	cvt.u64.u32 	%rd14, %r411;
	add.s32 	%r412, %r69, %r110;
	cvt.u64.u32 	%rd15, %r412;
	add.s32 	%r413, %r69, %r109;
	cvt.u64.u32 	%rd16, %r413;
	mov.b32 	%r732, -1;
	mov.b64 	%rd142, 0;
	mov.u32 	%r716, %r699;
	mov.u32 	%r717, %r700;
	mov.u32 	%r718, %r701;
	mov.u32 	%r719, %r702;
	mov.u32 	%r720, %r703;
	mov.u32 	%r721, %r704;
	mov.u32 	%r722, %r705;
	mov.u32 	%r723, %r706;
	mov.u32 	%r724, %r707;
	mov.u32 	%r725, %r708;
	mov.u32 	%r726, %r709;
	mov.u32 	%r727, %r710;
	mov.u32 	%r728, %r711;
	mov.u32 	%r729, %r712;
	mov.u32 	%r730, %r713;
	mov.u32 	%r731, %r714;
	mov.u64 	%rd143, %rd142;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p54, %rd143, %rd6;
	add.s32 	%r522, %r732, 1;
	setp.gt.u32 	%p55, %r732, 2147483646;
	selp.b32 	%r732, %r522, 0, %p55;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r523, %r732, 11;
	add.s32 	%r525, %r698, %r523;
	add.s32 	%r526, %r525, 8192;
	add.s32 	%r418, %r526, %r527;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r434, %r435, %r436, %r437}, [%r418];
	// end inline asm
	add.s32 	%r423, %r526, %r528;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r446, %r447, %r448, %r449}, [%r423];
	// end inline asm
	add.s32 	%r428, %r526, %r529;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r458, %r459, %r460, %r461}, [%r428];
	// end inline asm
	add.s32 	%r433, %r526, %r530;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r470, %r471, %r472, %r473}, [%r433];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	shl.b32 	%r531, %r732, 13;
	add.s32 	%r532, %r698, %r531;
	add.s32 	%r534, %r532, %r533;
	add.s32 	%r536, %r534, %r535;
	ld.shared.u32 	%r438, [%r536];
	ld.shared.u32 	%r439, [%r536+1024];
	ld.shared.u32 	%r450, [%r536+2048];
	ld.shared.u32 	%r451, [%r536+3072];
	add.s32 	%r538, %r534, %r537;
	ld.shared.u32 	%r462, [%r538];
	ld.shared.u32 	%r463, [%r536+5120];
	ld.shared.u32 	%r474, [%r536+6144];
	ld.shared.u32 	%r475, [%r536+7168];
	add.s32 	%r540, %r532, %r539;
	add.s32 	%r541, %r540, %r535;
	ld.shared.u32 	%r444, [%r541];
	ld.shared.u32 	%r445, [%r541+1024];
	ld.shared.u32 	%r456, [%r541+2048];
	ld.shared.u32 	%r457, [%r541+3072];
	add.s32 	%r542, %r540, %r537;
	ld.shared.u32 	%r468, [%r542];
	ld.shared.u32 	%r469, [%r541+5120];
	ld.shared.u32 	%r480, [%r541+6144];
	ld.shared.u32 	%r481, [%r541+7168];
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f114, %f115, %f116, %f117 }, { %r434, %r435, %r436, %r437 }, { %r438, %r439 }, { %f114, %f115, %f116, %f117 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f118, %f119, %f120, %f121 }, { %r434, %r435, %r436, %r437 }, { %r444, %r445 }, { %f118, %f119, %f120, %f121 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f114, %f115, %f116, %f117 }, { %r446, %r447, %r448, %r449 }, { %r450, %r451 }, { %f114, %f115, %f116, %f117 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f118, %f119, %f120, %f121 }, { %r446, %r447, %r448, %r449 }, { %r456, %r457 }, { %f118, %f119, %f120, %f121 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f114, %f115, %f116, %f117 }, { %r458, %r459, %r460, %r461 }, { %r462, %r463 }, { %f114, %f115, %f116, %f117 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f118, %f119, %f120, %f121 }, { %r458, %r459, %r460, %r461 }, { %r468, %r469 }, { %f118, %f119, %f120, %f121 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f114, %f115, %f116, %f117 }, { %r470, %r471, %r472, %r473 }, { %r474, %r475 }, { %f114, %f115, %f116, %f117 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f118, %f119, %f120, %f121 }, { %r470, %r471, %r472, %r473 }, { %r480, %r481 }, { %f118, %f119, %f120, %f121 };
	// end inline asm
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd143, %rd143, 1;
	.loc	1 69 89                         // implicit_gemm_kernel.py:69:89
	add.s64 	%rd99, %rd16, %rd142;
	add.s64 	%rd100, %rd15, %rd142;
	add.s64 	%rd101, %rd14, %rd142;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd102, %rd13, %rd142;
	cvt.u32.u64 	%r543, %rd99;
	mul.wide.s32 	%rd103, %r543, 4;
	add.s64 	%rd79, %rd22, %rd103;
	cvt.u32.u64 	%r544, %rd100;
	mul.wide.s32 	%rd104, %r544, 4;
	add.s64 	%rd80, %rd22, %rd104;
	cvt.u32.u64 	%r545, %rd101;
	mul.wide.s32 	%rd105, %r545, 4;
	add.s64 	%rd81, %rd22, %rd105;
	cvt.u32.u64 	%r546, %rd102;
	mul.wide.s32 	%rd106, %r546, 4;
	add.s64 	%rd82, %rd22, %rd106;
	.loc	1 70 112                        // implicit_gemm_kernel.py:70:112
	add.s64 	%rd107, %rd9, %rd142;
	setp.lt.s64 	%p56, %rd107, %rd7;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s64 	%rd108, %rd141, %rd142;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	add.s32 	%r547, %r36, %r716;
	add.s32 	%r548, %r36, %r717;
	add.s32 	%r549, %r36, %r718;
	add.s32 	%r550, %r36, %r719;
	add.s32 	%r551, %r36, %r720;
	add.s32 	%r552, %r36, %r721;
	add.s32 	%r553, %r36, %r722;
	add.s32 	%r554, %r36, %r723;
	add.s32 	%r555, %r36, %r724;
	add.s32 	%r556, %r36, %r725;
	add.s32 	%r557, %r36, %r726;
	add.s32 	%r558, %r36, %r727;
	add.s32 	%r559, %r36, %r728;
	add.s32 	%r560, %r36, %r729;
	add.s32 	%r561, %r36, %r730;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s32 	%r562, %r36, %r731;
	mul.wide.s32 	%rd109, %r547, 4;
	add.s64 	%rd83, %rd23, %rd109;
	mul.wide.s32 	%rd110, %r548, 4;
	add.s64 	%rd84, %rd23, %rd110;
	mul.wide.s32 	%rd111, %r549, 4;
	add.s64 	%rd85, %rd23, %rd111;
	mul.wide.s32 	%rd112, %r550, 4;
	add.s64 	%rd86, %rd23, %rd112;
	mul.wide.s32 	%rd113, %r551, 4;
	add.s64 	%rd87, %rd23, %rd113;
	mul.wide.s32 	%rd114, %r552, 4;
	add.s64 	%rd88, %rd23, %rd114;
	mul.wide.s32 	%rd115, %r553, 4;
	add.s64 	%rd89, %rd23, %rd115;
	mul.wide.s32 	%rd116, %r554, 4;
	add.s64 	%rd90, %rd23, %rd116;
	mul.wide.s32 	%rd117, %r555, 4;
	add.s64 	%rd91, %rd23, %rd117;
	mul.wide.s32 	%rd118, %r556, 4;
	add.s64 	%rd92, %rd23, %rd118;
	mul.wide.s32 	%rd119, %r557, 4;
	add.s64 	%rd93, %rd23, %rd119;
	mul.wide.s32 	%rd120, %r558, 4;
	add.s64 	%rd94, %rd23, %rd120;
	mul.wide.s32 	%rd121, %r559, 4;
	add.s64 	%rd95, %rd23, %rd121;
	mul.wide.s32 	%rd122, %r560, 4;
	add.s64 	%rd96, %rd23, %rd122;
	mul.wide.s32 	%rd123, %r561, 4;
	add.s64 	%rd97, %rd23, %rd123;
	mul.wide.s32 	%rd124, %r562, 4;
	add.s64 	%rd98, %rd23, %rd124;
	cvt.u32.u64 	%r563, %rd108;
	add.s32 	%r564, %r563, 32;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p57, %r564, %r37;
	add.s32 	%r565, %r563, 34;
	setp.lt.s32 	%p58, %r565, %r37;
	add.s32 	%r566, %r563, 36;
	setp.lt.s32 	%p59, %r566, %r37;
	add.s32 	%r567, %r563, 38;
	setp.lt.s32 	%p60, %r567, %r37;
	add.s32 	%r568, %r563, 40;
	setp.lt.s32 	%p61, %r568, %r37;
	add.s32 	%r569, %r563, 42;
	setp.lt.s32 	%p62, %r569, %r37;
	add.s32 	%r570, %r563, 44;
	setp.lt.s32 	%p63, %r570, %r37;
	add.s32 	%r571, %r563, 46;
	setp.lt.s32 	%p64, %r571, %r37;
	add.s32 	%r572, %r563, 48;
	setp.lt.s32 	%p65, %r572, %r37;
	add.s32 	%r573, %r563, 50;
	setp.lt.s32 	%p66, %r573, %r37;
	add.s32 	%r574, %r563, 52;
	setp.lt.s32 	%p67, %r574, %r37;
	add.s32 	%r575, %r563, 54;
	setp.lt.s32 	%p68, %r575, %r37;
	add.s32 	%r576, %r563, 56;
	setp.lt.s32 	%p69, %r576, %r37;
	add.s32 	%r577, %r563, 58;
	setp.lt.s32 	%p70, %r577, %r37;
	add.s32 	%r578, %r563, 60;
	setp.lt.s32 	%p71, %r578, %r37;
	add.s32 	%r579, %r563, 62;
	setp.lt.s32 	%p72, %r579, %r37;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r580, 4, 0, %p56;
	selp.b32 	%r581, %r580, 0, %p3;
	selp.b32 	%r483, %r581, 0, %p54;
	// begin inline asm
	cp.async.ca.shared.global [ %r330 + 0 ], [ %rd79 + 0 ], 0x4, %r483;
	// end inline asm
	selp.b32 	%r582, %r580, 0, %p4;
	selp.b32 	%r485, %r582, 0, %p54;
	// begin inline asm
	cp.async.ca.shared.global [ %r332 + 0 ], [ %rd80 + 0 ], 0x4, %r485;
	// end inline asm
	selp.b32 	%r583, %r580, 0, %p5;
	selp.b32 	%r487, %r583, 0, %p54;
	// begin inline asm
	cp.async.ca.shared.global [ %r334 + 0 ], [ %rd81 + 0 ], 0x4, %r487;
	// end inline asm
	selp.b32 	%r584, %r580, 0, %p6;
	selp.b32 	%r489, %r584, 0, %p54;
	// begin inline asm
	cp.async.ca.shared.global [ %r336 + 0 ], [ %rd82 + 0 ], 0x4, %r489;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r585, 4, 0, %p57;
	selp.b32 	%r586, %r585, 0, %p8;
	selp.b32 	%r491, %r586, 0, %p54;
	// begin inline asm
	cp.async.ca.shared.global [ %r338 + 0 ], [ %rd83 + 0 ], 0x4, %r491;
	// end inline asm
	selp.b32 	%r587, 4, 0, %p58;
	selp.b32 	%r588, %r587, 0, %p8;
	selp.b32 	%r493, %r588, 0, %p54;
	// begin inline asm
	cp.async.ca.shared.global [ %r340 + 0 ], [ %rd84 + 0 ], 0x4, %r493;
	// end inline asm
	selp.b32 	%r589, 4, 0, %p59;
	selp.b32 	%r590, %r589, 0, %p8;
	selp.b32 	%r495, %r590, 0, %p54;
	// begin inline asm
	cp.async.ca.shared.global [ %r342 + 0 ], [ %rd85 + 0 ], 0x4, %r495;
	// end inline asm
	selp.b32 	%r591, 4, 0, %p60;
	selp.b32 	%r592, %r591, 0, %p8;
	selp.b32 	%r497, %r592, 0, %p54;
	// begin inline asm
	cp.async.ca.shared.global [ %r344 + 0 ], [ %rd86 + 0 ], 0x4, %r497;
	// end inline asm
	selp.b32 	%r593, 4, 0, %p61;
	selp.b32 	%r594, %r593, 0, %p8;
	selp.b32 	%r499, %r594, 0, %p54;
	// begin inline asm
	cp.async.ca.shared.global [ %r346 + 0 ], [ %rd87 + 0 ], 0x4, %r499;
	// end inline asm
	selp.b32 	%r595, 4, 0, %p62;
	selp.b32 	%r596, %r595, 0, %p8;
	selp.b32 	%r501, %r596, 0, %p54;
	// begin inline asm
	cp.async.ca.shared.global [ %r348 + 0 ], [ %rd88 + 0 ], 0x4, %r501;
	// end inline asm
	selp.b32 	%r597, 4, 0, %p63;
	selp.b32 	%r598, %r597, 0, %p8;
	selp.b32 	%r503, %r598, 0, %p54;
	// begin inline asm
	cp.async.ca.shared.global [ %r350 + 0 ], [ %rd89 + 0 ], 0x4, %r503;
	// end inline asm
	selp.b32 	%r599, 4, 0, %p64;
	selp.b32 	%r600, %r599, 0, %p8;
	selp.b32 	%r505, %r600, 0, %p54;
	// begin inline asm
	cp.async.ca.shared.global [ %r352 + 0 ], [ %rd90 + 0 ], 0x4, %r505;
	// end inline asm
	selp.b32 	%r601, 4, 0, %p65;
	selp.b32 	%r602, %r601, 0, %p8;
	selp.b32 	%r507, %r602, 0, %p54;
	// begin inline asm
	cp.async.ca.shared.global [ %r354 + 0 ], [ %rd91 + 0 ], 0x4, %r507;
	// end inline asm
	selp.b32 	%r603, 4, 0, %p66;
	selp.b32 	%r604, %r603, 0, %p8;
	selp.b32 	%r509, %r604, 0, %p54;
	// begin inline asm
	cp.async.ca.shared.global [ %r356 + 0 ], [ %rd92 + 0 ], 0x4, %r509;
	// end inline asm
	selp.b32 	%r605, 4, 0, %p67;
	selp.b32 	%r606, %r605, 0, %p8;
	selp.b32 	%r511, %r606, 0, %p54;
	// begin inline asm
	cp.async.ca.shared.global [ %r358 + 0 ], [ %rd93 + 0 ], 0x4, %r511;
	// end inline asm
	selp.b32 	%r607, 4, 0, %p68;
	selp.b32 	%r608, %r607, 0, %p8;
	selp.b32 	%r513, %r608, 0, %p54;
	// begin inline asm
	cp.async.ca.shared.global [ %r360 + 0 ], [ %rd94 + 0 ], 0x4, %r513;
	// end inline asm
	selp.b32 	%r609, 4, 0, %p69;
	selp.b32 	%r610, %r609, 0, %p8;
	selp.b32 	%r515, %r610, 0, %p54;
	// begin inline asm
	cp.async.ca.shared.global [ %r362 + 0 ], [ %rd95 + 0 ], 0x4, %r515;
	// end inline asm
	selp.b32 	%r611, 4, 0, %p70;
	selp.b32 	%r612, %r611, 0, %p8;
	selp.b32 	%r517, %r612, 0, %p54;
	// begin inline asm
	cp.async.ca.shared.global [ %r364 + 0 ], [ %rd96 + 0 ], 0x4, %r517;
	// end inline asm
	selp.b32 	%r613, 4, 0, %p71;
	selp.b32 	%r614, %r613, 0, %p8;
	selp.b32 	%r519, %r614, 0, %p54;
	// begin inline asm
	cp.async.ca.shared.global [ %r366 + 0 ], [ %rd97 + 0 ], 0x4, %r519;
	// end inline asm
	selp.b32 	%r615, 4, 0, %p72;
	selp.b32 	%r616, %r615, 0, %p8;
	selp.b32 	%r521, %r616, 0, %p54;
	// begin inline asm
	cp.async.ca.shared.global [ %r368 + 0 ], [ %rd98 + 0 ], 0x4, %r521;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd142, %rd142, 32;
	add.s32 	%r731, %r731, %r72;
	add.s32 	%r730, %r730, %r72;
	add.s32 	%r729, %r729, %r72;
	add.s32 	%r728, %r728, %r72;
	add.s32 	%r727, %r727, %r72;
	add.s32 	%r726, %r726, %r72;
	add.s32 	%r725, %r725, %r72;
	add.s32 	%r724, %r724, %r72;
	add.s32 	%r723, %r723, %r72;
	add.s32 	%r722, %r722, %r72;
	add.s32 	%r721, %r721, %r72;
	add.s32 	%r720, %r720, %r72;
	add.s32 	%r719, %r719, %r72;
	add.s32 	%r718, %r718, %r72;
	add.s32 	%r717, %r717, %r72;
	add.s32 	%r716, %r716, %r72;
	setp.ne.s64 	%p73, %rd8, %rd143;
	@%p73 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge24_crit_edge
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	shr.u32 	%r736, %r5, 6;
	.loc	1 87 33                         // implicit_gemm_kernel.py:87:33
	and.b32  	%r210, %r4, 63;
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r211, %r2, 6;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r735, %r211, %r210;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shr.u32 	%r734, %r4, 2;
	shl.b32 	%r733, %r4, 3;
	mov.b32 	%r737, 0;
	mov.u32 	%r738, %r737;
	mov.u32 	%r739, %r737;
	mov.u32 	%r740, %r737;
	mov.u32 	%r741, %r737;
	mov.u32 	%r742, %r737;
	mov.u32 	%r743, %r737;
	mov.u32 	%r744, %r737;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %._crit_edge24.loopexit
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	mov.b32 	%r737, %f114;
	mov.b32 	%r738, %f115;
	mov.b32 	%r741, %f118;
	mov.b32 	%r742, %f119;
	mov.b32 	%r739, %f116;
	mov.b32 	%r740, %f117;
	mov.b32 	%r743, %f120;
	mov.b32 	%r744, %f121;
$L__BB0_10:                             // %._crit_edge24
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r649, %r8, %r736;
	or.b32  	%r650, %r649, 2;
	or.b32  	%r651, %r649, 4;
	or.b32  	%r652, %r649, 6;
	or.b32  	%r653, %r649, 8;
	or.b32  	%r654, %r649, 10;
	or.b32  	%r655, %r649, 12;
	or.b32  	%r656, %r649, 14;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	mad.lo.s32 	%r657, %r649, %r187, %r735;
	mad.lo.s32 	%r658, %r650, %r187, %r735;
	mad.lo.s32 	%r659, %r651, %r187, %r735;
	mad.lo.s32 	%r660, %r652, %r187, %r735;
	mad.lo.s32 	%r661, %r653, %r187, %r735;
	mad.lo.s32 	%r662, %r654, %r187, %r735;
	mad.lo.s32 	%r663, %r655, %r187, %r735;
	mad.lo.s32 	%r664, %r656, %r187, %r735;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd133, %r657, 4;
	add.s64 	%rd125, %rd24, %rd133;
	mul.wide.s32 	%rd134, %r658, 4;
	add.s64 	%rd126, %rd24, %rd134;
	mul.wide.s32 	%rd135, %r659, 4;
	add.s64 	%rd127, %rd24, %rd135;
	mul.wide.s32 	%rd136, %r660, 4;
	add.s64 	%rd128, %rd24, %rd136;
	mul.wide.s32 	%rd137, %r661, 4;
	add.s64 	%rd129, %rd24, %rd137;
	mul.wide.s32 	%rd138, %r662, 4;
	add.s64 	%rd130, %rd24, %rd138;
	mul.wide.s32 	%rd139, %r663, 4;
	add.s64 	%rd131, %rd24, %rd139;
	mul.wide.s32 	%rd140, %r664, 4;
	add.s64 	%rd132, %rd24, %rd140;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p91, %r649, %r185;
	setp.lt.s32 	%p92, %r650, %r185;
	setp.lt.s32 	%p93, %r651, %r185;
	setp.lt.s32 	%p94, %r652, %r185;
	setp.lt.s32 	%p95, %r653, %r185;
	setp.lt.s32 	%p96, %r654, %r185;
	setp.lt.s32 	%p97, %r655, %r185;
	setp.lt.s32 	%p98, %r656, %r185;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p99, %r735, %r187;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p83, %p91, %p99;
	and.pred  	%p84, %p92, %p99;
	and.pred  	%p85, %p93, %p99;
	and.pred  	%p86, %p94, %p99;
	and.pred  	%p87, %p95, %p99;
	and.pred  	%p88, %p96, %p99;
	and.pred  	%p89, %p97, %p99;
	and.pred  	%p90, %p98, %p99;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shl.b32 	%r665, %r4, 4;
	and.b32  	%r666, %r665, 48;
	and.b32  	%r667, %r734, 7;
	or.b32  	%r668, %r667, %r666;
	shl.b32 	%r669, %r4, 1;
	and.b32  	%r670, %r669, 192;
	or.b32  	%r671, %r668, %r670;
	and.b32  	%r672, %r733, 504;
	or.b32  	%r673, %r672, %r736;
	shr.u32 	%r674, %r671, 1;
	and.b32  	%r675, %r674, 120;
	add.s32 	%r677, %r698, %r675;
	shl.b32 	%r678, %r671, 2;
	add.s32 	%r617, %r677, %r678;
	mov.pred 	%p75, -1;
	// begin inline asm
	@%p75 st.shared.b32 [ %r617 + 0 ], %r737;
	// end inline asm
	or.b32  	%r679, %r671, 8;
	shr.u32 	%r680, %r679, 1;
	and.b32  	%r681, %r680, 124;
	add.s32 	%r682, %r698, %r681;
	add.s32 	%r683, %r682, %r678;
	add.s32 	%r619, %r683, 32;
	// begin inline asm
	@%p75 st.shared.b32 [ %r619 + 0 ], %r738;
	// end inline asm
	or.b32  	%r684, %r671, 256;
	shr.u32 	%r685, %r684, 1;
	and.b32  	%r686, %r685, 248;
	add.s32 	%r687, %r698, %r686;
	add.s32 	%r688, %r687, %r678;
	add.s32 	%r621, %r688, 1024;
	// begin inline asm
	@%p75 st.shared.b32 [ %r621 + 0 ], %r741;
	// end inline asm
	or.b32  	%r689, %r671, 264;
	shr.u32 	%r690, %r689, 1;
	and.b32  	%r691, %r690, 252;
	add.s32 	%r692, %r698, %r691;
	add.s32 	%r693, %r692, %r678;
	add.s32 	%r623, %r693, 1056;
	// begin inline asm
	@%p75 st.shared.b32 [ %r623 + 0 ], %r742;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r694, %r672, 1;
	add.s32 	%r695, %r698, %r694;
	shl.b32 	%r696, %r673, 2;
	add.s32 	%r697, %r695, %r696;
	ld.shared.u32 	%r634, [%r697];
	ld.shared.u32 	%r636, [%r697+8];
	ld.shared.u32 	%r638, [%r697+16];
	ld.shared.u32 	%r640, [%r697+24];
	bar.sync 	0;
	// begin inline asm
	@%p75 st.shared.b32 [ %r617 + 0 ], %r739;
	// end inline asm
	// begin inline asm
	@%p75 st.shared.b32 [ %r619 + 0 ], %r740;
	// end inline asm
	// begin inline asm
	@%p75 st.shared.b32 [ %r621 + 0 ], %r743;
	// end inline asm
	// begin inline asm
	@%p75 st.shared.b32 [ %r623 + 0 ], %r744;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r642, [%r697];
	ld.shared.u32 	%r644, [%r697+8];
	ld.shared.u32 	%r646, [%r697+16];
	ld.shared.u32 	%r648, [%r697+24];
	// begin inline asm
	mov.u32 %r633, 0x0;
	@%p83 atom.global.gpu.acq_rel.add.f32 %r633, [ %rd125 + 0 ], %r634;
	// end inline asm
	// begin inline asm
	mov.u32 %r635, 0x0;
	@%p84 atom.global.gpu.acq_rel.add.f32 %r635, [ %rd126 + 0 ], %r636;
	// end inline asm
	// begin inline asm
	mov.u32 %r637, 0x0;
	@%p85 atom.global.gpu.acq_rel.add.f32 %r637, [ %rd127 + 0 ], %r638;
	// end inline asm
	// begin inline asm
	mov.u32 %r639, 0x0;
	@%p86 atom.global.gpu.acq_rel.add.f32 %r639, [ %rd128 + 0 ], %r640;
	// end inline asm
	// begin inline asm
	mov.u32 %r641, 0x0;
	@%p87 atom.global.gpu.acq_rel.add.f32 %r641, [ %rd129 + 0 ], %r642;
	// end inline asm
	// begin inline asm
	mov.u32 %r643, 0x0;
	@%p88 atom.global.gpu.acq_rel.add.f32 %r643, [ %rd130 + 0 ], %r644;
	// end inline asm
	// begin inline asm
	mov.u32 %r645, 0x0;
	@%p89 atom.global.gpu.acq_rel.add.f32 %r645, [ %rd131 + 0 ], %r646;
	// end inline asm
	// begin inline asm
	mov.u32 %r647, 0x0;
	@%p90 atom.global.gpu.acq_rel.add.f32 %r647, [ %rd132 + 0 ], %r648;
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 174                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x98:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
