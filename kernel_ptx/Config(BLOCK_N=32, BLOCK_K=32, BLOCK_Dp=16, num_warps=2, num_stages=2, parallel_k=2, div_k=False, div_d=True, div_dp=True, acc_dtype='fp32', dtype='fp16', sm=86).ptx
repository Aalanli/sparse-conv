//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<55>;
	.reg .b16 	%rs<123>;
	.reg .b32 	%r<319>;
	.reg .b64 	%rd<59>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r60, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r58, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd16, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r61, %ctaid.x;
	.loc	1 50 36                         // implicit_gemm_kernel.py:50:36
	shr.u32 	%r62, %r61, 31;
	add.s32 	%r63, %r61, %r62;
	and.b32  	%r64, %r63, -2;
	sub.s32 	%r313, %r61, %r64;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r65, %r58, 31;
$L__tmp2:
	.loc	1 49 35                         // implicit_gemm_kernel.py:49:35
	shr.s32 	%r66, %r63, 1;
	shr.s32 	%r68, %r65, 31;
	shr.u32 	%r69, %r68, 27;
	add.s32 	%r70, %r65, %r69;
	shr.s32 	%r71, %r70, 5;
	ld.param.u32 	%r72, [implicit_conv3d_kernel_param_8];
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r2, %r66, %r71;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r73, %r2, %r71;
	sub.s32 	%r74, %r66, %r73;
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r75, %r72, %r72;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r3, %r75, %r72;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r4, %tid.x;
	bfe.u32 	%r6, %r4, 2, 1;
	and.b32  	%r7, %r4, 8;
	and.b32  	%r8, %r4, 16;
	shr.u32 	%r9, %r8, 2;
	and.b32  	%r10, %r4, 32;
	and.b32  	%r12, %r4, 15;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r14, %r74, 5;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.lt.s32 	%p5, %r313, %r3;
	mov.u32 	%r310, global_smem;
	@%p5 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph13
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r59, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r57, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd15, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd14, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd17, [implicit_conv3d_kernel_param_1];
	and.b32  	%r5, %r4, 4;
	shr.u32 	%r76, %r4, 2;
	and.b32  	%r77, %r76, 10;
	or.b32  	%r78, %r6, %r77;
	or.b32  	%r11, %r78, %r9;
	and.b32  	%r13, %r4, 31;
	or.b32  	%r15, %r14, %r11;
	or.b32  	%r16, %r15, 16;
	or.b32  	%r17, %r14, %r13;
	mul.lo.s32 	%r79, %r15, %r3;
	shl.b32 	%r80, %r3, 4;
	add.s32 	%r81, %r79, %r80;
	mul.lo.s32 	%r82, %r17, %r3;
	mul.wide.s32 	%rd18, %r79, 4;
	add.s64 	%rd1, %rd17, %rd18;
	mul.wide.s32 	%rd19, %r81, 4;
	add.s64 	%rd2, %rd17, %rd19;
	mul.wide.s32 	%rd20, %r82, 4;
	add.s64 	%rd3, %rd17, %rd20;
	add.s32 	%r20, %r59, 31;
	shr.s32 	%r83, %r20, 31;
	shr.u32 	%r84, %r83, 27;
	add.s32 	%r85, %r20, %r84;
	shr.s32 	%r86, %r85, 5;
	shl.b32 	%r87, %r4, 3;
	and.b32  	%r88, %r87, 8;
	and.b32  	%r21, %r87, 24;
	bfe.u32 	%r89, %r4, 1, 3;
	shr.u32 	%r90, %r8, 1;
	or.b32  	%r91, %r89, %r90;
	shr.u32 	%r317, %r10, 1;
	or.b32  	%r23, %r91, %r317;
	shl.b32 	%r318, %r2, 4;
	mul.lo.s32 	%r25, %r3, %r59;
	or.b32  	%r26, %r318, %r88;
	setp.lt.s32 	%p6, %r26, %r60;
	setp.gt.s32 	%p7, %r20, 31;
	setp.lt.s32 	%p8, %r21, %r59;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p1, %p8, %p7;
	xor.b32  	%r92, %r87, %r4;
	and.b32  	%r93, %r92, 24;
	shl.b32 	%r94, %r93, 1;
	shl.b32 	%r95, %r11, 6;
	or.b32  	%r96, %r95, %r94;
	add.s32 	%r128, %r310, %r96;
	add.s32 	%r130, %r128, 1024;
	xor.b32  	%r98, %r88, %r7;
	shl.b32 	%r99, %r98, 1;
	shl.b32 	%r100, %r23, 5;
	or.b32  	%r101, %r100, %r99;
	add.s32 	%r102, %r310, %r101;
	add.s32 	%r132, %r102, 2048;
	add.s32 	%r103, %r86, -1;
	shl.b32 	%r104, %r4, 2;
	and.b32  	%r105, %r104, 8;
	shl.b32 	%r106, %r5, 2;
	or.b32  	%r107, %r105, %r106;
	xor.b32  	%r108, %r107, %r90;
	or.b32  	%r109, %r317, %r12;
	shl.b32 	%r110, %r109, 5;
	or.b32  	%r30, %r108, %r110;
	or.b32  	%r111, %r105, 16;
	or.b32  	%r112, %r90, %r106;
	xor.b32  	%r113, %r112, %r111;
	or.b32  	%r31, %r113, %r110;
	shl.b32 	%r114, %r5, 1;
	shl.b32 	%r115, %r13, 4;
	or.b32  	%r32, %r114, %r115;
	xor.b32  	%r33, %r32, 8;
	cvt.s64.s32 	%rd4, %r103;
	cvt.u64.u32 	%rd21, %r21;
	cvt.s64.s32 	%rd5, %r59;
	cvt.u64.u32 	%rd6, %r86;
	and.pred  	%p2, %p6, %p7;
	or.b64  	%rd7, %rd21, 32;
	mad.lo.s32 	%r116, %r313, %r59, %r317;
	add.s32 	%r117, %r116, %r90;
	add.s32 	%r118, %r117, %r89;
	add.s32 	%r312, %r118, 32;
	shl.b32 	%r35, %r59, 1;
	mad.lo.s32 	%r119, %r60, %r312, %r318;
	add.s32 	%r311, %r119, %r88;
	mul.lo.s32 	%r120, %r60, %r59;
	shl.b32 	%r37, %r120, 1;
	shl.b32 	%r38, %r60, 5;
	mov.b16 	%rs99, 0x0000;
	setp.lt.s32 	%p11, %r17, %r58;
	shl.b32 	%r211, %r30, 1;
	shl.b32 	%r212, %r31, 1;
	shl.b32 	%r217, %r33, 1;
	mov.u16 	%rs100, %rs99;
	mov.u16 	%rs101, %rs99;
	mov.u16 	%rs102, %rs99;
	mov.u16 	%rs103, %rs99;
	mov.u16 	%rs104, %rs99;
	mov.u16 	%rs105, %rs99;
	mov.u16 	%rs106, %rs99;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s32 	%r313, %r313, 2;
	add.s32 	%r312, %r312, %r35;
	add.s32 	%r311, %r311, %r37;
	setp.lt.s32 	%p29, %r313, %r3;
	@%p29 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p10, %r16, %r58;
	setp.lt.s32 	%p9, %r15, %r58;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	mul.wide.s32 	%rd25, %r313, 4;
	add.s64 	%rd22, %rd1, %rd25;
	add.s64 	%rd23, %rd2, %rd25;
	add.s64 	%rd24, %rd3, %rd25;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r121, 0xffffffffffffffff;
	@%p9 ld.global.b32 { %r121 }, [ %rd22 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r122, 0xffffffffffffffff;
	@%p10 ld.global.b32 { %r122 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r123, 0xffffffffffffffff;
	@%p11 ld.global.b32 { %r123 }, [ %rd24 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p14, %r123, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p17, %r123, %r57;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p18, %p14, %p17;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r124, 1, 0, %p18;
	mov.b32 	%r125, -1;
	redux.sync.or.b32 %r126, %r124, %r125;
	and.b32  	%r127, %r126, 1;
	setp.eq.b32 	%p19, %r127, 1;
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p20, %p19;
	@%p20 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.gt.s32 	%p12, %r121, -1;
	setp.gt.s32 	%p13, %r122, -1;
	setp.lt.s32 	%p15, %r121, %r57;
	setp.lt.s32 	%p16, %r122, %r57;
	and.pred  	%p3, %p12, %p15;
	and.pred  	%p4, %p13, %p16;
	setp.lt.s32 	%p21, %r20, 32;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r44, %r121, %r59;
	mul.lo.s32 	%r45, %r122, %r59;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r134, %r44, %r21;
	add.s32 	%r135, %r45, %r21;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd29, %r134, 2;
	add.s64 	%rd26, %rd14, %rd29;
	mul.wide.s32 	%rd30, %r135, 2;
	add.s64 	%rd27, %rd14, %rd30;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	mad.lo.s32 	%r136, %r313, %r59, %r23;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r137, %r136, %r60, %r26;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd31, %r137, 2;
	add.s64 	%rd28, %rd15, %rd31;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p22, %r136, %r25;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	selp.b32 	%r138, 16, 0, %p1;
	selp.b32 	%r129, %r138, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r128 + 0 ], [ %rd26 + 0 ], 0x10, %r129;
	// end inline asm
	selp.b32 	%r131, %r138, 0, %p4;
	// begin inline asm
	cp.async.cg.shared.global [ %r130 + 0 ], [ %rd27 + 0 ], 0x10, %r131;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r139, 16, 0, %p2;
	selp.b32 	%r133, %r139, 0, %p22;
	// begin inline asm
	cp.async.cg.shared.global [ %r132 + 0 ], [ %rd28 + 0 ], 0x10, %r133;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p21 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	cvt.u64.u32 	%rd8, %r45;
	cvt.u64.u32 	%rd9, %r44;
	mov.b32 	%r316, -1;
	mov.b64 	%rd58, 0;
	mov.u32 	%r314, %r311;
	mov.u32 	%r315, %r312;
	mov.u64 	%rd57, %rd7;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p24, %rd58, %rd4;
	add.s32 	%r207, %r316, 1;
	setp.gt.u32 	%p25, %r316, 2147483646;
	selp.b32 	%r316, %r207, 0, %p25;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r208, %r316, 11;
	add.s32 	%r210, %r310, %r208;
	add.s32 	%r145, %r210, %r211;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r165, %r166, %r167, %r168}, [%r145];
	// end inline asm
	add.s32 	%r150, %r210, %r212;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r185, %r186, %r187, %r188}, [%r150];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	shl.b32 	%r213, %r316, 10;
	add.s32 	%r214, %r310, %r213;
	add.s32 	%r215, %r214, 2048;
	shl.b32 	%r216, %r32, 1;
	add.s32 	%r155, %r215, %r216;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r151, %r152, %r153, %r154}, [%r155];
	// end inline asm
	add.s32 	%r160, %r215, %r217;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r156, %r157, %r158, %r159}, [%r160];
	// end inline asm
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	mov.b32 	%r181, {%rs99, %rs100};
	mov.b32 	%r182, {%rs101, %rs102};
	mov.b32 	%r191, {%rs103, %rs104};
	mov.b32 	%r192, {%rs105, %rs106};
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r181, %r182 }, { %r165, %r166, %r167, %r168 }, { %r151, %r152 }, { %r181, %r182 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r191, %r192 }, { %r165, %r166, %r167, %r168 }, { %r156, %r157 }, { %r191, %r192 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r181, %r182 }, { %r185, %r186, %r187, %r188 }, { %r153, %r154 }, { %r181, %r182 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r191, %r192 }, { %r185, %r186, %r187, %r188 }, { %r158, %r159 }, { %r191, %r192 };
	// end inline asm
	mov.b32 	{%rs99, %rs100}, %r181;
	mov.b32 	{%rs101, %rs102}, %r182;
	mov.b32 	{%rs103, %rs104}, %r191;
	mov.b32 	{%rs105, %rs106}, %r192;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd58, %rd58, 1;
	.loc	1 69 89                         // implicit_gemm_kernel.py:69:89
	add.s64 	%rd36, %rd9, %rd57;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd37, %rd8, %rd57;
	cvt.u32.u64 	%r218, %rd36;
	mul.wide.s32 	%rd38, %r218, 2;
	add.s64 	%rd33, %rd14, %rd38;
	cvt.u32.u64 	%r219, %rd37;
	mul.wide.s32 	%rd39, %r219, 2;
	add.s64 	%rd34, %rd14, %rd39;
	.loc	1 70 112                        // implicit_gemm_kernel.py:70:112
	setp.lt.s64 	%p26, %rd57, %rd5;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd40, %r314, 2;
	add.s64 	%rd35, %rd15, %rd40;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p27, %r315, %r25;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r220, 16, 0, %p26;
	selp.b32 	%r221, %r220, 0, %p3;
	selp.b32 	%r202, %r221, 0, %p24;
	// begin inline asm
	cp.async.cg.shared.global [ %r128 + 0 ], [ %rd33 + 0 ], 0x10, %r202;
	// end inline asm
	selp.b32 	%r222, %r220, 0, %p4;
	selp.b32 	%r204, %r222, 0, %p24;
	// begin inline asm
	cp.async.cg.shared.global [ %r130 + 0 ], [ %rd34 + 0 ], 0x10, %r204;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r223, 16, 0, %p27;
	selp.b32 	%r224, %r223, 0, %p6;
	selp.b32 	%r206, %r224, 0, %p24;
	// begin inline asm
	cp.async.cg.shared.global [ %r132 + 0 ], [ %rd35 + 0 ], 0x10, %r206;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd57, %rd57, 32;
	add.s32 	%r315, %r315, 32;
	add.s32 	%r314, %r314, %r38;
	setp.ne.s64 	%p28, %rd6, %rd58;
	@%p28 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge14_crit_edge
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r318, %r2, 4;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shr.u32 	%r317, %r10, 1;
	mov.b16 	%rs99, 0;
	mov.u16 	%rs100, %rs99;
	mov.u16 	%rs101, %rs99;
	mov.u16 	%rs102, %rs99;
	mov.u16 	%rs103, %rs99;
	mov.u16 	%rs104, %rs99;
	mov.u16 	%rs105, %rs99;
	mov.u16 	%rs106, %rs99;
$L__BB0_9:                              // %._crit_edge14
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	shr.u32 	%r233, %r7, 2;
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	bfe.u32 	%r234, %r4, 4, 2;
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r235, %r234, %r14;
	or.b32  	%r236, %r235, 4;
	or.b32  	%r237, %r235, 8;
	or.b32  	%r238, %r235, 12;
	or.b32  	%r239, %r235, 16;
	or.b32  	%r240, %r235, 20;
	or.b32  	%r241, %r235, 24;
	or.b32  	%r242, %r235, 28;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r243, %r235, %r60;
	shl.b32 	%r244, %r60, 2;
	add.s32 	%r245, %r243, %r244;
	add.s32 	%r246, %r245, %r244;
	add.s32 	%r247, %r246, %r244;
	add.s32 	%r248, %r247, %r244;
	add.s32 	%r249, %r248, %r244;
	add.s32 	%r250, %r249, %r244;
	add.s32 	%r251, %r250, %r244;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r252, %r318, %r12;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r253, %r252, %r243;
	add.s32 	%r254, %r252, %r245;
	add.s32 	%r255, %r252, %r246;
	add.s32 	%r256, %r252, %r247;
	add.s32 	%r257, %r252, %r248;
	add.s32 	%r258, %r252, %r249;
	add.s32 	%r259, %r252, %r250;
	add.s32 	%r260, %r252, %r251;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd49, %r253, 2;
	add.s64 	%rd41, %rd16, %rd49;
	mul.wide.s32 	%rd50, %r254, 2;
	add.s64 	%rd42, %rd16, %rd50;
	mul.wide.s32 	%rd51, %r255, 2;
	add.s64 	%rd43, %rd16, %rd51;
	mul.wide.s32 	%rd52, %r256, 2;
	add.s64 	%rd44, %rd16, %rd52;
	mul.wide.s32 	%rd53, %r257, 2;
	add.s64 	%rd45, %rd16, %rd53;
	mul.wide.s32 	%rd54, %r258, 2;
	add.s64 	%rd46, %rd16, %rd54;
	mul.wide.s32 	%rd55, %r259, 2;
	add.s64 	%rd47, %rd16, %rd55;
	mul.wide.s32 	%rd56, %r260, 2;
	add.s64 	%rd48, %rd16, %rd56;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p46, %r235, %r58;
	setp.lt.s32 	%p47, %r236, %r58;
	setp.lt.s32 	%p48, %r237, %r58;
	setp.lt.s32 	%p49, %r238, %r58;
	setp.lt.s32 	%p50, %r239, %r58;
	setp.lt.s32 	%p51, %r240, %r58;
	setp.lt.s32 	%p52, %r241, %r58;
	setp.lt.s32 	%p53, %r242, %r58;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p54, %r252, %r60;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p38, %p46, %p54;
	and.pred  	%p39, %p47, %p54;
	and.pred  	%p40, %p48, %p54;
	and.pred  	%p41, %p49, %p54;
	and.pred  	%p42, %p50, %p54;
	and.pred  	%p43, %p51, %p54;
	and.pred  	%p44, %p52, %p54;
	and.pred  	%p45, %p53, %p54;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shl.b32 	%r261, %r4, 6;
	and.b32  	%r262, %r261, 192;
	or.b32  	%r263, %r317, %r233;
	or.b32  	%r264, %r263, %r262;
	or.b32  	%r265, %r264, %r6;
	or.b32  	%r266, %r265, %r9;
	shl.b32 	%r267, %r4, 5;
	and.b32  	%r268, %r267, 480;
	or.b32  	%r269, %r234, %r268;
	shr.u32 	%r270, %r262, 4;
	add.s32 	%r272, %r310, %r270;
	shl.b32 	%r273, %r266, 1;
	add.s32 	%r225, %r272, %r273;
	mov.pred 	%p30, -1;
	// begin inline asm
	@%p30 st.shared.b16 [ %r225 + 0 ], %rs99;
	// end inline asm
	or.b32  	%r274, %r266, 32;
	shr.u32 	%r275, %r274, 4;
	and.b32  	%r276, %r275, 268435454;
	add.s32 	%r277, %r310, %r276;
	shl.b32 	%r278, %r274, 1;
	add.s32 	%r226, %r277, %r278;
	// begin inline asm
	@%p30 st.shared.b16 [ %r226 + 0 ], %rs100;
	// end inline asm
	xor.b32  	%r279, %r266, 8;
	shl.b32 	%r280, %r279, 1;
	add.s32 	%r227, %r272, %r280;
	// begin inline asm
	@%p30 st.shared.b16 [ %r227 + 0 ], %rs101;
	// end inline asm
	xor.b32  	%r281, %r266, 40;
	shr.u32 	%r282, %r281, 4;
	and.b32  	%r283, %r282, 268435454;
	add.s32 	%r284, %r310, %r283;
	shl.b32 	%r285, %r281, 1;
	add.s32 	%r228, %r284, %r285;
	// begin inline asm
	@%p30 st.shared.b16 [ %r228 + 0 ], %rs102;
	// end inline asm
	or.b32  	%r286, %r266, 256;
	shr.u32 	%r287, %r286, 4;
	and.b32  	%r288, %r287, 268435454;
	add.s32 	%r289, %r310, %r288;
	shl.b32 	%r290, %r286, 1;
	add.s32 	%r229, %r289, %r290;
	// begin inline asm
	@%p30 st.shared.b16 [ %r229 + 0 ], %rs103;
	// end inline asm
	or.b32  	%r291, %r266, 288;
	shr.u32 	%r292, %r291, 4;
	and.b32  	%r293, %r292, 268435454;
	add.s32 	%r294, %r310, %r293;
	shl.b32 	%r295, %r291, 1;
	add.s32 	%r230, %r294, %r295;
	// begin inline asm
	@%p30 st.shared.b16 [ %r230 + 0 ], %rs104;
	// end inline asm
	xor.b32  	%r296, %r266, 264;
	shr.u32 	%r297, %r296, 4;
	and.b32  	%r298, %r297, 268435454;
	add.s32 	%r299, %r310, %r298;
	shl.b32 	%r300, %r296, 1;
	add.s32 	%r231, %r299, %r300;
	// begin inline asm
	@%p30 st.shared.b16 [ %r231 + 0 ], %rs105;
	// end inline asm
	xor.b32  	%r301, %r266, 296;
	shr.u32 	%r302, %r301, 4;
	and.b32  	%r303, %r302, 268435454;
	add.s32 	%r304, %r310, %r303;
	shl.b32 	%r305, %r301, 1;
	add.s32 	%r232, %r304, %r305;
	// begin inline asm
	@%p30 st.shared.b16 [ %r232 + 0 ], %rs106;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r306, %r268, 4;
	add.s32 	%r307, %r310, %r306;
	shl.b32 	%r308, %r269, 1;
	add.s32 	%r309, %r307, %r308;
	ld.shared.u16 	%rs68, [%r309];
	ld.shared.u16 	%rs70, [%r309+8];
	ld.shared.u16 	%rs72, [%r309+16];
	ld.shared.u16 	%rs74, [%r309+24];
	ld.shared.u16 	%rs76, [%r309+32];
	ld.shared.u16 	%rs78, [%r309+40];
	ld.shared.u16 	%rs80, [%r309+48];
	ld.shared.u16 	%rs82, [%r309+56];
	// begin inline asm
	mov.u16 %rs67, 0x0;
	@%p38 atom.global.gpu.acq_rel.add.noftz.f16 %rs67, [ %rd41 + 0 ], %rs68;
	// end inline asm
	// begin inline asm
	mov.u16 %rs69, 0x0;
	@%p39 atom.global.gpu.acq_rel.add.noftz.f16 %rs69, [ %rd42 + 0 ], %rs70;
	// end inline asm
	// begin inline asm
	mov.u16 %rs71, 0x0;
	@%p40 atom.global.gpu.acq_rel.add.noftz.f16 %rs71, [ %rd43 + 0 ], %rs72;
	// end inline asm
	// begin inline asm
	mov.u16 %rs73, 0x0;
	@%p41 atom.global.gpu.acq_rel.add.noftz.f16 %rs73, [ %rd44 + 0 ], %rs74;
	// end inline asm
	// begin inline asm
	mov.u16 %rs75, 0x0;
	@%p42 atom.global.gpu.acq_rel.add.noftz.f16 %rs75, [ %rd45 + 0 ], %rs76;
	// end inline asm
	// begin inline asm
	mov.u16 %rs77, 0x0;
	@%p43 atom.global.gpu.acq_rel.add.noftz.f16 %rs77, [ %rd46 + 0 ], %rs78;
	// end inline asm
	// begin inline asm
	mov.u16 %rs79, 0x0;
	@%p44 atom.global.gpu.acq_rel.add.noftz.f16 %rs79, [ %rd47 + 0 ], %rs80;
	// end inline asm
	// begin inline asm
	mov.u16 %rs81, 0x0;
	@%p45 atom.global.gpu.acq_rel.add.noftz.f16 %rs81, [ %rd48 + 0 ], %rs82;
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 150                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x8f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
