//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<142>;
	.reg .b16 	%rs<25>;
	.reg .b32 	%r<945>;
	.reg .f32 	%f<546>;
	.reg .b64 	%rd<165>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r150, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r148, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd36, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r151, %ctaid.x;
	.loc	1 50 36                         // implicit_gemm_kernel.py:50:36
	shr.u32 	%r152, %r151, 31;
	add.s32 	%r153, %r151, %r152;
	and.b32  	%r154, %r153, -2;
	sub.s32 	%r906, %r151, %r154;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r155, %r148, 127;
$L__tmp2:
	.loc	1 49 35                         // implicit_gemm_kernel.py:49:35
	shr.s32 	%r156, %r153, 1;
	shr.s32 	%r158, %r155, 31;
	shr.u32 	%r159, %r158, 25;
	add.s32 	%r160, %r155, %r159;
	shr.s32 	%r161, %r160, 7;
	ld.param.u32 	%r162, [implicit_conv3d_kernel_param_8];
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r2, %r156, %r161;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r163, %r2, %r161;
	sub.s32 	%r164, %r156, %r163;
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r165, %r162, %r162;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r3, %r165, %r162;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r4, %tid.x;
	and.b32  	%r5, %r4, 31;
	and.b32  	%r6, %r4, 16;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r8, %r164, 7;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.lt.s32 	%p13, %r906, %r3;
	mov.u32 	%r905, global_smem;
	@%p13 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph18
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r149, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r147, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd35, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd34, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd37, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	and.b32  	%r7, %r4, 127;
	or.b32  	%r9, %r8, %r7;
	mul.lo.s32 	%r166, %r9, %r3;
	mul.wide.s32 	%rd38, %r166, 4;
	add.s64 	%rd1, %rd37, %rd38;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r168, %r4, 15;
	and.b32  	%r169, %r4, 4;
	and.b32  	%r170, %r4, 2;
	and.b32  	%r171, %r4, 1;
	bfe.u32 	%r15, %r4, 3, 4;
	shl.b32 	%r172, %r7, 2;
	add.s32 	%r236, %r905, %r172;
	shl.b32 	%r174, %r15, 2;
	add.s32 	%r17, %r905, %r174;
	or.b32  	%r18, %r15, 16;
	bfe.u32 	%r908, %r4, 5, 2;
	add.s32 	%r238, %r905, %r908;
	setp.lt.s32 	%p14, %r4, 4;
	add.s32 	%r239, %r905, %r4;
	and.b32  	%r175, %r4, 3;
	setp.eq.s32 	%p15, %r175, 0;
	and.pred  	%p23, %p14, %p15;
	add.s32 	%r22, %r149, 31;
	shr.s32 	%r176, %r22, 31;
	shr.u32 	%r177, %r176, 27;
	add.s32 	%r178, %r22, %r177;
	shr.s32 	%r179, %r178, 5;
	shl.b32 	%r180, %r171, 2;
	shl.b32 	%r181, %r170, 2;
	or.b32  	%r182, %r180, %r181;
	shl.b32 	%r183, %r169, 2;
	or.b32  	%r23, %r182, %r183;
	add.s32 	%r251, %r905, %r7;
	add.s32 	%r25, %r905, %r15;
	shl.b32 	%r912, %r2, 5;
	mul.lo.s32 	%r27, %r3, %r149;
	or.b32  	%r28, %r912, %r23;
	setp.lt.s32 	%p16, %r28, %r150;
	setp.gt.s32 	%p17, %r22, 31;
	setp.lt.s32 	%p18, %r23, %r149;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p2, %p18, %p17;
	shr.u32 	%r909, %r4, 1;
	and.b32  	%r184, %r909, 16;
	and.b32  	%r185, %r909, 28;
	xor.b32  	%r186, %r185, %r23;
	shl.b32 	%r187, %r15, 5;
	or.b32  	%r188, %r186, %r187;
	shl.b32 	%r189, %r188, 2;
	add.s32 	%r252, %r905, %r189;
	add.s32 	%r254, %r252, 2048;
	or.b32  	%r190, %r189, 4096;
	add.s32 	%r256, %r905, %r190;
	or.b32  	%r191, %r189, 6144;
	add.s32 	%r258, %r905, %r191;
	or.b32  	%r192, %r189, 8192;
	add.s32 	%r260, %r905, %r192;
	or.b32  	%r193, %r189, 10240;
	add.s32 	%r262, %r905, %r193;
	or.b32  	%r194, %r189, 12288;
	add.s32 	%r264, %r905, %r194;
	or.b32  	%r195, %r189, 14336;
	add.s32 	%r266, %r905, %r195;
	and.b32  	%r196, %r4, 24;
	xor.b32  	%r197, %r23, %r196;
	or.b32  	%r198, %r197, %r187;
	shl.b32 	%r199, %r198, 2;
	add.s32 	%r200, %r905, %r199;
	add.s32 	%r268, %r200, 16384;
	add.s32 	%r270, %r200, 18432;
	add.s32 	%r201, %r179, -1;
	shr.u32 	%r910, %r6, 2;
	xor.b32  	%r41, %r23, %r910;
	and.b32  	%r202, %r909, 32;
	or.b32  	%r203, %r168, %r202;
	or.b32  	%r204, %r203, %r184;
	shl.b32 	%r42, %r204, 5;
	or.b32  	%r43, %r41, %r42;
	or.b32  	%r205, %r180, 8;
	xor.b32  	%r206, %r205, %r181;
	or.b32  	%r207, %r206, %r183;
	xor.b32  	%r44, %r207, %r910;
	or.b32  	%r45, %r44, %r42;
	or.b32  	%r208, %r182, 16;
	or.b32  	%r209, %r910, %r183;
	xor.b32  	%r46, %r209, %r208;
	or.b32  	%r47, %r46, %r42;
	or.b32  	%r210, %r180, 24;
	or.b32  	%r211, %r183, %r181;
	or.b32  	%r212, %r211, %r910;
	xor.b32  	%r48, %r212, %r210;
	or.b32  	%r49, %r48, %r42;
	shl.b32 	%r213, %r171, 3;
	shl.b32 	%r214, %r170, 3;
	bfe.u32 	%r215, %r4, 2, 1;
	shr.u32 	%r911, %r4, 2;
	and.b32  	%r216, %r911, 2;
	or.b32  	%r217, %r216, %r215;
	or.b32  	%r218, %r217, %r214;
	or.b32  	%r219, %r218, %r213;
	or.b32  	%r51, %r219, %r910;
	shl.b32 	%r220, %r4, 5;
	and.b32  	%r52, %r220, 96;
	or.b32  	%r53, %r51, %r52;
	xor.b32  	%r54, %r51, 8;
	or.b32  	%r221, %r213, 16;
	xor.b32  	%r222, %r221, %r214;
	or.b32  	%r223, %r215, %r222;
	or.b32  	%r224, %r223, %r216;
	or.b32  	%r55, %r224, %r910;
	xor.b32  	%r56, %r51, 24;
	cvt.s64.s32 	%rd2, %r201;
	cvt.s64.s32 	%rd3, %r149;
	cvt.u64.u32 	%rd4, %r179;
	and.pred  	%p3, %p16, %p17;
	or.b32  	%r225, %r211, %r180;
	cvt.u64.u32 	%rd5, %r225;
	mad.lo.s32 	%r226, %r906, %r149, %r15;
	cvt.u64.u32 	%rd160, %r226;
	shl.b32 	%r227, %r149, 1;
	cvt.u64.u32 	%rd7, %r227;
	add.s32 	%r228, %r226, 48;
	mad.lo.s32 	%r229, %r150, %r228, %r912;
	cvt.u64.u32 	%rd159, %r229;
	mul.lo.s32 	%r230, %r150, %r149;
	shl.b32 	%r231, %r230, 1;
	cvt.u64.u32 	%rd9, %r231;
	shl.b32 	%r232, %r150, 5;
	cvt.u64.u32 	%rd10, %r232;
	add.s32 	%r233, %r226, 32;
	mad.lo.s32 	%r234, %r150, %r233, %r912;
	cvt.u64.u32 	%rd158, %r234;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	or.b32  	%r57, %r225, 32;
	mov.f32 	%f450, 0f00000000;
	shl.b32 	%r559, %r43, 2;
	shl.b32 	%r560, %r45, 2;
	shl.b32 	%r561, %r47, 2;
	shl.b32 	%r562, %r49, 2;
	shl.b32 	%r578, %r53, 2;
	shl.b32 	%r583, %r54, 2;
	shl.b32 	%r587, %r55, 2;
	shl.b32 	%r590, %r56, 2;
	mov.f32 	%f451, %f450;
	mov.f32 	%f452, %f450;
	mov.f32 	%f453, %f450;
	mov.f32 	%f454, %f450;
	mov.f32 	%f455, %f450;
	mov.f32 	%f456, %f450;
	mov.f32 	%f457, %f450;
	mov.f32 	%f458, %f450;
	mov.f32 	%f459, %f450;
	mov.f32 	%f460, %f450;
	mov.f32 	%f461, %f450;
	mov.f32 	%f462, %f450;
	mov.f32 	%f463, %f450;
	mov.f32 	%f464, %f450;
	mov.f32 	%f465, %f450;
	mov.f32 	%f466, %f450;
	mov.f32 	%f467, %f450;
	mov.f32 	%f468, %f450;
	mov.f32 	%f469, %f450;
	mov.f32 	%f470, %f450;
	mov.f32 	%f471, %f450;
	mov.f32 	%f472, %f450;
	mov.f32 	%f473, %f450;
	mov.f32 	%f474, %f450;
	mov.f32 	%f475, %f450;
	mov.f32 	%f476, %f450;
	mov.f32 	%f477, %f450;
	mov.f32 	%f478, %f450;
	mov.f32 	%f479, %f450;
	mov.f32 	%f480, %f450;
	mov.f32 	%f481, %f450;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s32 	%r906, %r906, 2;
	add.s64 	%rd160, %rd160, %rd7;
	add.s64 	%rd159, %rd159, %rd9;
	add.s64 	%rd158, %rd158, %rd9;
	setp.lt.s32 	%p44, %r906, %r3;
	@%p44 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	setp.eq.s32 	%p21, %r5, 0;
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p19, %r9, %r148;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	mul.wide.s32 	%rd40, %r906, 4;
	add.s64 	%rd39, %rd1, %rd40;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r237, 0xffffffffffffffff;
	@%p19 ld.global.b32 { %r237 }, [ %rd39 + 0 ];
	// end inline asm
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	bar.sync 	0;
	mov.pred 	%p20, -1;
	// begin inline asm
	@%p20 st.shared.b32 [ %r236 + 0 ], %r237;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r59, [%r17];
	ld.shared.u32 	%r60, [%r17+64];
	ld.shared.u32 	%r61, [%r17+128];
	ld.shared.u32 	%r62, [%r17+192];
	ld.shared.u32 	%r63, [%r17+256];
	ld.shared.u32 	%r64, [%r17+320];
	ld.shared.u32 	%r65, [%r17+384];
	ld.shared.u32 	%r66, [%r17+448];
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p24, %r237, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p25, %r237, %r147;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p4, %p24, %p25;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	bar.sync 	0;
	selp.u32 	%r241, 1, 0, %p4;
	mov.b32 	%r242, -1;
	redux.sync.or.b32 %r243, %r241, %r242;
	cvt.u16.u32 	%rs4, %r243;
	and.b16  	%rs1, %rs4, 1;
	// begin inline asm
	@%p21 st.shared.b8 [ %r238 + 0 ], %rs1;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p14 ld.shared.b8 %rs2, [ %r239 + 0 ];
	// end inline asm
	cvt.u32.u16 	%r244, %rs2;
	and.b16  	%rs5, %rs2, 1;
	setp.eq.b16 	%p26, %rs5, 1;
	and.b32  	%r245, %r244, 1;
	shfl.sync.bfly.b32	%r246, %r245, 2, 31, -1;
	and.b32  	%r247, %r246, 1;
	setp.eq.b32 	%p27, %r247, 1;
$L__tmp3:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p28, %p26, %p27;
$L__tmp4:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r248, 1, 0, %p28;
	shfl.sync.bfly.b32	%r249, %r248, 1, 31, -1;
	and.b32  	%r250, %r249, 1;
	setp.eq.b32 	%p29, %r250, 1;
$L__tmp5:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p30, %p28, %p29;
$L__tmp6:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u16 	%rs3, 1, 0, %p30;
	// begin inline asm
	@%p23 st.shared.b8 [ %r239 + 0 ], %rs3;
	// end inline asm
	bar.sync 	0;
	ld.shared.u8 	%rs6, [global_smem];
	and.b16  	%rs7, %rs6, 1;
	setp.eq.b16 	%p31, %rs7, 1;
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p32, %p31;
	@%p32 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.lt.s32 	%p34, %r22, 32;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	mul.lo.s32 	%r272, %r906, %r149;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r67, %r59, %r149;
	mul.lo.s32 	%r68, %r60, %r149;
	mul.lo.s32 	%r69, %r61, %r149;
	mul.lo.s32 	%r70, %r62, %r149;
	mul.lo.s32 	%r71, %r63, %r149;
	mul.lo.s32 	%r72, %r64, %r149;
	mul.lo.s32 	%r73, %r65, %r149;
	mul.lo.s32 	%r74, %r66, %r149;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r273, %r67, %r23;
	add.s32 	%r274, %r68, %r23;
	add.s32 	%r275, %r69, %r23;
	add.s32 	%r276, %r70, %r23;
	add.s32 	%r277, %r71, %r23;
	add.s32 	%r278, %r72, %r23;
	add.s32 	%r279, %r73, %r23;
	add.s32 	%r280, %r74, %r23;
	.loc	1 70 64                         // implicit_gemm_kernel.py:70:64
	bar.sync 	0;
	selp.u16 	%rs8, 1, 0, %p4;
	// begin inline asm
	@%p20 st.shared.b8 [ %r251 + 0 ], %rs8;
	// end inline asm
	bar.sync 	0;
	ld.shared.u8 	%rs9, [%r25];
	ld.shared.u8 	%rs10, [%r25+16];
	ld.shared.u8 	%rs11, [%r25+32];
	ld.shared.u8 	%rs12, [%r25+48];
	ld.shared.u8 	%rs13, [%r25+64];
	ld.shared.u8 	%rs14, [%r25+80];
	ld.shared.u8 	%rs15, [%r25+96];
	ld.shared.u8 	%rs16, [%r25+112];
	and.b16  	%rs17, %rs9, 1;
	setp.eq.b16 	%p5, %rs17, 1;
	and.b16  	%rs18, %rs10, 1;
	setp.eq.b16 	%p6, %rs18, 1;
	and.b16  	%rs19, %rs11, 1;
	setp.eq.b16 	%p7, %rs19, 1;
	and.b16  	%rs20, %rs12, 1;
	setp.eq.b16 	%p8, %rs20, 1;
	and.b16  	%rs21, %rs13, 1;
	setp.eq.b16 	%p9, %rs21, 1;
	and.b16  	%rs22, %rs14, 1;
	setp.eq.b16 	%p10, %rs22, 1;
	and.b16  	%rs23, %rs15, 1;
	setp.eq.b16 	%p11, %rs23, 1;
	and.b16  	%rs24, %rs16, 1;
	setp.eq.b16 	%p12, %rs24, 1;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd51, %r273, 4;
	add.s64 	%rd41, %rd34, %rd51;
	mul.wide.s32 	%rd52, %r274, 4;
	add.s64 	%rd42, %rd34, %rd52;
	mul.wide.s32 	%rd53, %r275, 4;
	add.s64 	%rd43, %rd34, %rd53;
	mul.wide.s32 	%rd54, %r276, 4;
	add.s64 	%rd44, %rd34, %rd54;
	mul.wide.s32 	%rd55, %r277, 4;
	add.s64 	%rd45, %rd34, %rd55;
	mul.wide.s32 	%rd56, %r278, 4;
	add.s64 	%rd46, %rd34, %rd56;
	mul.wide.s32 	%rd57, %r279, 4;
	add.s64 	%rd47, %rd34, %rd57;
	mul.wide.s32 	%rd58, %r280, 4;
	add.s64 	%rd48, %rd34, %rd58;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s32 	%r281, %r272, %r15;
	add.s32 	%r282, %r272, %r18;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r283, %r281, %r150, %r28;
	mad.lo.s32 	%r284, %r282, %r150, %r28;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd59, %r283, 4;
	add.s64 	%rd49, %rd35, %rd59;
	mul.wide.s32 	%rd60, %r284, 4;
	add.s64 	%rd50, %rd35, %rd60;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p35, %r281, %r27;
	setp.lt.s32 	%p36, %r282, %r27;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r285, 16, 0, %p5;
	selp.b32 	%r253, %r285, 0, %p2;
	// begin inline asm
	cp.async.cg.shared.global [ %r252 + 0 ], [ %rd41 + 0 ], 0x10, %r253;
	// end inline asm
	selp.b32 	%r286, 16, 0, %p6;
	selp.b32 	%r255, %r286, 0, %p2;
	// begin inline asm
	cp.async.cg.shared.global [ %r254 + 0 ], [ %rd42 + 0 ], 0x10, %r255;
	// end inline asm
	selp.b32 	%r287, 16, 0, %p7;
	selp.b32 	%r257, %r287, 0, %p2;
	// begin inline asm
	cp.async.cg.shared.global [ %r256 + 0 ], [ %rd43 + 0 ], 0x10, %r257;
	// end inline asm
	selp.b32 	%r288, 16, 0, %p8;
	selp.b32 	%r259, %r288, 0, %p2;
	// begin inline asm
	cp.async.cg.shared.global [ %r258 + 0 ], [ %rd44 + 0 ], 0x10, %r259;
	// end inline asm
	selp.b32 	%r289, 16, 0, %p9;
	selp.b32 	%r261, %r289, 0, %p2;
	// begin inline asm
	cp.async.cg.shared.global [ %r260 + 0 ], [ %rd45 + 0 ], 0x10, %r261;
	// end inline asm
	selp.b32 	%r290, 16, 0, %p10;
	selp.b32 	%r263, %r290, 0, %p2;
	// begin inline asm
	cp.async.cg.shared.global [ %r262 + 0 ], [ %rd46 + 0 ], 0x10, %r263;
	// end inline asm
	selp.b32 	%r291, 16, 0, %p11;
	selp.b32 	%r265, %r291, 0, %p2;
	// begin inline asm
	cp.async.cg.shared.global [ %r264 + 0 ], [ %rd47 + 0 ], 0x10, %r265;
	// end inline asm
	selp.b32 	%r292, 16, 0, %p12;
	selp.b32 	%r267, %r292, 0, %p2;
	// begin inline asm
	cp.async.cg.shared.global [ %r266 + 0 ], [ %rd48 + 0 ], 0x10, %r267;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r293, 16, 0, %p3;
	selp.b32 	%r269, %r293, 0, %p35;
	// begin inline asm
	cp.async.cg.shared.global [ %r268 + 0 ], [ %rd49 + 0 ], 0x10, %r269;
	// end inline asm
	selp.b32 	%r271, %r293, 0, %p36;
	// begin inline asm
	cp.async.cg.shared.global [ %r270 + 0 ], [ %rd50 + 0 ], 0x10, %r271;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p34 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r295, %r57, %r74;
	cvt.u64.u32 	%rd15, %r295;
	add.s32 	%r296, %r57, %r73;
	cvt.u64.u32 	%rd16, %r296;
	add.s32 	%r297, %r57, %r72;
	cvt.u64.u32 	%rd17, %r297;
	add.s32 	%r298, %r57, %r71;
	cvt.u64.u32 	%rd18, %r298;
	add.s32 	%r299, %r57, %r70;
	cvt.u64.u32 	%rd19, %r299;
	add.s32 	%r300, %r57, %r69;
	cvt.u64.u32 	%rd20, %r300;
	add.s32 	%r301, %r57, %r68;
	cvt.u64.u32 	%rd21, %r301;
	add.s32 	%r302, %r57, %r67;
	cvt.u64.u32 	%rd22, %r302;
	mov.b32 	%r907, -1;
	mov.b64 	%rd163, 0;
	mov.u64 	%rd161, %rd158;
	mov.u64 	%rd162, %rd159;
	mov.u64 	%rd164, %rd163;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p38, %rd164, %rd2;
	add.s32 	%r555, %r907, 1;
	setp.gt.u32 	%p39, %r907, 2147483646;
	selp.b32 	%r907, %r555, 0, %p39;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r556, %r907, 14;
	add.s32 	%r558, %r905, %r556;
	add.s32 	%r307, %r558, %r559;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r343, %r344, %r345, %r346}, [%r307];
	// end inline asm
	add.s32 	%r312, %r558, %r560;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r391, %r392, %r393, %r394}, [%r312];
	// end inline asm
	add.s32 	%r317, %r558, %r561;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r439, %r440, %r441, %r442}, [%r317];
	// end inline asm
	add.s32 	%r322, %r558, %r562;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r487, %r488, %r489, %r490}, [%r322];
	// end inline asm
	add.s32 	%r563, %r42, %r41;
	shl.b32 	%r564, %r563, 2;
	add.s32 	%r565, %r558, %r564;
	add.s32 	%r327, %r565, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r367, %r368, %r369, %r370}, [%r327];
	// end inline asm
	add.s32 	%r566, %r44, %r42;
	shl.b32 	%r567, %r566, 2;
	add.s32 	%r568, %r558, %r567;
	add.s32 	%r332, %r568, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r415, %r416, %r417, %r418}, [%r332];
	// end inline asm
	add.s32 	%r569, %r46, %r42;
	shl.b32 	%r570, %r569, 2;
	add.s32 	%r571, %r558, %r570;
	add.s32 	%r337, %r571, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r463, %r464, %r465, %r466}, [%r337];
	// end inline asm
	add.s32 	%r572, %r48, %r42;
	shl.b32 	%r573, %r572, 2;
	add.s32 	%r574, %r558, %r573;
	add.s32 	%r342, %r574, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r511, %r512, %r513, %r514}, [%r342];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	shl.b32 	%r575, %r907, 12;
	add.s32 	%r576, %r905, %r575;
	add.s32 	%r577, %r576, 16384;
	add.s32 	%r579, %r577, %r578;
	ld.shared.u32 	%r347, [%r579];
	add.s32 	%r580, %r51, %r52;
	shl.b32 	%r581, %r580, 2;
	add.s32 	%r582, %r577, %r581;
	ld.shared.u32 	%r348, [%r582+512];
	ld.shared.u32 	%r395, [%r582+1024];
	ld.shared.u32 	%r396, [%r582+1536];
	ld.shared.u32 	%r443, [%r582+2048];
	ld.shared.u32 	%r444, [%r582+2560];
	ld.shared.u32 	%r491, [%r582+3072];
	ld.shared.u32 	%r492, [%r582+3584];
	add.s32 	%r584, %r577, %r583;
	shl.b32 	%r585, %r52, 2;
	add.s32 	%r586, %r584, %r585;
	ld.shared.u32 	%r353, [%r586];
	ld.shared.u32 	%r354, [%r586+512];
	ld.shared.u32 	%r401, [%r586+1024];
	ld.shared.u32 	%r402, [%r586+1536];
	ld.shared.u32 	%r449, [%r586+2048];
	ld.shared.u32 	%r450, [%r586+2560];
	ld.shared.u32 	%r497, [%r586+3072];
	ld.shared.u32 	%r498, [%r586+3584];
	add.s32 	%r588, %r577, %r587;
	add.s32 	%r589, %r588, %r585;
	ld.shared.u32 	%r359, [%r589];
	ld.shared.u32 	%r360, [%r589+512];
	ld.shared.u32 	%r407, [%r589+1024];
	ld.shared.u32 	%r408, [%r589+1536];
	ld.shared.u32 	%r455, [%r589+2048];
	ld.shared.u32 	%r456, [%r589+2560];
	ld.shared.u32 	%r503, [%r589+3072];
	ld.shared.u32 	%r504, [%r589+3584];
	add.s32 	%r591, %r577, %r590;
	add.s32 	%r592, %r591, %r585;
	ld.shared.u32 	%r365, [%r592];
	ld.shared.u32 	%r366, [%r592+512];
	ld.shared.u32 	%r413, [%r592+1024];
	ld.shared.u32 	%r414, [%r592+1536];
	ld.shared.u32 	%r461, [%r592+2048];
	ld.shared.u32 	%r462, [%r592+2560];
	ld.shared.u32 	%r509, [%r592+3072];
	ld.shared.u32 	%r510, [%r592+3584];
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f450, %f451, %f452, %f453 }, { %r343, %r344, %r345, %r346 }, { %r347, %r348 }, { %f450, %f451, %f452, %f453 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f454, %f455, %f456, %f457 }, { %r343, %r344, %r345, %r346 }, { %r353, %r354 }, { %f454, %f455, %f456, %f457 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f458, %f459, %f460, %f461 }, { %r343, %r344, %r345, %r346 }, { %r359, %r360 }, { %f458, %f459, %f460, %f461 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f462, %f463, %f464, %f465 }, { %r343, %r344, %r345, %r346 }, { %r365, %r366 }, { %f462, %f463, %f464, %f465 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f466, %f467, %f468, %f469 }, { %r367, %r368, %r369, %r370 }, { %r347, %r348 }, { %f466, %f467, %f468, %f469 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f470, %f471, %f472, %f473 }, { %r367, %r368, %r369, %r370 }, { %r353, %r354 }, { %f470, %f471, %f472, %f473 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f474, %f475, %f476, %f477 }, { %r367, %r368, %r369, %r370 }, { %r359, %r360 }, { %f474, %f475, %f476, %f477 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f478, %f479, %f480, %f481 }, { %r367, %r368, %r369, %r370 }, { %r365, %r366 }, { %f478, %f479, %f480, %f481 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f450, %f451, %f452, %f453 }, { %r391, %r392, %r393, %r394 }, { %r395, %r396 }, { %f450, %f451, %f452, %f453 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f454, %f455, %f456, %f457 }, { %r391, %r392, %r393, %r394 }, { %r401, %r402 }, { %f454, %f455, %f456, %f457 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f458, %f459, %f460, %f461 }, { %r391, %r392, %r393, %r394 }, { %r407, %r408 }, { %f458, %f459, %f460, %f461 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f462, %f463, %f464, %f465 }, { %r391, %r392, %r393, %r394 }, { %r413, %r414 }, { %f462, %f463, %f464, %f465 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f466, %f467, %f468, %f469 }, { %r415, %r416, %r417, %r418 }, { %r395, %r396 }, { %f466, %f467, %f468, %f469 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f470, %f471, %f472, %f473 }, { %r415, %r416, %r417, %r418 }, { %r401, %r402 }, { %f470, %f471, %f472, %f473 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f474, %f475, %f476, %f477 }, { %r415, %r416, %r417, %r418 }, { %r407, %r408 }, { %f474, %f475, %f476, %f477 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f478, %f479, %f480, %f481 }, { %r415, %r416, %r417, %r418 }, { %r413, %r414 }, { %f478, %f479, %f480, %f481 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f450, %f451, %f452, %f453 }, { %r439, %r440, %r441, %r442 }, { %r443, %r444 }, { %f450, %f451, %f452, %f453 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f454, %f455, %f456, %f457 }, { %r439, %r440, %r441, %r442 }, { %r449, %r450 }, { %f454, %f455, %f456, %f457 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f458, %f459, %f460, %f461 }, { %r439, %r440, %r441, %r442 }, { %r455, %r456 }, { %f458, %f459, %f460, %f461 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f462, %f463, %f464, %f465 }, { %r439, %r440, %r441, %r442 }, { %r461, %r462 }, { %f462, %f463, %f464, %f465 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f466, %f467, %f468, %f469 }, { %r463, %r464, %r465, %r466 }, { %r443, %r444 }, { %f466, %f467, %f468, %f469 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f470, %f471, %f472, %f473 }, { %r463, %r464, %r465, %r466 }, { %r449, %r450 }, { %f470, %f471, %f472, %f473 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f474, %f475, %f476, %f477 }, { %r463, %r464, %r465, %r466 }, { %r455, %r456 }, { %f474, %f475, %f476, %f477 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f478, %f479, %f480, %f481 }, { %r463, %r464, %r465, %r466 }, { %r461, %r462 }, { %f478, %f479, %f480, %f481 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f450, %f451, %f452, %f453 }, { %r487, %r488, %r489, %r490 }, { %r491, %r492 }, { %f450, %f451, %f452, %f453 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f454, %f455, %f456, %f457 }, { %r487, %r488, %r489, %r490 }, { %r497, %r498 }, { %f454, %f455, %f456, %f457 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f458, %f459, %f460, %f461 }, { %r487, %r488, %r489, %r490 }, { %r503, %r504 }, { %f458, %f459, %f460, %f461 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f462, %f463, %f464, %f465 }, { %r487, %r488, %r489, %r490 }, { %r509, %r510 }, { %f462, %f463, %f464, %f465 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f466, %f467, %f468, %f469 }, { %r511, %r512, %r513, %r514 }, { %r491, %r492 }, { %f466, %f467, %f468, %f469 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f470, %f471, %f472, %f473 }, { %r511, %r512, %r513, %r514 }, { %r497, %r498 }, { %f470, %f471, %f472, %f473 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f474, %f475, %f476, %f477 }, { %r511, %r512, %r513, %r514 }, { %r503, %r504 }, { %f474, %f475, %f476, %f477 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f478, %f479, %f480, %f481 }, { %r511, %r512, %r513, %r514 }, { %r509, %r510 }, { %f478, %f479, %f480, %f481 };
	// end inline asm
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd164, %rd164, 1;
	.loc	1 69 89                         // implicit_gemm_kernel.py:69:89
	add.s64 	%rd72, %rd22, %rd163;
	add.s64 	%rd73, %rd21, %rd163;
	add.s64 	%rd74, %rd20, %rd163;
	add.s64 	%rd75, %rd19, %rd163;
	add.s64 	%rd76, %rd18, %rd163;
	add.s64 	%rd77, %rd17, %rd163;
	add.s64 	%rd78, %rd16, %rd163;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd79, %rd15, %rd163;
	cvt.u32.u64 	%r593, %rd72;
	mul.wide.s32 	%rd80, %r593, 4;
	add.s64 	%rd62, %rd34, %rd80;
	cvt.u32.u64 	%r594, %rd73;
	mul.wide.s32 	%rd81, %r594, 4;
	add.s64 	%rd63, %rd34, %rd81;
	cvt.u32.u64 	%r595, %rd74;
	mul.wide.s32 	%rd82, %r595, 4;
	add.s64 	%rd64, %rd34, %rd82;
	cvt.u32.u64 	%r596, %rd75;
	mul.wide.s32 	%rd83, %r596, 4;
	add.s64 	%rd65, %rd34, %rd83;
	cvt.u32.u64 	%r597, %rd76;
	mul.wide.s32 	%rd84, %r597, 4;
	add.s64 	%rd66, %rd34, %rd84;
	cvt.u32.u64 	%r598, %rd77;
	mul.wide.s32 	%rd85, %r598, 4;
	add.s64 	%rd67, %rd34, %rd85;
	cvt.u32.u64 	%r599, %rd78;
	mul.wide.s32 	%rd86, %r599, 4;
	add.s64 	%rd68, %rd34, %rd86;
	cvt.u32.u64 	%r600, %rd79;
	mul.wide.s32 	%rd87, %r600, 4;
	add.s64 	%rd69, %rd34, %rd87;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd28, %rd163, 32;
	.loc	1 70 112                        // implicit_gemm_kernel.py:70:112
	add.s64 	%rd88, %rd28, %rd5;
	setp.lt.s64 	%p40, %rd88, %rd3;
	add.s64 	%rd89, %rd160, %rd163;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	add.s64 	%rd90, %rd5, %rd161;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s64 	%rd91, %rd5, %rd162;
	cvt.u32.u64 	%r601, %rd90;
	mul.wide.s32 	%rd92, %r601, 4;
	add.s64 	%rd70, %rd35, %rd92;
	cvt.u32.u64 	%r602, %rd91;
	mul.wide.s32 	%rd93, %r602, 4;
	add.s64 	%rd71, %rd35, %rd93;
	cvt.u32.u64 	%r603, %rd89;
	add.s32 	%r604, %r603, 32;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p41, %r604, %r27;
	add.s32 	%r605, %r603, 48;
	setp.lt.s32 	%p42, %r605, %r27;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r607, %r285, 0, %p40;
	selp.b32 	%r536, %r607, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r252 + 0 ], [ %rd62 + 0 ], 0x10, %r536;
	// end inline asm
	selp.b32 	%r609, %r286, 0, %p40;
	selp.b32 	%r538, %r609, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r254 + 0 ], [ %rd63 + 0 ], 0x10, %r538;
	// end inline asm
	selp.b32 	%r611, %r287, 0, %p40;
	selp.b32 	%r540, %r611, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r256 + 0 ], [ %rd64 + 0 ], 0x10, %r540;
	// end inline asm
	selp.b32 	%r613, %r288, 0, %p40;
	selp.b32 	%r542, %r613, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r258 + 0 ], [ %rd65 + 0 ], 0x10, %r542;
	// end inline asm
	selp.b32 	%r615, %r289, 0, %p40;
	selp.b32 	%r544, %r615, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r260 + 0 ], [ %rd66 + 0 ], 0x10, %r544;
	// end inline asm
	selp.b32 	%r617, %r290, 0, %p40;
	selp.b32 	%r546, %r617, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r262 + 0 ], [ %rd67 + 0 ], 0x10, %r546;
	// end inline asm
	selp.b32 	%r619, %r291, 0, %p40;
	selp.b32 	%r548, %r619, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r264 + 0 ], [ %rd68 + 0 ], 0x10, %r548;
	// end inline asm
	selp.b32 	%r621, %r292, 0, %p40;
	selp.b32 	%r550, %r621, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r266 + 0 ], [ %rd69 + 0 ], 0x10, %r550;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r622, 16, 0, %p41;
	selp.b32 	%r623, %r622, 0, %p16;
	selp.b32 	%r552, %r623, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r268 + 0 ], [ %rd70 + 0 ], 0x10, %r552;
	// end inline asm
	selp.b32 	%r624, 16, 0, %p42;
	selp.b32 	%r625, %r624, 0, %p16;
	selp.b32 	%r554, %r625, 0, %p38;
	// begin inline asm
	cp.async.cg.shared.global [ %r270 + 0 ], [ %rd71 + 0 ], 0x10, %r554;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd162, %rd162, %rd10;
	add.s64 	%rd161, %rd161, %rd10;
	setp.ne.s64 	%p43, %rd4, %rd164;
	mov.u64 	%rd163, %rd28;
	@%p43 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge19_crit_edge
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r912, %r2, 5;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shr.u32 	%r911, %r4, 2;
	shr.u32 	%r910, %r6, 2;
	shr.u32 	%r909, %r4, 1;
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	bfe.u32 	%r908, %r4, 5, 2;
	mov.b32 	%r913, 0;
	mov.u32 	%r914, %r913;
	mov.u32 	%r915, %r913;
	mov.u32 	%r916, %r913;
	mov.u32 	%r917, %r913;
	mov.u32 	%r918, %r913;
	mov.u32 	%r919, %r913;
	mov.u32 	%r920, %r913;
	mov.u32 	%r921, %r913;
	mov.u32 	%r922, %r913;
	mov.u32 	%r923, %r913;
	mov.u32 	%r924, %r913;
	mov.u32 	%r925, %r913;
	mov.u32 	%r926, %r913;
	mov.u32 	%r927, %r913;
	mov.u32 	%r928, %r913;
	mov.u32 	%r929, %r913;
	mov.u32 	%r930, %r913;
	mov.u32 	%r931, %r913;
	mov.u32 	%r932, %r913;
	mov.u32 	%r933, %r913;
	mov.u32 	%r934, %r913;
	mov.u32 	%r935, %r913;
	mov.u32 	%r936, %r913;
	mov.u32 	%r937, %r913;
	mov.u32 	%r938, %r913;
	mov.u32 	%r939, %r913;
	mov.u32 	%r940, %r913;
	mov.u32 	%r941, %r913;
	mov.u32 	%r942, %r913;
	mov.u32 	%r943, %r913;
	mov.u32 	%r944, %r913;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %._crit_edge19.loopexit
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	mov.b32 	%r913, %f450;
	mov.b32 	%r914, %f451;
	mov.b32 	%r915, %f452;
	mov.b32 	%r916, %f453;
	mov.b32 	%r917, %f454;
	mov.b32 	%r918, %f455;
	mov.b32 	%r919, %f456;
	mov.b32 	%r920, %f457;
	mov.b32 	%r921, %f458;
	mov.b32 	%r922, %f459;
	mov.b32 	%r923, %f460;
	mov.b32 	%r924, %f461;
	mov.b32 	%r925, %f462;
	mov.b32 	%r926, %f463;
	mov.b32 	%r927, %f464;
	mov.b32 	%r928, %f465;
	mov.b32 	%r929, %f466;
	mov.b32 	%r930, %f467;
	mov.b32 	%r931, %f468;
	mov.b32 	%r932, %f469;
	mov.b32 	%r933, %f470;
	mov.b32 	%r934, %f471;
	mov.b32 	%r935, %f472;
	mov.b32 	%r936, %f473;
	mov.b32 	%r937, %f474;
	mov.b32 	%r938, %f475;
	mov.b32 	%r939, %f476;
	mov.b32 	%r940, %f477;
	mov.b32 	%r941, %f478;
	mov.b32 	%r942, %f479;
	mov.b32 	%r943, %f480;
	mov.b32 	%r944, %f481;
$L__BB0_10:                             // %._crit_edge19
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r754, %r908, %r8;
	or.b32  	%r755, %r754, 4;
	or.b32  	%r756, %r754, 8;
	or.b32  	%r757, %r754, 12;
	or.b32  	%r758, %r754, 16;
	or.b32  	%r759, %r754, 20;
	or.b32  	%r760, %r754, 24;
	or.b32  	%r761, %r754, 28;
	or.b32  	%r762, %r754, 32;
	or.b32  	%r763, %r754, 36;
	or.b32  	%r764, %r754, 40;
	or.b32  	%r765, %r754, 44;
	or.b32  	%r766, %r754, 48;
	or.b32  	%r767, %r754, 52;
	or.b32  	%r768, %r754, 56;
	or.b32  	%r769, %r754, 60;
	or.b32  	%r770, %r754, 64;
	or.b32  	%r771, %r754, 68;
	or.b32  	%r772, %r754, 72;
	or.b32  	%r773, %r754, 76;
	or.b32  	%r774, %r754, 80;
	or.b32  	%r775, %r754, 84;
	or.b32  	%r776, %r754, 88;
	or.b32  	%r777, %r754, 92;
	or.b32  	%r778, %r754, 96;
	or.b32  	%r779, %r754, 100;
	or.b32  	%r780, %r754, 104;
	or.b32  	%r781, %r754, 108;
	or.b32  	%r782, %r754, 112;
	or.b32  	%r783, %r754, 116;
	or.b32  	%r784, %r754, 120;
	or.b32  	%r785, %r754, 124;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r786, %r754, %r150;
	shl.b32 	%r787, %r150, 2;
	add.s32 	%r788, %r786, %r787;
	add.s32 	%r789, %r788, %r787;
	add.s32 	%r790, %r789, %r787;
	add.s32 	%r791, %r790, %r787;
	add.s32 	%r792, %r791, %r787;
	add.s32 	%r793, %r792, %r787;
	add.s32 	%r794, %r793, %r787;
	add.s32 	%r795, %r794, %r787;
	add.s32 	%r796, %r795, %r787;
	add.s32 	%r797, %r796, %r787;
	add.s32 	%r798, %r797, %r787;
	add.s32 	%r799, %r798, %r787;
	add.s32 	%r800, %r799, %r787;
	add.s32 	%r801, %r800, %r787;
	add.s32 	%r802, %r801, %r787;
	add.s32 	%r803, %r802, %r787;
	add.s32 	%r804, %r803, %r787;
	add.s32 	%r805, %r804, %r787;
	add.s32 	%r806, %r805, %r787;
	add.s32 	%r807, %r806, %r787;
	add.s32 	%r808, %r807, %r787;
	add.s32 	%r809, %r808, %r787;
	add.s32 	%r810, %r809, %r787;
	add.s32 	%r811, %r810, %r787;
	add.s32 	%r812, %r811, %r787;
	add.s32 	%r813, %r812, %r787;
	add.s32 	%r814, %r813, %r787;
	add.s32 	%r815, %r814, %r787;
	add.s32 	%r816, %r815, %r787;
	add.s32 	%r817, %r816, %r787;
	add.s32 	%r818, %r817, %r787;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r819, %r912, %r5;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r820, %r819, %r786;
	add.s32 	%r821, %r819, %r788;
	add.s32 	%r822, %r819, %r789;
	add.s32 	%r823, %r819, %r790;
	add.s32 	%r824, %r819, %r791;
	add.s32 	%r825, %r819, %r792;
	add.s32 	%r826, %r819, %r793;
	add.s32 	%r827, %r819, %r794;
	add.s32 	%r828, %r819, %r795;
	add.s32 	%r829, %r819, %r796;
	add.s32 	%r830, %r819, %r797;
	add.s32 	%r831, %r819, %r798;
	add.s32 	%r832, %r819, %r799;
	add.s32 	%r833, %r819, %r800;
	add.s32 	%r834, %r819, %r801;
	add.s32 	%r835, %r819, %r802;
	add.s32 	%r836, %r819, %r803;
	add.s32 	%r837, %r819, %r804;
	add.s32 	%r838, %r819, %r805;
	add.s32 	%r839, %r819, %r806;
	add.s32 	%r840, %r819, %r807;
	add.s32 	%r841, %r819, %r808;
	add.s32 	%r842, %r819, %r809;
	add.s32 	%r843, %r819, %r810;
	add.s32 	%r844, %r819, %r811;
	add.s32 	%r845, %r819, %r812;
	add.s32 	%r846, %r819, %r813;
	add.s32 	%r847, %r819, %r814;
	add.s32 	%r848, %r819, %r815;
	add.s32 	%r849, %r819, %r816;
	add.s32 	%r850, %r819, %r817;
	add.s32 	%r851, %r819, %r818;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd126, %r820, 4;
	add.s64 	%rd94, %rd36, %rd126;
	mul.wide.s32 	%rd127, %r821, 4;
	add.s64 	%rd95, %rd36, %rd127;
	mul.wide.s32 	%rd128, %r822, 4;
	add.s64 	%rd96, %rd36, %rd128;
	mul.wide.s32 	%rd129, %r823, 4;
	add.s64 	%rd97, %rd36, %rd129;
	mul.wide.s32 	%rd130, %r824, 4;
	add.s64 	%rd98, %rd36, %rd130;
	mul.wide.s32 	%rd131, %r825, 4;
	add.s64 	%rd99, %rd36, %rd131;
	mul.wide.s32 	%rd132, %r826, 4;
	add.s64 	%rd100, %rd36, %rd132;
	mul.wide.s32 	%rd133, %r827, 4;
	add.s64 	%rd101, %rd36, %rd133;
	mul.wide.s32 	%rd134, %r828, 4;
	add.s64 	%rd102, %rd36, %rd134;
	mul.wide.s32 	%rd135, %r829, 4;
	add.s64 	%rd103, %rd36, %rd135;
	mul.wide.s32 	%rd136, %r830, 4;
	add.s64 	%rd104, %rd36, %rd136;
	mul.wide.s32 	%rd137, %r831, 4;
	add.s64 	%rd105, %rd36, %rd137;
	mul.wide.s32 	%rd138, %r832, 4;
	add.s64 	%rd106, %rd36, %rd138;
	mul.wide.s32 	%rd139, %r833, 4;
	add.s64 	%rd107, %rd36, %rd139;
	mul.wide.s32 	%rd140, %r834, 4;
	add.s64 	%rd108, %rd36, %rd140;
	mul.wide.s32 	%rd141, %r835, 4;
	add.s64 	%rd109, %rd36, %rd141;
	mul.wide.s32 	%rd142, %r836, 4;
	add.s64 	%rd110, %rd36, %rd142;
	mul.wide.s32 	%rd143, %r837, 4;
	add.s64 	%rd111, %rd36, %rd143;
	mul.wide.s32 	%rd144, %r838, 4;
	add.s64 	%rd112, %rd36, %rd144;
	mul.wide.s32 	%rd145, %r839, 4;
	add.s64 	%rd113, %rd36, %rd145;
	mul.wide.s32 	%rd146, %r840, 4;
	add.s64 	%rd114, %rd36, %rd146;
	mul.wide.s32 	%rd147, %r841, 4;
	add.s64 	%rd115, %rd36, %rd147;
	mul.wide.s32 	%rd148, %r842, 4;
	add.s64 	%rd116, %rd36, %rd148;
	mul.wide.s32 	%rd149, %r843, 4;
	add.s64 	%rd117, %rd36, %rd149;
	mul.wide.s32 	%rd150, %r844, 4;
	add.s64 	%rd118, %rd36, %rd150;
	mul.wide.s32 	%rd151, %r845, 4;
	add.s64 	%rd119, %rd36, %rd151;
	mul.wide.s32 	%rd152, %r846, 4;
	add.s64 	%rd120, %rd36, %rd152;
	mul.wide.s32 	%rd153, %r847, 4;
	add.s64 	%rd121, %rd36, %rd153;
	mul.wide.s32 	%rd154, %r848, 4;
	add.s64 	%rd122, %rd36, %rd154;
	mul.wide.s32 	%rd155, %r849, 4;
	add.s64 	%rd123, %rd36, %rd155;
	mul.wide.s32 	%rd156, %r850, 4;
	add.s64 	%rd124, %rd36, %rd156;
	mul.wide.s32 	%rd157, %r851, 4;
	add.s64 	%rd125, %rd36, %rd157;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p109, %r754, %r148;
	setp.lt.s32 	%p110, %r755, %r148;
	setp.lt.s32 	%p111, %r756, %r148;
	setp.lt.s32 	%p112, %r757, %r148;
	setp.lt.s32 	%p113, %r758, %r148;
	setp.lt.s32 	%p114, %r759, %r148;
	setp.lt.s32 	%p115, %r760, %r148;
	setp.lt.s32 	%p116, %r761, %r148;
	setp.lt.s32 	%p117, %r762, %r148;
	setp.lt.s32 	%p118, %r763, %r148;
	setp.lt.s32 	%p119, %r764, %r148;
	setp.lt.s32 	%p120, %r765, %r148;
	setp.lt.s32 	%p121, %r766, %r148;
	setp.lt.s32 	%p122, %r767, %r148;
	setp.lt.s32 	%p123, %r768, %r148;
	setp.lt.s32 	%p124, %r769, %r148;
	setp.lt.s32 	%p125, %r770, %r148;
	setp.lt.s32 	%p126, %r771, %r148;
	setp.lt.s32 	%p127, %r772, %r148;
	setp.lt.s32 	%p128, %r773, %r148;
	setp.lt.s32 	%p129, %r774, %r148;
	setp.lt.s32 	%p130, %r775, %r148;
	setp.lt.s32 	%p131, %r776, %r148;
	setp.lt.s32 	%p132, %r777, %r148;
	setp.lt.s32 	%p133, %r778, %r148;
	setp.lt.s32 	%p134, %r779, %r148;
	setp.lt.s32 	%p135, %r780, %r148;
	setp.lt.s32 	%p136, %r781, %r148;
	setp.lt.s32 	%p137, %r782, %r148;
	setp.lt.s32 	%p138, %r783, %r148;
	setp.lt.s32 	%p139, %r784, %r148;
	setp.lt.s32 	%p140, %r785, %r148;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p141, %r819, %r150;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p77, %p109, %p141;
	and.pred  	%p78, %p110, %p141;
	and.pred  	%p79, %p111, %p141;
	and.pred  	%p80, %p112, %p141;
	and.pred  	%p81, %p113, %p141;
	and.pred  	%p82, %p114, %p141;
	and.pred  	%p83, %p115, %p141;
	and.pred  	%p84, %p116, %p141;
	and.pred  	%p85, %p117, %p141;
	and.pred  	%p86, %p118, %p141;
	and.pred  	%p87, %p119, %p141;
	and.pred  	%p88, %p120, %p141;
	and.pred  	%p89, %p121, %p141;
	and.pred  	%p90, %p122, %p141;
	and.pred  	%p91, %p123, %p141;
	and.pred  	%p92, %p124, %p141;
	and.pred  	%p93, %p125, %p141;
	and.pred  	%p94, %p126, %p141;
	and.pred  	%p95, %p127, %p141;
	and.pred  	%p96, %p128, %p141;
	and.pred  	%p97, %p129, %p141;
	and.pred  	%p98, %p130, %p141;
	and.pred  	%p99, %p131, %p141;
	and.pred  	%p100, %p132, %p141;
	and.pred  	%p101, %p133, %p141;
	and.pred  	%p102, %p134, %p141;
	and.pred  	%p103, %p135, %p141;
	and.pred  	%p104, %p136, %p141;
	and.pred  	%p105, %p137, %p141;
	and.pred  	%p106, %p138, %p141;
	and.pred  	%p107, %p139, %p141;
	and.pred  	%p108, %p140, %p141;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	bar.sync 	0;
	shl.b32 	%r852, %r4, 7;
	and.b32  	%r853, %r852, 384;
	and.b32  	%r854, %r911, 3;
	and.b32  	%r855, %r909, 48;
	or.b32  	%r856, %r910, %r855;
	or.b32  	%r857, %r856, %r854;
	or.b32  	%r858, %r857, %r853;
	shl.b32 	%r859, %r4, 6;
	and.b32  	%r860, %r859, 1984;
	or.b32  	%r861, %r908, %r860;
	shr.u32 	%r862, %r853, 4;
	add.s32 	%r864, %r905, %r862;
	shl.b32 	%r865, %r858, 2;
	add.s32 	%r626, %r864, %r865;
	mov.pred 	%p45, -1;
	// begin inline asm
	@%p45 st.shared.b32 [ %r626 + 0 ], %r913;
	// end inline asm
	or.b32  	%r866, %r858, 64;
	shr.u32 	%r867, %r866, 4;
	and.b32  	%r868, %r867, 28;
	add.s32 	%r869, %r905, %r868;
	add.s32 	%r870, %r869, %r865;
	add.s32 	%r628, %r870, 256;
	// begin inline asm
	@%p45 st.shared.b32 [ %r628 + 0 ], %r914;
	// end inline asm
	add.s32 	%r630, %r626, 32;
	// begin inline asm
	@%p45 st.shared.b32 [ %r630 + 0 ], %r915;
	// end inline asm
	add.s32 	%r632, %r870, 288;
	// begin inline asm
	@%p45 st.shared.b32 [ %r632 + 0 ], %r916;
	// end inline asm
	or.b32  	%r871, %r858, 512;
	shr.u32 	%r872, %r871, 4;
	and.b32  	%r873, %r872, 56;
	add.s32 	%r874, %r905, %r873;
	add.s32 	%r875, %r874, %r865;
	add.s32 	%r634, %r875, 2048;
	// begin inline asm
	@%p45 st.shared.b32 [ %r634 + 0 ], %r917;
	// end inline asm
	or.b32  	%r876, %r858, 576;
	shr.u32 	%r877, %r876, 4;
	and.b32  	%r878, %r877, 60;
	add.s32 	%r879, %r905, %r878;
	add.s32 	%r880, %r879, %r865;
	add.s32 	%r636, %r880, 2304;
	// begin inline asm
	@%p45 st.shared.b32 [ %r636 + 0 ], %r918;
	// end inline asm
	add.s32 	%r638, %r875, 2080;
	// begin inline asm
	@%p45 st.shared.b32 [ %r638 + 0 ], %r919;
	// end inline asm
	add.s32 	%r640, %r880, 2336;
	// begin inline asm
	@%p45 st.shared.b32 [ %r640 + 0 ], %r920;
	// end inline asm
	or.b32  	%r881, %r858, 1024;
	shr.u32 	%r882, %r881, 4;
	and.b32  	%r883, %r882, 88;
	add.s32 	%r884, %r905, %r883;
	add.s32 	%r885, %r884, %r865;
	add.s32 	%r642, %r885, 4096;
	// begin inline asm
	@%p45 st.shared.b32 [ %r642 + 0 ], %r921;
	// end inline asm
	or.b32  	%r886, %r858, 1088;
	shr.u32 	%r887, %r886, 4;
	and.b32  	%r888, %r887, 92;
	add.s32 	%r889, %r905, %r888;
	add.s32 	%r890, %r889, %r865;
	add.s32 	%r644, %r890, 4352;
	// begin inline asm
	@%p45 st.shared.b32 [ %r644 + 0 ], %r922;
	// end inline asm
	add.s32 	%r646, %r885, 4128;
	// begin inline asm
	@%p45 st.shared.b32 [ %r646 + 0 ], %r923;
	// end inline asm
	add.s32 	%r648, %r890, 4384;
	// begin inline asm
	@%p45 st.shared.b32 [ %r648 + 0 ], %r924;
	// end inline asm
	or.b32  	%r891, %r858, 1536;
	shr.u32 	%r892, %r891, 4;
	and.b32  	%r893, %r892, 120;
	add.s32 	%r894, %r905, %r893;
	add.s32 	%r895, %r894, %r865;
	add.s32 	%r650, %r895, 6144;
	// begin inline asm
	@%p45 st.shared.b32 [ %r650 + 0 ], %r925;
	// end inline asm
	or.b32  	%r896, %r858, 1600;
	shr.u32 	%r897, %r896, 4;
	and.b32  	%r898, %r897, 124;
	add.s32 	%r899, %r905, %r898;
	add.s32 	%r900, %r899, %r865;
	add.s32 	%r652, %r900, 6400;
	// begin inline asm
	@%p45 st.shared.b32 [ %r652 + 0 ], %r926;
	// end inline asm
	add.s32 	%r654, %r895, 6176;
	// begin inline asm
	@%p45 st.shared.b32 [ %r654 + 0 ], %r927;
	// end inline asm
	add.s32 	%r656, %r900, 6432;
	// begin inline asm
	@%p45 st.shared.b32 [ %r656 + 0 ], %r928;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r901, %r860, 4;
	add.s32 	%r902, %r905, %r901;
	shl.b32 	%r903, %r861, 2;
	add.s32 	%r904, %r902, %r903;
	ld.shared.u32 	%r691, [%r904];
	ld.shared.u32 	%r693, [%r904+16];
	ld.shared.u32 	%r695, [%r904+32];
	ld.shared.u32 	%r697, [%r904+48];
	ld.shared.u32 	%r699, [%r904+64];
	ld.shared.u32 	%r701, [%r904+80];
	ld.shared.u32 	%r703, [%r904+96];
	ld.shared.u32 	%r705, [%r904+112];
	ld.shared.u32 	%r707, [%r904+128];
	ld.shared.u32 	%r709, [%r904+144];
	ld.shared.u32 	%r711, [%r904+160];
	ld.shared.u32 	%r713, [%r904+176];
	ld.shared.u32 	%r715, [%r904+192];
	ld.shared.u32 	%r717, [%r904+208];
	ld.shared.u32 	%r719, [%r904+224];
	ld.shared.u32 	%r721, [%r904+240];
	bar.sync 	0;
	// begin inline asm
	@%p45 st.shared.b32 [ %r626 + 0 ], %r929;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r628 + 0 ], %r930;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r630 + 0 ], %r931;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r632 + 0 ], %r932;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r634 + 0 ], %r933;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r636 + 0 ], %r934;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r638 + 0 ], %r935;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r640 + 0 ], %r936;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r642 + 0 ], %r937;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r644 + 0 ], %r938;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r646 + 0 ], %r939;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r648 + 0 ], %r940;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r650 + 0 ], %r941;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r652 + 0 ], %r942;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r654 + 0 ], %r943;
	// end inline asm
	// begin inline asm
	@%p45 st.shared.b32 [ %r656 + 0 ], %r944;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r723, [%r904];
	ld.shared.u32 	%r725, [%r904+16];
	ld.shared.u32 	%r727, [%r904+32];
	ld.shared.u32 	%r729, [%r904+48];
	ld.shared.u32 	%r731, [%r904+64];
	ld.shared.u32 	%r733, [%r904+80];
	ld.shared.u32 	%r735, [%r904+96];
	ld.shared.u32 	%r737, [%r904+112];
	ld.shared.u32 	%r739, [%r904+128];
	ld.shared.u32 	%r741, [%r904+144];
	ld.shared.u32 	%r743, [%r904+160];
	ld.shared.u32 	%r745, [%r904+176];
	ld.shared.u32 	%r747, [%r904+192];
	ld.shared.u32 	%r749, [%r904+208];
	ld.shared.u32 	%r751, [%r904+224];
	ld.shared.u32 	%r753, [%r904+240];
	// begin inline asm
	mov.u32 %r690, 0x0;
	@%p77 atom.global.gpu.acq_rel.add.f32 %r690, [ %rd94 + 0 ], %r691;
	// end inline asm
	// begin inline asm
	mov.u32 %r692, 0x0;
	@%p78 atom.global.gpu.acq_rel.add.f32 %r692, [ %rd95 + 0 ], %r693;
	// end inline asm
	// begin inline asm
	mov.u32 %r694, 0x0;
	@%p79 atom.global.gpu.acq_rel.add.f32 %r694, [ %rd96 + 0 ], %r695;
	// end inline asm
	// begin inline asm
	mov.u32 %r696, 0x0;
	@%p80 atom.global.gpu.acq_rel.add.f32 %r696, [ %rd97 + 0 ], %r697;
	// end inline asm
	// begin inline asm
	mov.u32 %r698, 0x0;
	@%p81 atom.global.gpu.acq_rel.add.f32 %r698, [ %rd98 + 0 ], %r699;
	// end inline asm
	// begin inline asm
	mov.u32 %r700, 0x0;
	@%p82 atom.global.gpu.acq_rel.add.f32 %r700, [ %rd99 + 0 ], %r701;
	// end inline asm
	// begin inline asm
	mov.u32 %r702, 0x0;
	@%p83 atom.global.gpu.acq_rel.add.f32 %r702, [ %rd100 + 0 ], %r703;
	// end inline asm
	// begin inline asm
	mov.u32 %r704, 0x0;
	@%p84 atom.global.gpu.acq_rel.add.f32 %r704, [ %rd101 + 0 ], %r705;
	// end inline asm
	// begin inline asm
	mov.u32 %r706, 0x0;
	@%p85 atom.global.gpu.acq_rel.add.f32 %r706, [ %rd102 + 0 ], %r707;
	// end inline asm
	// begin inline asm
	mov.u32 %r708, 0x0;
	@%p86 atom.global.gpu.acq_rel.add.f32 %r708, [ %rd103 + 0 ], %r709;
	// end inline asm
	// begin inline asm
	mov.u32 %r710, 0x0;
	@%p87 atom.global.gpu.acq_rel.add.f32 %r710, [ %rd104 + 0 ], %r711;
	// end inline asm
	// begin inline asm
	mov.u32 %r712, 0x0;
	@%p88 atom.global.gpu.acq_rel.add.f32 %r712, [ %rd105 + 0 ], %r713;
	// end inline asm
	// begin inline asm
	mov.u32 %r714, 0x0;
	@%p89 atom.global.gpu.acq_rel.add.f32 %r714, [ %rd106 + 0 ], %r715;
	// end inline asm
	// begin inline asm
	mov.u32 %r716, 0x0;
	@%p90 atom.global.gpu.acq_rel.add.f32 %r716, [ %rd107 + 0 ], %r717;
	// end inline asm
	// begin inline asm
	mov.u32 %r718, 0x0;
	@%p91 atom.global.gpu.acq_rel.add.f32 %r718, [ %rd108 + 0 ], %r719;
	// end inline asm
	// begin inline asm
	mov.u32 %r720, 0x0;
	@%p92 atom.global.gpu.acq_rel.add.f32 %r720, [ %rd109 + 0 ], %r721;
	// end inline asm
	// begin inline asm
	mov.u32 %r722, 0x0;
	@%p93 atom.global.gpu.acq_rel.add.f32 %r722, [ %rd110 + 0 ], %r723;
	// end inline asm
	// begin inline asm
	mov.u32 %r724, 0x0;
	@%p94 atom.global.gpu.acq_rel.add.f32 %r724, [ %rd111 + 0 ], %r725;
	// end inline asm
	// begin inline asm
	mov.u32 %r726, 0x0;
	@%p95 atom.global.gpu.acq_rel.add.f32 %r726, [ %rd112 + 0 ], %r727;
	// end inline asm
	// begin inline asm
	mov.u32 %r728, 0x0;
	@%p96 atom.global.gpu.acq_rel.add.f32 %r728, [ %rd113 + 0 ], %r729;
	// end inline asm
	// begin inline asm
	mov.u32 %r730, 0x0;
	@%p97 atom.global.gpu.acq_rel.add.f32 %r730, [ %rd114 + 0 ], %r731;
	// end inline asm
	// begin inline asm
	mov.u32 %r732, 0x0;
	@%p98 atom.global.gpu.acq_rel.add.f32 %r732, [ %rd115 + 0 ], %r733;
	// end inline asm
	// begin inline asm
	mov.u32 %r734, 0x0;
	@%p99 atom.global.gpu.acq_rel.add.f32 %r734, [ %rd116 + 0 ], %r735;
	// end inline asm
	// begin inline asm
	mov.u32 %r736, 0x0;
	@%p100 atom.global.gpu.acq_rel.add.f32 %r736, [ %rd117 + 0 ], %r737;
	// end inline asm
	// begin inline asm
	mov.u32 %r738, 0x0;
	@%p101 atom.global.gpu.acq_rel.add.f32 %r738, [ %rd118 + 0 ], %r739;
	// end inline asm
	// begin inline asm
	mov.u32 %r740, 0x0;
	@%p102 atom.global.gpu.acq_rel.add.f32 %r740, [ %rd119 + 0 ], %r741;
	// end inline asm
	// begin inline asm
	mov.u32 %r742, 0x0;
	@%p103 atom.global.gpu.acq_rel.add.f32 %r742, [ %rd120 + 0 ], %r743;
	// end inline asm
	// begin inline asm
	mov.u32 %r744, 0x0;
	@%p104 atom.global.gpu.acq_rel.add.f32 %r744, [ %rd121 + 0 ], %r745;
	// end inline asm
	// begin inline asm
	mov.u32 %r746, 0x0;
	@%p105 atom.global.gpu.acq_rel.add.f32 %r746, [ %rd122 + 0 ], %r747;
	// end inline asm
	// begin inline asm
	mov.u32 %r748, 0x0;
	@%p106 atom.global.gpu.acq_rel.add.f32 %r748, [ %rd123 + 0 ], %r749;
	// end inline asm
	// begin inline asm
	mov.u32 %r750, 0x0;
	@%p107 atom.global.gpu.acq_rel.add.f32 %r750, [ %rd124 + 0 ], %r751;
	// end inline asm
	// begin inline asm
	mov.u32 %r752, 0x0;
	@%p108 atom.global.gpu.acq_rel.add.f32 %r752, [ %rd125 + 0 ], %r753;
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 174                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x98:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
