//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_89
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<66>;
	.reg .b16 	%rs<115>;
	.reg .b32 	%r<346>;
	.reg .b64 	%rd<62>;
	.loc	1 32 0                          // triton_spconv.py:32:0
$L__func_begin0:
	.loc	1 32 0                          // triton_spconv.py:32:0

// %bb.0:
	ld.param.u32 	%r67, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r65, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd17, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 47 24                         // triton_spconv.py:47:24
	mov.u32 	%r68, %ctaid.x;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r69, %r65, 15;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r70, %r69, 31;
	shr.u32 	%r71, %r70, 28;
	add.s32 	%r72, %r69, %r71;
	shr.s32 	%r73, %r72, 4;
$L__tmp2:
	.loc	1 51 20                         // triton_spconv.py:51:20
	div.s32 	%r1, %r68, %r73;
	.loc	1 50 18                         // triton_spconv.py:50:18
	mul.lo.s32 	%r75, %r1, %r73;
	sub.s32 	%r76, %r68, %r75;
	ld.param.u32 	%r77, [implicit_conv3d_kernel_param_8];
	.loc	1 53 19                         // triton_spconv.py:53:19
	mul.lo.s32 	%r78, %r77, %r77;
	.loc	1 53 23                         // triton_spconv.py:53:23
	mul.lo.s32 	%r2, %r78, %r77;
	.loc	1 56 38                         // triton_spconv.py:56:38
	mov.u32 	%r3, %tid.x;
	and.b32  	%r4, %r3, 16;
	and.b32  	%r5, %r3, 128;
	.loc	1 56 57                         // triton_spconv.py:56:57
	shl.b32 	%r8, %r76, 4;
	.loc	1 58 19                         // triton_spconv.py:58:19
	setp.gt.s32 	%p5, %r2, 0;
	mov.u32 	%r334, global_smem;
	@%p5 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph23
	.loc	1 0 19                          // triton_spconv.py:0:19
	ld.param.u32 	%r66, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r64, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd16, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd15, [implicit_conv3d_kernel_param_1];
	ld.param.u64 	%rd14, [implicit_conv3d_kernel_param_0];
	bfe.u32 	%r6, %r3, 4, 4;
	and.b32  	%r7, %r3, 15;
	or.b32  	%r9, %r8, %r6;
	or.b32  	%r10, %r8, %r7;
	or.b32  	%r11, %r6, 32;
	.loc	1 56 68                         // triton_spconv.py:56:68
	mul.lo.s32 	%r79, %r10, %r2;
	.loc	1 56 24                         // triton_spconv.py:56:24
	mul.wide.s32 	%rd19, %r79, 4;
	add.s64 	%rd60, %rd15, %rd19;
	.loc	1 56 68                         // triton_spconv.py:56:68
	mul.lo.s32 	%r80, %r9, %r2;
	.loc	1 56 24                         // triton_spconv.py:56:24
	mul.wide.s32 	%rd20, %r80, 4;
	add.s64 	%rd59, %rd15, %rd20;
	add.s32 	%r16, %r66, 31;
	shr.s32 	%r81, %r16, 31;
	shr.u32 	%r82, %r81, 27;
	add.s32 	%r83, %r16, %r82;
	shr.s32 	%r84, %r83, 5;
	shl.b32 	%r343, %r3, 1;
	and.b32  	%r18, %r343, 30;
	or.b32  	%r19, %r6, 16;
	shl.b32 	%r342, %r3, 3;
	and.b32  	%r85, %r342, 56;
	and.b32  	%r86, %r342, 120;
	shl.b32 	%r345, %r1, 7;
	mul.lo.s32 	%r22, %r2, %r66;
	or.b32  	%r23, %r345, %r86;
	setp.lt.s32 	%p6, %r23, %r67;
	setp.gt.s32 	%p7, %r16, 31;
	setp.lt.s32 	%p8, %r18, %r66;
	.loc	1 58 19                         // triton_spconv.py:58:19
	and.pred  	%p1, %p8, %p7;
	shr.u32 	%r344, %r3, 2;
	and.b32  	%r87, %r344, 24;
	xor.b32  	%r88, %r87, %r18;
	shl.b32 	%r89, %r88, 1;
	shl.b32 	%r90, %r6, 6;
	or.b32  	%r91, %r90, %r89;
	add.s32 	%r93, %r334, %r91;
	add.s32 	%r133, %r93, 16384;
	shr.u32 	%r94, %r4, 1;
	shr.u32 	%r95, %r3, 1;
	and.b32  	%r96, %r95, 56;
	xor.b32  	%r97, %r86, %r96;
	shl.b32 	%r98, %r6, 7;
	or.b32  	%r26, %r97, %r98;
	shl.b32 	%r99, %r26, 1;
	add.s32 	%r135, %r334, %r99;
	add.s32 	%r137, %r135, 4096;
	setp.gt.s32 	%p9, %r16, 63;
	or.b32  	%r100, %r18, 32;
	setp.lt.s32 	%p10, %r100, %r66;
	or.b32  	%r29, %r6, 48;
	and.pred  	%p2, %p10, %p9;
	add.s32 	%r139, %r93, 17408;
	add.s32 	%r141, %r135, 8192;
	add.s32 	%r143, %r135, 12288;
	add.s32 	%r101, %r84, -2;
	shl.b32 	%r102, %r3, 2;
	and.b32  	%r103, %r102, 8;
	and.b32  	%r104, %r102, 16;
	and.b32  	%r105, %r102, 24;
	xor.b32  	%r106, %r105, %r94;
	shl.b32 	%r107, %r7, 5;
	or.b32  	%r33, %r106, %r107;
	or.b32  	%r108, %r103, 16;
	or.b32  	%r109, %r94, %r104;
	xor.b32  	%r110, %r109, %r108;
	or.b32  	%r34, %r110, %r107;
	shr.u32 	%r111, %r5, 2;
	or.b32  	%r112, %r87, %r111;
	xor.b32  	%r35, %r112, %r85;
	shl.b32 	%r113, %r3, 7;
	and.b32  	%r36, %r113, 3968;
	or.b32  	%r114, %r85, 64;
	xor.b32  	%r37, %r112, %r114;
	cvt.s64.s32 	%rd3, %r101;
	cvt.u64.u32 	%rd4, %r2;
	cvt.u64.u32 	%rd5, %r84;
	and.pred  	%p3, %p6, %p7;
	and.pred  	%p4, %p6, %p9;
	or.b32  	%r38, %r18, 64;
	or.b32  	%r115, %r6, 80;
	mad.lo.s32 	%r116, %r67, %r115, %r345;
	add.s32 	%r336, %r116, %r86;
	mul.lo.s32 	%r40, %r67, %r66;
	shl.b32 	%r41, %r67, 5;
	or.b32  	%r117, %r6, 64;
	mad.lo.s32 	%r118, %r67, %r117, %r345;
	add.s32 	%r335, %r118, %r86;
	mov.b16 	%rs91, 0x0000;
	mov.b64 	%rd58, 0;
	shl.b32 	%r235, %r33, 1;
	shl.b32 	%r236, %r34, 1;
	shl.b32 	%r239, %r35, 1;
	shl.b32 	%r241, %r36, 1;
	shl.b32 	%r242, %r37, 1;
	mov.u32 	%r337, %r6;
	mov.u16 	%rs92, %rs91;
	mov.u16 	%rs93, %rs91;
	mov.u16 	%rs94, %rs91;
	mov.u16 	%rs95, %rs91;
	mov.u16 	%rs96, %rs91;
	mov.u16 	%rs97, %rs91;
	mov.u16 	%rs98, %rs91;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 63 28                         // triton_spconv.py:63:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 82 19                         // triton_spconv.py:82:19
	add.s64 	%rd59, %rd59, 4;
	add.s64 	%rd60, %rd60, 4;
	.loc	1 58 19                         // triton_spconv.py:58:19
	add.s64 	%rd58, %rd58, 1;
	add.s32 	%r337, %r337, %r66;
	add.s32 	%r336, %r336, %r40;
	add.s32 	%r335, %r335, %r40;
	setp.ne.s64 	%p40, %rd58, %rd4;
	@%p40 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 60 81                         // triton_spconv.py:60:81
	setp.lt.s32 	%p12, %r10, %r65;
	setp.lt.s32 	%p11, %r9, %r65;
	.loc	1 60 23                         // triton_spconv.py:60:23
	// begin inline asm
	mov.u32 %r119, 0xffffffffffffffff;
	@%p11 ld.global.b32 { %r119 }, [ %rd59 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r120, 0xffffffffffffffff;
	@%p12 ld.global.b32 { %r120 }, [ %rd60 + 0 ];
	// end inline asm
	.loc	1 62 27                         // triton_spconv.py:62:27
	setp.gt.s32 	%p13, %r120, -1;
	.loc	1 62 43                         // triton_spconv.py:62:43
	setp.lt.s32 	%p14, %r120, %r64;
	.loc	1 62 36                         // triton_spconv.py:62:36
	and.pred  	%p15, %p13, %p14;
	.loc	1 62 50                         // triton_spconv.py:62:50
	selp.u32 	%r121, 1, 0, %p15;
	shfl.sync.bfly.b32	%r122, %r121, 8, 31, -1;
	and.b32  	%r123, %r122, 1;
	setp.eq.b32 	%p16, %r123, 1;
$L__tmp3:
	.loc	1 13 15                         // triton_spconv.py:13:15
	or.pred  	%p17, %p15, %p16;
$L__tmp4:
	.loc	1 62 50                         // triton_spconv.py:62:50
	selp.u32 	%r124, 1, 0, %p17;
	shfl.sync.bfly.b32	%r125, %r124, 4, 31, -1;
	and.b32  	%r126, %r125, 1;
	setp.eq.b32 	%p18, %r126, 1;
$L__tmp5:
	.loc	1 13 15                         // triton_spconv.py:13:15
	or.pred  	%p19, %p17, %p18;
$L__tmp6:
	.loc	1 62 50                         // triton_spconv.py:62:50
	selp.u32 	%r127, 1, 0, %p19;
	shfl.sync.bfly.b32	%r128, %r127, 2, 31, -1;
	and.b32  	%r129, %r128, 1;
	setp.eq.b32 	%p20, %r129, 1;
$L__tmp7:
	.loc	1 13 15                         // triton_spconv.py:13:15
	or.pred  	%p21, %p19, %p20;
$L__tmp8:
	.loc	1 62 50                         // triton_spconv.py:62:50
	selp.u32 	%r130, 1, 0, %p21;
	shfl.sync.bfly.b32	%r131, %r130, 1, 31, -1;
	and.b32  	%r132, %r131, 1;
	setp.eq.b32 	%p22, %r132, 1;
$L__tmp9:
	.loc	1 13 15                         // triton_spconv.py:13:15
	or.pred  	%p23, %p21, %p22;
$L__tmp10:
	.loc	1 62 11                         // triton_spconv.py:62:11
	not.pred 	%p24, %p23;
	@%p24 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // triton_spconv.py:0:11
	setp.lt.s32 	%p25, %r16, 32;
	.loc	1 64 31                         // triton_spconv.py:64:31
	cvt.u32.u64 	%r145, %rd58;
	mul.lo.s32 	%r146, %r66, %r145;
	.loc	1 66 52                         // triton_spconv.py:66:52
	mul.lo.s32 	%r47, %r119, %r66;
	.loc	1 66 56                         // triton_spconv.py:66:56
	add.s32 	%r147, %r47, %r18;
	.loc	1 67 43                         // triton_spconv.py:67:43
	setp.ne.s32 	%p26, %r119, -1;
	.loc	1 66 36                         // triton_spconv.py:66:36
	mul.wide.s32 	%rd29, %r147, 2;
	add.s64 	%rd23, %rd14, %rd29;
	.loc	1 70 54                         // triton_spconv.py:70:54
	add.s32 	%r148, %r146, %r6;
	add.s32 	%r149, %r146, %r19;
	.loc	1 72 22                         // triton_spconv.py:72:22
	mad.lo.s32 	%r150, %r148, %r67, %r23;
	mad.lo.s32 	%r151, %r149, %r67, %r23;
	.loc	1 70 20                         // triton_spconv.py:70:20
	mul.wide.s32 	%rd30, %r150, 2;
	add.s64 	%rd24, %rd16, %rd30;
	mul.wide.s32 	%rd31, %r151, 2;
	add.s64 	%rd25, %rd16, %rd31;
	.loc	1 74 72                         // triton_spconv.py:74:72
	setp.lt.s32 	%p27, %r148, %r22;
	setp.lt.s32 	%p28, %r149, %r22;
	.loc	1 78 39                         // triton_spconv.py:78:39
	selp.b32 	%r152, 4, 0, %p1;
	selp.b32 	%r134, %r152, 0, %p26;
	// begin inline asm
	cp.async.ca.shared.global [ %r133 + 0 ], [ %rd23 + 0 ], 0x4, %r134;
	// end inline asm
	cp.async.commit_group;
	.loc	1 79 36                         // triton_spconv.py:79:36
	selp.b32 	%r153, 16, 0, %p3;
	selp.b32 	%r136, %r153, 0, %p27;
	// begin inline asm
	cp.async.cg.shared.global [ %r135 + 0 ], [ %rd24 + 0 ], 0x10, %r136;
	// end inline asm
	selp.b32 	%r138, %r153, 0, %p28;
	// begin inline asm
	cp.async.cg.shared.global [ %r137 + 0 ], [ %rd25 + 0 ], 0x10, %r138;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 89                         // triton_spconv.py:66:89
	add.s32 	%r154, %r147, 32;
	.loc	1 66 36                         // triton_spconv.py:66:36
	mul.wide.s32 	%rd32, %r154, 2;
	add.s64 	%rd26, %rd14, %rd32;
	add.s32 	%r155, %r146, %r11;
	add.s32 	%r156, %r146, %r29;
	.loc	1 72 22                         // triton_spconv.py:72:22
	mad.lo.s32 	%r157, %r155, %r67, %r23;
	mad.lo.s32 	%r158, %r156, %r67, %r23;
	.loc	1 70 20                         // triton_spconv.py:70:20
	mul.wide.s32 	%rd33, %r157, 2;
	add.s64 	%rd27, %rd16, %rd33;
	mul.wide.s32 	%rd34, %r158, 2;
	add.s64 	%rd28, %rd16, %rd34;
	.loc	1 74 72                         // triton_spconv.py:74:72
	setp.lt.s32 	%p29, %r155, %r22;
	setp.lt.s32 	%p30, %r156, %r22;
	.loc	1 78 39                         // triton_spconv.py:78:39
	bar.sync 	0;
	selp.b32 	%r159, 4, 0, %p2;
	selp.b32 	%r140, %r159, 0, %p26;
	// begin inline asm
	cp.async.ca.shared.global [ %r139 + 0 ], [ %rd26 + 0 ], 0x4, %r140;
	// end inline asm
	cp.async.commit_group;
	.loc	1 79 36                         // triton_spconv.py:79:36
	selp.b32 	%r160, 16, 0, %p4;
	selp.b32 	%r142, %r160, 0, %p29;
	// begin inline asm
	cp.async.cg.shared.global [ %r141 + 0 ], [ %rd27 + 0 ], 0x10, %r142;
	// end inline asm
	selp.b32 	%r144, %r160, 0, %p30;
	// begin inline asm
	cp.async.cg.shared.global [ %r143 + 0 ], [ %rd28 + 0 ], 0x10, %r144;
	// end inline asm
	cp.async.commit_group;
	.loc	1 63 28                         // triton_spconv.py:63:28
	@%p25 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r48, %r38, %r47;
	mov.b32 	%r341, 1;
	mov.b32 	%r340, -1;
	mov.b64 	%rd61, 0;
	mov.b32 	%r338, 0;
	mov.u32 	%r339, %r338;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p33, %rd61, %rd3;
	add.s32 	%r230, %r340, 1;
	setp.lt.s32 	%p34, %r230, 2;
	selp.b32 	%r340, %r230, 0, %p34;
	.loc	1 78 39                         // triton_spconv.py:78:39
	cp.async.wait_group 2;
	bar.sync 	0;
	shl.b32 	%r231, %r340, 10;
	add.s32 	%r233, %r334, %r231;
	add.s32 	%r234, %r233, 16384;
	add.s32 	%r168, %r234, %r235;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r188, %r189, %r190, %r191}, [%r168];
	// end inline asm
	add.s32 	%r173, %r234, %r236;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r208, %r209, %r210, %r211}, [%r173];
	// end inline asm
	.loc	1 79 36                         // triton_spconv.py:79:36
	shl.b32 	%r237, %r340, 13;
	add.s32 	%r238, %r334, %r237;
	add.s32 	%r240, %r238, %r239;
	add.s32 	%r178, %r240, %r241;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r174, %r175, %r176, %r177}, [%r178];
	// end inline asm
	add.s32 	%r243, %r238, %r242;
	add.s32 	%r183, %r243, %r241;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r179, %r180, %r181, %r182}, [%r183];
	// end inline asm
	.loc	1 81 37                         // triton_spconv.py:81:37
	mov.b32 	%r204, {%rs91, %rs92};
	mov.b32 	%r205, {%rs93, %rs94};
	mov.b32 	%r214, {%rs95, %rs96};
	mov.b32 	%r215, {%rs97, %rs98};
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r204, %r205 }, { %r188, %r189, %r190, %r191 }, { %r174, %r175 }, { %r204, %r205 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r214, %r215 }, { %r188, %r189, %r190, %r191 }, { %r179, %r180 }, { %r214, %r215 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r204, %r205 }, { %r208, %r209, %r210, %r211 }, { %r176, %r177 }, { %r204, %r205 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r214, %r215 }, { %r208, %r209, %r210, %r211 }, { %r181, %r182 }, { %r214, %r215 };
	// end inline asm
	mov.b32 	{%rs91, %rs92}, %r204;
	mov.b32 	{%rs93, %rs94}, %r205;
	mov.b32 	{%rs95, %rs96}, %r214;
	mov.b32 	{%rs97, %rs98}, %r215;
	.loc	1 63 28                         // triton_spconv.py:63:28
	add.s32 	%r244, %r341, 1;
	setp.lt.s32 	%p35, %r244, 2;
	selp.b32 	%r341, %r244, 0, %p35;
	.loc	1 66 36                         // triton_spconv.py:66:36
	add.s32 	%r245, %r48, %r339;
	mul.wide.s32 	%rd39, %r245, 2;
	add.s64 	%rd36, %rd14, %rd39;
	.loc	1 67 98                         // triton_spconv.py:67:98
	add.s32 	%r246, %r38, %r339;
	setp.lt.s32 	%p36, %r246, %r66;
	add.s32 	%r247, %r337, %r339;
	add.s32 	%r248, %r247, 64;
	.loc	1 70 66                         // triton_spconv.py:70:66
	add.s32 	%r249, %r247, 80;
	.loc	1 72 22                         // triton_spconv.py:72:22
	add.s32 	%r250, %r335, %r338;
	.loc	1 70 20                         // triton_spconv.py:70:20
	add.s32 	%r251, %r336, %r338;
	mul.wide.s32 	%rd40, %r250, 2;
	add.s64 	%rd37, %rd16, %rd40;
	mul.wide.s32 	%rd41, %r251, 2;
	add.s64 	%rd38, %rd16, %rd41;
	.loc	1 74 72                         // triton_spconv.py:74:72
	setp.lt.s32 	%p37, %r248, %r22;
	setp.lt.s32 	%p38, %r249, %r22;
	.loc	1 78 39                         // triton_spconv.py:78:39
	shl.b32 	%r252, %r341, 10;
	bar.sync 	0;
	add.s32 	%r224, %r133, %r252;
	selp.b32 	%r253, 4, 0, %p36;
	selp.b32 	%r254, %r253, 0, %p26;
	selp.b32 	%r225, %r254, 0, %p33;
	// begin inline asm
	cp.async.ca.shared.global [ %r224 + 0 ], [ %rd36 + 0 ], 0x4, %r225;
	// end inline asm
	cp.async.commit_group;
	.loc	1 79 36                         // triton_spconv.py:79:36
	shl.b32 	%r255, %r341, 13;
	add.s32 	%r256, %r334, %r255;
	add.s32 	%r226, %r256, %r99;
	add.s32 	%r228, %r226, 4096;
	selp.b32 	%r258, 16, 0, %p37;
	selp.b32 	%r259, %r258, 0, %p6;
	selp.b32 	%r227, %r259, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r226 + 0 ], [ %rd37 + 0 ], 0x10, %r227;
	// end inline asm
	selp.b32 	%r260, 16, 0, %p38;
	selp.b32 	%r261, %r260, 0, %p6;
	selp.b32 	%r229, %r261, 0, %p33;
	// begin inline asm
	cp.async.cg.shared.global [ %r228 + 0 ], [ %rd38 + 0 ], 0x10, %r229;
	// end inline asm
	cp.async.commit_group;
	.loc	1 63 28                         // triton_spconv.py:63:28
	add.s64 	%rd61, %rd61, 1;
	add.s32 	%r339, %r339, 32;
	add.s32 	%r338, %r338, %r41;
	setp.ne.s64 	%p39, %rd5, %rd61;
	@%p39 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge24_crit_edge
	.loc	1 86 19                         // triton_spconv.py:86:19
	shl.b32 	%r345, %r1, 7;
	.loc	1 92 56                         // triton_spconv.py:92:56
	shr.u32 	%r344, %r3, 2;
	shl.b32 	%r343, %r3, 1;
	shl.b32 	%r342, %r3, 3;
	mov.b16 	%rs91, 0;
	mov.u16 	%rs92, %rs91;
	mov.u16 	%rs93, %rs91;
	mov.u16 	%rs94, %rs91;
	mov.u16 	%rs95, %rs91;
	mov.u16 	%rs96, %rs91;
	mov.u16 	%rs97, %rs91;
	mov.u16 	%rs98, %rs91;
$L__BB0_9:                              // %._crit_edge24
	.loc	1 84 31                         // triton_spconv.py:84:31
	shr.u32 	%r270, %r5, 7;
	.loc	1 84 42                         // triton_spconv.py:84:42
	or.b32  	%r271, %r8, %r270;
	or.b32  	%r272, %r271, 2;
	or.b32  	%r273, %r271, 4;
	or.b32  	%r274, %r271, 6;
	or.b32  	%r275, %r271, 8;
	or.b32  	%r276, %r271, 10;
	or.b32  	%r277, %r271, 12;
	or.b32  	%r278, %r271, 14;
	.loc	1 84 61                         // triton_spconv.py:84:61
	mul.lo.s32 	%r279, %r271, %r67;
	shl.b32 	%r280, %r67, 1;
	add.s32 	%r281, %r279, %r280;
	add.s32 	%r282, %r281, %r280;
	add.s32 	%r283, %r282, %r280;
	add.s32 	%r284, %r283, %r280;
	add.s32 	%r285, %r284, %r280;
	add.s32 	%r286, %r285, %r280;
	add.s32 	%r287, %r286, %r280;
	.loc	1 85 33                         // triton_spconv.py:85:33
	and.b32  	%r288, %r3, 127;
	.loc	1 85 10                         // triton_spconv.py:85:10
	or.b32  	%r289, %r345, %r288;
	.loc	1 86 10                         // triton_spconv.py:86:10
	add.s32 	%r290, %r289, %r279;
	add.s32 	%r291, %r289, %r281;
	add.s32 	%r292, %r289, %r282;
	add.s32 	%r293, %r289, %r283;
	add.s32 	%r294, %r289, %r284;
	add.s32 	%r295, %r289, %r285;
	add.s32 	%r296, %r289, %r286;
	add.s32 	%r297, %r289, %r287;
	.loc	1 84 8                          // triton_spconv.py:84:8
	mul.wide.s32 	%rd50, %r290, 2;
	add.s64 	%rd42, %rd17, %rd50;
	mul.wide.s32 	%rd51, %r291, 2;
	add.s64 	%rd43, %rd17, %rd51;
	mul.wide.s32 	%rd52, %r292, 2;
	add.s64 	%rd44, %rd17, %rd52;
	mul.wide.s32 	%rd53, %r293, 2;
	add.s64 	%rd45, %rd17, %rd53;
	mul.wide.s32 	%rd54, %r294, 2;
	add.s64 	%rd46, %rd17, %rd54;
	mul.wide.s32 	%rd55, %r295, 2;
	add.s64 	%rd47, %rd17, %rd55;
	mul.wide.s32 	%rd56, %r296, 2;
	add.s64 	%rd48, %rd17, %rd56;
	mul.wide.s32 	%rd57, %r297, 2;
	add.s64 	%rd49, %rd17, %rd57;
	.loc	1 88 67                         // triton_spconv.py:88:67
	setp.lt.s32 	%p57, %r271, %r65;
	setp.lt.s32 	%p58, %r272, %r65;
	setp.lt.s32 	%p59, %r273, %r65;
	setp.lt.s32 	%p60, %r274, %r65;
	setp.lt.s32 	%p61, %r275, %r65;
	setp.lt.s32 	%p62, %r276, %r65;
	setp.lt.s32 	%p63, %r277, %r65;
	setp.lt.s32 	%p64, %r278, %r65;
	.loc	1 89 62                         // triton_spconv.py:89:62
	setp.lt.s32 	%p65, %r289, %r67;
	.loc	1 89 8                          // triton_spconv.py:89:8
	and.pred  	%p49, %p57, %p65;
	and.pred  	%p50, %p58, %p65;
	and.pred  	%p51, %p59, %p65;
	and.pred  	%p52, %p60, %p65;
	and.pred  	%p53, %p61, %p65;
	and.pred  	%p54, %p62, %p65;
	and.pred  	%p55, %p63, %p65;
	and.pred  	%p56, %p64, %p65;
	.loc	1 92 56                         // triton_spconv.py:92:56
	shl.b32 	%r298, %r3, 4;
	and.b32  	%r299, %r298, 48;
	and.b32  	%r300, %r344, 3;
	or.b32  	%r301, %r300, %r299;
	shr.u32 	%r302, %r4, 2;
	or.b32  	%r303, %r301, %r302;
	and.b32  	%r304, %r343, 192;
	or.b32  	%r305, %r303, %r304;
	shl.b32 	%r306, %r5, 1;
	or.b32  	%r307, %r305, %r306;
	and.b32  	%r308, %r342, 1016;
	or.b32  	%r309, %r308, %r270;
	shr.u32 	%r310, %r307, 2;
	and.b32  	%r311, %r310, 126;
	add.s32 	%r313, %r334, %r311;
	shl.b32 	%r314, %r307, 1;
	add.s32 	%r262, %r313, %r314;
	mov.pred 	%p41, -1;
	// begin inline asm
	@%p41 st.shared.b16 [ %r262 + 0 ], %rs91;
	// end inline asm
	or.b32  	%r315, %r307, 8;
	shr.u32 	%r316, %r315, 2;
	and.b32  	%r317, %r316, 1073741822;
	add.s32 	%r318, %r334, %r317;
	add.s32 	%r319, %r318, %r314;
	add.s32 	%r263, %r319, 16;
	// begin inline asm
	@%p41 st.shared.b16 [ %r263 + 0 ], %rs92;
	// end inline asm
	or.b32  	%r320, %r307, 512;
	shr.u32 	%r321, %r320, 2;
	and.b32  	%r322, %r321, 1073741822;
	add.s32 	%r323, %r334, %r322;
	add.s32 	%r324, %r323, %r314;
	add.s32 	%r264, %r324, 1024;
	// begin inline asm
	@%p41 st.shared.b16 [ %r264 + 0 ], %rs95;
	// end inline asm
	or.b32  	%r325, %r307, 520;
	shr.u32 	%r326, %r325, 2;
	and.b32  	%r327, %r326, 1073741822;
	add.s32 	%r328, %r334, %r327;
	add.s32 	%r329, %r328, %r314;
	add.s32 	%r265, %r329, 1040;
	// begin inline asm
	@%p41 st.shared.b16 [ %r265 + 0 ], %rs96;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r330, %r308, 2;
	add.s32 	%r331, %r334, %r330;
	shl.b32 	%r332, %r309, 1;
	add.s32 	%r333, %r331, %r332;
	ld.shared.u16 	%rs67, [%r333];
	ld.shared.u16 	%rs68, [%r333+4];
	ld.shared.u16 	%rs69, [%r333+8];
	ld.shared.u16 	%rs70, [%r333+12];
	bar.sync 	0;
	// begin inline asm
	@%p41 st.shared.b16 [ %r262 + 0 ], %rs93;
	// end inline asm
	// begin inline asm
	@%p41 st.shared.b16 [ %r263 + 0 ], %rs94;
	// end inline asm
	// begin inline asm
	@%p41 st.shared.b16 [ %r264 + 0 ], %rs97;
	// end inline asm
	// begin inline asm
	@%p41 st.shared.b16 [ %r265 + 0 ], %rs98;
	// end inline asm
	bar.sync 	0;
	ld.shared.u16 	%rs71, [%r333];
	ld.shared.u16 	%rs72, [%r333+4];
	ld.shared.u16 	%rs73, [%r333+8];
	ld.shared.u16 	%rs74, [%r333+12];
	// begin inline asm
	@%p49 st.global.b16 [ %rd42 + 0 ], { %rs67 };
	// end inline asm
	// begin inline asm
	@%p50 st.global.b16 [ %rd43 + 0 ], { %rs68 };
	// end inline asm
	// begin inline asm
	@%p51 st.global.b16 [ %rd44 + 0 ], { %rs69 };
	// end inline asm
	// begin inline asm
	@%p52 st.global.b16 [ %rd45 + 0 ], { %rs70 };
	// end inline asm
	// begin inline asm
	@%p53 st.global.b16 [ %rd46 + 0 ], { %rs71 };
	// end inline asm
	// begin inline asm
	@%p54 st.global.b16 [ %rd47 + 0 ], { %rs72 };
	// end inline asm
	// begin inline asm
	@%p55 st.global.b16 [ %rd48 + 0 ], { %rs73 };
	// end inline asm
	// begin inline asm
	@%p56 st.global.b16 [ %rd49 + 0 ], { %rs74 };
	// end inline asm
	.loc	1 92 4                          // triton_spconv.py:92:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/waabi-user/sparse-conv/triton_spconv.py"
	.file	2 "/home/waabi-user/.local/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 163                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x9c DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 115
.b8 112
.b8 99
.b8 111
.b8 110
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 119
.b8 97
.b8 97
.b8 98
.b8 105
.b8 45
.b8 117
.b8 115
.b8 101
.b8 114
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x47:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x60:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 71                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x75:0x18 DW_TAG_inlined_subroutine
.b32 71                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x8d:0x18 DW_TAG_inlined_subroutine
.b32 71                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 62                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
