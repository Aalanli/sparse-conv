//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_89
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<148>;
	.reg .b32 	%r<1047>;
	.reg .f32 	%f<202>;
	.reg .b64 	%rd<502>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r152, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r150, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd195, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r153, %ctaid.x;
	.loc	1 50 36                         // implicit_gemm_kernel.py:50:36
	shr.u32 	%r154, %r153, 31;
	add.s32 	%r155, %r153, %r154;
	and.b32  	%r156, %r155, -2;
	sub.s32 	%r1034, %r153, %r156;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r157, %r150, 15;
$L__tmp2:
	.loc	1 49 35                         // implicit_gemm_kernel.py:49:35
	shr.s32 	%r158, %r155, 1;
	shr.s32 	%r160, %r157, 31;
	shr.u32 	%r161, %r160, 28;
	add.s32 	%r162, %r157, %r161;
	shr.s32 	%r163, %r162, 4;
	ld.param.u32 	%r164, [implicit_conv3d_kernel_param_8];
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r2, %r158, %r163;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r165, %r2, %r163;
	sub.s32 	%r166, %r158, %r165;
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r167, %r164, %r164;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r3, %r167, %r164;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r4, %tid.x;
	bfe.u32 	%r6, %r4, 6, 1;
	or.b32  	%r7, %r6, 2;
	or.b32  	%r8, %r6, 4;
	or.b32  	%r9, %r6, 6;
	or.b32  	%r10, %r6, 8;
	or.b32  	%r11, %r6, 10;
	or.b32  	%r12, %r6, 12;
	or.b32  	%r13, %r6, 14;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r168, %r166, 4;
	.loc	1 58 49                         // implicit_gemm_kernel.py:58:49
	or.b32  	%r15, %r168, %r6;
	or.b32  	%r16, %r168, %r7;
	or.b32  	%r17, %r168, %r8;
	or.b32  	%r18, %r168, %r9;
	or.b32  	%r19, %r168, %r10;
	or.b32  	%r20, %r168, %r11;
	or.b32  	%r21, %r168, %r12;
	or.b32  	%r22, %r168, %r13;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.lt.s32 	%p3, %r1034, %r3;
	mov.u32 	%r1033, global_smem;
	setp.lt.s32 	%p140, %r22, %r150;
	setp.lt.s32 	%p141, %r21, %r150;
	setp.lt.s32 	%p142, %r20, %r150;
	setp.lt.s32 	%p143, %r19, %r150;
	setp.lt.s32 	%p144, %r18, %r150;
	setp.lt.s32 	%p145, %r17, %r150;
	setp.lt.s32 	%p146, %r16, %r150;
	setp.lt.s32 	%p147, %r15, %r150;
	@%p3 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph25
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r151, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r149, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd194, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd193, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd196, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	and.b32  	%r5, %r4, 64;
	and.b32  	%r14, %r4, 15;
	or.b32  	%r23, %r168, %r14;
	mul.lo.s32 	%r169, %r15, %r3;
	mul.lo.s32 	%r170, %r16, %r3;
	mul.lo.s32 	%r171, %r17, %r3;
	mul.lo.s32 	%r172, %r18, %r3;
	mul.lo.s32 	%r173, %r19, %r3;
	mul.lo.s32 	%r174, %r20, %r3;
	mul.lo.s32 	%r175, %r21, %r3;
	mul.lo.s32 	%r176, %r22, %r3;
	mul.lo.s32 	%r177, %r23, %r3;
	mul.wide.s32 	%rd197, %r169, 4;
	add.s64 	%rd1, %rd196, %rd197;
	mul.wide.s32 	%rd198, %r170, 4;
	add.s64 	%rd2, %rd196, %rd198;
	mul.wide.s32 	%rd199, %r171, 4;
	add.s64 	%rd3, %rd196, %rd199;
	mul.wide.s32 	%rd200, %r172, 4;
	add.s64 	%rd4, %rd196, %rd200;
	mul.wide.s32 	%rd201, %r173, 4;
	add.s64 	%rd5, %rd196, %rd201;
	mul.wide.s32 	%rd202, %r174, 4;
	add.s64 	%rd6, %rd196, %rd202;
	mul.wide.s32 	%rd203, %r175, 4;
	add.s64 	%rd7, %rd196, %rd203;
	mul.wide.s32 	%rd204, %r176, 4;
	add.s64 	%rd8, %rd196, %rd204;
	mul.wide.s32 	%rd205, %r177, 4;
	add.s64 	%rd9, %rd196, %rd205;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r181, %r4, 4;
	and.b32  	%r182, %r4, 3;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	or.b32  	%r183, %r181, %r182;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r184, %r4, 8;
	add.s32 	%r27, %r151, 63;
	shr.s32 	%r185, %r27, 31;
	shr.u32 	%r186, %r185, 26;
	add.s32 	%r187, %r27, %r186;
	shr.s32 	%r188, %r187, 6;
	and.b32  	%r189, %r4, 16;
	and.b32  	%r190, %r4, 32;
	and.b32  	%r191, %r4, 63;
	or.b32  	%r28, %r6, 16;
	or.b32  	%r29, %r6, 18;
	or.b32  	%r30, %r6, 20;
	or.b32  	%r31, %r6, 22;
	or.b32  	%r32, %r6, 24;
	or.b32  	%r33, %r6, 26;
	or.b32  	%r34, %r6, 28;
	or.b32  	%r35, %r6, 30;
	or.b32  	%r36, %r6, 32;
	or.b32  	%r37, %r6, 34;
	or.b32  	%r38, %r6, 36;
	or.b32  	%r39, %r6, 38;
	or.b32  	%r40, %r6, 40;
	or.b32  	%r41, %r6, 42;
	or.b32  	%r42, %r6, 44;
	or.b32  	%r43, %r6, 46;
	or.b32  	%r44, %r6, 48;
	or.b32  	%r45, %r6, 50;
	or.b32  	%r46, %r6, 52;
	or.b32  	%r47, %r6, 54;
	or.b32  	%r48, %r6, 56;
	or.b32  	%r49, %r6, 58;
	or.b32  	%r50, %r6, 60;
	or.b32  	%r51, %r6, 62;
	shl.b32 	%r192, %r2, 6;
	mul.lo.s32 	%r52, %r3, %r151;
	or.b32  	%r1038, %r192, %r191;
	setp.lt.s32 	%p4, %r1038, %r152;
	setp.gt.s32 	%p5, %r27, 63;
	setp.lt.s32 	%p6, %r191, %r151;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p1, %p6, %p5;
	shr.u32 	%r193, %r5, 4;
	xor.b32  	%r194, %r193, %r191;
	or.b32  	%r195, %r194, %r5;
	shl.b32 	%r196, %r195, 2;
	add.s32 	%r198, %r1033, 16384;
	add.s32 	%r405, %r198, %r196;
	or.b32  	%r199, %r183, 8;
	xor.b32  	%r200, %r199, %r184;
	and.b32  	%r201, %r4, 48;
	or.b32  	%r202, %r201, %r200;
	xor.b32  	%r203, %r202, %r193;
	shl.b32 	%r204, %r203, 2;
	add.s32 	%r205, %r198, %r204;
	shl.b32 	%r206, %r7, 8;
	add.s32 	%r407, %r205, %r206;
	or.b32  	%r207, %r182, 16;
	and.b32  	%r208, %r4, 12;
	or.b32  	%r209, %r208, %r207;
	xor.b32  	%r210, %r209, %r189;
	or.b32  	%r211, %r210, %r190;
	xor.b32  	%r212, %r211, %r193;
	shl.b32 	%r213, %r212, 2;
	add.s32 	%r214, %r198, %r213;
	shl.b32 	%r215, %r8, 8;
	add.s32 	%r409, %r214, %r215;
	or.b32  	%r216, %r183, 24;
	and.b32  	%r217, %r4, 24;
	xor.b32  	%r218, %r216, %r217;
	or.b32  	%r219, %r218, %r190;
	xor.b32  	%r220, %r219, %r193;
	shl.b32 	%r221, %r220, 2;
	add.s32 	%r222, %r198, %r221;
	shl.b32 	%r223, %r9, 8;
	add.s32 	%r411, %r222, %r223;
	shl.b32 	%r224, %r10, 6;
	or.b32  	%r225, %r224, %r194;
	shl.b32 	%r226, %r225, 2;
	add.s32 	%r413, %r198, %r226;
	shl.b32 	%r227, %r11, 8;
	add.s32 	%r415, %r205, %r227;
	shl.b32 	%r228, %r12, 8;
	add.s32 	%r417, %r214, %r228;
	shl.b32 	%r229, %r13, 8;
	add.s32 	%r419, %r222, %r229;
	shr.u32 	%r230, %r5, 3;
	xor.b32  	%r231, %r230, %r191;
	or.b32  	%r232, %r231, %r5;
	shl.b32 	%r233, %r232, 2;
	add.s32 	%r421, %r1033, %r233;
	xor.b32  	%r234, %r211, %r230;
	shl.b32 	%r235, %r234, 2;
	add.s32 	%r236, %r1033, %r235;
	add.s32 	%r423, %r236, %r206;
	shl.b32 	%r237, %r231, 2;
	or.b32  	%r238, %r215, %r237;
	add.s32 	%r425, %r1033, %r238;
	add.s32 	%r427, %r236, %r223;
	or.b32  	%r239, %r224, %r231;
	shl.b32 	%r240, %r239, 2;
	add.s32 	%r429, %r1033, %r240;
	add.s32 	%r431, %r236, %r227;
	or.b32  	%r241, %r228, %r237;
	add.s32 	%r433, %r1033, %r241;
	add.s32 	%r435, %r236, %r229;
	shl.b32 	%r242, %r28, 8;
	or.b32  	%r243, %r242, %r237;
	add.s32 	%r437, %r1033, %r243;
	shl.b32 	%r244, %r29, 8;
	add.s32 	%r439, %r236, %r244;
	shl.b32 	%r245, %r30, 8;
	or.b32  	%r246, %r245, %r237;
	add.s32 	%r441, %r1033, %r246;
	shl.b32 	%r247, %r31, 8;
	add.s32 	%r443, %r236, %r247;
	shl.b32 	%r248, %r32, 8;
	or.b32  	%r249, %r248, %r237;
	add.s32 	%r445, %r1033, %r249;
	shl.b32 	%r250, %r33, 8;
	add.s32 	%r447, %r236, %r250;
	shl.b32 	%r251, %r34, 8;
	or.b32  	%r252, %r251, %r237;
	add.s32 	%r449, %r1033, %r252;
	shl.b32 	%r253, %r35, 8;
	add.s32 	%r451, %r236, %r253;
	shl.b32 	%r254, %r36, 8;
	or.b32  	%r255, %r254, %r237;
	add.s32 	%r453, %r1033, %r255;
	shl.b32 	%r256, %r37, 8;
	add.s32 	%r455, %r236, %r256;
	shl.b32 	%r257, %r38, 8;
	or.b32  	%r258, %r257, %r237;
	add.s32 	%r457, %r1033, %r258;
	shl.b32 	%r259, %r39, 8;
	add.s32 	%r459, %r236, %r259;
	shl.b32 	%r260, %r40, 8;
	or.b32  	%r261, %r260, %r237;
	add.s32 	%r461, %r1033, %r261;
	shl.b32 	%r262, %r41, 8;
	add.s32 	%r463, %r236, %r262;
	shl.b32 	%r263, %r42, 8;
	or.b32  	%r264, %r263, %r237;
	add.s32 	%r465, %r1033, %r264;
	shl.b32 	%r265, %r43, 8;
	add.s32 	%r467, %r236, %r265;
	shl.b32 	%r266, %r44, 8;
	or.b32  	%r267, %r266, %r237;
	add.s32 	%r469, %r1033, %r267;
	shl.b32 	%r268, %r45, 8;
	add.s32 	%r471, %r236, %r268;
	shl.b32 	%r269, %r46, 8;
	or.b32  	%r270, %r269, %r237;
	add.s32 	%r473, %r1033, %r270;
	shl.b32 	%r271, %r47, 8;
	add.s32 	%r475, %r236, %r271;
	shl.b32 	%r272, %r48, 8;
	or.b32  	%r273, %r272, %r237;
	add.s32 	%r477, %r1033, %r273;
	shl.b32 	%r274, %r49, 8;
	add.s32 	%r479, %r236, %r274;
	shl.b32 	%r275, %r50, 8;
	or.b32  	%r276, %r275, %r237;
	add.s32 	%r481, %r1033, %r276;
	shl.b32 	%r277, %r51, 8;
	add.s32 	%r483, %r236, %r277;
	add.s32 	%r278, %r188, -1;
	shl.b32 	%r279, %r4, 2;
	and.b32  	%r280, %r279, 4;
	and.b32  	%r281, %r279, 8;
	and.b32  	%r282, %r279, 12;
	shl.b32 	%r283, %r181, 2;
	or.b32  	%r284, %r282, %r283;
	shr.u32 	%r285, %r189, 2;
	xor.b32  	%r286, %r284, %r285;
	shl.b32 	%r287, %r14, 6;
	or.b32  	%r94, %r286, %r287;
	or.b32  	%r288, %r280, 8;
	xor.b32  	%r289, %r288, %r281;
	or.b32  	%r290, %r289, %r283;
	xor.b32  	%r291, %r290, %r285;
	or.b32  	%r95, %r291, %r287;
	or.b32  	%r292, %r282, 16;
	or.b32  	%r293, %r285, %r283;
	xor.b32  	%r294, %r293, %r292;
	or.b32  	%r96, %r294, %r287;
	or.b32  	%r295, %r280, 24;
	or.b32  	%r296, %r293, %r281;
	xor.b32  	%r297, %r296, %r295;
	or.b32  	%r97, %r297, %r287;
	or.b32  	%r298, %r284, 32;
	xor.b32  	%r299, %r298, %r285;
	or.b32  	%r98, %r299, %r287;
	or.b32  	%r300, %r280, 40;
	xor.b32  	%r301, %r300, %r281;
	or.b32  	%r302, %r301, %r283;
	xor.b32  	%r303, %r302, %r285;
	or.b32  	%r99, %r303, %r287;
	or.b32  	%r304, %r282, 48;
	xor.b32  	%r305, %r293, %r304;
	or.b32  	%r100, %r305, %r287;
	or.b32  	%r306, %r280, 56;
	xor.b32  	%r307, %r296, %r306;
	or.b32  	%r101, %r307, %r287;
	shl.b32 	%r1036, %r4, 3;
	and.b32  	%r308, %r1036, 24;
	shr.u32 	%r1037, %r4, 2;
	bfe.u32 	%r309, %r4, 2, 2;
	or.b32  	%r310, %r309, %r308;
	or.b32  	%r311, %r310, %r285;
	and.b32  	%r312, %r1037, 24;
	xor.b32  	%r104, %r312, %r311;
	shl.b32 	%r313, %r4, 6;
	and.b32  	%r105, %r313, 192;
	shl.b32 	%r106, %r182, 6;
	shl.b32 	%r107, %r207, 6;
	or.b32  	%r314, %r311, 32;
	xor.b32  	%r108, %r312, %r314;
	cvt.s64.s32 	%rd10, %r278;
	cvt.u64.u32 	%rd11, %r191;
	cvt.s64.s32 	%rd12, %r151;
	cvt.u64.u32 	%rd13, %r188;
	and.pred  	%p2, %p4, %p5;
	or.b64  	%rd14, %rd11, 64;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	or.b32  	%r109, %r191, 64;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	mad.lo.s32 	%r315, %r1034, %r151, %r6;
	cvt.u64.u32 	%rd467, %r315;
	shl.b32 	%r316, %r151, 1;
	cvt.u64.u32 	%rd16, %r316;
	add.s32 	%r317, %r315, 126;
	mad.lo.s32 	%r318, %r152, %r317, %r192;
	cvt.u64.u32 	%rd466, %r318;
	mul.lo.s32 	%r319, %r152, %r151;
	shl.b32 	%r320, %r319, 1;
	cvt.u64.u32 	%rd18, %r320;
	shl.b32 	%r321, %r152, 6;
	cvt.u64.u32 	%rd19, %r321;
	add.s32 	%r322, %r315, 124;
	mad.lo.s32 	%r323, %r152, %r322, %r192;
	cvt.u64.u32 	%rd465, %r323;
	add.s32 	%r324, %r315, 122;
	mad.lo.s32 	%r325, %r152, %r324, %r192;
	cvt.u64.u32 	%rd464, %r325;
	add.s32 	%r326, %r315, 120;
	mad.lo.s32 	%r327, %r152, %r326, %r192;
	cvt.u64.u32 	%rd463, %r327;
	add.s32 	%r328, %r315, 118;
	mad.lo.s32 	%r329, %r152, %r328, %r192;
	cvt.u64.u32 	%rd462, %r329;
	add.s32 	%r330, %r315, 116;
	mad.lo.s32 	%r331, %r152, %r330, %r192;
	cvt.u64.u32 	%rd461, %r331;
	add.s32 	%r332, %r315, 114;
	mad.lo.s32 	%r333, %r152, %r332, %r192;
	cvt.u64.u32 	%rd460, %r333;
	add.s32 	%r334, %r315, 112;
	mad.lo.s32 	%r335, %r152, %r334, %r192;
	cvt.u64.u32 	%rd459, %r335;
	add.s32 	%r336, %r315, 110;
	mad.lo.s32 	%r337, %r152, %r336, %r192;
	cvt.u64.u32 	%rd458, %r337;
	add.s32 	%r338, %r315, 108;
	mad.lo.s32 	%r339, %r152, %r338, %r192;
	cvt.u64.u32 	%rd457, %r339;
	add.s32 	%r340, %r315, 106;
	mad.lo.s32 	%r341, %r152, %r340, %r192;
	cvt.u64.u32 	%rd456, %r341;
	add.s32 	%r342, %r315, 104;
	mad.lo.s32 	%r343, %r152, %r342, %r192;
	cvt.u64.u32 	%rd455, %r343;
	add.s32 	%r344, %r315, 102;
	mad.lo.s32 	%r345, %r152, %r344, %r192;
	cvt.u64.u32 	%rd454, %r345;
	add.s32 	%r346, %r315, 100;
	mad.lo.s32 	%r347, %r152, %r346, %r192;
	cvt.u64.u32 	%rd453, %r347;
	add.s32 	%r348, %r315, 98;
	mad.lo.s32 	%r349, %r152, %r348, %r192;
	cvt.u64.u32 	%rd452, %r349;
	add.s32 	%r350, %r315, 96;
	mad.lo.s32 	%r351, %r152, %r350, %r192;
	cvt.u64.u32 	%rd451, %r351;
	add.s32 	%r352, %r315, 94;
	mad.lo.s32 	%r353, %r152, %r352, %r192;
	cvt.u64.u32 	%rd450, %r353;
	add.s32 	%r354, %r315, 92;
	mad.lo.s32 	%r355, %r152, %r354, %r192;
	cvt.u64.u32 	%rd449, %r355;
	add.s32 	%r356, %r315, 90;
	mad.lo.s32 	%r357, %r152, %r356, %r192;
	cvt.u64.u32 	%rd448, %r357;
	add.s32 	%r358, %r315, 88;
	mad.lo.s32 	%r359, %r152, %r358, %r192;
	cvt.u64.u32 	%rd447, %r359;
	add.s32 	%r360, %r315, 86;
	mad.lo.s32 	%r361, %r152, %r360, %r192;
	cvt.u64.u32 	%rd446, %r361;
	add.s32 	%r362, %r315, 84;
	mad.lo.s32 	%r363, %r152, %r362, %r192;
	cvt.u64.u32 	%rd445, %r363;
	add.s32 	%r364, %r315, 82;
	mad.lo.s32 	%r365, %r152, %r364, %r192;
	cvt.u64.u32 	%rd444, %r365;
	add.s32 	%r366, %r315, 80;
	mad.lo.s32 	%r367, %r152, %r366, %r192;
	cvt.u64.u32 	%rd443, %r367;
	add.s32 	%r368, %r315, 78;
	mad.lo.s32 	%r369, %r152, %r368, %r192;
	cvt.u64.u32 	%rd442, %r369;
	add.s32 	%r370, %r315, 76;
	mad.lo.s32 	%r371, %r152, %r370, %r192;
	cvt.u64.u32 	%rd441, %r371;
	add.s32 	%r372, %r315, 74;
	mad.lo.s32 	%r373, %r152, %r372, %r192;
	cvt.u64.u32 	%rd440, %r373;
	add.s32 	%r374, %r315, 72;
	mad.lo.s32 	%r375, %r152, %r374, %r192;
	cvt.u64.u32 	%rd439, %r375;
	add.s32 	%r376, %r315, 70;
	mad.lo.s32 	%r377, %r152, %r376, %r192;
	cvt.u64.u32 	%rd438, %r377;
	add.s32 	%r378, %r315, 68;
	mad.lo.s32 	%r379, %r152, %r378, %r192;
	cvt.u64.u32 	%rd437, %r379;
	add.s32 	%r380, %r315, 66;
	mad.lo.s32 	%r381, %r152, %r380, %r192;
	cvt.u64.u32 	%rd436, %r381;
	add.s32 	%r382, %r315, 64;
	mad.lo.s32 	%r383, %r152, %r382, %r192;
	cvt.u64.u32 	%rd435, %r383;
	mov.f32 	%f178, 0f00000000;
	setp.lt.s32 	%p15, %r23, %r150;
	shl.b32 	%r791, %r94, 2;
	shl.b32 	%r792, %r95, 2;
	shl.b32 	%r793, %r96, 2;
	shl.b32 	%r794, %r97, 2;
	shl.b32 	%r795, %r98, 2;
	shl.b32 	%r796, %r99, 2;
	shl.b32 	%r797, %r100, 2;
	shl.b32 	%r798, %r101, 2;
	shl.b32 	%r801, %r104, 2;
	shl.b32 	%r803, %r105, 2;
	shl.b32 	%r805, %r106, 2;
	shl.b32 	%r807, %r107, 2;
	shl.b32 	%r809, %r108, 2;
	mov.f32 	%f179, %f178;
	mov.f32 	%f180, %f178;
	mov.f32 	%f181, %f178;
	mov.f32 	%f182, %f178;
	mov.f32 	%f183, %f178;
	mov.f32 	%f184, %f178;
	mov.f32 	%f185, %f178;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s32 	%r1034, %r1034, 2;
	add.s64 	%rd467, %rd467, %rd16;
	add.s64 	%rd466, %rd466, %rd18;
	add.s64 	%rd465, %rd465, %rd18;
	add.s64 	%rd464, %rd464, %rd18;
	add.s64 	%rd463, %rd463, %rd18;
	add.s64 	%rd462, %rd462, %rd18;
	add.s64 	%rd461, %rd461, %rd18;
	add.s64 	%rd460, %rd460, %rd18;
	add.s64 	%rd459, %rd459, %rd18;
	add.s64 	%rd458, %rd458, %rd18;
	add.s64 	%rd457, %rd457, %rd18;
	add.s64 	%rd456, %rd456, %rd18;
	add.s64 	%rd455, %rd455, %rd18;
	add.s64 	%rd454, %rd454, %rd18;
	add.s64 	%rd453, %rd453, %rd18;
	add.s64 	%rd452, %rd452, %rd18;
	add.s64 	%rd451, %rd451, %rd18;
	add.s64 	%rd450, %rd450, %rd18;
	add.s64 	%rd449, %rd449, %rd18;
	add.s64 	%rd448, %rd448, %rd18;
	add.s64 	%rd447, %rd447, %rd18;
	add.s64 	%rd446, %rd446, %rd18;
	add.s64 	%rd445, %rd445, %rd18;
	add.s64 	%rd444, %rd444, %rd18;
	add.s64 	%rd443, %rd443, %rd18;
	add.s64 	%rd442, %rd442, %rd18;
	add.s64 	%rd441, %rd441, %rd18;
	add.s64 	%rd440, %rd440, %rd18;
	add.s64 	%rd439, %rd439, %rd18;
	add.s64 	%rd438, %rd438, %rd18;
	add.s64 	%rd437, %rd437, %rd18;
	add.s64 	%rd436, %rd436, %rd18;
	add.s64 	%rd435, %rd435, %rd18;
	setp.lt.s32 	%p114, %r1034, %r3;
	@%p114 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	mul.wide.s32 	%rd215, %r1034, 4;
	add.s64 	%rd206, %rd1, %rd215;
	add.s64 	%rd207, %rd2, %rd215;
	add.s64 	%rd208, %rd3, %rd215;
	add.s64 	%rd209, %rd4, %rd215;
	add.s64 	%rd210, %rd5, %rd215;
	add.s64 	%rd211, %rd6, %rd215;
	add.s64 	%rd212, %rd7, %rd215;
	add.s64 	%rd213, %rd8, %rd215;
	add.s64 	%rd214, %rd9, %rd215;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r384, 0xffffffffffffffff;
	@%p147 ld.global.b32 { %r384 }, [ %rd206 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r385, 0xffffffffffffffff;
	@%p146 ld.global.b32 { %r385 }, [ %rd207 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r386, 0xffffffffffffffff;
	@%p145 ld.global.b32 { %r386 }, [ %rd208 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r387, 0xffffffffffffffff;
	@%p144 ld.global.b32 { %r387 }, [ %rd209 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r388, 0xffffffffffffffff;
	@%p143 ld.global.b32 { %r388 }, [ %rd210 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r389, 0xffffffffffffffff;
	@%p142 ld.global.b32 { %r389 }, [ %rd211 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r390, 0xffffffffffffffff;
	@%p141 ld.global.b32 { %r390 }, [ %rd212 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r391, 0xffffffffffffffff;
	@%p140 ld.global.b32 { %r391 }, [ %rd213 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r392, 0xffffffffffffffff;
	@%p15 ld.global.b32 { %r392 }, [ %rd214 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p16, %r392, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p17, %r392, %r149;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p18, %p16, %p17;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r393, 1, 0, %p18;
	shfl.sync.bfly.b32	%r394, %r393, 8, 31, -1;
	and.b32  	%r395, %r394, 1;
	setp.eq.b32 	%p19, %r395, 1;
$L__tmp3:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p20, %p18, %p19;
$L__tmp4:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r396, 1, 0, %p20;
	shfl.sync.bfly.b32	%r397, %r396, 4, 31, -1;
	and.b32  	%r398, %r397, 1;
	setp.eq.b32 	%p21, %r398, 1;
$L__tmp5:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p22, %p20, %p21;
$L__tmp6:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r399, 1, 0, %p22;
	shfl.sync.bfly.b32	%r400, %r399, 2, 31, -1;
	and.b32  	%r401, %r400, 1;
	setp.eq.b32 	%p23, %r401, 1;
$L__tmp7:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p24, %p22, %p23;
$L__tmp8:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r402, 1, 0, %p24;
	shfl.sync.bfly.b32	%r403, %r402, 1, 31, -1;
	and.b32  	%r404, %r403, 1;
	setp.eq.b32 	%p25, %r404, 1;
$L__tmp9:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p26, %p24, %p25;
$L__tmp10:
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p27, %p26;
	@%p27 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	cvt.u32.u64 	%r485, %rd11;
	setp.lt.s32 	%p28, %r27, 64;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	mul.lo.s32 	%r486, %r1034, %r151;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r119, %r384, %r151;
	mul.lo.s32 	%r120, %r385, %r151;
	mul.lo.s32 	%r121, %r386, %r151;
	mul.lo.s32 	%r122, %r387, %r151;
	mul.lo.s32 	%r123, %r388, %r151;
	mul.lo.s32 	%r124, %r389, %r151;
	mul.lo.s32 	%r125, %r390, %r151;
	mul.lo.s32 	%r126, %r391, %r151;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r487, %r119, %r485;
	add.s32 	%r488, %r120, %r485;
	add.s32 	%r489, %r121, %r485;
	add.s32 	%r490, %r122, %r485;
	add.s32 	%r491, %r123, %r485;
	add.s32 	%r492, %r124, %r485;
	add.s32 	%r493, %r125, %r485;
	add.s32 	%r494, %r126, %r485;
	.loc	1 70 43                         // implicit_gemm_kernel.py:70:43
	setp.ne.s32 	%p29, %r384, -1;
	setp.ne.s32 	%p30, %r385, -1;
	setp.ne.s32 	%p31, %r386, -1;
	setp.ne.s32 	%p32, %r387, -1;
	setp.ne.s32 	%p33, %r388, -1;
	setp.ne.s32 	%p34, %r389, -1;
	setp.ne.s32 	%p35, %r390, -1;
	setp.ne.s32 	%p36, %r391, -1;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd256, %r487, 4;
	add.s64 	%rd216, %rd193, %rd256;
	mul.wide.s32 	%rd257, %r488, 4;
	add.s64 	%rd217, %rd193, %rd257;
	mul.wide.s32 	%rd258, %r489, 4;
	add.s64 	%rd218, %rd193, %rd258;
	mul.wide.s32 	%rd259, %r490, 4;
	add.s64 	%rd219, %rd193, %rd259;
	mul.wide.s32 	%rd260, %r491, 4;
	add.s64 	%rd220, %rd193, %rd260;
	mul.wide.s32 	%rd261, %r492, 4;
	add.s64 	%rd221, %rd193, %rd261;
	mul.wide.s32 	%rd262, %r493, 4;
	add.s64 	%rd222, %rd193, %rd262;
	mul.wide.s32 	%rd263, %r494, 4;
	add.s64 	%rd223, %rd193, %rd263;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s32 	%r495, %r486, %r6;
	add.s32 	%r496, %r486, %r7;
	add.s32 	%r497, %r486, %r8;
	add.s32 	%r498, %r486, %r9;
	add.s32 	%r499, %r486, %r10;
	add.s32 	%r500, %r486, %r11;
	add.s32 	%r501, %r486, %r12;
	add.s32 	%r502, %r486, %r13;
	add.s32 	%r503, %r486, %r28;
	add.s32 	%r504, %r486, %r29;
	add.s32 	%r505, %r486, %r30;
	add.s32 	%r506, %r486, %r31;
	add.s32 	%r507, %r486, %r32;
	add.s32 	%r508, %r486, %r33;
	add.s32 	%r509, %r486, %r34;
	add.s32 	%r510, %r486, %r35;
	add.s32 	%r511, %r486, %r36;
	add.s32 	%r512, %r486, %r37;
	add.s32 	%r513, %r486, %r38;
	add.s32 	%r514, %r486, %r39;
	add.s32 	%r515, %r486, %r40;
	add.s32 	%r516, %r486, %r41;
	add.s32 	%r517, %r486, %r42;
	add.s32 	%r518, %r486, %r43;
	add.s32 	%r519, %r486, %r44;
	add.s32 	%r520, %r486, %r45;
	add.s32 	%r521, %r486, %r46;
	add.s32 	%r522, %r486, %r47;
	add.s32 	%r523, %r486, %r48;
	add.s32 	%r524, %r486, %r49;
	add.s32 	%r525, %r486, %r50;
	add.s32 	%r526, %r486, %r51;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r527, %r495, %r152, %r1038;
	mad.lo.s32 	%r528, %r496, %r152, %r1038;
	mad.lo.s32 	%r529, %r497, %r152, %r1038;
	mad.lo.s32 	%r530, %r498, %r152, %r1038;
	mad.lo.s32 	%r531, %r499, %r152, %r1038;
	mad.lo.s32 	%r532, %r500, %r152, %r1038;
	mad.lo.s32 	%r533, %r501, %r152, %r1038;
	mad.lo.s32 	%r534, %r502, %r152, %r1038;
	mad.lo.s32 	%r535, %r503, %r152, %r1038;
	mad.lo.s32 	%r536, %r504, %r152, %r1038;
	mad.lo.s32 	%r537, %r505, %r152, %r1038;
	mad.lo.s32 	%r538, %r506, %r152, %r1038;
	mad.lo.s32 	%r539, %r507, %r152, %r1038;
	mad.lo.s32 	%r540, %r508, %r152, %r1038;
	mad.lo.s32 	%r541, %r509, %r152, %r1038;
	mad.lo.s32 	%r542, %r510, %r152, %r1038;
	mad.lo.s32 	%r543, %r511, %r152, %r1038;
	mad.lo.s32 	%r544, %r512, %r152, %r1038;
	mad.lo.s32 	%r545, %r513, %r152, %r1038;
	mad.lo.s32 	%r546, %r514, %r152, %r1038;
	mad.lo.s32 	%r547, %r515, %r152, %r1038;
	mad.lo.s32 	%r548, %r516, %r152, %r1038;
	mad.lo.s32 	%r549, %r517, %r152, %r1038;
	mad.lo.s32 	%r550, %r518, %r152, %r1038;
	mad.lo.s32 	%r551, %r519, %r152, %r1038;
	mad.lo.s32 	%r552, %r520, %r152, %r1038;
	mad.lo.s32 	%r553, %r521, %r152, %r1038;
	mad.lo.s32 	%r554, %r522, %r152, %r1038;
	mad.lo.s32 	%r555, %r523, %r152, %r1038;
	mad.lo.s32 	%r556, %r524, %r152, %r1038;
	mad.lo.s32 	%r557, %r525, %r152, %r1038;
	mad.lo.s32 	%r558, %r526, %r152, %r1038;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd264, %r527, 4;
	add.s64 	%rd224, %rd194, %rd264;
	mul.wide.s32 	%rd265, %r528, 4;
	add.s64 	%rd225, %rd194, %rd265;
	mul.wide.s32 	%rd266, %r529, 4;
	add.s64 	%rd226, %rd194, %rd266;
	mul.wide.s32 	%rd267, %r530, 4;
	add.s64 	%rd227, %rd194, %rd267;
	mul.wide.s32 	%rd268, %r531, 4;
	add.s64 	%rd228, %rd194, %rd268;
	mul.wide.s32 	%rd269, %r532, 4;
	add.s64 	%rd229, %rd194, %rd269;
	mul.wide.s32 	%rd270, %r533, 4;
	add.s64 	%rd230, %rd194, %rd270;
	mul.wide.s32 	%rd271, %r534, 4;
	add.s64 	%rd231, %rd194, %rd271;
	mul.wide.s32 	%rd272, %r535, 4;
	add.s64 	%rd232, %rd194, %rd272;
	mul.wide.s32 	%rd273, %r536, 4;
	add.s64 	%rd233, %rd194, %rd273;
	mul.wide.s32 	%rd274, %r537, 4;
	add.s64 	%rd234, %rd194, %rd274;
	mul.wide.s32 	%rd275, %r538, 4;
	add.s64 	%rd235, %rd194, %rd275;
	mul.wide.s32 	%rd276, %r539, 4;
	add.s64 	%rd236, %rd194, %rd276;
	mul.wide.s32 	%rd277, %r540, 4;
	add.s64 	%rd237, %rd194, %rd277;
	mul.wide.s32 	%rd278, %r541, 4;
	add.s64 	%rd238, %rd194, %rd278;
	mul.wide.s32 	%rd279, %r542, 4;
	add.s64 	%rd239, %rd194, %rd279;
	mul.wide.s32 	%rd280, %r543, 4;
	add.s64 	%rd240, %rd194, %rd280;
	mul.wide.s32 	%rd281, %r544, 4;
	add.s64 	%rd241, %rd194, %rd281;
	mul.wide.s32 	%rd282, %r545, 4;
	add.s64 	%rd242, %rd194, %rd282;
	mul.wide.s32 	%rd283, %r546, 4;
	add.s64 	%rd243, %rd194, %rd283;
	mul.wide.s32 	%rd284, %r547, 4;
	add.s64 	%rd244, %rd194, %rd284;
	mul.wide.s32 	%rd285, %r548, 4;
	add.s64 	%rd245, %rd194, %rd285;
	mul.wide.s32 	%rd286, %r549, 4;
	add.s64 	%rd246, %rd194, %rd286;
	mul.wide.s32 	%rd287, %r550, 4;
	add.s64 	%rd247, %rd194, %rd287;
	mul.wide.s32 	%rd288, %r551, 4;
	add.s64 	%rd248, %rd194, %rd288;
	mul.wide.s32 	%rd289, %r552, 4;
	add.s64 	%rd249, %rd194, %rd289;
	mul.wide.s32 	%rd290, %r553, 4;
	add.s64 	%rd250, %rd194, %rd290;
	mul.wide.s32 	%rd291, %r554, 4;
	add.s64 	%rd251, %rd194, %rd291;
	mul.wide.s32 	%rd292, %r555, 4;
	add.s64 	%rd252, %rd194, %rd292;
	mul.wide.s32 	%rd293, %r556, 4;
	add.s64 	%rd253, %rd194, %rd293;
	mul.wide.s32 	%rd294, %r557, 4;
	add.s64 	%rd254, %rd194, %rd294;
	mul.wide.s32 	%rd295, %r558, 4;
	add.s64 	%rd255, %rd194, %rd295;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p37, %r495, %r52;
	setp.lt.s32 	%p38, %r496, %r52;
	setp.lt.s32 	%p39, %r497, %r52;
	setp.lt.s32 	%p40, %r498, %r52;
	setp.lt.s32 	%p41, %r499, %r52;
	setp.lt.s32 	%p42, %r500, %r52;
	setp.lt.s32 	%p43, %r501, %r52;
	setp.lt.s32 	%p44, %r502, %r52;
	setp.lt.s32 	%p45, %r503, %r52;
	setp.lt.s32 	%p46, %r504, %r52;
	setp.lt.s32 	%p47, %r505, %r52;
	setp.lt.s32 	%p48, %r506, %r52;
	setp.lt.s32 	%p49, %r507, %r52;
	setp.lt.s32 	%p50, %r508, %r52;
	setp.lt.s32 	%p51, %r509, %r52;
	setp.lt.s32 	%p52, %r510, %r52;
	setp.lt.s32 	%p53, %r511, %r52;
	setp.lt.s32 	%p54, %r512, %r52;
	setp.lt.s32 	%p55, %r513, %r52;
	setp.lt.s32 	%p56, %r514, %r52;
	setp.lt.s32 	%p57, %r515, %r52;
	setp.lt.s32 	%p58, %r516, %r52;
	setp.lt.s32 	%p59, %r517, %r52;
	setp.lt.s32 	%p60, %r518, %r52;
	setp.lt.s32 	%p61, %r519, %r52;
	setp.lt.s32 	%p62, %r520, %r52;
	setp.lt.s32 	%p63, %r521, %r52;
	setp.lt.s32 	%p64, %r522, %r52;
	setp.lt.s32 	%p65, %r523, %r52;
	setp.lt.s32 	%p66, %r524, %r52;
	setp.lt.s32 	%p67, %r525, %r52;
	setp.lt.s32 	%p68, %r526, %r52;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	selp.b32 	%r559, 4, 0, %p1;
	selp.b32 	%r406, %r559, 0, %p29;
	// begin inline asm
	cp.async.ca.shared.global [ %r405 + 0 ], [ %rd216 + 0 ], 0x4, %r406;
	// end inline asm
	selp.b32 	%r408, %r559, 0, %p30;
	// begin inline asm
	cp.async.ca.shared.global [ %r407 + 0 ], [ %rd217 + 0 ], 0x4, %r408;
	// end inline asm
	selp.b32 	%r410, %r559, 0, %p31;
	// begin inline asm
	cp.async.ca.shared.global [ %r409 + 0 ], [ %rd218 + 0 ], 0x4, %r410;
	// end inline asm
	selp.b32 	%r412, %r559, 0, %p32;
	// begin inline asm
	cp.async.ca.shared.global [ %r411 + 0 ], [ %rd219 + 0 ], 0x4, %r412;
	// end inline asm
	selp.b32 	%r414, %r559, 0, %p33;
	// begin inline asm
	cp.async.ca.shared.global [ %r413 + 0 ], [ %rd220 + 0 ], 0x4, %r414;
	// end inline asm
	selp.b32 	%r416, %r559, 0, %p34;
	// begin inline asm
	cp.async.ca.shared.global [ %r415 + 0 ], [ %rd221 + 0 ], 0x4, %r416;
	// end inline asm
	selp.b32 	%r418, %r559, 0, %p35;
	// begin inline asm
	cp.async.ca.shared.global [ %r417 + 0 ], [ %rd222 + 0 ], 0x4, %r418;
	// end inline asm
	selp.b32 	%r420, %r559, 0, %p36;
	// begin inline asm
	cp.async.ca.shared.global [ %r419 + 0 ], [ %rd223 + 0 ], 0x4, %r420;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r560, 4, 0, %p2;
	selp.b32 	%r422, %r560, 0, %p37;
	// begin inline asm
	cp.async.ca.shared.global [ %r421 + 0 ], [ %rd224 + 0 ], 0x4, %r422;
	// end inline asm
	selp.b32 	%r424, %r560, 0, %p38;
	// begin inline asm
	cp.async.ca.shared.global [ %r423 + 0 ], [ %rd225 + 0 ], 0x4, %r424;
	// end inline asm
	selp.b32 	%r426, %r560, 0, %p39;
	// begin inline asm
	cp.async.ca.shared.global [ %r425 + 0 ], [ %rd226 + 0 ], 0x4, %r426;
	// end inline asm
	selp.b32 	%r428, %r560, 0, %p40;
	// begin inline asm
	cp.async.ca.shared.global [ %r427 + 0 ], [ %rd227 + 0 ], 0x4, %r428;
	// end inline asm
	selp.b32 	%r430, %r560, 0, %p41;
	// begin inline asm
	cp.async.ca.shared.global [ %r429 + 0 ], [ %rd228 + 0 ], 0x4, %r430;
	// end inline asm
	selp.b32 	%r432, %r560, 0, %p42;
	// begin inline asm
	cp.async.ca.shared.global [ %r431 + 0 ], [ %rd229 + 0 ], 0x4, %r432;
	// end inline asm
	selp.b32 	%r434, %r560, 0, %p43;
	// begin inline asm
	cp.async.ca.shared.global [ %r433 + 0 ], [ %rd230 + 0 ], 0x4, %r434;
	// end inline asm
	selp.b32 	%r436, %r560, 0, %p44;
	// begin inline asm
	cp.async.ca.shared.global [ %r435 + 0 ], [ %rd231 + 0 ], 0x4, %r436;
	// end inline asm
	selp.b32 	%r438, %r560, 0, %p45;
	// begin inline asm
	cp.async.ca.shared.global [ %r437 + 0 ], [ %rd232 + 0 ], 0x4, %r438;
	// end inline asm
	selp.b32 	%r440, %r560, 0, %p46;
	// begin inline asm
	cp.async.ca.shared.global [ %r439 + 0 ], [ %rd233 + 0 ], 0x4, %r440;
	// end inline asm
	selp.b32 	%r442, %r560, 0, %p47;
	// begin inline asm
	cp.async.ca.shared.global [ %r441 + 0 ], [ %rd234 + 0 ], 0x4, %r442;
	// end inline asm
	selp.b32 	%r444, %r560, 0, %p48;
	// begin inline asm
	cp.async.ca.shared.global [ %r443 + 0 ], [ %rd235 + 0 ], 0x4, %r444;
	// end inline asm
	selp.b32 	%r446, %r560, 0, %p49;
	// begin inline asm
	cp.async.ca.shared.global [ %r445 + 0 ], [ %rd236 + 0 ], 0x4, %r446;
	// end inline asm
	selp.b32 	%r448, %r560, 0, %p50;
	// begin inline asm
	cp.async.ca.shared.global [ %r447 + 0 ], [ %rd237 + 0 ], 0x4, %r448;
	// end inline asm
	selp.b32 	%r450, %r560, 0, %p51;
	// begin inline asm
	cp.async.ca.shared.global [ %r449 + 0 ], [ %rd238 + 0 ], 0x4, %r450;
	// end inline asm
	selp.b32 	%r452, %r560, 0, %p52;
	// begin inline asm
	cp.async.ca.shared.global [ %r451 + 0 ], [ %rd239 + 0 ], 0x4, %r452;
	// end inline asm
	selp.b32 	%r454, %r560, 0, %p53;
	// begin inline asm
	cp.async.ca.shared.global [ %r453 + 0 ], [ %rd240 + 0 ], 0x4, %r454;
	// end inline asm
	selp.b32 	%r456, %r560, 0, %p54;
	// begin inline asm
	cp.async.ca.shared.global [ %r455 + 0 ], [ %rd241 + 0 ], 0x4, %r456;
	// end inline asm
	selp.b32 	%r458, %r560, 0, %p55;
	// begin inline asm
	cp.async.ca.shared.global [ %r457 + 0 ], [ %rd242 + 0 ], 0x4, %r458;
	// end inline asm
	selp.b32 	%r460, %r560, 0, %p56;
	// begin inline asm
	cp.async.ca.shared.global [ %r459 + 0 ], [ %rd243 + 0 ], 0x4, %r460;
	// end inline asm
	selp.b32 	%r462, %r560, 0, %p57;
	// begin inline asm
	cp.async.ca.shared.global [ %r461 + 0 ], [ %rd244 + 0 ], 0x4, %r462;
	// end inline asm
	selp.b32 	%r464, %r560, 0, %p58;
	// begin inline asm
	cp.async.ca.shared.global [ %r463 + 0 ], [ %rd245 + 0 ], 0x4, %r464;
	// end inline asm
	selp.b32 	%r466, %r560, 0, %p59;
	// begin inline asm
	cp.async.ca.shared.global [ %r465 + 0 ], [ %rd246 + 0 ], 0x4, %r466;
	// end inline asm
	selp.b32 	%r468, %r560, 0, %p60;
	// begin inline asm
	cp.async.ca.shared.global [ %r467 + 0 ], [ %rd247 + 0 ], 0x4, %r468;
	// end inline asm
	selp.b32 	%r470, %r560, 0, %p61;
	// begin inline asm
	cp.async.ca.shared.global [ %r469 + 0 ], [ %rd248 + 0 ], 0x4, %r470;
	// end inline asm
	selp.b32 	%r472, %r560, 0, %p62;
	// begin inline asm
	cp.async.ca.shared.global [ %r471 + 0 ], [ %rd249 + 0 ], 0x4, %r472;
	// end inline asm
	selp.b32 	%r474, %r560, 0, %p63;
	// begin inline asm
	cp.async.ca.shared.global [ %r473 + 0 ], [ %rd250 + 0 ], 0x4, %r474;
	// end inline asm
	selp.b32 	%r476, %r560, 0, %p64;
	// begin inline asm
	cp.async.ca.shared.global [ %r475 + 0 ], [ %rd251 + 0 ], 0x4, %r476;
	// end inline asm
	selp.b32 	%r478, %r560, 0, %p65;
	// begin inline asm
	cp.async.ca.shared.global [ %r477 + 0 ], [ %rd252 + 0 ], 0x4, %r478;
	// end inline asm
	selp.b32 	%r480, %r560, 0, %p66;
	// begin inline asm
	cp.async.ca.shared.global [ %r479 + 0 ], [ %rd253 + 0 ], 0x4, %r480;
	// end inline asm
	selp.b32 	%r482, %r560, 0, %p67;
	// begin inline asm
	cp.async.ca.shared.global [ %r481 + 0 ], [ %rd254 + 0 ], 0x4, %r482;
	// end inline asm
	selp.b32 	%r484, %r560, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r483 + 0 ], [ %rd255 + 0 ], 0x4, %r484;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p28 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r562, %r109, %r126;
	cvt.u64.u32 	%rd84, %r562;
	add.s32 	%r563, %r109, %r125;
	cvt.u64.u32 	%rd85, %r563;
	add.s32 	%r564, %r109, %r124;
	cvt.u64.u32 	%rd86, %r564;
	add.s32 	%r565, %r109, %r123;
	cvt.u64.u32 	%rd87, %r565;
	add.s32 	%r566, %r109, %r122;
	cvt.u64.u32 	%rd88, %r566;
	add.s32 	%r567, %r109, %r121;
	cvt.u64.u32 	%rd89, %r567;
	add.s32 	%r568, %r109, %r120;
	cvt.u64.u32 	%rd90, %r568;
	add.s32 	%r569, %r109, %r119;
	cvt.u64.u32 	%rd91, %r569;
	mov.b32 	%r1035, -1;
	mov.b64 	%rd500, 0;
	mov.u64 	%rd468, %rd435;
	mov.u64 	%rd469, %rd436;
	mov.u64 	%rd470, %rd437;
	mov.u64 	%rd471, %rd438;
	mov.u64 	%rd472, %rd439;
	mov.u64 	%rd473, %rd440;
	mov.u64 	%rd474, %rd441;
	mov.u64 	%rd475, %rd442;
	mov.u64 	%rd476, %rd443;
	mov.u64 	%rd477, %rd444;
	mov.u64 	%rd478, %rd445;
	mov.u64 	%rd479, %rd446;
	mov.u64 	%rd480, %rd447;
	mov.u64 	%rd481, %rd448;
	mov.u64 	%rd482, %rd449;
	mov.u64 	%rd483, %rd450;
	mov.u64 	%rd484, %rd451;
	mov.u64 	%rd485, %rd452;
	mov.u64 	%rd486, %rd453;
	mov.u64 	%rd487, %rd454;
	mov.u64 	%rd488, %rd455;
	mov.u64 	%rd489, %rd456;
	mov.u64 	%rd490, %rd457;
	mov.u64 	%rd491, %rd458;
	mov.u64 	%rd492, %rd459;
	mov.u64 	%rd493, %rd460;
	mov.u64 	%rd494, %rd461;
	mov.u64 	%rd495, %rd462;
	mov.u64 	%rd496, %rd463;
	mov.u64 	%rd497, %rd464;
	mov.u64 	%rd498, %rd465;
	mov.u64 	%rd499, %rd466;
	mov.u64 	%rd501, %rd500;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p78, %rd501, %rd10;
	add.s32 	%r786, %r1035, 1;
	setp.gt.u32 	%p79, %r1035, 2147483646;
	selp.b32 	%r1035, %r786, 0, %p79;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r787, %r1035, 12;
	add.s32 	%r789, %r1033, %r787;
	add.s32 	%r790, %r789, 16384;
	add.s32 	%r574, %r790, %r791;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r610, %r611, %r612, %r613}, [%r574];
	// end inline asm
	add.s32 	%r579, %r790, %r792;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r622, %r623, %r624, %r625}, [%r579];
	// end inline asm
	add.s32 	%r584, %r790, %r793;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r634, %r635, %r636, %r637}, [%r584];
	// end inline asm
	add.s32 	%r589, %r790, %r794;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r646, %r647, %r648, %r649}, [%r589];
	// end inline asm
	add.s32 	%r594, %r790, %r795;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r658, %r659, %r660, %r661}, [%r594];
	// end inline asm
	add.s32 	%r599, %r790, %r796;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r670, %r671, %r672, %r673}, [%r599];
	// end inline asm
	add.s32 	%r604, %r790, %r797;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r682, %r683, %r684, %r685}, [%r604];
	// end inline asm
	add.s32 	%r609, %r790, %r798;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r694, %r695, %r696, %r697}, [%r609];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	shl.b32 	%r799, %r1035, 14;
	add.s32 	%r800, %r1033, %r799;
	add.s32 	%r802, %r800, %r801;
	add.s32 	%r804, %r802, %r803;
	ld.shared.u32 	%r614, [%r804];
	ld.shared.u32 	%r615, [%r804+1024];
	add.s32 	%r806, %r802, %r805;
	ld.shared.u32 	%r626, [%r806+2048];
	ld.shared.u32 	%r627, [%r804+3072];
	add.s32 	%r808, %r802, %r807;
	ld.shared.u32 	%r638, [%r808];
	ld.shared.u32 	%r639, [%r804+5120];
	ld.shared.u32 	%r650, [%r806+6144];
	ld.shared.u32 	%r651, [%r804+7168];
	ld.shared.u32 	%r662, [%r804+8192];
	ld.shared.u32 	%r663, [%r804+9216];
	ld.shared.u32 	%r674, [%r804+10240];
	ld.shared.u32 	%r675, [%r804+11264];
	ld.shared.u32 	%r686, [%r804+12288];
	ld.shared.u32 	%r687, [%r804+13312];
	ld.shared.u32 	%r698, [%r804+14336];
	ld.shared.u32 	%r699, [%r804+15360];
	add.s32 	%r810, %r800, %r809;
	add.s32 	%r811, %r810, %r803;
	ld.shared.u32 	%r620, [%r811];
	ld.shared.u32 	%r621, [%r811+1024];
	add.s32 	%r812, %r810, %r805;
	ld.shared.u32 	%r632, [%r812+2048];
	ld.shared.u32 	%r633, [%r811+3072];
	add.s32 	%r813, %r810, %r807;
	ld.shared.u32 	%r644, [%r813];
	ld.shared.u32 	%r645, [%r811+5120];
	ld.shared.u32 	%r656, [%r812+6144];
	ld.shared.u32 	%r657, [%r811+7168];
	ld.shared.u32 	%r668, [%r811+8192];
	ld.shared.u32 	%r669, [%r811+9216];
	ld.shared.u32 	%r680, [%r811+10240];
	ld.shared.u32 	%r681, [%r811+11264];
	ld.shared.u32 	%r692, [%r811+12288];
	ld.shared.u32 	%r693, [%r811+13312];
	ld.shared.u32 	%r704, [%r811+14336];
	ld.shared.u32 	%r705, [%r811+15360];
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r610, %r611, %r612, %r613 }, { %r614, %r615 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r610, %r611, %r612, %r613 }, { %r620, %r621 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r622, %r623, %r624, %r625 }, { %r626, %r627 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r622, %r623, %r624, %r625 }, { %r632, %r633 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r634, %r635, %r636, %r637 }, { %r638, %r639 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r634, %r635, %r636, %r637 }, { %r644, %r645 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r646, %r647, %r648, %r649 }, { %r650, %r651 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r646, %r647, %r648, %r649 }, { %r656, %r657 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r658, %r659, %r660, %r661 }, { %r662, %r663 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r658, %r659, %r660, %r661 }, { %r668, %r669 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r670, %r671, %r672, %r673 }, { %r674, %r675 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r670, %r671, %r672, %r673 }, { %r680, %r681 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r682, %r683, %r684, %r685 }, { %r686, %r687 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r682, %r683, %r684, %r685 }, { %r692, %r693 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f178, %f179, %f180, %f181 }, { %r694, %r695, %r696, %r697 }, { %r698, %r699 }, { %f178, %f179, %f180, %f181 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f182, %f183, %f184, %f185 }, { %r694, %r695, %r696, %r697 }, { %r704, %r705 }, { %f182, %f183, %f184, %f185 };
	// end inline asm
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd501, %rd501, 1;
	.loc	1 69 89                         // implicit_gemm_kernel.py:69:89
	add.s64 	%rd337, %rd91, %rd500;
	add.s64 	%rd338, %rd90, %rd500;
	add.s64 	%rd339, %rd89, %rd500;
	add.s64 	%rd340, %rd88, %rd500;
	add.s64 	%rd341, %rd87, %rd500;
	add.s64 	%rd342, %rd86, %rd500;
	add.s64 	%rd343, %rd85, %rd500;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd344, %rd84, %rd500;
	cvt.u32.u64 	%r814, %rd337;
	mul.wide.s32 	%rd345, %r814, 4;
	add.s64 	%rd297, %rd193, %rd345;
	cvt.u32.u64 	%r815, %rd338;
	mul.wide.s32 	%rd346, %r815, 4;
	add.s64 	%rd298, %rd193, %rd346;
	cvt.u32.u64 	%r816, %rd339;
	mul.wide.s32 	%rd347, %r816, 4;
	add.s64 	%rd299, %rd193, %rd347;
	cvt.u32.u64 	%r817, %rd340;
	mul.wide.s32 	%rd348, %r817, 4;
	add.s64 	%rd300, %rd193, %rd348;
	cvt.u32.u64 	%r818, %rd341;
	mul.wide.s32 	%rd349, %r818, 4;
	add.s64 	%rd301, %rd193, %rd349;
	cvt.u32.u64 	%r819, %rd342;
	mul.wide.s32 	%rd350, %r819, 4;
	add.s64 	%rd302, %rd193, %rd350;
	cvt.u32.u64 	%r820, %rd343;
	mul.wide.s32 	%rd351, %r820, 4;
	add.s64 	%rd303, %rd193, %rd351;
	cvt.u32.u64 	%r821, %rd344;
	mul.wide.s32 	%rd352, %r821, 4;
	add.s64 	%rd304, %rd193, %rd352;
	.loc	1 70 98                         // implicit_gemm_kernel.py:70:98
	add.s64 	%rd353, %rd14, %rd500;
	setp.lt.s64 	%p80, %rd353, %rd12;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s64 	%rd354, %rd467, %rd500;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	add.s64 	%rd355, %rd11, %rd468;
	add.s64 	%rd356, %rd11, %rd469;
	add.s64 	%rd357, %rd11, %rd470;
	add.s64 	%rd358, %rd11, %rd471;
	add.s64 	%rd359, %rd11, %rd472;
	add.s64 	%rd360, %rd11, %rd473;
	add.s64 	%rd361, %rd11, %rd474;
	add.s64 	%rd362, %rd11, %rd475;
	add.s64 	%rd363, %rd11, %rd476;
	add.s64 	%rd364, %rd11, %rd477;
	add.s64 	%rd365, %rd11, %rd478;
	add.s64 	%rd366, %rd11, %rd479;
	add.s64 	%rd367, %rd11, %rd480;
	add.s64 	%rd368, %rd11, %rd481;
	add.s64 	%rd369, %rd11, %rd482;
	add.s64 	%rd370, %rd11, %rd483;
	add.s64 	%rd371, %rd11, %rd484;
	add.s64 	%rd372, %rd11, %rd485;
	add.s64 	%rd373, %rd11, %rd486;
	add.s64 	%rd374, %rd11, %rd487;
	add.s64 	%rd375, %rd11, %rd488;
	add.s64 	%rd376, %rd11, %rd489;
	add.s64 	%rd377, %rd11, %rd490;
	add.s64 	%rd378, %rd11, %rd491;
	add.s64 	%rd379, %rd11, %rd492;
	add.s64 	%rd380, %rd11, %rd493;
	add.s64 	%rd381, %rd11, %rd494;
	add.s64 	%rd382, %rd11, %rd495;
	add.s64 	%rd383, %rd11, %rd496;
	add.s64 	%rd384, %rd11, %rd497;
	add.s64 	%rd385, %rd11, %rd498;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s64 	%rd386, %rd11, %rd499;
	cvt.u32.u64 	%r822, %rd355;
	mul.wide.s32 	%rd387, %r822, 4;
	add.s64 	%rd305, %rd194, %rd387;
	cvt.u32.u64 	%r823, %rd356;
	mul.wide.s32 	%rd388, %r823, 4;
	add.s64 	%rd306, %rd194, %rd388;
	cvt.u32.u64 	%r824, %rd357;
	mul.wide.s32 	%rd389, %r824, 4;
	add.s64 	%rd307, %rd194, %rd389;
	cvt.u32.u64 	%r825, %rd358;
	mul.wide.s32 	%rd390, %r825, 4;
	add.s64 	%rd308, %rd194, %rd390;
	cvt.u32.u64 	%r826, %rd359;
	mul.wide.s32 	%rd391, %r826, 4;
	add.s64 	%rd309, %rd194, %rd391;
	cvt.u32.u64 	%r827, %rd360;
	mul.wide.s32 	%rd392, %r827, 4;
	add.s64 	%rd310, %rd194, %rd392;
	cvt.u32.u64 	%r828, %rd361;
	mul.wide.s32 	%rd393, %r828, 4;
	add.s64 	%rd311, %rd194, %rd393;
	cvt.u32.u64 	%r829, %rd362;
	mul.wide.s32 	%rd394, %r829, 4;
	add.s64 	%rd312, %rd194, %rd394;
	cvt.u32.u64 	%r830, %rd363;
	mul.wide.s32 	%rd395, %r830, 4;
	add.s64 	%rd313, %rd194, %rd395;
	cvt.u32.u64 	%r831, %rd364;
	mul.wide.s32 	%rd396, %r831, 4;
	add.s64 	%rd314, %rd194, %rd396;
	cvt.u32.u64 	%r832, %rd365;
	mul.wide.s32 	%rd397, %r832, 4;
	add.s64 	%rd315, %rd194, %rd397;
	cvt.u32.u64 	%r833, %rd366;
	mul.wide.s32 	%rd398, %r833, 4;
	add.s64 	%rd316, %rd194, %rd398;
	cvt.u32.u64 	%r834, %rd367;
	mul.wide.s32 	%rd399, %r834, 4;
	add.s64 	%rd317, %rd194, %rd399;
	cvt.u32.u64 	%r835, %rd368;
	mul.wide.s32 	%rd400, %r835, 4;
	add.s64 	%rd318, %rd194, %rd400;
	cvt.u32.u64 	%r836, %rd369;
	mul.wide.s32 	%rd401, %r836, 4;
	add.s64 	%rd319, %rd194, %rd401;
	cvt.u32.u64 	%r837, %rd370;
	mul.wide.s32 	%rd402, %r837, 4;
	add.s64 	%rd320, %rd194, %rd402;
	cvt.u32.u64 	%r838, %rd371;
	mul.wide.s32 	%rd403, %r838, 4;
	add.s64 	%rd321, %rd194, %rd403;
	cvt.u32.u64 	%r839, %rd372;
	mul.wide.s32 	%rd404, %r839, 4;
	add.s64 	%rd322, %rd194, %rd404;
	cvt.u32.u64 	%r840, %rd373;
	mul.wide.s32 	%rd405, %r840, 4;
	add.s64 	%rd323, %rd194, %rd405;
	cvt.u32.u64 	%r841, %rd374;
	mul.wide.s32 	%rd406, %r841, 4;
	add.s64 	%rd324, %rd194, %rd406;
	cvt.u32.u64 	%r842, %rd375;
	mul.wide.s32 	%rd407, %r842, 4;
	add.s64 	%rd325, %rd194, %rd407;
	cvt.u32.u64 	%r843, %rd376;
	mul.wide.s32 	%rd408, %r843, 4;
	add.s64 	%rd326, %rd194, %rd408;
	cvt.u32.u64 	%r844, %rd377;
	mul.wide.s32 	%rd409, %r844, 4;
	add.s64 	%rd327, %rd194, %rd409;
	cvt.u32.u64 	%r845, %rd378;
	mul.wide.s32 	%rd410, %r845, 4;
	add.s64 	%rd328, %rd194, %rd410;
	cvt.u32.u64 	%r846, %rd379;
	mul.wide.s32 	%rd411, %r846, 4;
	add.s64 	%rd329, %rd194, %rd411;
	cvt.u32.u64 	%r847, %rd380;
	mul.wide.s32 	%rd412, %r847, 4;
	add.s64 	%rd330, %rd194, %rd412;
	cvt.u32.u64 	%r848, %rd381;
	mul.wide.s32 	%rd413, %r848, 4;
	add.s64 	%rd331, %rd194, %rd413;
	cvt.u32.u64 	%r849, %rd382;
	mul.wide.s32 	%rd414, %r849, 4;
	add.s64 	%rd332, %rd194, %rd414;
	cvt.u32.u64 	%r850, %rd383;
	mul.wide.s32 	%rd415, %r850, 4;
	add.s64 	%rd333, %rd194, %rd415;
	cvt.u32.u64 	%r851, %rd384;
	mul.wide.s32 	%rd416, %r851, 4;
	add.s64 	%rd334, %rd194, %rd416;
	cvt.u32.u64 	%r852, %rd385;
	mul.wide.s32 	%rd417, %r852, 4;
	add.s64 	%rd335, %rd194, %rd417;
	cvt.u32.u64 	%r853, %rd386;
	mul.wide.s32 	%rd418, %r853, 4;
	add.s64 	%rd336, %rd194, %rd418;
	cvt.u32.u64 	%r854, %rd354;
	add.s32 	%r855, %r854, 64;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p81, %r855, %r52;
	add.s32 	%r856, %r854, 66;
	setp.lt.s32 	%p82, %r856, %r52;
	add.s32 	%r857, %r854, 68;
	setp.lt.s32 	%p83, %r857, %r52;
	add.s32 	%r858, %r854, 70;
	setp.lt.s32 	%p84, %r858, %r52;
	add.s32 	%r859, %r854, 72;
	setp.lt.s32 	%p85, %r859, %r52;
	add.s32 	%r860, %r854, 74;
	setp.lt.s32 	%p86, %r860, %r52;
	add.s32 	%r861, %r854, 76;
	setp.lt.s32 	%p87, %r861, %r52;
	add.s32 	%r862, %r854, 78;
	setp.lt.s32 	%p88, %r862, %r52;
	add.s32 	%r863, %r854, 80;
	setp.lt.s32 	%p89, %r863, %r52;
	add.s32 	%r864, %r854, 82;
	setp.lt.s32 	%p90, %r864, %r52;
	add.s32 	%r865, %r854, 84;
	setp.lt.s32 	%p91, %r865, %r52;
	add.s32 	%r866, %r854, 86;
	setp.lt.s32 	%p92, %r866, %r52;
	add.s32 	%r867, %r854, 88;
	setp.lt.s32 	%p93, %r867, %r52;
	add.s32 	%r868, %r854, 90;
	setp.lt.s32 	%p94, %r868, %r52;
	add.s32 	%r869, %r854, 92;
	setp.lt.s32 	%p95, %r869, %r52;
	add.s32 	%r870, %r854, 94;
	setp.lt.s32 	%p96, %r870, %r52;
	add.s32 	%r871, %r854, 96;
	setp.lt.s32 	%p97, %r871, %r52;
	add.s32 	%r872, %r854, 98;
	setp.lt.s32 	%p98, %r872, %r52;
	add.s32 	%r873, %r854, 100;
	setp.lt.s32 	%p99, %r873, %r52;
	add.s32 	%r874, %r854, 102;
	setp.lt.s32 	%p100, %r874, %r52;
	add.s32 	%r875, %r854, 104;
	setp.lt.s32 	%p101, %r875, %r52;
	add.s32 	%r876, %r854, 106;
	setp.lt.s32 	%p102, %r876, %r52;
	add.s32 	%r877, %r854, 108;
	setp.lt.s32 	%p103, %r877, %r52;
	add.s32 	%r878, %r854, 110;
	setp.lt.s32 	%p104, %r878, %r52;
	add.s32 	%r879, %r854, 112;
	setp.lt.s32 	%p105, %r879, %r52;
	add.s32 	%r880, %r854, 114;
	setp.lt.s32 	%p106, %r880, %r52;
	add.s32 	%r881, %r854, 116;
	setp.lt.s32 	%p107, %r881, %r52;
	add.s32 	%r882, %r854, 118;
	setp.lt.s32 	%p108, %r882, %r52;
	add.s32 	%r883, %r854, 120;
	setp.lt.s32 	%p109, %r883, %r52;
	add.s32 	%r884, %r854, 122;
	setp.lt.s32 	%p110, %r884, %r52;
	add.s32 	%r885, %r854, 124;
	setp.lt.s32 	%p111, %r885, %r52;
	add.s32 	%r886, %r854, 126;
	setp.lt.s32 	%p112, %r886, %r52;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r887, 4, 0, %p80;
	selp.b32 	%r888, %r887, 0, %p29;
	selp.b32 	%r707, %r888, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r405 + 0 ], [ %rd297 + 0 ], 0x4, %r707;
	// end inline asm
	selp.b32 	%r889, %r887, 0, %p30;
	selp.b32 	%r709, %r889, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r407 + 0 ], [ %rd298 + 0 ], 0x4, %r709;
	// end inline asm
	selp.b32 	%r890, %r887, 0, %p31;
	selp.b32 	%r711, %r890, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r409 + 0 ], [ %rd299 + 0 ], 0x4, %r711;
	// end inline asm
	selp.b32 	%r891, %r887, 0, %p32;
	selp.b32 	%r713, %r891, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r411 + 0 ], [ %rd300 + 0 ], 0x4, %r713;
	// end inline asm
	selp.b32 	%r892, %r887, 0, %p33;
	selp.b32 	%r715, %r892, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r413 + 0 ], [ %rd301 + 0 ], 0x4, %r715;
	// end inline asm
	selp.b32 	%r893, %r887, 0, %p34;
	selp.b32 	%r717, %r893, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r415 + 0 ], [ %rd302 + 0 ], 0x4, %r717;
	// end inline asm
	selp.b32 	%r894, %r887, 0, %p35;
	selp.b32 	%r719, %r894, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r417 + 0 ], [ %rd303 + 0 ], 0x4, %r719;
	// end inline asm
	selp.b32 	%r895, %r887, 0, %p36;
	selp.b32 	%r721, %r895, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r419 + 0 ], [ %rd304 + 0 ], 0x4, %r721;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r896, 4, 0, %p81;
	selp.b32 	%r897, %r896, 0, %p4;
	selp.b32 	%r723, %r897, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r421 + 0 ], [ %rd305 + 0 ], 0x4, %r723;
	// end inline asm
	selp.b32 	%r898, 4, 0, %p82;
	selp.b32 	%r899, %r898, 0, %p4;
	selp.b32 	%r725, %r899, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r423 + 0 ], [ %rd306 + 0 ], 0x4, %r725;
	// end inline asm
	selp.b32 	%r900, 4, 0, %p83;
	selp.b32 	%r901, %r900, 0, %p4;
	selp.b32 	%r727, %r901, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r425 + 0 ], [ %rd307 + 0 ], 0x4, %r727;
	// end inline asm
	selp.b32 	%r902, 4, 0, %p84;
	selp.b32 	%r903, %r902, 0, %p4;
	selp.b32 	%r729, %r903, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r427 + 0 ], [ %rd308 + 0 ], 0x4, %r729;
	// end inline asm
	selp.b32 	%r904, 4, 0, %p85;
	selp.b32 	%r905, %r904, 0, %p4;
	selp.b32 	%r731, %r905, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r429 + 0 ], [ %rd309 + 0 ], 0x4, %r731;
	// end inline asm
	selp.b32 	%r906, 4, 0, %p86;
	selp.b32 	%r907, %r906, 0, %p4;
	selp.b32 	%r733, %r907, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r431 + 0 ], [ %rd310 + 0 ], 0x4, %r733;
	// end inline asm
	selp.b32 	%r908, 4, 0, %p87;
	selp.b32 	%r909, %r908, 0, %p4;
	selp.b32 	%r735, %r909, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r433 + 0 ], [ %rd311 + 0 ], 0x4, %r735;
	// end inline asm
	selp.b32 	%r910, 4, 0, %p88;
	selp.b32 	%r911, %r910, 0, %p4;
	selp.b32 	%r737, %r911, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r435 + 0 ], [ %rd312 + 0 ], 0x4, %r737;
	// end inline asm
	selp.b32 	%r912, 4, 0, %p89;
	selp.b32 	%r913, %r912, 0, %p4;
	selp.b32 	%r739, %r913, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r437 + 0 ], [ %rd313 + 0 ], 0x4, %r739;
	// end inline asm
	selp.b32 	%r914, 4, 0, %p90;
	selp.b32 	%r915, %r914, 0, %p4;
	selp.b32 	%r741, %r915, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r439 + 0 ], [ %rd314 + 0 ], 0x4, %r741;
	// end inline asm
	selp.b32 	%r916, 4, 0, %p91;
	selp.b32 	%r917, %r916, 0, %p4;
	selp.b32 	%r743, %r917, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r441 + 0 ], [ %rd315 + 0 ], 0x4, %r743;
	// end inline asm
	selp.b32 	%r918, 4, 0, %p92;
	selp.b32 	%r919, %r918, 0, %p4;
	selp.b32 	%r745, %r919, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r443 + 0 ], [ %rd316 + 0 ], 0x4, %r745;
	// end inline asm
	selp.b32 	%r920, 4, 0, %p93;
	selp.b32 	%r921, %r920, 0, %p4;
	selp.b32 	%r747, %r921, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r445 + 0 ], [ %rd317 + 0 ], 0x4, %r747;
	// end inline asm
	selp.b32 	%r922, 4, 0, %p94;
	selp.b32 	%r923, %r922, 0, %p4;
	selp.b32 	%r749, %r923, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r447 + 0 ], [ %rd318 + 0 ], 0x4, %r749;
	// end inline asm
	selp.b32 	%r924, 4, 0, %p95;
	selp.b32 	%r925, %r924, 0, %p4;
	selp.b32 	%r751, %r925, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r449 + 0 ], [ %rd319 + 0 ], 0x4, %r751;
	// end inline asm
	selp.b32 	%r926, 4, 0, %p96;
	selp.b32 	%r927, %r926, 0, %p4;
	selp.b32 	%r753, %r927, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r451 + 0 ], [ %rd320 + 0 ], 0x4, %r753;
	// end inline asm
	selp.b32 	%r928, 4, 0, %p97;
	selp.b32 	%r929, %r928, 0, %p4;
	selp.b32 	%r755, %r929, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r453 + 0 ], [ %rd321 + 0 ], 0x4, %r755;
	// end inline asm
	selp.b32 	%r930, 4, 0, %p98;
	selp.b32 	%r931, %r930, 0, %p4;
	selp.b32 	%r757, %r931, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r455 + 0 ], [ %rd322 + 0 ], 0x4, %r757;
	// end inline asm
	selp.b32 	%r932, 4, 0, %p99;
	selp.b32 	%r933, %r932, 0, %p4;
	selp.b32 	%r759, %r933, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r457 + 0 ], [ %rd323 + 0 ], 0x4, %r759;
	// end inline asm
	selp.b32 	%r934, 4, 0, %p100;
	selp.b32 	%r935, %r934, 0, %p4;
	selp.b32 	%r761, %r935, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r459 + 0 ], [ %rd324 + 0 ], 0x4, %r761;
	// end inline asm
	selp.b32 	%r936, 4, 0, %p101;
	selp.b32 	%r937, %r936, 0, %p4;
	selp.b32 	%r763, %r937, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r461 + 0 ], [ %rd325 + 0 ], 0x4, %r763;
	// end inline asm
	selp.b32 	%r938, 4, 0, %p102;
	selp.b32 	%r939, %r938, 0, %p4;
	selp.b32 	%r765, %r939, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r463 + 0 ], [ %rd326 + 0 ], 0x4, %r765;
	// end inline asm
	selp.b32 	%r940, 4, 0, %p103;
	selp.b32 	%r941, %r940, 0, %p4;
	selp.b32 	%r767, %r941, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r465 + 0 ], [ %rd327 + 0 ], 0x4, %r767;
	// end inline asm
	selp.b32 	%r942, 4, 0, %p104;
	selp.b32 	%r943, %r942, 0, %p4;
	selp.b32 	%r769, %r943, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r467 + 0 ], [ %rd328 + 0 ], 0x4, %r769;
	// end inline asm
	selp.b32 	%r944, 4, 0, %p105;
	selp.b32 	%r945, %r944, 0, %p4;
	selp.b32 	%r771, %r945, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r469 + 0 ], [ %rd329 + 0 ], 0x4, %r771;
	// end inline asm
	selp.b32 	%r946, 4, 0, %p106;
	selp.b32 	%r947, %r946, 0, %p4;
	selp.b32 	%r773, %r947, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r471 + 0 ], [ %rd330 + 0 ], 0x4, %r773;
	// end inline asm
	selp.b32 	%r948, 4, 0, %p107;
	selp.b32 	%r949, %r948, 0, %p4;
	selp.b32 	%r775, %r949, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r473 + 0 ], [ %rd331 + 0 ], 0x4, %r775;
	// end inline asm
	selp.b32 	%r950, 4, 0, %p108;
	selp.b32 	%r951, %r950, 0, %p4;
	selp.b32 	%r777, %r951, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r475 + 0 ], [ %rd332 + 0 ], 0x4, %r777;
	// end inline asm
	selp.b32 	%r952, 4, 0, %p109;
	selp.b32 	%r953, %r952, 0, %p4;
	selp.b32 	%r779, %r953, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r477 + 0 ], [ %rd333 + 0 ], 0x4, %r779;
	// end inline asm
	selp.b32 	%r954, 4, 0, %p110;
	selp.b32 	%r955, %r954, 0, %p4;
	selp.b32 	%r781, %r955, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r479 + 0 ], [ %rd334 + 0 ], 0x4, %r781;
	// end inline asm
	selp.b32 	%r956, 4, 0, %p111;
	selp.b32 	%r957, %r956, 0, %p4;
	selp.b32 	%r783, %r957, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r481 + 0 ], [ %rd335 + 0 ], 0x4, %r783;
	// end inline asm
	selp.b32 	%r958, 4, 0, %p112;
	selp.b32 	%r959, %r958, 0, %p4;
	selp.b32 	%r785, %r959, 0, %p78;
	// begin inline asm
	cp.async.ca.shared.global [ %r483 + 0 ], [ %rd336 + 0 ], 0x4, %r785;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd500, %rd500, 64;
	add.s64 	%rd499, %rd499, %rd19;
	add.s64 	%rd498, %rd498, %rd19;
	add.s64 	%rd497, %rd497, %rd19;
	add.s64 	%rd496, %rd496, %rd19;
	add.s64 	%rd495, %rd495, %rd19;
	add.s64 	%rd494, %rd494, %rd19;
	add.s64 	%rd493, %rd493, %rd19;
	add.s64 	%rd492, %rd492, %rd19;
	add.s64 	%rd491, %rd491, %rd19;
	add.s64 	%rd490, %rd490, %rd19;
	add.s64 	%rd489, %rd489, %rd19;
	add.s64 	%rd488, %rd488, %rd19;
	add.s64 	%rd487, %rd487, %rd19;
	add.s64 	%rd486, %rd486, %rd19;
	add.s64 	%rd485, %rd485, %rd19;
	add.s64 	%rd484, %rd484, %rd19;
	add.s64 	%rd483, %rd483, %rd19;
	add.s64 	%rd482, %rd482, %rd19;
	add.s64 	%rd481, %rd481, %rd19;
	add.s64 	%rd480, %rd480, %rd19;
	add.s64 	%rd479, %rd479, %rd19;
	add.s64 	%rd478, %rd478, %rd19;
	add.s64 	%rd477, %rd477, %rd19;
	add.s64 	%rd476, %rd476, %rd19;
	add.s64 	%rd475, %rd475, %rd19;
	add.s64 	%rd474, %rd474, %rd19;
	add.s64 	%rd473, %rd473, %rd19;
	add.s64 	%rd472, %rd472, %rd19;
	add.s64 	%rd471, %rd471, %rd19;
	add.s64 	%rd470, %rd470, %rd19;
	add.s64 	%rd469, %rd469, %rd19;
	add.s64 	%rd468, %rd468, %rd19;
	setp.ne.s64 	%p113, %rd13, %rd501;
	@%p113 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge26_crit_edge
	.loc	1 87 33                         // implicit_gemm_kernel.py:87:33
	and.b32  	%r179, %r4, 63;
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r180, %r2, 6;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r1038, %r180, %r179;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shr.u32 	%r1037, %r4, 2;
	shl.b32 	%r1036, %r4, 3;
	mov.b32 	%r1039, 0;
	mov.u32 	%r1040, %r1039;
	mov.u32 	%r1041, %r1039;
	mov.u32 	%r1042, %r1039;
	mov.u32 	%r1043, %r1039;
	mov.u32 	%r1044, %r1039;
	mov.u32 	%r1045, %r1039;
	mov.u32 	%r1046, %r1039;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %._crit_edge26.loopexit
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	mov.b32 	%r1039, %f178;
	mov.b32 	%r1040, %f179;
	mov.b32 	%r1043, %f182;
	mov.b32 	%r1044, %f183;
	mov.b32 	%r1041, %f180;
	mov.b32 	%r1042, %f181;
	mov.b32 	%r1045, %f184;
	mov.b32 	%r1046, %f185;
$L__BB0_10:                             // %._crit_edge26
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	mad.lo.s32 	%r992, %r15, %r152, %r1038;
	mad.lo.s32 	%r993, %r16, %r152, %r1038;
	mad.lo.s32 	%r994, %r17, %r152, %r1038;
	mad.lo.s32 	%r995, %r18, %r152, %r1038;
	mad.lo.s32 	%r996, %r19, %r152, %r1038;
	mad.lo.s32 	%r997, %r20, %r152, %r1038;
	mad.lo.s32 	%r998, %r21, %r152, %r1038;
	mad.lo.s32 	%r999, %r22, %r152, %r1038;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd427, %r992, 4;
	add.s64 	%rd419, %rd195, %rd427;
	mul.wide.s32 	%rd428, %r993, 4;
	add.s64 	%rd420, %rd195, %rd428;
	mul.wide.s32 	%rd429, %r994, 4;
	add.s64 	%rd421, %rd195, %rd429;
	mul.wide.s32 	%rd430, %r995, 4;
	add.s64 	%rd422, %rd195, %rd430;
	mul.wide.s32 	%rd431, %r996, 4;
	add.s64 	%rd423, %rd195, %rd431;
	mul.wide.s32 	%rd432, %r997, 4;
	add.s64 	%rd424, %rd195, %rd432;
	mul.wide.s32 	%rd433, %r998, 4;
	add.s64 	%rd425, %rd195, %rd433;
	mul.wide.s32 	%rd434, %r999, 4;
	add.s64 	%rd426, %rd195, %rd434;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p139, %r1038, %r152;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p123, %p147, %p139;
	and.pred  	%p124, %p146, %p139;
	and.pred  	%p125, %p145, %p139;
	and.pred  	%p126, %p144, %p139;
	and.pred  	%p127, %p143, %p139;
	and.pred  	%p128, %p142, %p139;
	and.pred  	%p129, %p141, %p139;
	and.pred  	%p130, %p140, %p139;
	.loc	1 99 12                         // implicit_gemm_kernel.py:99:12
	shl.b32 	%r1000, %r4, 4;
	and.b32  	%r1001, %r1000, 48;
	and.b32  	%r1002, %r1037, 7;
	or.b32  	%r1003, %r1002, %r1001;
	shl.b32 	%r1004, %r4, 1;
	and.b32  	%r1005, %r1004, 192;
	or.b32  	%r1006, %r1003, %r1005;
	and.b32  	%r1007, %r1036, 504;
	or.b32  	%r1008, %r1007, %r6;
	shr.u32 	%r1009, %r1006, 1;
	and.b32  	%r1010, %r1009, 120;
	add.s32 	%r1012, %r1033, %r1010;
	shl.b32 	%r1013, %r1006, 2;
	add.s32 	%r960, %r1012, %r1013;
	mov.pred 	%p115, -1;
	// begin inline asm
	@%p115 st.shared.b32 [ %r960 + 0 ], %r1039;
	// end inline asm
	or.b32  	%r1014, %r1006, 8;
	shr.u32 	%r1015, %r1014, 1;
	and.b32  	%r1016, %r1015, 124;
	add.s32 	%r1017, %r1033, %r1016;
	add.s32 	%r1018, %r1017, %r1013;
	add.s32 	%r962, %r1018, 32;
	// begin inline asm
	@%p115 st.shared.b32 [ %r962 + 0 ], %r1040;
	// end inline asm
	or.b32  	%r1019, %r1006, 256;
	shr.u32 	%r1020, %r1019, 1;
	and.b32  	%r1021, %r1020, 248;
	add.s32 	%r1022, %r1033, %r1021;
	add.s32 	%r1023, %r1022, %r1013;
	add.s32 	%r964, %r1023, 1024;
	// begin inline asm
	@%p115 st.shared.b32 [ %r964 + 0 ], %r1043;
	// end inline asm
	or.b32  	%r1024, %r1006, 264;
	shr.u32 	%r1025, %r1024, 1;
	and.b32  	%r1026, %r1025, 252;
	add.s32 	%r1027, %r1033, %r1026;
	add.s32 	%r1028, %r1027, %r1013;
	add.s32 	%r966, %r1028, 1056;
	// begin inline asm
	@%p115 st.shared.b32 [ %r966 + 0 ], %r1044;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r1029, %r1007, 1;
	add.s32 	%r1030, %r1033, %r1029;
	shl.b32 	%r1031, %r1008, 2;
	add.s32 	%r1032, %r1030, %r1031;
	ld.shared.u32 	%r977, [%r1032];
	ld.shared.u32 	%r979, [%r1032+8];
	ld.shared.u32 	%r981, [%r1032+16];
	ld.shared.u32 	%r983, [%r1032+24];
	bar.sync 	0;
	// begin inline asm
	@%p115 st.shared.b32 [ %r960 + 0 ], %r1041;
	// end inline asm
	// begin inline asm
	@%p115 st.shared.b32 [ %r962 + 0 ], %r1042;
	// end inline asm
	// begin inline asm
	@%p115 st.shared.b32 [ %r964 + 0 ], %r1045;
	// end inline asm
	// begin inline asm
	@%p115 st.shared.b32 [ %r966 + 0 ], %r1046;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r985, [%r1032];
	ld.shared.u32 	%r987, [%r1032+8];
	ld.shared.u32 	%r989, [%r1032+16];
	ld.shared.u32 	%r991, [%r1032+24];
	// begin inline asm
	mov.u32 %r976, 0x0;
	@%p123 atom.global.gpu.acq_rel.add.f32 %r976, [ %rd419 + 0 ], %r977;
	// end inline asm
	// begin inline asm
	mov.u32 %r978, 0x0;
	@%p124 atom.global.gpu.acq_rel.add.f32 %r978, [ %rd420 + 0 ], %r979;
	// end inline asm
	// begin inline asm
	mov.u32 %r980, 0x0;
	@%p125 atom.global.gpu.acq_rel.add.f32 %r980, [ %rd421 + 0 ], %r981;
	// end inline asm
	// begin inline asm
	mov.u32 %r982, 0x0;
	@%p126 atom.global.gpu.acq_rel.add.f32 %r982, [ %rd422 + 0 ], %r983;
	// end inline asm
	// begin inline asm
	mov.u32 %r984, 0x0;
	@%p127 atom.global.gpu.acq_rel.add.f32 %r984, [ %rd423 + 0 ], %r985;
	// end inline asm
	// begin inline asm
	mov.u32 %r986, 0x0;
	@%p128 atom.global.gpu.acq_rel.add.f32 %r986, [ %rd424 + 0 ], %r987;
	// end inline asm
	// begin inline asm
	mov.u32 %r988, 0x0;
	@%p129 atom.global.gpu.acq_rel.add.f32 %r988, [ %rd425 + 0 ], %r989;
	// end inline asm
	// begin inline asm
	mov.u32 %r990, 0x0;
	@%p130 atom.global.gpu.acq_rel.add.f32 %r990, [ %rd426 + 0 ], %r991;
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 174                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x98:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
