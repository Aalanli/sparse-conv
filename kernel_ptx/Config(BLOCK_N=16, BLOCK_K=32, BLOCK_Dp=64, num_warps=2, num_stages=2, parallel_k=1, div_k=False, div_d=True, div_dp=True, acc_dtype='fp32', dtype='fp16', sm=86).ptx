//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<87>;
	.reg .b16 	%rs<227>;
	.reg .b32 	%r<433>;
	.reg .b64 	%rd<124>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r42, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r40, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd43, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r43, %ctaid.x;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r44, %r40, 15;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r45, %r44, 31;
	shr.u32 	%r46, %r45, 28;
	add.s32 	%r47, %r44, %r46;
	shr.s32 	%r48, %r47, 4;
$L__tmp2:
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r1, %r43, %r48;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r50, %r1, %r48;
	sub.s32 	%r51, %r43, %r50;
	ld.param.u32 	%r52, [implicit_conv3d_kernel_param_8];
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r53, %r52, %r52;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r2, %r53, %r52;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r3, %tid.x;
	bfe.u32 	%r4, %r3, 2, 3;
	and.b32  	%r5, %r3, 32;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r9, %r51, 4;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.gt.s32 	%p3, %r2, 0;
	mov.u32 	%r430, global_smem;
	@%p3 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph64
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r41, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r39, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd42, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd41, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd44, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	shr.u32 	%r6, %r5, 2;
	or.b32  	%r7, %r4, %r6;
	and.b32  	%r8, %r3, 15;
	or.b32  	%r10, %r9, %r7;
	or.b32  	%r11, %r9, %r8;
	mul.lo.s32 	%r54, %r10, %r2;
	mul.lo.s32 	%r55, %r11, %r2;
	mul.wide.s32 	%rd45, %r54, 4;
	add.s64 	%rd1, %rd44, %rd45;
	mul.wide.s32 	%rd46, %r55, 4;
	add.s64 	%rd2, %rd44, %rd46;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r56, %r3, 4;
	and.b32  	%r57, %r3, 2;
	add.s32 	%r13, %r41, 31;
	shr.s32 	%r58, %r13, 31;
	shr.u32 	%r59, %r58, 27;
	add.s32 	%r60, %r13, %r59;
	shr.s32 	%r61, %r60, 5;
	shl.b32 	%r62, %r3, 3;
	and.b32  	%r63, %r62, 8;
	shl.b32 	%r64, %r57, 3;
	or.b32  	%r14, %r63, %r64;
	shr.u32 	%r65, %r3, 3;
	bfe.u32 	%r15, %r3, 3, 3;
	or.b32  	%r16, %r15, 8;
	or.b32  	%r17, %r15, 16;
	or.b32  	%r18, %r15, 24;
	shl.b32 	%r66, %r56, 3;
	or.b32  	%r67, %r14, %r66;
	shl.b32 	%r432, %r1, 6;
	mul.lo.s32 	%r20, %r2, %r41;
	or.b32  	%r21, %r432, %r67;
	setp.lt.s32 	%p4, %r21, %r42;
	setp.gt.s32 	%p5, %r13, 31;
	setp.lt.s32 	%p6, %r14, %r41;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p1, %p6, %p5;
	and.b32  	%r68, %r3, 24;
	xor.b32  	%r69, %r14, %r68;
	shl.b32 	%r70, %r69, 1;
	shl.b32 	%r71, %r7, 6;
	or.b32  	%r72, %r71, %r70;
	add.s32 	%r74, %r430, %r72;
	add.s32 	%r132, %r74, 4096;
	and.b32  	%r75, %r3, 56;
	xor.b32  	%r76, %r67, %r75;
	shl.b32 	%r77, %r76, 1;
	add.s32 	%r78, %r430, %r77;
	shl.b32 	%r79, %r15, 7;
	add.s32 	%r134, %r78, %r79;
	add.s32 	%r136, %r134, 1024;
	add.s32 	%r138, %r134, 2048;
	add.s32 	%r140, %r134, 3072;
	add.s32 	%r80, %r61, -1;
	shl.b32 	%r81, %r57, 2;
	shl.b32 	%r82, %r56, 2;
	or.b32  	%r83, %r81, %r82;
	shr.u32 	%r84, %r3, 1;
	and.b32  	%r85, %r84, 8;
	xor.b32  	%r86, %r83, %r85;
	shl.b32 	%r87, %r8, 5;
	or.b32  	%r27, %r86, %r87;
	or.b32  	%r88, %r81, 16;
	or.b32  	%r89, %r85, %r82;
	xor.b32  	%r90, %r89, %r88;
	or.b32  	%r28, %r90, %r87;
	xor.b32  	%r91, %r67, %r6;
	shl.b32 	%r92, %r3, 6;
	and.b32  	%r93, %r92, 1984;
	or.b32  	%r29, %r91, %r93;
	or.b32  	%r94, %r63, 16;
	xor.b32  	%r95, %r94, %r64;
	or.b32  	%r96, %r95, %r66;
	xor.b32  	%r97, %r96, %r6;
	or.b32  	%r30, %r97, %r93;
	or.b32  	%r33, %r14, 32;
	or.b32  	%r98, %r6, %r66;
	xor.b32  	%r99, %r98, %r33;
	or.b32  	%r31, %r99, %r93;
	or.b32  	%r100, %r63, 48;
	or.b32  	%r101, %r66, %r64;
	or.b32  	%r102, %r101, %r6;
	xor.b32  	%r103, %r102, %r100;
	or.b32  	%r32, %r103, %r93;
	cvt.s64.s32 	%rd3, %r80;
	cvt.s64.s32 	%rd4, %r41;
	cvt.u64.u32 	%rd5, %r2;
	cvt.u64.u32 	%rd6, %r61;
	and.pred  	%p2, %p4, %p5;
	cvt.u64.u32 	%rd7, %r14;
	cvt.u64.u32 	%rd48, %r65;
	and.b64  	%rd116, %rd48, 7;
	cvt.u64.u32 	%rd9, %r41;
	or.b32  	%r104, %r15, 56;
	mad.lo.s32 	%r105, %r42, %r104, %r432;
	add.s32 	%r106, %r105, %r66;
	cvt.u64.u32 	%rd115, %r106;
	mul.lo.s32 	%r107, %r42, %r41;
	cvt.u64.u32 	%rd11, %r107;
	shl.b32 	%r108, %r42, 5;
	cvt.u64.u32 	%rd12, %r108;
	or.b32  	%r109, %r15, 48;
	mad.lo.s32 	%r110, %r42, %r109, %r432;
	add.s32 	%r111, %r110, %r66;
	cvt.u64.u32 	%rd114, %r111;
	or.b32  	%r112, %r15, 40;
	mad.lo.s32 	%r113, %r42, %r112, %r432;
	add.s32 	%r114, %r113, %r66;
	cvt.u64.u32 	%rd113, %r114;
	or.b32  	%r115, %r15, 32;
	mad.lo.s32 	%r116, %r42, %r115, %r432;
	add.s32 	%r117, %r116, %r66;
	cvt.u64.u32 	%rd112, %r117;
	mov.b16 	%rs179, 0x0000;
	mov.b64 	%rd117, 0;
	setp.lt.s32 	%p8, %r11, %r40;
	shl.b32 	%r282, %r27, 1;
	shl.b32 	%r283, %r28, 1;
	shl.b32 	%r286, %r29, 1;
	shl.b32 	%r287, %r30, 1;
	shl.b32 	%r288, %r31, 1;
	shl.b32 	%r289, %r32, 1;
	mov.u16 	%rs180, %rs179;
	mov.u16 	%rs181, %rs179;
	mov.u16 	%rs182, %rs179;
	mov.u16 	%rs183, %rs179;
	mov.u16 	%rs184, %rs179;
	mov.u16 	%rs185, %rs179;
	mov.u16 	%rs186, %rs179;
	mov.u16 	%rs187, %rs179;
	mov.u16 	%rs188, %rs179;
	mov.u16 	%rs189, %rs179;
	mov.u16 	%rs190, %rs179;
	mov.u16 	%rs191, %rs179;
	mov.u16 	%rs192, %rs179;
	mov.u16 	%rs193, %rs179;
	mov.u16 	%rs194, %rs179;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s64 	%rd117, %rd117, 1;
	add.s64 	%rd116, %rd116, %rd9;
	add.s64 	%rd115, %rd115, %rd11;
	add.s64 	%rd114, %rd114, %rd11;
	add.s64 	%rd113, %rd113, %rd11;
	add.s64 	%rd112, %rd112, %rd11;
	setp.ne.s64 	%p37, %rd117, %rd5;
	@%p37 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p7, %r10, %r40;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	shl.b64 	%rd51, %rd117, 2;
	add.s64 	%rd49, %rd1, %rd51;
	add.s64 	%rd50, %rd2, %rd51;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r118, 0xffffffffffffffff;
	@%p7 ld.global.b32 { %r118 }, [ %rd49 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r119, 0xffffffffffffffff;
	@%p8 ld.global.b32 { %r119 }, [ %rd50 + 0 ];
	// end inline asm
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p9, %r119, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p10, %r119, %r39;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p11, %p9, %p10;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r120, 1, 0, %p11;
	shfl.sync.bfly.b32	%r121, %r120, 8, 31, -1;
	and.b32  	%r122, %r121, 1;
	setp.eq.b32 	%p12, %r122, 1;
$L__tmp3:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p13, %p11, %p12;
$L__tmp4:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r123, 1, 0, %p13;
	shfl.sync.bfly.b32	%r124, %r123, 4, 31, -1;
	and.b32  	%r125, %r124, 1;
	setp.eq.b32 	%p14, %r125, 1;
$L__tmp5:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p15, %p13, %p14;
$L__tmp6:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r126, 1, 0, %p15;
	shfl.sync.bfly.b32	%r127, %r126, 2, 31, -1;
	and.b32  	%r128, %r127, 1;
	setp.eq.b32 	%p16, %r128, 1;
$L__tmp7:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p17, %p15, %p16;
$L__tmp8:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r129, 1, 0, %p17;
	shfl.sync.bfly.b32	%r130, %r129, 1, 31, -1;
	and.b32  	%r131, %r130, 1;
	setp.eq.b32 	%p18, %r131, 1;
$L__tmp9:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p19, %p17, %p18;
$L__tmp10:
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p20, %p19;
	@%p20 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.lt.s32 	%p21, %r13, 32;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	cvt.u32.u64 	%r142, %rd117;
	mul.lo.s32 	%r143, %r41, %r142;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r35, %r118, %r41;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r144, %r35, %r14;
	.loc	1 70 43                         // implicit_gemm_kernel.py:70:43
	setp.ne.s32 	%p22, %r118, -1;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd57, %r144, 2;
	add.s64 	%rd52, %rd41, %rd57;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s32 	%r145, %r143, %r15;
	add.s32 	%r146, %r143, %r16;
	add.s32 	%r147, %r143, %r17;
	add.s32 	%r148, %r143, %r18;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r149, %r145, %r42, %r21;
	mad.lo.s32 	%r150, %r146, %r42, %r21;
	mad.lo.s32 	%r151, %r147, %r42, %r21;
	mad.lo.s32 	%r152, %r148, %r42, %r21;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd58, %r149, 2;
	add.s64 	%rd53, %rd42, %rd58;
	mul.wide.s32 	%rd59, %r150, 2;
	add.s64 	%rd54, %rd42, %rd59;
	mul.wide.s32 	%rd60, %r151, 2;
	add.s64 	%rd55, %rd42, %rd60;
	mul.wide.s32 	%rd61, %r152, 2;
	add.s64 	%rd56, %rd42, %rd61;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p23, %r145, %r20;
	setp.lt.s32 	%p24, %r146, %r20;
	setp.lt.s32 	%p25, %r147, %r20;
	setp.lt.s32 	%p26, %r148, %r20;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	selp.b32 	%r153, 16, 0, %p1;
	selp.b32 	%r133, %r153, 0, %p22;
	// begin inline asm
	cp.async.cg.shared.global [ %r132 + 0 ], [ %rd52 + 0 ], 0x10, %r133;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r154, 16, 0, %p2;
	selp.b32 	%r135, %r154, 0, %p23;
	// begin inline asm
	cp.async.cg.shared.global [ %r134 + 0 ], [ %rd53 + 0 ], 0x10, %r135;
	// end inline asm
	selp.b32 	%r137, %r154, 0, %p24;
	// begin inline asm
	cp.async.cg.shared.global [ %r136 + 0 ], [ %rd54 + 0 ], 0x10, %r137;
	// end inline asm
	selp.b32 	%r139, %r154, 0, %p25;
	// begin inline asm
	cp.async.cg.shared.global [ %r138 + 0 ], [ %rd55 + 0 ], 0x10, %r139;
	// end inline asm
	selp.b32 	%r141, %r154, 0, %p26;
	// begin inline asm
	cp.async.cg.shared.global [ %r140 + 0 ], [ %rd56 + 0 ], 0x10, %r141;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p21 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r156, %r33, %r35;
	cvt.u64.u32 	%rd22, %r156;
	mov.b32 	%r431, -1;
	mov.b64 	%rd122, 0;
	mov.u64 	%rd118, %rd112;
	mov.u64 	%rd119, %rd113;
	mov.u64 	%rd120, %rd114;
	mov.u64 	%rd121, %rd115;
	mov.u64 	%rd123, %rd122;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p29, %rd123, %rd3;
	add.s32 	%r277, %r431, 1;
	setp.gt.u32 	%p30, %r431, 2147483646;
	selp.b32 	%r431, %r277, 0, %p30;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r278, %r431, 10;
	add.s32 	%r280, %r430, %r278;
	add.s32 	%r281, %r280, 4096;
	add.s32 	%r161, %r281, %r282;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r191, %r192, %r193, %r194}, [%r161];
	// end inline asm
	add.s32 	%r166, %r281, %r283;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r231, %r232, %r233, %r234}, [%r166];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	shl.b32 	%r284, %r431, 12;
	add.s32 	%r285, %r430, %r284;
	add.s32 	%r171, %r285, %r286;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r167, %r168, %r169, %r170}, [%r171];
	// end inline asm
	add.s32 	%r176, %r285, %r287;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r172, %r173, %r174, %r175}, [%r176];
	// end inline asm
	add.s32 	%r181, %r285, %r288;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r177, %r178, %r179, %r180}, [%r181];
	// end inline asm
	add.s32 	%r186, %r285, %r289;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r182, %r183, %r184, %r185}, [%r186];
	// end inline asm
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	mov.b32 	%r227, {%rs179, %rs180};
	mov.b32 	%r228, {%rs181, %rs182};
	mov.b32 	%r237, {%rs183, %rs184};
	mov.b32 	%r238, {%rs185, %rs186};
	mov.b32 	%r247, {%rs187, %rs188};
	mov.b32 	%r248, {%rs189, %rs190};
	mov.b32 	%r257, {%rs191, %rs192};
	mov.b32 	%r258, {%rs193, %rs194};
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r227, %r228 }, { %r191, %r192, %r193, %r194 }, { %r167, %r168 }, { %r227, %r228 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r237, %r238 }, { %r191, %r192, %r193, %r194 }, { %r172, %r173 }, { %r237, %r238 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r247, %r248 }, { %r191, %r192, %r193, %r194 }, { %r177, %r178 }, { %r247, %r248 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r257, %r258 }, { %r191, %r192, %r193, %r194 }, { %r182, %r183 }, { %r257, %r258 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r227, %r228 }, { %r231, %r232, %r233, %r234 }, { %r169, %r170 }, { %r227, %r228 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r237, %r238 }, { %r231, %r232, %r233, %r234 }, { %r174, %r175 }, { %r237, %r238 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r247, %r248 }, { %r231, %r232, %r233, %r234 }, { %r179, %r180 }, { %r247, %r248 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 { %r257, %r258 }, { %r231, %r232, %r233, %r234 }, { %r184, %r185 }, { %r257, %r258 };
	// end inline asm
	mov.b32 	{%rs179, %rs180}, %r227;
	mov.b32 	{%rs181, %rs182}, %r228;
	mov.b32 	{%rs183, %rs184}, %r237;
	mov.b32 	{%rs185, %rs186}, %r238;
	mov.b32 	{%rs187, %rs188}, %r247;
	mov.b32 	{%rs189, %rs190}, %r248;
	mov.b32 	{%rs191, %rs192}, %r257;
	mov.b32 	{%rs193, %rs194}, %r258;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd123, %rd123, 1;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd68, %rd22, %rd122;
	cvt.u32.u64 	%r290, %rd68;
	mul.wide.s32 	%rd69, %r290, 2;
	add.s64 	%rd63, %rd41, %rd69;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd30, %rd122, 32;
	.loc	1 70 98                         // implicit_gemm_kernel.py:70:98
	add.s64 	%rd70, %rd30, %rd7;
	setp.lt.s64 	%p31, %rd70, %rd4;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s64 	%rd71, %rd116, %rd122;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	add.s64 	%rd72, %rd7, %rd118;
	add.s64 	%rd73, %rd7, %rd119;
	add.s64 	%rd74, %rd7, %rd120;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s64 	%rd75, %rd7, %rd121;
	cvt.u32.u64 	%r291, %rd72;
	mul.wide.s32 	%rd76, %r291, 2;
	add.s64 	%rd64, %rd42, %rd76;
	cvt.u32.u64 	%r292, %rd73;
	mul.wide.s32 	%rd77, %r292, 2;
	add.s64 	%rd65, %rd42, %rd77;
	cvt.u32.u64 	%r293, %rd74;
	mul.wide.s32 	%rd78, %r293, 2;
	add.s64 	%rd66, %rd42, %rd78;
	cvt.u32.u64 	%r294, %rd75;
	mul.wide.s32 	%rd79, %r294, 2;
	add.s64 	%rd67, %rd42, %rd79;
	cvt.u32.u64 	%r295, %rd71;
	add.s32 	%r296, %r295, 32;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p32, %r296, %r20;
	add.s32 	%r297, %r295, 40;
	setp.lt.s32 	%p33, %r297, %r20;
	add.s32 	%r298, %r295, 48;
	setp.lt.s32 	%p34, %r298, %r20;
	add.s32 	%r299, %r295, 56;
	setp.lt.s32 	%p35, %r299, %r20;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r300, 16, 0, %p31;
	selp.b32 	%r301, %r300, 0, %p22;
	selp.b32 	%r268, %r301, 0, %p29;
	// begin inline asm
	cp.async.cg.shared.global [ %r132 + 0 ], [ %rd63 + 0 ], 0x10, %r268;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r302, 16, 0, %p32;
	selp.b32 	%r303, %r302, 0, %p4;
	selp.b32 	%r270, %r303, 0, %p29;
	// begin inline asm
	cp.async.cg.shared.global [ %r134 + 0 ], [ %rd64 + 0 ], 0x10, %r270;
	// end inline asm
	selp.b32 	%r304, 16, 0, %p33;
	selp.b32 	%r305, %r304, 0, %p4;
	selp.b32 	%r272, %r305, 0, %p29;
	// begin inline asm
	cp.async.cg.shared.global [ %r136 + 0 ], [ %rd65 + 0 ], 0x10, %r272;
	// end inline asm
	selp.b32 	%r306, 16, 0, %p34;
	selp.b32 	%r307, %r306, 0, %p4;
	selp.b32 	%r274, %r307, 0, %p29;
	// begin inline asm
	cp.async.cg.shared.global [ %r138 + 0 ], [ %rd66 + 0 ], 0x10, %r274;
	// end inline asm
	selp.b32 	%r308, 16, 0, %p35;
	selp.b32 	%r309, %r308, 0, %p4;
	selp.b32 	%r276, %r309, 0, %p29;
	// begin inline asm
	cp.async.cg.shared.global [ %r140 + 0 ], [ %rd67 + 0 ], 0x10, %r276;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd121, %rd121, %rd12;
	add.s64 	%rd120, %rd120, %rd12;
	add.s64 	%rd119, %rd119, %rd12;
	add.s64 	%rd118, %rd118, %rd12;
	setp.ne.s64 	%p36, %rd6, %rd123;
	mov.u64 	%rd122, %rd30;
	@%p36 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_1:                              // %.._crit_edge65_crit_edge
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r432, %r1, 6;
	mov.b16 	%rs179, 0;
	mov.u16 	%rs180, %rs179;
	mov.u16 	%rs181, %rs179;
	mov.u16 	%rs182, %rs179;
	mov.u16 	%rs183, %rs179;
	mov.u16 	%rs184, %rs179;
	mov.u16 	%rs185, %rs179;
	mov.u16 	%rs186, %rs179;
	mov.u16 	%rs187, %rs179;
	mov.u16 	%rs188, %rs179;
	mov.u16 	%rs189, %rs179;
	mov.u16 	%rs190, %rs179;
	mov.u16 	%rs191, %rs179;
	mov.u16 	%rs192, %rs179;
	mov.u16 	%rs193, %rs179;
	mov.u16 	%rs194, %rs179;
$L__BB0_9:                              // %._crit_edge65
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r326, %r9, 1;
	or.b32  	%r327, %r9, 2;
	or.b32  	%r328, %r9, 3;
	or.b32  	%r329, %r9, 4;
	or.b32  	%r330, %r9, 5;
	or.b32  	%r331, %r9, 6;
	or.b32  	%r332, %r9, 7;
	or.b32  	%r333, %r9, 8;
	or.b32  	%r334, %r9, 9;
	or.b32  	%r335, %r9, 10;
	or.b32  	%r336, %r9, 11;
	or.b32  	%r337, %r9, 12;
	or.b32  	%r338, %r9, 13;
	or.b32  	%r339, %r9, 14;
	or.b32  	%r340, %r9, 15;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r341, %r9, %r42;
	add.s32 	%r342, %r341, %r42;
	add.s32 	%r343, %r342, %r42;
	add.s32 	%r344, %r343, %r42;
	add.s32 	%r345, %r344, %r42;
	add.s32 	%r346, %r345, %r42;
	add.s32 	%r347, %r346, %r42;
	add.s32 	%r348, %r347, %r42;
	add.s32 	%r349, %r348, %r42;
	add.s32 	%r350, %r349, %r42;
	add.s32 	%r351, %r350, %r42;
	add.s32 	%r352, %r351, %r42;
	add.s32 	%r353, %r352, %r42;
	add.s32 	%r354, %r353, %r42;
	add.s32 	%r355, %r354, %r42;
	add.s32 	%r356, %r355, %r42;
	.loc	1 87 33                         // implicit_gemm_kernel.py:87:33
	and.b32  	%r357, %r3, 63;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r358, %r432, %r357;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r359, %r358, %r341;
	add.s32 	%r360, %r358, %r342;
	add.s32 	%r361, %r358, %r343;
	add.s32 	%r362, %r358, %r344;
	add.s32 	%r363, %r358, %r345;
	add.s32 	%r364, %r358, %r346;
	add.s32 	%r365, %r358, %r347;
	add.s32 	%r366, %r358, %r348;
	add.s32 	%r367, %r358, %r349;
	add.s32 	%r368, %r358, %r350;
	add.s32 	%r369, %r358, %r351;
	add.s32 	%r370, %r358, %r352;
	add.s32 	%r371, %r358, %r353;
	add.s32 	%r372, %r358, %r354;
	add.s32 	%r373, %r358, %r355;
	add.s32 	%r374, %r358, %r356;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd96, %r359, 2;
	add.s64 	%rd80, %rd43, %rd96;
	mul.wide.s32 	%rd97, %r360, 2;
	add.s64 	%rd81, %rd43, %rd97;
	mul.wide.s32 	%rd98, %r361, 2;
	add.s64 	%rd82, %rd43, %rd98;
	mul.wide.s32 	%rd99, %r362, 2;
	add.s64 	%rd83, %rd43, %rd99;
	mul.wide.s32 	%rd100, %r363, 2;
	add.s64 	%rd84, %rd43, %rd100;
	mul.wide.s32 	%rd101, %r364, 2;
	add.s64 	%rd85, %rd43, %rd101;
	mul.wide.s32 	%rd102, %r365, 2;
	add.s64 	%rd86, %rd43, %rd102;
	mul.wide.s32 	%rd103, %r366, 2;
	add.s64 	%rd87, %rd43, %rd103;
	mul.wide.s32 	%rd104, %r367, 2;
	add.s64 	%rd88, %rd43, %rd104;
	mul.wide.s32 	%rd105, %r368, 2;
	add.s64 	%rd89, %rd43, %rd105;
	mul.wide.s32 	%rd106, %r369, 2;
	add.s64 	%rd90, %rd43, %rd106;
	mul.wide.s32 	%rd107, %r370, 2;
	add.s64 	%rd91, %rd43, %rd107;
	mul.wide.s32 	%rd108, %r371, 2;
	add.s64 	%rd92, %rd43, %rd108;
	mul.wide.s32 	%rd109, %r372, 2;
	add.s64 	%rd93, %rd43, %rd109;
	mul.wide.s32 	%rd110, %r373, 2;
	add.s64 	%rd94, %rd43, %rd110;
	mul.wide.s32 	%rd111, %r374, 2;
	add.s64 	%rd95, %rd43, %rd111;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p70, %r9, %r40;
	setp.lt.s32 	%p71, %r326, %r40;
	setp.lt.s32 	%p72, %r327, %r40;
	setp.lt.s32 	%p73, %r328, %r40;
	setp.lt.s32 	%p74, %r329, %r40;
	setp.lt.s32 	%p75, %r330, %r40;
	setp.lt.s32 	%p76, %r331, %r40;
	setp.lt.s32 	%p77, %r332, %r40;
	setp.lt.s32 	%p78, %r333, %r40;
	setp.lt.s32 	%p79, %r334, %r40;
	setp.lt.s32 	%p80, %r335, %r40;
	setp.lt.s32 	%p81, %r336, %r40;
	setp.lt.s32 	%p82, %r337, %r40;
	setp.lt.s32 	%p83, %r338, %r40;
	setp.lt.s32 	%p84, %r339, %r40;
	setp.lt.s32 	%p85, %r340, %r40;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p86, %r358, %r42;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p54, %p70, %p86;
	and.pred  	%p55, %p71, %p86;
	and.pred  	%p56, %p72, %p86;
	and.pred  	%p57, %p73, %p86;
	and.pred  	%p58, %p74, %p86;
	and.pred  	%p59, %p75, %p86;
	and.pred  	%p60, %p76, %p86;
	and.pred  	%p61, %p77, %p86;
	and.pred  	%p62, %p78, %p86;
	and.pred  	%p63, %p79, %p86;
	and.pred  	%p64, %p80, %p86;
	and.pred  	%p65, %p81, %p86;
	and.pred  	%p66, %p82, %p86;
	and.pred  	%p67, %p83, %p86;
	and.pred  	%p68, %p84, %p86;
	and.pred  	%p69, %p85, %p86;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	shl.b32 	%r375, %r3, 4;
	and.b32  	%r376, %r375, 48;
	shl.b32 	%r377, %r5, 1;
	or.b32  	%r378, %r376, %r377;
	or.b32  	%r379, %r4, %r378;
	shl.b32 	%r380, %r378, 1;
	add.s32 	%r382, %r430, %r380;
	shl.b32 	%r383, %r379, 1;
	add.s32 	%r310, %r382, %r383;
	mov.pred 	%p38, -1;
	// begin inline asm
	@%p38 st.shared.b16 [ %r310 + 0 ], %rs179;
	// end inline asm
	or.b32  	%r384, %r378, 8;
	and.b32  	%r385, %r384, 120;
	shl.b32 	%r386, %r385, 1;
	add.s32 	%r387, %r430, %r386;
	add.s32 	%r388, %r387, %r383;
	add.s32 	%r311, %r388, 16;
	// begin inline asm
	@%p38 st.shared.b16 [ %r311 + 0 ], %rs180;
	// end inline asm
	or.b32  	%r389, %r378, 128;
	and.b32  	%r390, %r389, 240;
	shl.b32 	%r391, %r390, 1;
	add.s32 	%r392, %r430, %r391;
	add.s32 	%r393, %r392, %r383;
	add.s32 	%r312, %r393, 256;
	// begin inline asm
	@%p38 st.shared.b16 [ %r312 + 0 ], %rs183;
	// end inline asm
	or.b32  	%r394, %r378, 136;
	and.b32  	%r395, %r394, 248;
	shl.b32 	%r396, %r395, 1;
	add.s32 	%r397, %r430, %r396;
	add.s32 	%r398, %r397, %r383;
	add.s32 	%r313, %r398, 272;
	// begin inline asm
	@%p38 st.shared.b16 [ %r313 + 0 ], %rs184;
	// end inline asm
	or.b32  	%r399, %r378, 256;
	and.b32  	%r400, %r399, 368;
	shl.b32 	%r401, %r400, 1;
	add.s32 	%r402, %r430, %r401;
	add.s32 	%r403, %r402, %r383;
	add.s32 	%r314, %r403, 512;
	// begin inline asm
	@%p38 st.shared.b16 [ %r314 + 0 ], %rs187;
	// end inline asm
	or.b32  	%r404, %r378, 264;
	and.b32  	%r405, %r404, 376;
	shl.b32 	%r406, %r405, 1;
	add.s32 	%r407, %r430, %r406;
	add.s32 	%r408, %r407, %r383;
	add.s32 	%r315, %r408, 528;
	// begin inline asm
	@%p38 st.shared.b16 [ %r315 + 0 ], %rs188;
	// end inline asm
	or.b32  	%r409, %r378, 384;
	and.b32  	%r410, %r409, 496;
	shl.b32 	%r411, %r410, 1;
	add.s32 	%r412, %r430, %r411;
	add.s32 	%r413, %r412, %r383;
	add.s32 	%r316, %r413, 768;
	// begin inline asm
	@%p38 st.shared.b16 [ %r316 + 0 ], %rs191;
	// end inline asm
	or.b32  	%r414, %r378, 392;
	and.b32  	%r415, %r414, 504;
	shl.b32 	%r416, %r415, 1;
	add.s32 	%r417, %r430, %r416;
	add.s32 	%r418, %r417, %r383;
	add.s32 	%r317, %r418, 784;
	// begin inline asm
	@%p38 st.shared.b16 [ %r317 + 0 ], %rs192;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r419, %r3, 5;
	and.b32  	%r420, %r419, 2016;
	add.s32 	%r421, %r430, %r420;
	ld.shared.v4.b32 	{%r422, %r423, %r424, %r425}, [%r421];
	mov.b32 	{%rs137, %rs138}, %r425;
	mov.b32 	{%rs135, %rs136}, %r424;
	mov.b32 	{%rs133, %rs134}, %r423;
	mov.b32 	{%rs131, %rs132}, %r422;
	bar.sync 	0;
	// begin inline asm
	@%p38 st.shared.b16 [ %r310 + 0 ], %rs181;
	// end inline asm
	// begin inline asm
	@%p38 st.shared.b16 [ %r311 + 0 ], %rs182;
	// end inline asm
	// begin inline asm
	@%p38 st.shared.b16 [ %r312 + 0 ], %rs185;
	// end inline asm
	// begin inline asm
	@%p38 st.shared.b16 [ %r313 + 0 ], %rs186;
	// end inline asm
	// begin inline asm
	@%p38 st.shared.b16 [ %r314 + 0 ], %rs189;
	// end inline asm
	// begin inline asm
	@%p38 st.shared.b16 [ %r315 + 0 ], %rs190;
	// end inline asm
	// begin inline asm
	@%p38 st.shared.b16 [ %r316 + 0 ], %rs193;
	// end inline asm
	// begin inline asm
	@%p38 st.shared.b16 [ %r317 + 0 ], %rs194;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.b32 	{%r426, %r427, %r428, %r429}, [%r421];
	mov.b32 	{%rs145, %rs146}, %r429;
	mov.b32 	{%rs143, %rs144}, %r428;
	mov.b32 	{%rs141, %rs142}, %r427;
	mov.b32 	{%rs139, %rs140}, %r426;
	// begin inline asm
	@%p54 st.global.b16 [ %rd80 + 0 ], { %rs131 };
	// end inline asm
	// begin inline asm
	@%p55 st.global.b16 [ %rd81 + 0 ], { %rs132 };
	// end inline asm
	// begin inline asm
	@%p56 st.global.b16 [ %rd82 + 0 ], { %rs133 };
	// end inline asm
	// begin inline asm
	@%p57 st.global.b16 [ %rd83 + 0 ], { %rs134 };
	// end inline asm
	// begin inline asm
	@%p58 st.global.b16 [ %rd84 + 0 ], { %rs135 };
	// end inline asm
	// begin inline asm
	@%p59 st.global.b16 [ %rd85 + 0 ], { %rs136 };
	// end inline asm
	// begin inline asm
	@%p60 st.global.b16 [ %rd86 + 0 ], { %rs137 };
	// end inline asm
	// begin inline asm
	@%p61 st.global.b16 [ %rd87 + 0 ], { %rs138 };
	// end inline asm
	// begin inline asm
	@%p62 st.global.b16 [ %rd88 + 0 ], { %rs139 };
	// end inline asm
	// begin inline asm
	@%p63 st.global.b16 [ %rd89 + 0 ], { %rs140 };
	// end inline asm
	// begin inline asm
	@%p64 st.global.b16 [ %rd90 + 0 ], { %rs141 };
	// end inline asm
	// begin inline asm
	@%p65 st.global.b16 [ %rd91 + 0 ], { %rs142 };
	// end inline asm
	// begin inline asm
	@%p66 st.global.b16 [ %rd92 + 0 ], { %rs143 };
	// end inline asm
	// begin inline asm
	@%p67 st.global.b16 [ %rd93 + 0 ], { %rs144 };
	// end inline asm
	// begin inline asm
	@%p68 st.global.b16 [ %rd94 + 0 ], { %rs145 };
	// end inline asm
	// begin inline asm
	@%p69 st.global.b16 [ %rd95 + 0 ], { %rs146 };
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 174                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x98:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
