//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	implicit_conv3d_kernel  // -- Begin function implicit_conv3d_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @implicit_conv3d_kernel
.visible .entry implicit_conv3d_kernel(
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_0,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_1,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_2,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_3,
	.param .u32 implicit_conv3d_kernel_param_4,
	.param .u32 implicit_conv3d_kernel_param_5,
	.param .u32 implicit_conv3d_kernel_param_6,
	.param .u32 implicit_conv3d_kernel_param_7,
	.param .u32 implicit_conv3d_kernel_param_8,
	.param .u64 .ptr .global .align 1 implicit_conv3d_kernel_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<178>;
	.reg .b16 	%rs<73>;
	.reg .b32 	%r<1307>;
	.reg .f32 	%f<546>;
	.reg .b64 	%rd<388>;
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // implicit_gemm_kernel.py:33:0

// %bb.0:
	ld.param.u32 	%r230, [implicit_conv3d_kernel_param_7];
	ld.param.u32 	%r228, [implicit_conv3d_kernel_param_5];
	ld.param.u64 	%rd94, [implicit_conv3d_kernel_param_3];
$L__tmp0:
	.loc	1 49 24                         // implicit_gemm_kernel.py:49:24
	mov.u32 	%r231, %ctaid.x;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22
	add.s32 	%r232, %r228, 127;
	.loc	2 40 28                         // standard.py:40:28
	shr.s32 	%r233, %r232, 31;
	shr.u32 	%r234, %r233, 25;
	add.s32 	%r235, %r232, %r234;
	shr.s32 	%r236, %r235, 7;
$L__tmp2:
	.loc	1 54 20                         // implicit_gemm_kernel.py:54:20
	div.s32 	%r1, %r231, %r236;
	.loc	1 53 18                         // implicit_gemm_kernel.py:53:18
	mul.lo.s32 	%r238, %r1, %r236;
	sub.s32 	%r239, %r231, %r238;
	ld.param.u32 	%r240, [implicit_conv3d_kernel_param_8];
	.loc	1 56 19                         // implicit_gemm_kernel.py:56:19
	mul.lo.s32 	%r241, %r240, %r240;
	.loc	1 56 23                         // implicit_gemm_kernel.py:56:23
	mul.lo.s32 	%r2, %r241, %r240;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	mov.u32 	%r3, %tid.x;
	and.b32  	%r4, %r3, 31;
	and.b32  	%r5, %r3, 16;
	.loc	1 58 57                         // implicit_gemm_kernel.py:58:57
	shl.b32 	%r7, %r239, 7;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	setp.gt.s32 	%p37, %r2, 0;
	mov.u32 	%r1268, global_smem;
	@%p37 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph13
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	ld.param.u32 	%r229, [implicit_conv3d_kernel_param_6];
	ld.param.u32 	%r227, [implicit_conv3d_kernel_param_4];
	ld.param.u64 	%rd93, [implicit_conv3d_kernel_param_2];
	ld.param.u64 	%rd92, [implicit_conv3d_kernel_param_0];
	ld.param.u64 	%rd95, [implicit_conv3d_kernel_param_1];
	.loc	1 58 0                          // implicit_gemm_kernel.py:58:0
	and.b32  	%r6, %r3, 127;
	or.b32  	%r8, %r7, %r6;
	mul.lo.s32 	%r242, %r8, %r2;
	mul.wide.s32 	%rd96, %r242, 4;
	add.s64 	%rd1, %rd95, %rd96;
	.loc	1 58 38                         // implicit_gemm_kernel.py:58:38
	and.b32  	%r246, %r3, 15;
	and.b32  	%r247, %r3, 4;
	and.b32  	%r248, %r3, 2;
	and.b32  	%r249, %r3, 1;
	shr.u32 	%r1270, %r3, 5;
	bfe.u32 	%r15, %r3, 5, 2;
	shl.b32 	%r250, %r6, 2;
	add.s32 	%r325, %r1268, %r250;
	shl.b32 	%r252, %r15, 2;
	add.s32 	%r17, %r1268, %r252;
	or.b32  	%r18, %r15, 4;
	or.b32  	%r19, %r15, 8;
	or.b32  	%r20, %r15, 12;
	or.b32  	%r21, %r15, 16;
	or.b32  	%r22, %r15, 20;
	or.b32  	%r23, %r15, 24;
	or.b32  	%r24, %r15, 28;
	add.s32 	%r327, %r1268, %r15;
	setp.lt.s32 	%p38, %r3, 4;
	add.s32 	%r328, %r1268, %r3;
	and.b32  	%r253, %r3, 3;
	setp.eq.s32 	%p39, %r253, 0;
	and.pred  	%p47, %p38, %p39;
	add.s32 	%r27, %r229, 31;
	shr.s32 	%r254, %r27, 31;
	shr.u32 	%r255, %r254, 27;
	add.s32 	%r256, %r27, %r255;
	shr.s32 	%r257, %r256, 5;
	add.s32 	%r340, %r1268, %r6;
	shl.b32 	%r258, %r1, 5;
	mul.lo.s32 	%r29, %r2, %r229;
	or.b32  	%r1274, %r258, %r4;
	setp.lt.s32 	%p40, %r1274, %r230;
	setp.gt.s32 	%p41, %r27, 31;
	setp.lt.s32 	%p42, %r4, %r229;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	and.pred  	%p2, %p42, %p41;
	shr.u32 	%r259, %r3, 3;
	and.b32  	%r260, %r259, 12;
	xor.b32  	%r261, %r260, %r4;
	shl.b32 	%r262, %r15, 5;
	or.b32  	%r263, %r261, %r262;
	shl.b32 	%r264, %r263, 2;
	add.s32 	%r341, %r1268, %r264;
	or.b32  	%r265, %r253, 16;
	and.b32  	%r266, %r3, 12;
	or.b32  	%r267, %r266, %r265;
	or.b32  	%r268, %r260, %r5;
	xor.b32  	%r269, %r268, %r267;
	shl.b32 	%r270, %r269, 2;
	add.s32 	%r271, %r1268, %r270;
	shl.b32 	%r272, %r15, 7;
	add.s32 	%r273, %r271, %r272;
	add.s32 	%r343, %r273, 512;
	add.s32 	%r345, %r341, 1024;
	add.s32 	%r347, %r273, 1536;
	add.s32 	%r349, %r341, 2048;
	add.s32 	%r351, %r273, 2560;
	add.s32 	%r353, %r341, 3072;
	add.s32 	%r355, %r273, 3584;
	add.s32 	%r357, %r341, 4096;
	add.s32 	%r359, %r273, 4608;
	add.s32 	%r361, %r341, 5120;
	add.s32 	%r363, %r273, 5632;
	add.s32 	%r365, %r341, 6144;
	add.s32 	%r367, %r273, 6656;
	add.s32 	%r369, %r341, 7168;
	add.s32 	%r371, %r273, 7680;
	add.s32 	%r373, %r341, 8192;
	add.s32 	%r375, %r273, 8704;
	add.s32 	%r377, %r341, 9216;
	add.s32 	%r379, %r273, 9728;
	add.s32 	%r381, %r341, 10240;
	add.s32 	%r383, %r273, 10752;
	add.s32 	%r385, %r341, 11264;
	add.s32 	%r387, %r273, 11776;
	add.s32 	%r389, %r341, 12288;
	add.s32 	%r391, %r273, 12800;
	add.s32 	%r393, %r341, 13312;
	add.s32 	%r395, %r273, 13824;
	add.s32 	%r397, %r341, 14336;
	add.s32 	%r399, %r273, 14848;
	add.s32 	%r401, %r341, 15360;
	add.s32 	%r403, %r273, 15872;
	shr.u32 	%r1273, %r3, 2;
	and.b32  	%r274, %r1273, 24;
	xor.b32  	%r275, %r274, %r4;
	or.b32  	%r276, %r275, %r262;
	shl.b32 	%r277, %r276, 2;
	add.s32 	%r278, %r1268, %r277;
	add.s32 	%r405, %r278, 16384;
	add.s32 	%r407, %r278, 16896;
	add.s32 	%r409, %r278, 17408;
	add.s32 	%r411, %r278, 17920;
	add.s32 	%r413, %r278, 18432;
	add.s32 	%r415, %r278, 18944;
	add.s32 	%r417, %r278, 19456;
	add.s32 	%r419, %r278, 19968;
	add.s32 	%r279, %r257, -1;
	shl.b32 	%r280, %r249, 2;
	shl.b32 	%r281, %r248, 2;
	or.b32  	%r282, %r280, %r281;
	shl.b32 	%r283, %r247, 2;
	or.b32  	%r284, %r282, %r283;
	shr.u32 	%r1272, %r5, 2;
	xor.b32  	%r73, %r284, %r1272;
	shr.u32 	%r285, %r3, 1;
	and.b32  	%r1271, %r285, 48;
	or.b32  	%r286, %r1271, %r246;
	shl.b32 	%r75, %r286, 5;
	or.b32  	%r76, %r73, %r75;
	or.b32  	%r287, %r280, 8;
	xor.b32  	%r288, %r287, %r281;
	or.b32  	%r289, %r288, %r283;
	xor.b32  	%r77, %r289, %r1272;
	or.b32  	%r78, %r77, %r75;
	or.b32  	%r290, %r282, 16;
	or.b32  	%r291, %r1272, %r283;
	xor.b32  	%r79, %r291, %r290;
	or.b32  	%r80, %r79, %r75;
	or.b32  	%r292, %r280, 24;
	or.b32  	%r293, %r291, %r281;
	xor.b32  	%r81, %r293, %r292;
	or.b32  	%r82, %r81, %r75;
	shl.b32 	%r294, %r249, 3;
	shl.b32 	%r295, %r248, 3;
	bfe.u32 	%r296, %r3, 2, 1;
	and.b32  	%r297, %r1273, 2;
	or.b32  	%r298, %r297, %r296;
	or.b32  	%r299, %r298, %r295;
	or.b32  	%r300, %r299, %r294;
	or.b32  	%r83, %r300, %r1272;
	shl.b32 	%r301, %r3, 5;
	and.b32  	%r84, %r301, 96;
	or.b32  	%r85, %r83, %r84;
	shl.b32 	%r86, %r265, 5;
	or.b32  	%r87, %r83, %r86;
	xor.b32  	%r88, %r83, 8;
	or.b32  	%r302, %r294, 16;
	xor.b32  	%r303, %r302, %r295;
	or.b32  	%r304, %r296, %r303;
	or.b32  	%r305, %r304, %r297;
	or.b32  	%r89, %r305, %r1272;
	xor.b32  	%r90, %r83, 24;
	cvt.s64.s32 	%rd2, %r279;
	cvt.u64.u32 	%rd3, %r4;
	cvt.s64.s32 	%rd4, %r229;
	cvt.u64.u32 	%rd5, %r2;
	cvt.u64.u32 	%rd6, %r257;
	and.pred  	%p3, %p40, %p41;
	or.b64  	%rd7, %rd3, 32;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	or.b32  	%r91, %r4, 32;
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	cvt.u64.u32 	%rd98, %r1270;
	and.b64  	%rd376, %rd98, 3;
	cvt.u64.u32 	%rd9, %r229;
	or.b32  	%r306, %r15, 60;
	mad.lo.s32 	%r307, %r230, %r306, %r258;
	cvt.u64.u32 	%rd375, %r307;
	mul.lo.s32 	%r308, %r230, %r229;
	cvt.u64.u32 	%rd11, %r308;
	shl.b32 	%r309, %r230, 5;
	cvt.u64.u32 	%rd12, %r309;
	or.b32  	%r310, %r15, 56;
	mad.lo.s32 	%r311, %r230, %r310, %r258;
	cvt.u64.u32 	%rd374, %r311;
	or.b32  	%r312, %r15, 52;
	mad.lo.s32 	%r313, %r230, %r312, %r258;
	cvt.u64.u32 	%rd373, %r313;
	or.b32  	%r314, %r15, 48;
	mad.lo.s32 	%r315, %r230, %r314, %r258;
	cvt.u64.u32 	%rd372, %r315;
	or.b32  	%r316, %r15, 44;
	mad.lo.s32 	%r317, %r230, %r316, %r258;
	cvt.u64.u32 	%rd371, %r317;
	or.b32  	%r318, %r15, 40;
	mad.lo.s32 	%r319, %r230, %r318, %r258;
	cvt.u64.u32 	%rd370, %r319;
	or.b32  	%r320, %r15, 36;
	mad.lo.s32 	%r321, %r230, %r320, %r258;
	cvt.u64.u32 	%rd369, %r321;
	or.b32  	%r322, %r15, 32;
	mad.lo.s32 	%r323, %r230, %r322, %r258;
	cvt.u64.u32 	%rd368, %r323;
	mov.f32 	%f450, 0f00000000;
	mov.b64 	%rd377, 0;
	shl.b32 	%r853, %r76, 2;
	shl.b32 	%r854, %r78, 2;
	shl.b32 	%r855, %r80, 2;
	shl.b32 	%r856, %r82, 2;
	shl.b32 	%r872, %r85, 2;
	shl.b32 	%r877, %r87, 2;
	shl.b32 	%r879, %r88, 2;
	shl.b32 	%r885, %r89, 2;
	shl.b32 	%r889, %r90, 2;
	mov.f32 	%f451, %f450;
	mov.f32 	%f452, %f450;
	mov.f32 	%f453, %f450;
	mov.f32 	%f454, %f450;
	mov.f32 	%f455, %f450;
	mov.f32 	%f456, %f450;
	mov.f32 	%f457, %f450;
	mov.f32 	%f458, %f450;
	mov.f32 	%f459, %f450;
	mov.f32 	%f460, %f450;
	mov.f32 	%f461, %f450;
	mov.f32 	%f462, %f450;
	mov.f32 	%f463, %f450;
	mov.f32 	%f464, %f450;
	mov.f32 	%f465, %f450;
	mov.f32 	%f466, %f450;
	mov.f32 	%f467, %f450;
	mov.f32 	%f468, %f450;
	mov.f32 	%f469, %f450;
	mov.f32 	%f470, %f450;
	mov.f32 	%f471, %f450;
	mov.f32 	%f472, %f450;
	mov.f32 	%f473, %f450;
	mov.f32 	%f474, %f450;
	mov.f32 	%f475, %f450;
	mov.f32 	%f476, %f450;
	mov.f32 	%f477, %f450;
	mov.f32 	%f478, %f450;
	mov.f32 	%f479, %f450;
	mov.f32 	%f480, %f450;
	mov.f32 	%f481, %f450;
	bra.uni 	$L__BB0_3;
$L__BB0_7:                              // %._crit_edge
                                        //   in Loop: Header=BB0_3 Depth=1
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	cp.async.wait_group 0;
	bar.sync 	0;
$L__BB0_8:                              //   in Loop: Header=BB0_3 Depth=1
	.loc	1 60 39                         // implicit_gemm_kernel.py:60:39
	add.s64 	%rd377, %rd377, 1;
	add.s64 	%rd376, %rd376, %rd9;
	add.s64 	%rd375, %rd375, %rd11;
	add.s64 	%rd374, %rd374, %rd11;
	add.s64 	%rd373, %rd373, %rd11;
	add.s64 	%rd372, %rd372, %rd11;
	add.s64 	%rd371, %rd371, %rd11;
	add.s64 	%rd370, %rd370, %rd11;
	add.s64 	%rd369, %rd369, %rd11;
	add.s64 	%rd368, %rd368, %rd11;
	setp.ne.s64 	%p80, %rd377, %rd5;
	@%p80 bra 	$L__BB0_3;
	bra.uni 	$L__BB0_9;
$L__BB0_3:                              // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_6 Depth 2
	.loc	1 0 39                          // implicit_gemm_kernel.py:0:39
	setp.eq.s32 	%p45, %r4, 0;
	.loc	1 63 85                         // implicit_gemm_kernel.py:63:85
	setp.lt.s32 	%p43, %r8, %r228;
	.loc	1 63 33                         // implicit_gemm_kernel.py:63:33
	shl.b64 	%rd100, %rd377, 2;
	add.s64 	%rd99, %rd1, %rd100;
	.loc	1 63 23                         // implicit_gemm_kernel.py:63:23
	// begin inline asm
	mov.u32 %r326, 0xffffffffffffffff;
	@%p43 ld.global.b32 { %r326 }, [ %rd99 + 0 ];
	// end inline asm
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	bar.sync 	0;
	mov.pred 	%p44, -1;
	// begin inline asm
	@%p44 st.shared.b32 [ %r325 + 0 ], %r326;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r92, [%r17];
	ld.shared.u32 	%r93, [%r17+16];
	ld.shared.u32 	%r94, [%r17+32];
	ld.shared.u32 	%r95, [%r17+48];
	ld.shared.u32 	%r96, [%r17+64];
	ld.shared.u32 	%r97, [%r17+80];
	ld.shared.u32 	%r98, [%r17+96];
	ld.shared.u32 	%r99, [%r17+112];
	ld.shared.u32 	%r100, [%r17+128];
	ld.shared.u32 	%r101, [%r17+144];
	ld.shared.u32 	%r102, [%r17+160];
	ld.shared.u32 	%r103, [%r17+176];
	ld.shared.u32 	%r104, [%r17+192];
	ld.shared.u32 	%r105, [%r17+208];
	ld.shared.u32 	%r106, [%r17+224];
	ld.shared.u32 	%r107, [%r17+240];
	ld.shared.u32 	%r108, [%r17+256];
	ld.shared.u32 	%r109, [%r17+272];
	ld.shared.u32 	%r110, [%r17+288];
	ld.shared.u32 	%r111, [%r17+304];
	ld.shared.u32 	%r112, [%r17+320];
	ld.shared.u32 	%r113, [%r17+336];
	ld.shared.u32 	%r114, [%r17+352];
	ld.shared.u32 	%r115, [%r17+368];
	ld.shared.u32 	%r116, [%r17+384];
	ld.shared.u32 	%r117, [%r17+400];
	ld.shared.u32 	%r118, [%r17+416];
	ld.shared.u32 	%r119, [%r17+432];
	ld.shared.u32 	%r120, [%r17+448];
	ld.shared.u32 	%r121, [%r17+464];
	ld.shared.u32 	%r122, [%r17+480];
	ld.shared.u32 	%r123, [%r17+496];
	.loc	1 65 27                         // implicit_gemm_kernel.py:65:27
	setp.gt.s32 	%p48, %r326, -1;
	.loc	1 65 43                         // implicit_gemm_kernel.py:65:43
	setp.lt.s32 	%p49, %r326, %r227;
	.loc	1 65 36                         // implicit_gemm_kernel.py:65:36
	and.pred  	%p4, %p48, %p49;
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	bar.sync 	0;
	selp.u32 	%r330, 1, 0, %p4;
	mov.b32 	%r331, -1;
	redux.sync.or.b32 %r332, %r330, %r331;
	cvt.u16.u32 	%rs4, %r332;
	and.b16  	%rs1, %rs4, 1;
	// begin inline asm
	@%p45 st.shared.b8 [ %r327 + 0 ], %rs1;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p38 ld.shared.b8 %rs2, [ %r328 + 0 ];
	// end inline asm
	cvt.u32.u16 	%r333, %rs2;
	and.b16  	%rs5, %rs2, 1;
	setp.eq.b16 	%p50, %rs5, 1;
	and.b32  	%r334, %r333, 1;
	shfl.sync.bfly.b32	%r335, %r334, 2, 31, -1;
	and.b32  	%r336, %r335, 1;
	setp.eq.b32 	%p51, %r336, 1;
$L__tmp3:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p52, %p50, %p51;
$L__tmp4:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u32 	%r337, 1, 0, %p52;
	shfl.sync.bfly.b32	%r338, %r337, 1, 31, -1;
	and.b32  	%r339, %r338, 1;
	setp.eq.b32 	%p53, %r339, 1;
$L__tmp5:
	.loc	1 6 15                          // implicit_gemm_kernel.py:6:15
	or.pred  	%p54, %p52, %p53;
$L__tmp6:
	.loc	1 65 50                         // implicit_gemm_kernel.py:65:50
	selp.u16 	%rs3, 1, 0, %p54;
	// begin inline asm
	@%p47 st.shared.b8 [ %r328 + 0 ], %rs3;
	// end inline asm
	bar.sync 	0;
	ld.shared.u8 	%rs6, [global_smem];
	and.b16  	%rs7, %rs6, 1;
	setp.eq.b16 	%p55, %rs7, 1;
	.loc	1 65 11                         // implicit_gemm_kernel.py:65:11
	not.pred 	%p56, %p55;
	@%p56 bra 	$L__BB0_8;
// %bb.4:                               //   in Loop: Header=BB0_3 Depth=1
	.loc	1 0 11                          // implicit_gemm_kernel.py:0:11
	setp.lt.s32 	%p58, %r27, 32;
	.loc	1 67 31                         // implicit_gemm_kernel.py:67:31
	cvt.u32.u64 	%r421, %rd377;
	mul.lo.s32 	%r422, %r229, %r421;
	.loc	1 69 52                         // implicit_gemm_kernel.py:69:52
	mul.lo.s32 	%r124, %r92, %r229;
	mul.lo.s32 	%r125, %r93, %r229;
	mul.lo.s32 	%r126, %r94, %r229;
	mul.lo.s32 	%r127, %r95, %r229;
	mul.lo.s32 	%r128, %r96, %r229;
	mul.lo.s32 	%r129, %r97, %r229;
	mul.lo.s32 	%r130, %r98, %r229;
	mul.lo.s32 	%r131, %r99, %r229;
	mul.lo.s32 	%r132, %r100, %r229;
	mul.lo.s32 	%r133, %r101, %r229;
	mul.lo.s32 	%r134, %r102, %r229;
	mul.lo.s32 	%r135, %r103, %r229;
	mul.lo.s32 	%r136, %r104, %r229;
	mul.lo.s32 	%r137, %r105, %r229;
	mul.lo.s32 	%r138, %r106, %r229;
	mul.lo.s32 	%r139, %r107, %r229;
	mul.lo.s32 	%r140, %r108, %r229;
	mul.lo.s32 	%r141, %r109, %r229;
	mul.lo.s32 	%r142, %r110, %r229;
	mul.lo.s32 	%r143, %r111, %r229;
	mul.lo.s32 	%r144, %r112, %r229;
	mul.lo.s32 	%r145, %r113, %r229;
	mul.lo.s32 	%r146, %r114, %r229;
	mul.lo.s32 	%r147, %r115, %r229;
	mul.lo.s32 	%r148, %r116, %r229;
	mul.lo.s32 	%r149, %r117, %r229;
	mul.lo.s32 	%r150, %r118, %r229;
	mul.lo.s32 	%r151, %r119, %r229;
	mul.lo.s32 	%r152, %r120, %r229;
	mul.lo.s32 	%r153, %r121, %r229;
	mul.lo.s32 	%r154, %r122, %r229;
	mul.lo.s32 	%r155, %r123, %r229;
	.loc	1 69 56                         // implicit_gemm_kernel.py:69:56
	add.s32 	%r423, %r124, %r4;
	add.s32 	%r424, %r125, %r4;
	add.s32 	%r425, %r126, %r4;
	add.s32 	%r426, %r127, %r4;
	add.s32 	%r427, %r128, %r4;
	add.s32 	%r428, %r129, %r4;
	add.s32 	%r429, %r130, %r4;
	add.s32 	%r430, %r131, %r4;
	add.s32 	%r431, %r132, %r4;
	add.s32 	%r432, %r133, %r4;
	add.s32 	%r433, %r134, %r4;
	add.s32 	%r434, %r135, %r4;
	add.s32 	%r435, %r136, %r4;
	add.s32 	%r436, %r137, %r4;
	add.s32 	%r437, %r138, %r4;
	add.s32 	%r438, %r139, %r4;
	add.s32 	%r439, %r140, %r4;
	add.s32 	%r440, %r141, %r4;
	add.s32 	%r441, %r142, %r4;
	add.s32 	%r442, %r143, %r4;
	add.s32 	%r443, %r144, %r4;
	add.s32 	%r444, %r145, %r4;
	add.s32 	%r445, %r146, %r4;
	add.s32 	%r446, %r147, %r4;
	add.s32 	%r447, %r148, %r4;
	add.s32 	%r448, %r149, %r4;
	add.s32 	%r449, %r150, %r4;
	add.s32 	%r450, %r151, %r4;
	add.s32 	%r451, %r152, %r4;
	add.s32 	%r452, %r153, %r4;
	add.s32 	%r453, %r154, %r4;
	add.s32 	%r454, %r155, %r4;
	.loc	1 70 64                         // implicit_gemm_kernel.py:70:64
	bar.sync 	0;
	selp.u16 	%rs8, 1, 0, %p4;
	// begin inline asm
	@%p44 st.shared.b8 [ %r340 + 0 ], %rs8;
	// end inline asm
	bar.sync 	0;
	ld.shared.u8 	%rs9, [%r327];
	ld.shared.u8 	%rs10, [%r327+4];
	ld.shared.u8 	%rs11, [%r327+8];
	ld.shared.u8 	%rs12, [%r327+12];
	ld.shared.u8 	%rs13, [%r327+16];
	ld.shared.u8 	%rs14, [%r327+20];
	ld.shared.u8 	%rs15, [%r327+24];
	ld.shared.u8 	%rs16, [%r327+28];
	ld.shared.u8 	%rs17, [%r327+32];
	ld.shared.u8 	%rs18, [%r327+36];
	ld.shared.u8 	%rs19, [%r327+40];
	ld.shared.u8 	%rs20, [%r327+44];
	ld.shared.u8 	%rs21, [%r327+48];
	ld.shared.u8 	%rs22, [%r327+52];
	ld.shared.u8 	%rs23, [%r327+56];
	ld.shared.u8 	%rs24, [%r327+60];
	ld.shared.u8 	%rs25, [%r327+64];
	ld.shared.u8 	%rs26, [%r327+68];
	ld.shared.u8 	%rs27, [%r327+72];
	ld.shared.u8 	%rs28, [%r327+76];
	ld.shared.u8 	%rs29, [%r327+80];
	ld.shared.u8 	%rs30, [%r327+84];
	ld.shared.u8 	%rs31, [%r327+88];
	ld.shared.u8 	%rs32, [%r327+92];
	ld.shared.u8 	%rs33, [%r327+96];
	ld.shared.u8 	%rs34, [%r327+100];
	ld.shared.u8 	%rs35, [%r327+104];
	ld.shared.u8 	%rs36, [%r327+108];
	ld.shared.u8 	%rs37, [%r327+112];
	ld.shared.u8 	%rs38, [%r327+116];
	ld.shared.u8 	%rs39, [%r327+120];
	ld.shared.u8 	%rs40, [%r327+124];
	and.b16  	%rs41, %rs9, 1;
	setp.eq.b16 	%p5, %rs41, 1;
	and.b16  	%rs42, %rs10, 1;
	setp.eq.b16 	%p6, %rs42, 1;
	and.b16  	%rs43, %rs11, 1;
	setp.eq.b16 	%p7, %rs43, 1;
	and.b16  	%rs44, %rs12, 1;
	setp.eq.b16 	%p8, %rs44, 1;
	and.b16  	%rs45, %rs13, 1;
	setp.eq.b16 	%p9, %rs45, 1;
	and.b16  	%rs46, %rs14, 1;
	setp.eq.b16 	%p10, %rs46, 1;
	and.b16  	%rs47, %rs15, 1;
	setp.eq.b16 	%p11, %rs47, 1;
	and.b16  	%rs48, %rs16, 1;
	setp.eq.b16 	%p12, %rs48, 1;
	and.b16  	%rs49, %rs17, 1;
	setp.eq.b16 	%p13, %rs49, 1;
	and.b16  	%rs50, %rs18, 1;
	setp.eq.b16 	%p14, %rs50, 1;
	and.b16  	%rs51, %rs19, 1;
	setp.eq.b16 	%p15, %rs51, 1;
	and.b16  	%rs52, %rs20, 1;
	setp.eq.b16 	%p16, %rs52, 1;
	and.b16  	%rs53, %rs21, 1;
	setp.eq.b16 	%p17, %rs53, 1;
	and.b16  	%rs54, %rs22, 1;
	setp.eq.b16 	%p18, %rs54, 1;
	and.b16  	%rs55, %rs23, 1;
	setp.eq.b16 	%p19, %rs55, 1;
	and.b16  	%rs56, %rs24, 1;
	setp.eq.b16 	%p20, %rs56, 1;
	and.b16  	%rs57, %rs25, 1;
	setp.eq.b16 	%p21, %rs57, 1;
	and.b16  	%rs58, %rs26, 1;
	setp.eq.b16 	%p22, %rs58, 1;
	and.b16  	%rs59, %rs27, 1;
	setp.eq.b16 	%p23, %rs59, 1;
	and.b16  	%rs60, %rs28, 1;
	setp.eq.b16 	%p24, %rs60, 1;
	and.b16  	%rs61, %rs29, 1;
	setp.eq.b16 	%p25, %rs61, 1;
	and.b16  	%rs62, %rs30, 1;
	setp.eq.b16 	%p26, %rs62, 1;
	and.b16  	%rs63, %rs31, 1;
	setp.eq.b16 	%p27, %rs63, 1;
	and.b16  	%rs64, %rs32, 1;
	setp.eq.b16 	%p28, %rs64, 1;
	and.b16  	%rs65, %rs33, 1;
	setp.eq.b16 	%p29, %rs65, 1;
	and.b16  	%rs66, %rs34, 1;
	setp.eq.b16 	%p30, %rs66, 1;
	and.b16  	%rs67, %rs35, 1;
	setp.eq.b16 	%p31, %rs67, 1;
	and.b16  	%rs68, %rs36, 1;
	setp.eq.b16 	%p32, %rs68, 1;
	and.b16  	%rs69, %rs37, 1;
	setp.eq.b16 	%p33, %rs69, 1;
	and.b16  	%rs70, %rs38, 1;
	setp.eq.b16 	%p34, %rs70, 1;
	and.b16  	%rs71, %rs39, 1;
	setp.eq.b16 	%p35, %rs71, 1;
	and.b16  	%rs72, %rs40, 1;
	setp.eq.b16 	%p36, %rs72, 1;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	mul.wide.s32 	%rd141, %r423, 4;
	add.s64 	%rd101, %rd92, %rd141;
	mul.wide.s32 	%rd142, %r424, 4;
	add.s64 	%rd102, %rd92, %rd142;
	mul.wide.s32 	%rd143, %r425, 4;
	add.s64 	%rd103, %rd92, %rd143;
	mul.wide.s32 	%rd144, %r426, 4;
	add.s64 	%rd104, %rd92, %rd144;
	mul.wide.s32 	%rd145, %r427, 4;
	add.s64 	%rd105, %rd92, %rd145;
	mul.wide.s32 	%rd146, %r428, 4;
	add.s64 	%rd106, %rd92, %rd146;
	mul.wide.s32 	%rd147, %r429, 4;
	add.s64 	%rd107, %rd92, %rd147;
	mul.wide.s32 	%rd148, %r430, 4;
	add.s64 	%rd108, %rd92, %rd148;
	mul.wide.s32 	%rd149, %r431, 4;
	add.s64 	%rd109, %rd92, %rd149;
	mul.wide.s32 	%rd150, %r432, 4;
	add.s64 	%rd110, %rd92, %rd150;
	mul.wide.s32 	%rd151, %r433, 4;
	add.s64 	%rd111, %rd92, %rd151;
	mul.wide.s32 	%rd152, %r434, 4;
	add.s64 	%rd112, %rd92, %rd152;
	mul.wide.s32 	%rd153, %r435, 4;
	add.s64 	%rd113, %rd92, %rd153;
	mul.wide.s32 	%rd154, %r436, 4;
	add.s64 	%rd114, %rd92, %rd154;
	mul.wide.s32 	%rd155, %r437, 4;
	add.s64 	%rd115, %rd92, %rd155;
	mul.wide.s32 	%rd156, %r438, 4;
	add.s64 	%rd116, %rd92, %rd156;
	mul.wide.s32 	%rd157, %r439, 4;
	add.s64 	%rd117, %rd92, %rd157;
	mul.wide.s32 	%rd158, %r440, 4;
	add.s64 	%rd118, %rd92, %rd158;
	mul.wide.s32 	%rd159, %r441, 4;
	add.s64 	%rd119, %rd92, %rd159;
	mul.wide.s32 	%rd160, %r442, 4;
	add.s64 	%rd120, %rd92, %rd160;
	mul.wide.s32 	%rd161, %r443, 4;
	add.s64 	%rd121, %rd92, %rd161;
	mul.wide.s32 	%rd162, %r444, 4;
	add.s64 	%rd122, %rd92, %rd162;
	mul.wide.s32 	%rd163, %r445, 4;
	add.s64 	%rd123, %rd92, %rd163;
	mul.wide.s32 	%rd164, %r446, 4;
	add.s64 	%rd124, %rd92, %rd164;
	mul.wide.s32 	%rd165, %r447, 4;
	add.s64 	%rd125, %rd92, %rd165;
	mul.wide.s32 	%rd166, %r448, 4;
	add.s64 	%rd126, %rd92, %rd166;
	mul.wide.s32 	%rd167, %r449, 4;
	add.s64 	%rd127, %rd92, %rd167;
	mul.wide.s32 	%rd168, %r450, 4;
	add.s64 	%rd128, %rd92, %rd168;
	mul.wide.s32 	%rd169, %r451, 4;
	add.s64 	%rd129, %rd92, %rd169;
	mul.wide.s32 	%rd170, %r452, 4;
	add.s64 	%rd130, %rd92, %rd170;
	mul.wide.s32 	%rd171, %r453, 4;
	add.s64 	%rd131, %rd92, %rd171;
	mul.wide.s32 	%rd172, %r454, 4;
	add.s64 	%rd132, %rd92, %rd172;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s32 	%r455, %r422, %r15;
	add.s32 	%r456, %r422, %r18;
	add.s32 	%r457, %r422, %r19;
	add.s32 	%r458, %r422, %r20;
	add.s32 	%r459, %r422, %r21;
	add.s32 	%r460, %r422, %r22;
	add.s32 	%r461, %r422, %r23;
	add.s32 	%r462, %r422, %r24;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	mad.lo.s32 	%r463, %r455, %r230, %r1274;
	mad.lo.s32 	%r464, %r456, %r230, %r1274;
	mad.lo.s32 	%r465, %r457, %r230, %r1274;
	mad.lo.s32 	%r466, %r458, %r230, %r1274;
	mad.lo.s32 	%r467, %r459, %r230, %r1274;
	mad.lo.s32 	%r468, %r460, %r230, %r1274;
	mad.lo.s32 	%r469, %r461, %r230, %r1274;
	mad.lo.s32 	%r470, %r462, %r230, %r1274;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	mul.wide.s32 	%rd173, %r463, 4;
	add.s64 	%rd133, %rd93, %rd173;
	mul.wide.s32 	%rd174, %r464, 4;
	add.s64 	%rd134, %rd93, %rd174;
	mul.wide.s32 	%rd175, %r465, 4;
	add.s64 	%rd135, %rd93, %rd175;
	mul.wide.s32 	%rd176, %r466, 4;
	add.s64 	%rd136, %rd93, %rd176;
	mul.wide.s32 	%rd177, %r467, 4;
	add.s64 	%rd137, %rd93, %rd177;
	mul.wide.s32 	%rd178, %r468, 4;
	add.s64 	%rd138, %rd93, %rd178;
	mul.wide.s32 	%rd179, %r469, 4;
	add.s64 	%rd139, %rd93, %rd179;
	mul.wide.s32 	%rd180, %r470, 4;
	add.s64 	%rd140, %rd93, %rd180;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p59, %r455, %r29;
	setp.lt.s32 	%p60, %r456, %r29;
	setp.lt.s32 	%p61, %r457, %r29;
	setp.lt.s32 	%p62, %r458, %r29;
	setp.lt.s32 	%p63, %r459, %r29;
	setp.lt.s32 	%p64, %r460, %r29;
	setp.lt.s32 	%p65, %r461, %r29;
	setp.lt.s32 	%p66, %r462, %r29;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r471, 4, 0, %p5;
	selp.b32 	%r342, %r471, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r341 + 0 ], [ %rd101 + 0 ], 0x4, %r342;
	// end inline asm
	selp.b32 	%r472, 4, 0, %p6;
	selp.b32 	%r344, %r472, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r343 + 0 ], [ %rd102 + 0 ], 0x4, %r344;
	// end inline asm
	selp.b32 	%r473, 4, 0, %p7;
	selp.b32 	%r346, %r473, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r345 + 0 ], [ %rd103 + 0 ], 0x4, %r346;
	// end inline asm
	selp.b32 	%r474, 4, 0, %p8;
	selp.b32 	%r348, %r474, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r347 + 0 ], [ %rd104 + 0 ], 0x4, %r348;
	// end inline asm
	selp.b32 	%r475, 4, 0, %p9;
	selp.b32 	%r350, %r475, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r349 + 0 ], [ %rd105 + 0 ], 0x4, %r350;
	// end inline asm
	selp.b32 	%r476, 4, 0, %p10;
	selp.b32 	%r352, %r476, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r351 + 0 ], [ %rd106 + 0 ], 0x4, %r352;
	// end inline asm
	selp.b32 	%r477, 4, 0, %p11;
	selp.b32 	%r354, %r477, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r353 + 0 ], [ %rd107 + 0 ], 0x4, %r354;
	// end inline asm
	selp.b32 	%r478, 4, 0, %p12;
	selp.b32 	%r356, %r478, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r355 + 0 ], [ %rd108 + 0 ], 0x4, %r356;
	// end inline asm
	selp.b32 	%r479, 4, 0, %p13;
	selp.b32 	%r358, %r479, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r357 + 0 ], [ %rd109 + 0 ], 0x4, %r358;
	// end inline asm
	selp.b32 	%r480, 4, 0, %p14;
	selp.b32 	%r360, %r480, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r359 + 0 ], [ %rd110 + 0 ], 0x4, %r360;
	// end inline asm
	selp.b32 	%r481, 4, 0, %p15;
	selp.b32 	%r362, %r481, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r361 + 0 ], [ %rd111 + 0 ], 0x4, %r362;
	// end inline asm
	selp.b32 	%r482, 4, 0, %p16;
	selp.b32 	%r364, %r482, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r363 + 0 ], [ %rd112 + 0 ], 0x4, %r364;
	// end inline asm
	selp.b32 	%r483, 4, 0, %p17;
	selp.b32 	%r366, %r483, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r365 + 0 ], [ %rd113 + 0 ], 0x4, %r366;
	// end inline asm
	selp.b32 	%r484, 4, 0, %p18;
	selp.b32 	%r368, %r484, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r367 + 0 ], [ %rd114 + 0 ], 0x4, %r368;
	// end inline asm
	selp.b32 	%r485, 4, 0, %p19;
	selp.b32 	%r370, %r485, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r369 + 0 ], [ %rd115 + 0 ], 0x4, %r370;
	// end inline asm
	selp.b32 	%r486, 4, 0, %p20;
	selp.b32 	%r372, %r486, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r371 + 0 ], [ %rd116 + 0 ], 0x4, %r372;
	// end inline asm
	selp.b32 	%r487, 4, 0, %p21;
	selp.b32 	%r374, %r487, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r373 + 0 ], [ %rd117 + 0 ], 0x4, %r374;
	// end inline asm
	selp.b32 	%r488, 4, 0, %p22;
	selp.b32 	%r376, %r488, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r375 + 0 ], [ %rd118 + 0 ], 0x4, %r376;
	// end inline asm
	selp.b32 	%r489, 4, 0, %p23;
	selp.b32 	%r378, %r489, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r377 + 0 ], [ %rd119 + 0 ], 0x4, %r378;
	// end inline asm
	selp.b32 	%r490, 4, 0, %p24;
	selp.b32 	%r380, %r490, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r379 + 0 ], [ %rd120 + 0 ], 0x4, %r380;
	// end inline asm
	selp.b32 	%r491, 4, 0, %p25;
	selp.b32 	%r382, %r491, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r381 + 0 ], [ %rd121 + 0 ], 0x4, %r382;
	// end inline asm
	selp.b32 	%r492, 4, 0, %p26;
	selp.b32 	%r384, %r492, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r383 + 0 ], [ %rd122 + 0 ], 0x4, %r384;
	// end inline asm
	selp.b32 	%r493, 4, 0, %p27;
	selp.b32 	%r386, %r493, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r385 + 0 ], [ %rd123 + 0 ], 0x4, %r386;
	// end inline asm
	selp.b32 	%r494, 4, 0, %p28;
	selp.b32 	%r388, %r494, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r387 + 0 ], [ %rd124 + 0 ], 0x4, %r388;
	// end inline asm
	selp.b32 	%r495, 4, 0, %p29;
	selp.b32 	%r390, %r495, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r389 + 0 ], [ %rd125 + 0 ], 0x4, %r390;
	// end inline asm
	selp.b32 	%r496, 4, 0, %p30;
	selp.b32 	%r392, %r496, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r391 + 0 ], [ %rd126 + 0 ], 0x4, %r392;
	// end inline asm
	selp.b32 	%r497, 4, 0, %p31;
	selp.b32 	%r394, %r497, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r393 + 0 ], [ %rd127 + 0 ], 0x4, %r394;
	// end inline asm
	selp.b32 	%r498, 4, 0, %p32;
	selp.b32 	%r396, %r498, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r395 + 0 ], [ %rd128 + 0 ], 0x4, %r396;
	// end inline asm
	selp.b32 	%r499, 4, 0, %p33;
	selp.b32 	%r398, %r499, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r397 + 0 ], [ %rd129 + 0 ], 0x4, %r398;
	// end inline asm
	selp.b32 	%r500, 4, 0, %p34;
	selp.b32 	%r400, %r500, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r399 + 0 ], [ %rd130 + 0 ], 0x4, %r400;
	// end inline asm
	selp.b32 	%r501, 4, 0, %p35;
	selp.b32 	%r402, %r501, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r401 + 0 ], [ %rd131 + 0 ], 0x4, %r402;
	// end inline asm
	selp.b32 	%r502, 4, 0, %p36;
	selp.b32 	%r404, %r502, 0, %p2;
	// begin inline asm
	cp.async.ca.shared.global [ %r403 + 0 ], [ %rd132 + 0 ], 0x4, %r404;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r503, 4, 0, %p3;
	selp.b32 	%r406, %r503, 0, %p59;
	// begin inline asm
	cp.async.ca.shared.global [ %r405 + 0 ], [ %rd133 + 0 ], 0x4, %r406;
	// end inline asm
	selp.b32 	%r408, %r503, 0, %p60;
	// begin inline asm
	cp.async.ca.shared.global [ %r407 + 0 ], [ %rd134 + 0 ], 0x4, %r408;
	// end inline asm
	selp.b32 	%r410, %r503, 0, %p61;
	// begin inline asm
	cp.async.ca.shared.global [ %r409 + 0 ], [ %rd135 + 0 ], 0x4, %r410;
	// end inline asm
	selp.b32 	%r412, %r503, 0, %p62;
	// begin inline asm
	cp.async.ca.shared.global [ %r411 + 0 ], [ %rd136 + 0 ], 0x4, %r412;
	// end inline asm
	selp.b32 	%r414, %r503, 0, %p63;
	// begin inline asm
	cp.async.ca.shared.global [ %r413 + 0 ], [ %rd137 + 0 ], 0x4, %r414;
	// end inline asm
	selp.b32 	%r416, %r503, 0, %p64;
	// begin inline asm
	cp.async.ca.shared.global [ %r415 + 0 ], [ %rd138 + 0 ], 0x4, %r416;
	// end inline asm
	selp.b32 	%r418, %r503, 0, %p65;
	// begin inline asm
	cp.async.ca.shared.global [ %r417 + 0 ], [ %rd139 + 0 ], 0x4, %r418;
	// end inline asm
	selp.b32 	%r420, %r503, 0, %p66;
	// begin inline asm
	cp.async.ca.shared.global [ %r419 + 0 ], [ %rd140 + 0 ], 0x4, %r420;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	@%p58 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph.preheader
                                        //   in Loop: Header=BB0_3 Depth=1
	add.s32 	%r505, %r91, %r155;
	cvt.u64.u32 	%rd30, %r505;
	add.s32 	%r506, %r91, %r154;
	cvt.u64.u32 	%rd31, %r506;
	add.s32 	%r507, %r91, %r153;
	cvt.u64.u32 	%rd32, %r507;
	add.s32 	%r508, %r91, %r152;
	cvt.u64.u32 	%rd33, %r508;
	add.s32 	%r509, %r91, %r151;
	cvt.u64.u32 	%rd34, %r509;
	add.s32 	%r510, %r91, %r150;
	cvt.u64.u32 	%rd35, %r510;
	add.s32 	%r511, %r91, %r149;
	cvt.u64.u32 	%rd36, %r511;
	add.s32 	%r512, %r91, %r148;
	cvt.u64.u32 	%rd37, %r512;
	add.s32 	%r513, %r91, %r147;
	cvt.u64.u32 	%rd38, %r513;
	add.s32 	%r514, %r91, %r146;
	cvt.u64.u32 	%rd39, %r514;
	add.s32 	%r515, %r91, %r145;
	cvt.u64.u32 	%rd40, %r515;
	add.s32 	%r516, %r91, %r144;
	cvt.u64.u32 	%rd41, %r516;
	add.s32 	%r517, %r91, %r143;
	cvt.u64.u32 	%rd42, %r517;
	add.s32 	%r518, %r91, %r142;
	cvt.u64.u32 	%rd43, %r518;
	add.s32 	%r519, %r91, %r141;
	cvt.u64.u32 	%rd44, %r519;
	add.s32 	%r520, %r91, %r140;
	cvt.u64.u32 	%rd45, %r520;
	add.s32 	%r521, %r91, %r139;
	cvt.u64.u32 	%rd46, %r521;
	add.s32 	%r522, %r91, %r138;
	cvt.u64.u32 	%rd47, %r522;
	add.s32 	%r523, %r91, %r137;
	cvt.u64.u32 	%rd48, %r523;
	add.s32 	%r524, %r91, %r136;
	cvt.u64.u32 	%rd49, %r524;
	add.s32 	%r525, %r91, %r135;
	cvt.u64.u32 	%rd50, %r525;
	add.s32 	%r526, %r91, %r134;
	cvt.u64.u32 	%rd51, %r526;
	add.s32 	%r527, %r91, %r133;
	cvt.u64.u32 	%rd52, %r527;
	add.s32 	%r528, %r91, %r132;
	cvt.u64.u32 	%rd53, %r528;
	add.s32 	%r529, %r91, %r131;
	cvt.u64.u32 	%rd54, %r529;
	add.s32 	%r530, %r91, %r130;
	cvt.u64.u32 	%rd55, %r530;
	add.s32 	%r531, %r91, %r129;
	cvt.u64.u32 	%rd56, %r531;
	add.s32 	%r532, %r91, %r128;
	cvt.u64.u32 	%rd57, %r532;
	add.s32 	%r533, %r91, %r127;
	cvt.u64.u32 	%rd58, %r533;
	add.s32 	%r534, %r91, %r126;
	cvt.u64.u32 	%rd59, %r534;
	add.s32 	%r535, %r91, %r125;
	cvt.u64.u32 	%rd60, %r535;
	add.s32 	%r536, %r91, %r124;
	cvt.u64.u32 	%rd61, %r536;
	mov.b32 	%r1269, -1;
	mov.b64 	%rd386, 0;
	mov.u64 	%rd378, %rd368;
	mov.u64 	%rd379, %rd369;
	mov.u64 	%rd380, %rd370;
	mov.u64 	%rd381, %rd371;
	mov.u64 	%rd382, %rd372;
	mov.u64 	%rd383, %rd373;
	mov.u64 	%rd384, %rd374;
	mov.u64 	%rd385, %rd375;
	mov.u64 	%rd387, %rd386;
$L__BB0_6:                              // %.lr.ph
                                        //   Parent Loop BB0_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.lt.s64 	%p68, %rd387, %rd2;
	add.s32 	%r849, %r1269, 1;
	setp.gt.u32 	%p69, %r1269, 2147483646;
	selp.b32 	%r1269, %r849, 0, %p69;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	cp.async.wait_group 0;
	bar.sync 	0;
	shl.b32 	%r850, %r1269, 14;
	add.s32 	%r852, %r1268, %r850;
	add.s32 	%r541, %r852, %r853;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r577, %r578, %r579, %r580}, [%r541];
	// end inline asm
	add.s32 	%r546, %r852, %r854;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r625, %r626, %r627, %r628}, [%r546];
	// end inline asm
	add.s32 	%r551, %r852, %r855;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r673, %r674, %r675, %r676}, [%r551];
	// end inline asm
	add.s32 	%r556, %r852, %r856;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r721, %r722, %r723, %r724}, [%r556];
	// end inline asm
	add.s32 	%r857, %r73, %r75;
	shl.b32 	%r858, %r857, 2;
	add.s32 	%r859, %r852, %r858;
	add.s32 	%r561, %r859, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r601, %r602, %r603, %r604}, [%r561];
	// end inline asm
	add.s32 	%r860, %r77, %r75;
	shl.b32 	%r861, %r860, 2;
	add.s32 	%r862, %r852, %r861;
	add.s32 	%r566, %r862, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r649, %r650, %r651, %r652}, [%r566];
	// end inline asm
	add.s32 	%r863, %r79, %r75;
	shl.b32 	%r864, %r863, 2;
	add.s32 	%r865, %r852, %r864;
	add.s32 	%r571, %r865, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r697, %r698, %r699, %r700}, [%r571];
	// end inline asm
	add.s32 	%r866, %r81, %r75;
	shl.b32 	%r867, %r866, 2;
	add.s32 	%r868, %r852, %r867;
	add.s32 	%r576, %r868, 8192;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r745, %r746, %r747, %r748}, [%r576];
	// end inline asm
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	shl.b32 	%r869, %r1269, 12;
	add.s32 	%r870, %r1268, %r869;
	add.s32 	%r871, %r870, 16384;
	add.s32 	%r873, %r871, %r872;
	ld.shared.u32 	%r581, [%r873];
	add.s32 	%r874, %r83, %r84;
	shl.b32 	%r875, %r874, 2;
	add.s32 	%r876, %r871, %r875;
	ld.shared.u32 	%r582, [%r876+512];
	ld.shared.u32 	%r629, [%r876+1024];
	ld.shared.u32 	%r630, [%r876+1536];
	add.s32 	%r878, %r871, %r877;
	ld.shared.u32 	%r677, [%r878];
	ld.shared.u32 	%r678, [%r876+2560];
	ld.shared.u32 	%r725, [%r876+3072];
	ld.shared.u32 	%r726, [%r876+3584];
	add.s32 	%r880, %r871, %r879;
	shl.b32 	%r881, %r84, 2;
	add.s32 	%r882, %r880, %r881;
	ld.shared.u32 	%r587, [%r882];
	ld.shared.u32 	%r588, [%r882+512];
	ld.shared.u32 	%r635, [%r882+1024];
	ld.shared.u32 	%r636, [%r882+1536];
	shl.b32 	%r883, %r86, 2;
	add.s32 	%r884, %r880, %r883;
	ld.shared.u32 	%r683, [%r884];
	ld.shared.u32 	%r684, [%r882+2560];
	ld.shared.u32 	%r731, [%r882+3072];
	ld.shared.u32 	%r732, [%r882+3584];
	add.s32 	%r886, %r871, %r885;
	add.s32 	%r887, %r886, %r881;
	ld.shared.u32 	%r593, [%r887];
	ld.shared.u32 	%r594, [%r887+512];
	ld.shared.u32 	%r641, [%r887+1024];
	ld.shared.u32 	%r642, [%r887+1536];
	add.s32 	%r888, %r886, %r883;
	ld.shared.u32 	%r689, [%r888];
	ld.shared.u32 	%r690, [%r887+2560];
	ld.shared.u32 	%r737, [%r887+3072];
	ld.shared.u32 	%r738, [%r887+3584];
	add.s32 	%r890, %r871, %r889;
	add.s32 	%r891, %r890, %r881;
	ld.shared.u32 	%r599, [%r891];
	ld.shared.u32 	%r600, [%r891+512];
	ld.shared.u32 	%r647, [%r891+1024];
	ld.shared.u32 	%r648, [%r891+1536];
	add.s32 	%r892, %r890, %r883;
	ld.shared.u32 	%r695, [%r892];
	ld.shared.u32 	%r696, [%r891+2560];
	ld.shared.u32 	%r743, [%r891+3072];
	ld.shared.u32 	%r744, [%r891+3584];
	.loc	1 84 37                         // implicit_gemm_kernel.py:84:37
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f450, %f451, %f452, %f453 }, { %r577, %r578, %r579, %r580 }, { %r581, %r582 }, { %f450, %f451, %f452, %f453 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f454, %f455, %f456, %f457 }, { %r577, %r578, %r579, %r580 }, { %r587, %r588 }, { %f454, %f455, %f456, %f457 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f458, %f459, %f460, %f461 }, { %r577, %r578, %r579, %r580 }, { %r593, %r594 }, { %f458, %f459, %f460, %f461 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f462, %f463, %f464, %f465 }, { %r577, %r578, %r579, %r580 }, { %r599, %r600 }, { %f462, %f463, %f464, %f465 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f466, %f467, %f468, %f469 }, { %r601, %r602, %r603, %r604 }, { %r581, %r582 }, { %f466, %f467, %f468, %f469 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f470, %f471, %f472, %f473 }, { %r601, %r602, %r603, %r604 }, { %r587, %r588 }, { %f470, %f471, %f472, %f473 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f474, %f475, %f476, %f477 }, { %r601, %r602, %r603, %r604 }, { %r593, %r594 }, { %f474, %f475, %f476, %f477 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f478, %f479, %f480, %f481 }, { %r601, %r602, %r603, %r604 }, { %r599, %r600 }, { %f478, %f479, %f480, %f481 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f450, %f451, %f452, %f453 }, { %r625, %r626, %r627, %r628 }, { %r629, %r630 }, { %f450, %f451, %f452, %f453 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f454, %f455, %f456, %f457 }, { %r625, %r626, %r627, %r628 }, { %r635, %r636 }, { %f454, %f455, %f456, %f457 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f458, %f459, %f460, %f461 }, { %r625, %r626, %r627, %r628 }, { %r641, %r642 }, { %f458, %f459, %f460, %f461 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f462, %f463, %f464, %f465 }, { %r625, %r626, %r627, %r628 }, { %r647, %r648 }, { %f462, %f463, %f464, %f465 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f466, %f467, %f468, %f469 }, { %r649, %r650, %r651, %r652 }, { %r629, %r630 }, { %f466, %f467, %f468, %f469 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f470, %f471, %f472, %f473 }, { %r649, %r650, %r651, %r652 }, { %r635, %r636 }, { %f470, %f471, %f472, %f473 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f474, %f475, %f476, %f477 }, { %r649, %r650, %r651, %r652 }, { %r641, %r642 }, { %f474, %f475, %f476, %f477 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f478, %f479, %f480, %f481 }, { %r649, %r650, %r651, %r652 }, { %r647, %r648 }, { %f478, %f479, %f480, %f481 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f450, %f451, %f452, %f453 }, { %r673, %r674, %r675, %r676 }, { %r677, %r678 }, { %f450, %f451, %f452, %f453 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f454, %f455, %f456, %f457 }, { %r673, %r674, %r675, %r676 }, { %r683, %r684 }, { %f454, %f455, %f456, %f457 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f458, %f459, %f460, %f461 }, { %r673, %r674, %r675, %r676 }, { %r689, %r690 }, { %f458, %f459, %f460, %f461 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f462, %f463, %f464, %f465 }, { %r673, %r674, %r675, %r676 }, { %r695, %r696 }, { %f462, %f463, %f464, %f465 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f466, %f467, %f468, %f469 }, { %r697, %r698, %r699, %r700 }, { %r677, %r678 }, { %f466, %f467, %f468, %f469 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f470, %f471, %f472, %f473 }, { %r697, %r698, %r699, %r700 }, { %r683, %r684 }, { %f470, %f471, %f472, %f473 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f474, %f475, %f476, %f477 }, { %r697, %r698, %r699, %r700 }, { %r689, %r690 }, { %f474, %f475, %f476, %f477 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f478, %f479, %f480, %f481 }, { %r697, %r698, %r699, %r700 }, { %r695, %r696 }, { %f478, %f479, %f480, %f481 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f450, %f451, %f452, %f453 }, { %r721, %r722, %r723, %r724 }, { %r725, %r726 }, { %f450, %f451, %f452, %f453 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f454, %f455, %f456, %f457 }, { %r721, %r722, %r723, %r724 }, { %r731, %r732 }, { %f454, %f455, %f456, %f457 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f458, %f459, %f460, %f461 }, { %r721, %r722, %r723, %r724 }, { %r737, %r738 }, { %f458, %f459, %f460, %f461 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f462, %f463, %f464, %f465 }, { %r721, %r722, %r723, %r724 }, { %r743, %r744 }, { %f462, %f463, %f464, %f465 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f466, %f467, %f468, %f469 }, { %r745, %r746, %r747, %r748 }, { %r725, %r726 }, { %f466, %f467, %f468, %f469 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f470, %f471, %f472, %f473 }, { %r745, %r746, %r747, %r748 }, { %r731, %r732 }, { %f470, %f471, %f472, %f473 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f474, %f475, %f476, %f477 }, { %r745, %r746, %r747, %r748 }, { %r737, %r738 }, { %f474, %f475, %f476, %f477 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f32.tf32.tf32.f32 { %f478, %f479, %f480, %f481 }, { %r745, %r746, %r747, %r748 }, { %r743, %r744 }, { %f478, %f479, %f480, %f481 };
	// end inline asm
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd387, %rd387, 1;
	.loc	1 69 89                         // implicit_gemm_kernel.py:69:89
	add.s64 	%rd222, %rd61, %rd386;
	add.s64 	%rd223, %rd60, %rd386;
	add.s64 	%rd224, %rd59, %rd386;
	add.s64 	%rd225, %rd58, %rd386;
	add.s64 	%rd226, %rd57, %rd386;
	add.s64 	%rd227, %rd56, %rd386;
	add.s64 	%rd228, %rd55, %rd386;
	add.s64 	%rd229, %rd54, %rd386;
	add.s64 	%rd230, %rd53, %rd386;
	add.s64 	%rd231, %rd52, %rd386;
	add.s64 	%rd232, %rd51, %rd386;
	add.s64 	%rd233, %rd50, %rd386;
	add.s64 	%rd234, %rd49, %rd386;
	add.s64 	%rd235, %rd48, %rd386;
	add.s64 	%rd236, %rd47, %rd386;
	add.s64 	%rd237, %rd46, %rd386;
	add.s64 	%rd238, %rd45, %rd386;
	add.s64 	%rd239, %rd44, %rd386;
	add.s64 	%rd240, %rd43, %rd386;
	add.s64 	%rd241, %rd42, %rd386;
	add.s64 	%rd242, %rd41, %rd386;
	add.s64 	%rd243, %rd40, %rd386;
	add.s64 	%rd244, %rd39, %rd386;
	add.s64 	%rd245, %rd38, %rd386;
	add.s64 	%rd246, %rd37, %rd386;
	add.s64 	%rd247, %rd36, %rd386;
	add.s64 	%rd248, %rd35, %rd386;
	add.s64 	%rd249, %rd34, %rd386;
	add.s64 	%rd250, %rd33, %rd386;
	add.s64 	%rd251, %rd32, %rd386;
	add.s64 	%rd252, %rd31, %rd386;
	.loc	1 69 36                         // implicit_gemm_kernel.py:69:36
	add.s64 	%rd253, %rd30, %rd386;
	cvt.u32.u64 	%r893, %rd222;
	mul.wide.s32 	%rd254, %r893, 4;
	add.s64 	%rd182, %rd92, %rd254;
	cvt.u32.u64 	%r894, %rd223;
	mul.wide.s32 	%rd255, %r894, 4;
	add.s64 	%rd183, %rd92, %rd255;
	cvt.u32.u64 	%r895, %rd224;
	mul.wide.s32 	%rd256, %r895, 4;
	add.s64 	%rd184, %rd92, %rd256;
	cvt.u32.u64 	%r896, %rd225;
	mul.wide.s32 	%rd257, %r896, 4;
	add.s64 	%rd185, %rd92, %rd257;
	cvt.u32.u64 	%r897, %rd226;
	mul.wide.s32 	%rd258, %r897, 4;
	add.s64 	%rd186, %rd92, %rd258;
	cvt.u32.u64 	%r898, %rd227;
	mul.wide.s32 	%rd259, %r898, 4;
	add.s64 	%rd187, %rd92, %rd259;
	cvt.u32.u64 	%r899, %rd228;
	mul.wide.s32 	%rd260, %r899, 4;
	add.s64 	%rd188, %rd92, %rd260;
	cvt.u32.u64 	%r900, %rd229;
	mul.wide.s32 	%rd261, %r900, 4;
	add.s64 	%rd189, %rd92, %rd261;
	cvt.u32.u64 	%r901, %rd230;
	mul.wide.s32 	%rd262, %r901, 4;
	add.s64 	%rd190, %rd92, %rd262;
	cvt.u32.u64 	%r902, %rd231;
	mul.wide.s32 	%rd263, %r902, 4;
	add.s64 	%rd191, %rd92, %rd263;
	cvt.u32.u64 	%r903, %rd232;
	mul.wide.s32 	%rd264, %r903, 4;
	add.s64 	%rd192, %rd92, %rd264;
	cvt.u32.u64 	%r904, %rd233;
	mul.wide.s32 	%rd265, %r904, 4;
	add.s64 	%rd193, %rd92, %rd265;
	cvt.u32.u64 	%r905, %rd234;
	mul.wide.s32 	%rd266, %r905, 4;
	add.s64 	%rd194, %rd92, %rd266;
	cvt.u32.u64 	%r906, %rd235;
	mul.wide.s32 	%rd267, %r906, 4;
	add.s64 	%rd195, %rd92, %rd267;
	cvt.u32.u64 	%r907, %rd236;
	mul.wide.s32 	%rd268, %r907, 4;
	add.s64 	%rd196, %rd92, %rd268;
	cvt.u32.u64 	%r908, %rd237;
	mul.wide.s32 	%rd269, %r908, 4;
	add.s64 	%rd197, %rd92, %rd269;
	cvt.u32.u64 	%r909, %rd238;
	mul.wide.s32 	%rd270, %r909, 4;
	add.s64 	%rd198, %rd92, %rd270;
	cvt.u32.u64 	%r910, %rd239;
	mul.wide.s32 	%rd271, %r910, 4;
	add.s64 	%rd199, %rd92, %rd271;
	cvt.u32.u64 	%r911, %rd240;
	mul.wide.s32 	%rd272, %r911, 4;
	add.s64 	%rd200, %rd92, %rd272;
	cvt.u32.u64 	%r912, %rd241;
	mul.wide.s32 	%rd273, %r912, 4;
	add.s64 	%rd201, %rd92, %rd273;
	cvt.u32.u64 	%r913, %rd242;
	mul.wide.s32 	%rd274, %r913, 4;
	add.s64 	%rd202, %rd92, %rd274;
	cvt.u32.u64 	%r914, %rd243;
	mul.wide.s32 	%rd275, %r914, 4;
	add.s64 	%rd203, %rd92, %rd275;
	cvt.u32.u64 	%r915, %rd244;
	mul.wide.s32 	%rd276, %r915, 4;
	add.s64 	%rd204, %rd92, %rd276;
	cvt.u32.u64 	%r916, %rd245;
	mul.wide.s32 	%rd277, %r916, 4;
	add.s64 	%rd205, %rd92, %rd277;
	cvt.u32.u64 	%r917, %rd246;
	mul.wide.s32 	%rd278, %r917, 4;
	add.s64 	%rd206, %rd92, %rd278;
	cvt.u32.u64 	%r918, %rd247;
	mul.wide.s32 	%rd279, %r918, 4;
	add.s64 	%rd207, %rd92, %rd279;
	cvt.u32.u64 	%r919, %rd248;
	mul.wide.s32 	%rd280, %r919, 4;
	add.s64 	%rd208, %rd92, %rd280;
	cvt.u32.u64 	%r920, %rd249;
	mul.wide.s32 	%rd281, %r920, 4;
	add.s64 	%rd209, %rd92, %rd281;
	cvt.u32.u64 	%r921, %rd250;
	mul.wide.s32 	%rd282, %r921, 4;
	add.s64 	%rd210, %rd92, %rd282;
	cvt.u32.u64 	%r922, %rd251;
	mul.wide.s32 	%rd283, %r922, 4;
	add.s64 	%rd211, %rd92, %rd283;
	cvt.u32.u64 	%r923, %rd252;
	mul.wide.s32 	%rd284, %r923, 4;
	add.s64 	%rd212, %rd92, %rd284;
	cvt.u32.u64 	%r924, %rd253;
	mul.wide.s32 	%rd285, %r924, 4;
	add.s64 	%rd213, %rd92, %rd285;
	.loc	1 70 112                        // implicit_gemm_kernel.py:70:112
	add.s64 	%rd286, %rd7, %rd386;
	setp.lt.s64 	%p70, %rd286, %rd4;
	.loc	1 73 54                         // implicit_gemm_kernel.py:73:54
	add.s64 	%rd287, %rd376, %rd386;
	.loc	1 75 22                         // implicit_gemm_kernel.py:75:22
	add.s64 	%rd288, %rd3, %rd378;
	add.s64 	%rd289, %rd3, %rd379;
	add.s64 	%rd290, %rd3, %rd380;
	add.s64 	%rd291, %rd3, %rd381;
	add.s64 	%rd292, %rd3, %rd382;
	add.s64 	%rd293, %rd3, %rd383;
	add.s64 	%rd294, %rd3, %rd384;
	.loc	1 73 20                         // implicit_gemm_kernel.py:73:20
	add.s64 	%rd295, %rd3, %rd385;
	cvt.u32.u64 	%r925, %rd288;
	mul.wide.s32 	%rd296, %r925, 4;
	add.s64 	%rd214, %rd93, %rd296;
	cvt.u32.u64 	%r926, %rd289;
	mul.wide.s32 	%rd297, %r926, 4;
	add.s64 	%rd215, %rd93, %rd297;
	cvt.u32.u64 	%r927, %rd290;
	mul.wide.s32 	%rd298, %r927, 4;
	add.s64 	%rd216, %rd93, %rd298;
	cvt.u32.u64 	%r928, %rd291;
	mul.wide.s32 	%rd299, %r928, 4;
	add.s64 	%rd217, %rd93, %rd299;
	cvt.u32.u64 	%r929, %rd292;
	mul.wide.s32 	%rd300, %r929, 4;
	add.s64 	%rd218, %rd93, %rd300;
	cvt.u32.u64 	%r930, %rd293;
	mul.wide.s32 	%rd301, %r930, 4;
	add.s64 	%rd219, %rd93, %rd301;
	cvt.u32.u64 	%r931, %rd294;
	mul.wide.s32 	%rd302, %r931, 4;
	add.s64 	%rd220, %rd93, %rd302;
	cvt.u32.u64 	%r932, %rd295;
	mul.wide.s32 	%rd303, %r932, 4;
	add.s64 	%rd221, %rd93, %rd303;
	cvt.u32.u64 	%r933, %rd287;
	add.s32 	%r934, %r933, 32;
	.loc	1 77 72                         // implicit_gemm_kernel.py:77:72
	setp.lt.s32 	%p71, %r934, %r29;
	add.s32 	%r935, %r933, 36;
	setp.lt.s32 	%p72, %r935, %r29;
	add.s32 	%r936, %r933, 40;
	setp.lt.s32 	%p73, %r936, %r29;
	add.s32 	%r937, %r933, 44;
	setp.lt.s32 	%p74, %r937, %r29;
	add.s32 	%r938, %r933, 48;
	setp.lt.s32 	%p75, %r938, %r29;
	add.s32 	%r939, %r933, 52;
	setp.lt.s32 	%p76, %r939, %r29;
	add.s32 	%r940, %r933, 56;
	setp.lt.s32 	%p77, %r940, %r29;
	add.s32 	%r941, %r933, 60;
	setp.lt.s32 	%p78, %r941, %r29;
	.loc	1 81 39                         // implicit_gemm_kernel.py:81:39
	bar.sync 	0;
	selp.b32 	%r943, %r471, 0, %p70;
	selp.b32 	%r770, %r943, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r341 + 0 ], [ %rd182 + 0 ], 0x4, %r770;
	// end inline asm
	selp.b32 	%r945, %r472, 0, %p70;
	selp.b32 	%r772, %r945, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r343 + 0 ], [ %rd183 + 0 ], 0x4, %r772;
	// end inline asm
	selp.b32 	%r947, %r473, 0, %p70;
	selp.b32 	%r774, %r947, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r345 + 0 ], [ %rd184 + 0 ], 0x4, %r774;
	// end inline asm
	selp.b32 	%r949, %r474, 0, %p70;
	selp.b32 	%r776, %r949, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r347 + 0 ], [ %rd185 + 0 ], 0x4, %r776;
	// end inline asm
	selp.b32 	%r951, %r475, 0, %p70;
	selp.b32 	%r778, %r951, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r349 + 0 ], [ %rd186 + 0 ], 0x4, %r778;
	// end inline asm
	selp.b32 	%r953, %r476, 0, %p70;
	selp.b32 	%r780, %r953, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r351 + 0 ], [ %rd187 + 0 ], 0x4, %r780;
	// end inline asm
	selp.b32 	%r955, %r477, 0, %p70;
	selp.b32 	%r782, %r955, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r353 + 0 ], [ %rd188 + 0 ], 0x4, %r782;
	// end inline asm
	selp.b32 	%r957, %r478, 0, %p70;
	selp.b32 	%r784, %r957, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r355 + 0 ], [ %rd189 + 0 ], 0x4, %r784;
	// end inline asm
	selp.b32 	%r959, %r479, 0, %p70;
	selp.b32 	%r786, %r959, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r357 + 0 ], [ %rd190 + 0 ], 0x4, %r786;
	// end inline asm
	selp.b32 	%r961, %r480, 0, %p70;
	selp.b32 	%r788, %r961, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r359 + 0 ], [ %rd191 + 0 ], 0x4, %r788;
	// end inline asm
	selp.b32 	%r963, %r481, 0, %p70;
	selp.b32 	%r790, %r963, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r361 + 0 ], [ %rd192 + 0 ], 0x4, %r790;
	// end inline asm
	selp.b32 	%r965, %r482, 0, %p70;
	selp.b32 	%r792, %r965, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r363 + 0 ], [ %rd193 + 0 ], 0x4, %r792;
	// end inline asm
	selp.b32 	%r967, %r483, 0, %p70;
	selp.b32 	%r794, %r967, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r365 + 0 ], [ %rd194 + 0 ], 0x4, %r794;
	// end inline asm
	selp.b32 	%r969, %r484, 0, %p70;
	selp.b32 	%r796, %r969, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r367 + 0 ], [ %rd195 + 0 ], 0x4, %r796;
	// end inline asm
	selp.b32 	%r971, %r485, 0, %p70;
	selp.b32 	%r798, %r971, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r369 + 0 ], [ %rd196 + 0 ], 0x4, %r798;
	// end inline asm
	selp.b32 	%r973, %r486, 0, %p70;
	selp.b32 	%r800, %r973, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r371 + 0 ], [ %rd197 + 0 ], 0x4, %r800;
	// end inline asm
	selp.b32 	%r975, %r487, 0, %p70;
	selp.b32 	%r802, %r975, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r373 + 0 ], [ %rd198 + 0 ], 0x4, %r802;
	// end inline asm
	selp.b32 	%r977, %r488, 0, %p70;
	selp.b32 	%r804, %r977, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r375 + 0 ], [ %rd199 + 0 ], 0x4, %r804;
	// end inline asm
	selp.b32 	%r979, %r489, 0, %p70;
	selp.b32 	%r806, %r979, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r377 + 0 ], [ %rd200 + 0 ], 0x4, %r806;
	// end inline asm
	selp.b32 	%r981, %r490, 0, %p70;
	selp.b32 	%r808, %r981, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r379 + 0 ], [ %rd201 + 0 ], 0x4, %r808;
	// end inline asm
	selp.b32 	%r983, %r491, 0, %p70;
	selp.b32 	%r810, %r983, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r381 + 0 ], [ %rd202 + 0 ], 0x4, %r810;
	// end inline asm
	selp.b32 	%r985, %r492, 0, %p70;
	selp.b32 	%r812, %r985, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r383 + 0 ], [ %rd203 + 0 ], 0x4, %r812;
	// end inline asm
	selp.b32 	%r987, %r493, 0, %p70;
	selp.b32 	%r814, %r987, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r385 + 0 ], [ %rd204 + 0 ], 0x4, %r814;
	// end inline asm
	selp.b32 	%r989, %r494, 0, %p70;
	selp.b32 	%r816, %r989, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r387 + 0 ], [ %rd205 + 0 ], 0x4, %r816;
	// end inline asm
	selp.b32 	%r991, %r495, 0, %p70;
	selp.b32 	%r818, %r991, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r389 + 0 ], [ %rd206 + 0 ], 0x4, %r818;
	// end inline asm
	selp.b32 	%r993, %r496, 0, %p70;
	selp.b32 	%r820, %r993, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r391 + 0 ], [ %rd207 + 0 ], 0x4, %r820;
	// end inline asm
	selp.b32 	%r995, %r497, 0, %p70;
	selp.b32 	%r822, %r995, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r393 + 0 ], [ %rd208 + 0 ], 0x4, %r822;
	// end inline asm
	selp.b32 	%r997, %r498, 0, %p70;
	selp.b32 	%r824, %r997, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r395 + 0 ], [ %rd209 + 0 ], 0x4, %r824;
	// end inline asm
	selp.b32 	%r999, %r499, 0, %p70;
	selp.b32 	%r826, %r999, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r397 + 0 ], [ %rd210 + 0 ], 0x4, %r826;
	// end inline asm
	selp.b32 	%r1001, %r500, 0, %p70;
	selp.b32 	%r828, %r1001, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r399 + 0 ], [ %rd211 + 0 ], 0x4, %r828;
	// end inline asm
	selp.b32 	%r1003, %r501, 0, %p70;
	selp.b32 	%r830, %r1003, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r401 + 0 ], [ %rd212 + 0 ], 0x4, %r830;
	// end inline asm
	selp.b32 	%r1005, %r502, 0, %p70;
	selp.b32 	%r832, %r1005, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r403 + 0 ], [ %rd213 + 0 ], 0x4, %r832;
	// end inline asm
	cp.async.commit_group;
	.loc	1 82 36                         // implicit_gemm_kernel.py:82:36
	selp.b32 	%r1006, 4, 0, %p71;
	selp.b32 	%r1007, %r1006, 0, %p40;
	selp.b32 	%r834, %r1007, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r405 + 0 ], [ %rd214 + 0 ], 0x4, %r834;
	// end inline asm
	selp.b32 	%r1008, 4, 0, %p72;
	selp.b32 	%r1009, %r1008, 0, %p40;
	selp.b32 	%r836, %r1009, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r407 + 0 ], [ %rd215 + 0 ], 0x4, %r836;
	// end inline asm
	selp.b32 	%r1010, 4, 0, %p73;
	selp.b32 	%r1011, %r1010, 0, %p40;
	selp.b32 	%r838, %r1011, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r409 + 0 ], [ %rd216 + 0 ], 0x4, %r838;
	// end inline asm
	selp.b32 	%r1012, 4, 0, %p74;
	selp.b32 	%r1013, %r1012, 0, %p40;
	selp.b32 	%r840, %r1013, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r411 + 0 ], [ %rd217 + 0 ], 0x4, %r840;
	// end inline asm
	selp.b32 	%r1014, 4, 0, %p75;
	selp.b32 	%r1015, %r1014, 0, %p40;
	selp.b32 	%r842, %r1015, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r413 + 0 ], [ %rd218 + 0 ], 0x4, %r842;
	// end inline asm
	selp.b32 	%r1016, 4, 0, %p76;
	selp.b32 	%r1017, %r1016, 0, %p40;
	selp.b32 	%r844, %r1017, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r415 + 0 ], [ %rd219 + 0 ], 0x4, %r844;
	// end inline asm
	selp.b32 	%r1018, 4, 0, %p77;
	selp.b32 	%r1019, %r1018, 0, %p40;
	selp.b32 	%r846, %r1019, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r417 + 0 ], [ %rd220 + 0 ], 0x4, %r846;
	// end inline asm
	selp.b32 	%r1020, 4, 0, %p78;
	selp.b32 	%r1021, %r1020, 0, %p40;
	selp.b32 	%r848, %r1021, 0, %p68;
	// begin inline asm
	cp.async.ca.shared.global [ %r419 + 0 ], [ %rd221 + 0 ], 0x4, %r848;
	// end inline asm
	cp.async.commit_group;
	.loc	1 66 28                         // implicit_gemm_kernel.py:66:28
	add.s64 	%rd386, %rd386, 32;
	add.s64 	%rd385, %rd385, %rd12;
	add.s64 	%rd384, %rd384, %rd12;
	add.s64 	%rd383, %rd383, %rd12;
	add.s64 	%rd382, %rd382, %rd12;
	add.s64 	%rd381, %rd381, %rd12;
	add.s64 	%rd380, %rd380, %rd12;
	add.s64 	%rd379, %rd379, %rd12;
	add.s64 	%rd378, %rd378, %rd12;
	setp.ne.s64 	%p79, %rd6, %rd387;
	@%p79 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_7;
$L__BB0_9:                              // %._crit_edge14.loopexit
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	mov.b32 	%r1275, %f450;
	mov.b32 	%r1276, %f451;
	mov.b32 	%r1277, %f452;
	mov.b32 	%r1278, %f453;
	mov.b32 	%r1279, %f454;
	mov.b32 	%r1280, %f455;
	mov.b32 	%r1281, %f456;
	mov.b32 	%r1282, %f457;
	mov.b32 	%r1283, %f458;
	mov.b32 	%r1284, %f459;
	mov.b32 	%r1285, %f460;
	mov.b32 	%r1286, %f461;
	mov.b32 	%r1287, %f462;
	mov.b32 	%r1288, %f463;
	mov.b32 	%r1289, %f464;
	mov.b32 	%r1290, %f465;
	mov.b32 	%r1291, %f466;
	mov.b32 	%r1292, %f467;
	mov.b32 	%r1293, %f468;
	mov.b32 	%r1294, %f469;
	mov.b32 	%r1295, %f470;
	mov.b32 	%r1296, %f471;
	mov.b32 	%r1297, %f472;
	mov.b32 	%r1298, %f473;
	mov.b32 	%r1299, %f474;
	mov.b32 	%r1300, %f475;
	mov.b32 	%r1301, %f476;
	mov.b32 	%r1302, %f477;
	mov.b32 	%r1303, %f478;
	mov.b32 	%r1304, %f479;
	mov.b32 	%r1305, %f480;
	mov.b32 	%r1306, %f481;
	bra.uni 	$L__BB0_10;
$L__BB0_1:                              // %.._crit_edge14_crit_edge
	.loc	1 88 19                         // implicit_gemm_kernel.py:88:19
	shl.b32 	%r244, %r1, 5;
	.loc	1 87 10                         // implicit_gemm_kernel.py:87:10
	or.b32  	%r1274, %r244, %r4;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	shr.u32 	%r1273, %r3, 2;
	shr.u32 	%r1272, %r5, 2;
	shr.u32 	%r245, %r3, 1;
	and.b32  	%r1271, %r245, 48;
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	shr.u32 	%r1270, %r3, 5;
	mov.b32 	%r1275, 0;
	mov.u32 	%r1276, %r1275;
	mov.u32 	%r1277, %r1275;
	mov.u32 	%r1278, %r1275;
	mov.u32 	%r1279, %r1275;
	mov.u32 	%r1280, %r1275;
	mov.u32 	%r1281, %r1275;
	mov.u32 	%r1282, %r1275;
	mov.u32 	%r1283, %r1275;
	mov.u32 	%r1284, %r1275;
	mov.u32 	%r1285, %r1275;
	mov.u32 	%r1286, %r1275;
	mov.u32 	%r1287, %r1275;
	mov.u32 	%r1288, %r1275;
	mov.u32 	%r1289, %r1275;
	mov.u32 	%r1290, %r1275;
	mov.u32 	%r1291, %r1275;
	mov.u32 	%r1292, %r1275;
	mov.u32 	%r1293, %r1275;
	mov.u32 	%r1294, %r1275;
	mov.u32 	%r1295, %r1275;
	mov.u32 	%r1296, %r1275;
	mov.u32 	%r1297, %r1275;
	mov.u32 	%r1298, %r1275;
	mov.u32 	%r1299, %r1275;
	mov.u32 	%r1300, %r1275;
	mov.u32 	%r1301, %r1275;
	mov.u32 	%r1302, %r1275;
	mov.u32 	%r1303, %r1275;
	mov.u32 	%r1304, %r1275;
	mov.u32 	%r1305, %r1275;
	mov.u32 	%r1306, %r1275;
$L__BB0_10:                             // %._crit_edge14
	.loc	1 86 31                         // implicit_gemm_kernel.py:86:31
	and.b32  	%r1118, %r1270, 3;
	.loc	1 86 42                         // implicit_gemm_kernel.py:86:42
	or.b32  	%r1119, %r1118, %r7;
	or.b32  	%r1120, %r1119, 4;
	or.b32  	%r1121, %r1119, 8;
	or.b32  	%r1122, %r1119, 12;
	or.b32  	%r1123, %r1119, 16;
	or.b32  	%r1124, %r1119, 20;
	or.b32  	%r1125, %r1119, 24;
	or.b32  	%r1126, %r1119, 28;
	or.b32  	%r1127, %r1119, 32;
	or.b32  	%r1128, %r1119, 36;
	or.b32  	%r1129, %r1119, 40;
	or.b32  	%r1130, %r1119, 44;
	or.b32  	%r1131, %r1119, 48;
	or.b32  	%r1132, %r1119, 52;
	or.b32  	%r1133, %r1119, 56;
	or.b32  	%r1134, %r1119, 60;
	or.b32  	%r1135, %r1119, 64;
	or.b32  	%r1136, %r1119, 68;
	or.b32  	%r1137, %r1119, 72;
	or.b32  	%r1138, %r1119, 76;
	or.b32  	%r1139, %r1119, 80;
	or.b32  	%r1140, %r1119, 84;
	or.b32  	%r1141, %r1119, 88;
	or.b32  	%r1142, %r1119, 92;
	or.b32  	%r1143, %r1119, 96;
	or.b32  	%r1144, %r1119, 100;
	or.b32  	%r1145, %r1119, 104;
	or.b32  	%r1146, %r1119, 108;
	or.b32  	%r1147, %r1119, 112;
	or.b32  	%r1148, %r1119, 116;
	or.b32  	%r1149, %r1119, 120;
	or.b32  	%r1150, %r1119, 124;
	.loc	1 86 61                         // implicit_gemm_kernel.py:86:61
	mul.lo.s32 	%r1151, %r1119, %r230;
	shl.b32 	%r1152, %r230, 2;
	add.s32 	%r1153, %r1151, %r1152;
	add.s32 	%r1154, %r1153, %r1152;
	add.s32 	%r1155, %r1154, %r1152;
	add.s32 	%r1156, %r1155, %r1152;
	add.s32 	%r1157, %r1156, %r1152;
	add.s32 	%r1158, %r1157, %r1152;
	add.s32 	%r1159, %r1158, %r1152;
	add.s32 	%r1160, %r1159, %r1152;
	add.s32 	%r1161, %r1160, %r1152;
	add.s32 	%r1162, %r1161, %r1152;
	add.s32 	%r1163, %r1162, %r1152;
	add.s32 	%r1164, %r1163, %r1152;
	add.s32 	%r1165, %r1164, %r1152;
	add.s32 	%r1166, %r1165, %r1152;
	add.s32 	%r1167, %r1166, %r1152;
	add.s32 	%r1168, %r1167, %r1152;
	add.s32 	%r1169, %r1168, %r1152;
	add.s32 	%r1170, %r1169, %r1152;
	add.s32 	%r1171, %r1170, %r1152;
	add.s32 	%r1172, %r1171, %r1152;
	add.s32 	%r1173, %r1172, %r1152;
	add.s32 	%r1174, %r1173, %r1152;
	add.s32 	%r1175, %r1174, %r1152;
	add.s32 	%r1176, %r1175, %r1152;
	add.s32 	%r1177, %r1176, %r1152;
	add.s32 	%r1178, %r1177, %r1152;
	add.s32 	%r1179, %r1178, %r1152;
	add.s32 	%r1180, %r1179, %r1152;
	add.s32 	%r1181, %r1180, %r1152;
	add.s32 	%r1182, %r1181, %r1152;
	add.s32 	%r1183, %r1182, %r1152;
	.loc	1 88 10                         // implicit_gemm_kernel.py:88:10
	add.s32 	%r1184, %r1274, %r1151;
	add.s32 	%r1185, %r1274, %r1153;
	add.s32 	%r1186, %r1274, %r1154;
	add.s32 	%r1187, %r1274, %r1155;
	add.s32 	%r1188, %r1274, %r1156;
	add.s32 	%r1189, %r1274, %r1157;
	add.s32 	%r1190, %r1274, %r1158;
	add.s32 	%r1191, %r1274, %r1159;
	add.s32 	%r1192, %r1274, %r1160;
	add.s32 	%r1193, %r1274, %r1161;
	add.s32 	%r1194, %r1274, %r1162;
	add.s32 	%r1195, %r1274, %r1163;
	add.s32 	%r1196, %r1274, %r1164;
	add.s32 	%r1197, %r1274, %r1165;
	add.s32 	%r1198, %r1274, %r1166;
	add.s32 	%r1199, %r1274, %r1167;
	add.s32 	%r1200, %r1274, %r1168;
	add.s32 	%r1201, %r1274, %r1169;
	add.s32 	%r1202, %r1274, %r1170;
	add.s32 	%r1203, %r1274, %r1171;
	add.s32 	%r1204, %r1274, %r1172;
	add.s32 	%r1205, %r1274, %r1173;
	add.s32 	%r1206, %r1274, %r1174;
	add.s32 	%r1207, %r1274, %r1175;
	add.s32 	%r1208, %r1274, %r1176;
	add.s32 	%r1209, %r1274, %r1177;
	add.s32 	%r1210, %r1274, %r1178;
	add.s32 	%r1211, %r1274, %r1179;
	add.s32 	%r1212, %r1274, %r1180;
	add.s32 	%r1213, %r1274, %r1181;
	add.s32 	%r1214, %r1274, %r1182;
	add.s32 	%r1215, %r1274, %r1183;
	.loc	1 86 8                          // implicit_gemm_kernel.py:86:8
	mul.wide.s32 	%rd336, %r1184, 4;
	add.s64 	%rd304, %rd94, %rd336;
	mul.wide.s32 	%rd337, %r1185, 4;
	add.s64 	%rd305, %rd94, %rd337;
	mul.wide.s32 	%rd338, %r1186, 4;
	add.s64 	%rd306, %rd94, %rd338;
	mul.wide.s32 	%rd339, %r1187, 4;
	add.s64 	%rd307, %rd94, %rd339;
	mul.wide.s32 	%rd340, %r1188, 4;
	add.s64 	%rd308, %rd94, %rd340;
	mul.wide.s32 	%rd341, %r1189, 4;
	add.s64 	%rd309, %rd94, %rd341;
	mul.wide.s32 	%rd342, %r1190, 4;
	add.s64 	%rd310, %rd94, %rd342;
	mul.wide.s32 	%rd343, %r1191, 4;
	add.s64 	%rd311, %rd94, %rd343;
	mul.wide.s32 	%rd344, %r1192, 4;
	add.s64 	%rd312, %rd94, %rd344;
	mul.wide.s32 	%rd345, %r1193, 4;
	add.s64 	%rd313, %rd94, %rd345;
	mul.wide.s32 	%rd346, %r1194, 4;
	add.s64 	%rd314, %rd94, %rd346;
	mul.wide.s32 	%rd347, %r1195, 4;
	add.s64 	%rd315, %rd94, %rd347;
	mul.wide.s32 	%rd348, %r1196, 4;
	add.s64 	%rd316, %rd94, %rd348;
	mul.wide.s32 	%rd349, %r1197, 4;
	add.s64 	%rd317, %rd94, %rd349;
	mul.wide.s32 	%rd350, %r1198, 4;
	add.s64 	%rd318, %rd94, %rd350;
	mul.wide.s32 	%rd351, %r1199, 4;
	add.s64 	%rd319, %rd94, %rd351;
	mul.wide.s32 	%rd352, %r1200, 4;
	add.s64 	%rd320, %rd94, %rd352;
	mul.wide.s32 	%rd353, %r1201, 4;
	add.s64 	%rd321, %rd94, %rd353;
	mul.wide.s32 	%rd354, %r1202, 4;
	add.s64 	%rd322, %rd94, %rd354;
	mul.wide.s32 	%rd355, %r1203, 4;
	add.s64 	%rd323, %rd94, %rd355;
	mul.wide.s32 	%rd356, %r1204, 4;
	add.s64 	%rd324, %rd94, %rd356;
	mul.wide.s32 	%rd357, %r1205, 4;
	add.s64 	%rd325, %rd94, %rd357;
	mul.wide.s32 	%rd358, %r1206, 4;
	add.s64 	%rd326, %rd94, %rd358;
	mul.wide.s32 	%rd359, %r1207, 4;
	add.s64 	%rd327, %rd94, %rd359;
	mul.wide.s32 	%rd360, %r1208, 4;
	add.s64 	%rd328, %rd94, %rd360;
	mul.wide.s32 	%rd361, %r1209, 4;
	add.s64 	%rd329, %rd94, %rd361;
	mul.wide.s32 	%rd362, %r1210, 4;
	add.s64 	%rd330, %rd94, %rd362;
	mul.wide.s32 	%rd363, %r1211, 4;
	add.s64 	%rd331, %rd94, %rd363;
	mul.wide.s32 	%rd364, %r1212, 4;
	add.s64 	%rd332, %rd94, %rd364;
	mul.wide.s32 	%rd365, %r1213, 4;
	add.s64 	%rd333, %rd94, %rd365;
	mul.wide.s32 	%rd366, %r1214, 4;
	add.s64 	%rd334, %rd94, %rd366;
	mul.wide.s32 	%rd367, %r1215, 4;
	add.s64 	%rd335, %rd94, %rd367;
	.loc	1 90 67                         // implicit_gemm_kernel.py:90:67
	setp.lt.s32 	%p145, %r1119, %r228;
	setp.lt.s32 	%p146, %r1120, %r228;
	setp.lt.s32 	%p147, %r1121, %r228;
	setp.lt.s32 	%p148, %r1122, %r228;
	setp.lt.s32 	%p149, %r1123, %r228;
	setp.lt.s32 	%p150, %r1124, %r228;
	setp.lt.s32 	%p151, %r1125, %r228;
	setp.lt.s32 	%p152, %r1126, %r228;
	setp.lt.s32 	%p153, %r1127, %r228;
	setp.lt.s32 	%p154, %r1128, %r228;
	setp.lt.s32 	%p155, %r1129, %r228;
	setp.lt.s32 	%p156, %r1130, %r228;
	setp.lt.s32 	%p157, %r1131, %r228;
	setp.lt.s32 	%p158, %r1132, %r228;
	setp.lt.s32 	%p159, %r1133, %r228;
	setp.lt.s32 	%p160, %r1134, %r228;
	setp.lt.s32 	%p161, %r1135, %r228;
	setp.lt.s32 	%p162, %r1136, %r228;
	setp.lt.s32 	%p163, %r1137, %r228;
	setp.lt.s32 	%p164, %r1138, %r228;
	setp.lt.s32 	%p165, %r1139, %r228;
	setp.lt.s32 	%p166, %r1140, %r228;
	setp.lt.s32 	%p167, %r1141, %r228;
	setp.lt.s32 	%p168, %r1142, %r228;
	setp.lt.s32 	%p169, %r1143, %r228;
	setp.lt.s32 	%p170, %r1144, %r228;
	setp.lt.s32 	%p171, %r1145, %r228;
	setp.lt.s32 	%p172, %r1146, %r228;
	setp.lt.s32 	%p173, %r1147, %r228;
	setp.lt.s32 	%p174, %r1148, %r228;
	setp.lt.s32 	%p175, %r1149, %r228;
	setp.lt.s32 	%p176, %r1150, %r228;
	.loc	1 91 62                         // implicit_gemm_kernel.py:91:62
	setp.lt.s32 	%p177, %r1274, %r230;
	.loc	1 91 8                          // implicit_gemm_kernel.py:91:8
	and.pred  	%p113, %p145, %p177;
	and.pred  	%p114, %p146, %p177;
	and.pred  	%p115, %p147, %p177;
	and.pred  	%p116, %p148, %p177;
	and.pred  	%p117, %p149, %p177;
	and.pred  	%p118, %p150, %p177;
	and.pred  	%p119, %p151, %p177;
	and.pred  	%p120, %p152, %p177;
	and.pred  	%p121, %p153, %p177;
	and.pred  	%p122, %p154, %p177;
	and.pred  	%p123, %p155, %p177;
	and.pred  	%p124, %p156, %p177;
	and.pred  	%p125, %p157, %p177;
	and.pred  	%p126, %p158, %p177;
	and.pred  	%p127, %p159, %p177;
	and.pred  	%p128, %p160, %p177;
	and.pred  	%p129, %p161, %p177;
	and.pred  	%p130, %p162, %p177;
	and.pred  	%p131, %p163, %p177;
	and.pred  	%p132, %p164, %p177;
	and.pred  	%p133, %p165, %p177;
	and.pred  	%p134, %p166, %p177;
	and.pred  	%p135, %p167, %p177;
	and.pred  	%p136, %p168, %p177;
	and.pred  	%p137, %p169, %p177;
	and.pred  	%p138, %p170, %p177;
	and.pred  	%p139, %p171, %p177;
	and.pred  	%p140, %p172, %p177;
	and.pred  	%p141, %p173, %p177;
	and.pred  	%p142, %p174, %p177;
	and.pred  	%p143, %p175, %p177;
	and.pred  	%p144, %p176, %p177;
	.loc	1 94 60                         // implicit_gemm_kernel.py:94:60
	bar.sync 	0;
	shl.b32 	%r1216, %r3, 7;
	and.b32  	%r1217, %r1216, 384;
	and.b32  	%r1218, %r1273, 3;
	or.b32  	%r1219, %r1272, %r1271;
	or.b32  	%r1220, %r1219, %r1218;
	or.b32  	%r1221, %r1220, %r1217;
	shl.b32 	%r1222, %r3, 6;
	and.b32  	%r1223, %r1222, 1984;
	or.b32  	%r1224, %r1118, %r1223;
	shr.u32 	%r1225, %r1217, 4;
	add.s32 	%r1227, %r1268, %r1225;
	shl.b32 	%r1228, %r1221, 2;
	add.s32 	%r1022, %r1227, %r1228;
	mov.pred 	%p81, -1;
	// begin inline asm
	@%p81 st.shared.b32 [ %r1022 + 0 ], %r1275;
	// end inline asm
	or.b32  	%r1229, %r1221, 64;
	shr.u32 	%r1230, %r1229, 4;
	and.b32  	%r1231, %r1230, 28;
	add.s32 	%r1232, %r1268, %r1231;
	add.s32 	%r1233, %r1232, %r1228;
	add.s32 	%r1024, %r1233, 256;
	// begin inline asm
	@%p81 st.shared.b32 [ %r1024 + 0 ], %r1276;
	// end inline asm
	add.s32 	%r1026, %r1022, 32;
	// begin inline asm
	@%p81 st.shared.b32 [ %r1026 + 0 ], %r1277;
	// end inline asm
	add.s32 	%r1028, %r1233, 288;
	// begin inline asm
	@%p81 st.shared.b32 [ %r1028 + 0 ], %r1278;
	// end inline asm
	or.b32  	%r1234, %r1221, 512;
	shr.u32 	%r1235, %r1234, 4;
	and.b32  	%r1236, %r1235, 56;
	add.s32 	%r1237, %r1268, %r1236;
	add.s32 	%r1238, %r1237, %r1228;
	add.s32 	%r1030, %r1238, 2048;
	// begin inline asm
	@%p81 st.shared.b32 [ %r1030 + 0 ], %r1279;
	// end inline asm
	or.b32  	%r1239, %r1221, 576;
	shr.u32 	%r1240, %r1239, 4;
	and.b32  	%r1241, %r1240, 60;
	add.s32 	%r1242, %r1268, %r1241;
	add.s32 	%r1243, %r1242, %r1228;
	add.s32 	%r1032, %r1243, 2304;
	// begin inline asm
	@%p81 st.shared.b32 [ %r1032 + 0 ], %r1280;
	// end inline asm
	add.s32 	%r1034, %r1238, 2080;
	// begin inline asm
	@%p81 st.shared.b32 [ %r1034 + 0 ], %r1281;
	// end inline asm
	add.s32 	%r1036, %r1243, 2336;
	// begin inline asm
	@%p81 st.shared.b32 [ %r1036 + 0 ], %r1282;
	// end inline asm
	or.b32  	%r1244, %r1221, 1024;
	shr.u32 	%r1245, %r1244, 4;
	and.b32  	%r1246, %r1245, 88;
	add.s32 	%r1247, %r1268, %r1246;
	add.s32 	%r1248, %r1247, %r1228;
	add.s32 	%r1038, %r1248, 4096;
	// begin inline asm
	@%p81 st.shared.b32 [ %r1038 + 0 ], %r1283;
	// end inline asm
	or.b32  	%r1249, %r1221, 1088;
	shr.u32 	%r1250, %r1249, 4;
	and.b32  	%r1251, %r1250, 92;
	add.s32 	%r1252, %r1268, %r1251;
	add.s32 	%r1253, %r1252, %r1228;
	add.s32 	%r1040, %r1253, 4352;
	// begin inline asm
	@%p81 st.shared.b32 [ %r1040 + 0 ], %r1284;
	// end inline asm
	add.s32 	%r1042, %r1248, 4128;
	// begin inline asm
	@%p81 st.shared.b32 [ %r1042 + 0 ], %r1285;
	// end inline asm
	add.s32 	%r1044, %r1253, 4384;
	// begin inline asm
	@%p81 st.shared.b32 [ %r1044 + 0 ], %r1286;
	// end inline asm
	or.b32  	%r1254, %r1221, 1536;
	shr.u32 	%r1255, %r1254, 4;
	and.b32  	%r1256, %r1255, 120;
	add.s32 	%r1257, %r1268, %r1256;
	add.s32 	%r1258, %r1257, %r1228;
	add.s32 	%r1046, %r1258, 6144;
	// begin inline asm
	@%p81 st.shared.b32 [ %r1046 + 0 ], %r1287;
	// end inline asm
	or.b32  	%r1259, %r1221, 1600;
	shr.u32 	%r1260, %r1259, 4;
	and.b32  	%r1261, %r1260, 124;
	add.s32 	%r1262, %r1268, %r1261;
	add.s32 	%r1263, %r1262, %r1228;
	add.s32 	%r1048, %r1263, 6400;
	// begin inline asm
	@%p81 st.shared.b32 [ %r1048 + 0 ], %r1288;
	// end inline asm
	add.s32 	%r1050, %r1258, 6176;
	// begin inline asm
	@%p81 st.shared.b32 [ %r1050 + 0 ], %r1289;
	// end inline asm
	add.s32 	%r1052, %r1263, 6432;
	// begin inline asm
	@%p81 st.shared.b32 [ %r1052 + 0 ], %r1290;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r1264, %r1223, 4;
	add.s32 	%r1265, %r1268, %r1264;
	shl.b32 	%r1266, %r1224, 2;
	add.s32 	%r1267, %r1265, %r1266;
	ld.shared.u32 	%r1086, [%r1267];
	ld.shared.u32 	%r1087, [%r1267+16];
	ld.shared.u32 	%r1088, [%r1267+32];
	ld.shared.u32 	%r1089, [%r1267+48];
	ld.shared.u32 	%r1090, [%r1267+64];
	ld.shared.u32 	%r1091, [%r1267+80];
	ld.shared.u32 	%r1092, [%r1267+96];
	ld.shared.u32 	%r1093, [%r1267+112];
	ld.shared.u32 	%r1094, [%r1267+128];
	ld.shared.u32 	%r1095, [%r1267+144];
	ld.shared.u32 	%r1096, [%r1267+160];
	ld.shared.u32 	%r1097, [%r1267+176];
	ld.shared.u32 	%r1098, [%r1267+192];
	ld.shared.u32 	%r1099, [%r1267+208];
	ld.shared.u32 	%r1100, [%r1267+224];
	ld.shared.u32 	%r1101, [%r1267+240];
	bar.sync 	0;
	// begin inline asm
	@%p81 st.shared.b32 [ %r1022 + 0 ], %r1291;
	// end inline asm
	// begin inline asm
	@%p81 st.shared.b32 [ %r1024 + 0 ], %r1292;
	// end inline asm
	// begin inline asm
	@%p81 st.shared.b32 [ %r1026 + 0 ], %r1293;
	// end inline asm
	// begin inline asm
	@%p81 st.shared.b32 [ %r1028 + 0 ], %r1294;
	// end inline asm
	// begin inline asm
	@%p81 st.shared.b32 [ %r1030 + 0 ], %r1295;
	// end inline asm
	// begin inline asm
	@%p81 st.shared.b32 [ %r1032 + 0 ], %r1296;
	// end inline asm
	// begin inline asm
	@%p81 st.shared.b32 [ %r1034 + 0 ], %r1297;
	// end inline asm
	// begin inline asm
	@%p81 st.shared.b32 [ %r1036 + 0 ], %r1298;
	// end inline asm
	// begin inline asm
	@%p81 st.shared.b32 [ %r1038 + 0 ], %r1299;
	// end inline asm
	// begin inline asm
	@%p81 st.shared.b32 [ %r1040 + 0 ], %r1300;
	// end inline asm
	// begin inline asm
	@%p81 st.shared.b32 [ %r1042 + 0 ], %r1301;
	// end inline asm
	// begin inline asm
	@%p81 st.shared.b32 [ %r1044 + 0 ], %r1302;
	// end inline asm
	// begin inline asm
	@%p81 st.shared.b32 [ %r1046 + 0 ], %r1303;
	// end inline asm
	// begin inline asm
	@%p81 st.shared.b32 [ %r1048 + 0 ], %r1304;
	// end inline asm
	// begin inline asm
	@%p81 st.shared.b32 [ %r1050 + 0 ], %r1305;
	// end inline asm
	// begin inline asm
	@%p81 st.shared.b32 [ %r1052 + 0 ], %r1306;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r1102, [%r1267];
	ld.shared.u32 	%r1103, [%r1267+16];
	ld.shared.u32 	%r1104, [%r1267+32];
	ld.shared.u32 	%r1105, [%r1267+48];
	ld.shared.u32 	%r1106, [%r1267+64];
	ld.shared.u32 	%r1107, [%r1267+80];
	ld.shared.u32 	%r1108, [%r1267+96];
	ld.shared.u32 	%r1109, [%r1267+112];
	ld.shared.u32 	%r1110, [%r1267+128];
	ld.shared.u32 	%r1111, [%r1267+144];
	ld.shared.u32 	%r1112, [%r1267+160];
	ld.shared.u32 	%r1113, [%r1267+176];
	ld.shared.u32 	%r1114, [%r1267+192];
	ld.shared.u32 	%r1115, [%r1267+208];
	ld.shared.u32 	%r1116, [%r1267+224];
	ld.shared.u32 	%r1117, [%r1267+240];
	// begin inline asm
	@%p113 st.global.b32 [ %rd304 + 0 ], { %r1086 };
	// end inline asm
	// begin inline asm
	@%p114 st.global.b32 [ %rd305 + 0 ], { %r1087 };
	// end inline asm
	// begin inline asm
	@%p115 st.global.b32 [ %rd306 + 0 ], { %r1088 };
	// end inline asm
	// begin inline asm
	@%p116 st.global.b32 [ %rd307 + 0 ], { %r1089 };
	// end inline asm
	// begin inline asm
	@%p117 st.global.b32 [ %rd308 + 0 ], { %r1090 };
	// end inline asm
	// begin inline asm
	@%p118 st.global.b32 [ %rd309 + 0 ], { %r1091 };
	// end inline asm
	// begin inline asm
	@%p119 st.global.b32 [ %rd310 + 0 ], { %r1092 };
	// end inline asm
	// begin inline asm
	@%p120 st.global.b32 [ %rd311 + 0 ], { %r1093 };
	// end inline asm
	// begin inline asm
	@%p121 st.global.b32 [ %rd312 + 0 ], { %r1094 };
	// end inline asm
	// begin inline asm
	@%p122 st.global.b32 [ %rd313 + 0 ], { %r1095 };
	// end inline asm
	// begin inline asm
	@%p123 st.global.b32 [ %rd314 + 0 ], { %r1096 };
	// end inline asm
	// begin inline asm
	@%p124 st.global.b32 [ %rd315 + 0 ], { %r1097 };
	// end inline asm
	// begin inline asm
	@%p125 st.global.b32 [ %rd316 + 0 ], { %r1098 };
	// end inline asm
	// begin inline asm
	@%p126 st.global.b32 [ %rd317 + 0 ], { %r1099 };
	// end inline asm
	// begin inline asm
	@%p127 st.global.b32 [ %rd318 + 0 ], { %r1100 };
	// end inline asm
	// begin inline asm
	@%p128 st.global.b32 [ %rd319 + 0 ], { %r1101 };
	// end inline asm
	// begin inline asm
	@%p129 st.global.b32 [ %rd320 + 0 ], { %r1102 };
	// end inline asm
	// begin inline asm
	@%p130 st.global.b32 [ %rd321 + 0 ], { %r1103 };
	// end inline asm
	// begin inline asm
	@%p131 st.global.b32 [ %rd322 + 0 ], { %r1104 };
	// end inline asm
	// begin inline asm
	@%p132 st.global.b32 [ %rd323 + 0 ], { %r1105 };
	// end inline asm
	// begin inline asm
	@%p133 st.global.b32 [ %rd324 + 0 ], { %r1106 };
	// end inline asm
	// begin inline asm
	@%p134 st.global.b32 [ %rd325 + 0 ], { %r1107 };
	// end inline asm
	// begin inline asm
	@%p135 st.global.b32 [ %rd326 + 0 ], { %r1108 };
	// end inline asm
	// begin inline asm
	@%p136 st.global.b32 [ %rd327 + 0 ], { %r1109 };
	// end inline asm
	// begin inline asm
	@%p137 st.global.b32 [ %rd328 + 0 ], { %r1110 };
	// end inline asm
	// begin inline asm
	@%p138 st.global.b32 [ %rd329 + 0 ], { %r1111 };
	// end inline asm
	// begin inline asm
	@%p139 st.global.b32 [ %rd330 + 0 ], { %r1112 };
	// end inline asm
	// begin inline asm
	@%p140 st.global.b32 [ %rd331 + 0 ], { %r1113 };
	// end inline asm
	// begin inline asm
	@%p141 st.global.b32 [ %rd332 + 0 ], { %r1114 };
	// end inline asm
	// begin inline asm
	@%p142 st.global.b32 [ %rd333 + 0 ], { %r1115 };
	// end inline asm
	// begin inline asm
	@%p143 st.global.b32 [ %rd334 + 0 ], { %r1116 };
	// end inline asm
	// begin inline asm
	@%p144 st.global.b32 [ %rd335 + 0 ], { %r1117 };
	// end inline asm
	.loc	1 93 4                          // implicit_gemm_kernel.py:93:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/allan/Programs/sparse-conv/implicit_gemm_kernel.py"
	.file	2 "/home/allan/anaconda3/envs/ml/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 174                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 103
.b8 101
.b8 109
.b8 109
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 108
.b8 108
.b8 97
.b8 110
.b8 47
.b8 80
.b8 114
.b8 111
.b8 103
.b8 114
.b8 97
.b8 109
.b8 115
.b8 47
.b8 115
.b8 112
.b8 97
.b8 114
.b8 115
.b8 101
.b8 45
.b8 99
.b8 111
.b8 110
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x19 DW_TAG_subprogram
.b8 105                                 // DW_AT_name
.b8 109
.b8 112
.b8 108
.b8 105
.b8 99
.b8 105
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 51
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x6b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x80:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 30                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x98:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 50                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
